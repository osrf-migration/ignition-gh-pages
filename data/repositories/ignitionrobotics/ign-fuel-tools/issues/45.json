{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}ts=default"}}, "type": "repository", "name": "ign-fuel-tools", "full_name": "ignitionrobotics/ign-fuel-tools", "uuid": "{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/issues/45/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/issues/45/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/issues/45/cached-models-lose-server-and-name"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/issues/45/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Cached models lose server and name information", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While working on issue #39, I realized that locally cached models lose some information which makes it harder to reuse them.\r\n\r\n1. The first one is the **server** information, i.e. https://api.ignitionfuel.org.\r\n\r\n1. The second one is the **model name**; while the whole web side is using names that may have capital letters and spaces, the local cache is converting to lower case and spaces into underscores.\r\n\r\nThis means that when a user requests a model from a URL, I can't check its `ModelIdentifier` (i.e. [UniqueName](https://ignitionrobotics.org/api/fuel_tools/1.0/classignition_1_1fuel__tools_1_1ModelIdentifier.html#a5555252ba4d85c2710ba3cf41d334f34)) against any model on the local cache.\r\n\r\nI have a proposal which I'm not sure would be ok to roll into the released version 1:\r\n\r\nStructure the local cache just like the server:\r\n \r\n* add the server as a directory, maybe even with the version number\r\n* use the model's human readable name\r\n\r\nCurrent cache example:\r\n\r\n~~~\r\n/home/louise/.ignition/fuel/\r\n\u251c\u2500\u2500 config.yaml\r\n\u2514\u2500\u2500 models\r\n    \u251c\u2500\u2500 caguero\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 ambulance3\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 hammer\r\n    \u251c\u2500\u2500 chapulina\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 turtlebot\r\n    \u2514\u2500\u2500 german\r\n        \u251c\u2500\u2500 bowl\r\n        \u2514\u2500\u2500 cardboard_box\r\n~~~\r\n\r\nProposed cache example:\r\n~~~\r\n/home/louise/.ignition/fuel/\r\n\u251c\u2500\u2500 config.yaml\r\n\u2514\u2500\u2500 api.ignitionfuel.org\r\n    \u2514\u2500\u2500 1.0\r\n        \u251c\u2500\u2500 caguero\r\n        \u2502   \u2514\u2500\u2500 models\r\n        \u2502       \u251c\u2500\u2500 Ambulance3\r\n        \u2502       \u2514\u2500\u2500 Hammer\r\n        \u251c\u2500\u2500 chapulina\r\n        \u2502   \u2514\u2500\u2500 models\r\n        \u2502       \u2514\u2500\u2500 Turtlebot\r\n        \u2514\u2500\u2500 german\r\n            \u2514\u2500\u2500 models\r\n                \u251c\u2500\u2500 Bowl\r\n                \u2514\u2500\u2500 Cardboard Box\r\n~~~\r\n \r\nOther advantages:\r\n\r\n* Models with same name and owner but different servers won't be overridden\r\n* Models with names which currently map to same path won't be overridden (for example `chapulina/My Model` and `chapulina/my_model` can both exist on the server)\r\n* Immediate association to a URL\r\n* No need to track 2 separate names and keep making sure we're using the right ones all over the code\r\n\r\nDisadvantages:\r\n\r\n* Dealing with spaces in file paths, is this such a big issue?\r\n* Is there anything else I'm missing?", "markup": "markdown", "html": "<p>While working on issue <a href=\"#!/ignitionrobotics/ign-fuel-tools/issues/39/cached-models-are-downloaded-anyway\" rel=\"nofollow\" title=\"Cached models are downloaded anyway\" class=\"ap-connect-link\"><s>#39</s></a>, I realized that locally cached models lose some information which makes it harder to reuse them.</p>\n<ol>\n<li>\n<p>The first one is the <strong>server</strong> information, i.e. <a href=\"https://api.ignitionfuel.org\" rel=\"nofollow\" class=\"ap-connect-link\">https://api.ignitionfuel.org</a>.</p>\n</li>\n<li>\n<p>The second one is the <strong>model name</strong>; while the whole web side is using names that may have capital letters and spaces, the local cache is converting to lower case and spaces into underscores.</p>\n</li>\n</ol>\n<p>This means that when a user requests a model from a URL, I can't check its <code>ModelIdentifier</code> (i.e. <a data-is-external-link=\"true\" href=\"https://ignitionrobotics.org/api/fuel_tools/1.0/classignition_1_1fuel__tools_1_1ModelIdentifier.html#a5555252ba4d85c2710ba3cf41d334f34\" rel=\"nofollow\">UniqueName</a>) against any model on the local cache.</p>\n<p>I have a proposal which I'm not sure would be ok to roll into the released version 1:</p>\n<p>Structure the local cache just like the server:</p>\n<ul>\n<li>add the server as a directory, maybe even with the version number</li>\n<li>use the model's human readable name</li>\n</ul>\n<p>Current cache example:</p>\n<div class=\"codehilite\"><pre><span></span>/home/louise/.ignition/fuel/\n\u251c\u2500\u2500 config.yaml\n\u2514\u2500\u2500 models\n    \u251c\u2500\u2500 caguero\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 ambulance3\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 hammer\n    \u251c\u2500\u2500 chapulina\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 turtlebot\n    \u2514\u2500\u2500 german\n        \u251c\u2500\u2500 bowl\n        \u2514\u2500\u2500 cardboard_box\n</pre></div>\n\n\n<p>Proposed cache example:</p>\n<div class=\"codehilite\"><pre><span></span>/home/louise/.ignition/fuel/\n\u251c\u2500\u2500 config.yaml\n\u2514\u2500\u2500 api.ignitionfuel.org\n    \u2514\u2500\u2500 1.0\n        \u251c\u2500\u2500 caguero\n        \u2502   \u2514\u2500\u2500 models\n        \u2502       \u251c\u2500\u2500 Ambulance3\n        \u2502       \u2514\u2500\u2500 Hammer\n        \u251c\u2500\u2500 chapulina\n        \u2502   \u2514\u2500\u2500 models\n        \u2502       \u2514\u2500\u2500 Turtlebot\n        \u2514\u2500\u2500 german\n            \u2514\u2500\u2500 models\n                \u251c\u2500\u2500 Bowl\n                \u2514\u2500\u2500 Cardboard Box\n</pre></div>\n\n\n<p>Other advantages:</p>\n<ul>\n<li>Models with same name and owner but different servers won't be overridden</li>\n<li>Models with names which currently map to same path won't be overridden (for example <code>chapulina/My Model</code> and <code>chapulina/my_model</code> can both exist on the server)</li>\n<li>Immediate association to a URL</li>\n<li>No need to track 2 separate names and keep making sure we're using the right ones all over the code</li>\n</ul>\n<p>Disadvantages:</p>\n<ul>\n<li>Dealing with spaces in file paths, is this such a big issue?</li>\n<li>Is there anything else I'm missing?</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-20T19:29:58.971786+00:00", "milestone": null, "updated_on": "2018-03-29T20:37:56.733764+00:00", "type": "issue", "id": 45}