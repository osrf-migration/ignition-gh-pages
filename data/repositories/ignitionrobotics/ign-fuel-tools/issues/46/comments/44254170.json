{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/issues/46/comments/44254170.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/issues/46#comment-44254170"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/issues/46.json"}}, "type": "issue", "id": 46, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}ts=default"}}, "type": "repository", "name": "ign-fuel-tools", "full_name": "ignitionrobotics/ign-fuel-tools", "uuid": "{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}"}, "title": "FuelClient API expects redundant possibly conflicting information"}, "content": {"raw": "I see, yes, perhaps decoupling query params from response params would make things clearer.\n\nIt's worth pointing out that the `ModelIdentifier`'s `Server` is also used for querying sometimes, for example on [LocalCache::MatchingModels](#!/ignitionrobotics/ign-fuel-tools/src/a6fe2f890583ae6b852b2c088dd197535a441c8e/src/LocalCache.cc?fileviewer=file-view-default#LocalCache.cc-143) it is possible to return all the models from the same server.\n\nI'm fine either keeping the sever parameters or removing them, but if we're keeping them, we should at a minimum document which one is the authoritative in case `_server` conflicts with the `_id.Server()`.", "markup": "markdown", "html": "<p>I see, yes, perhaps decoupling query params from response params would make things clearer.</p>\n<p>It's worth pointing out that the <code>ModelIdentifier</code>'s <code>Server</code> is also used for querying sometimes, for example on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-fuel-tools/src/a6fe2f890583ae6b852b2c088dd197535a441c8e/src/LocalCache.cc?fileviewer=file-view-default#LocalCache.cc-143\" rel=\"nofollow\">LocalCache::MatchingModels</a> it is possible to return all the models from the same server.</p>\n<p>I'm fine either keeping the sever parameters or removing them, but if we're keeping them, we should at a minimum document which one is the authoritative in case <code>_server</code> conflicts with the <code>_id.Server()</code>.</p>", "type": "rendered"}, "created_on": "2018-03-29T17:55:57.189813+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 44254170}