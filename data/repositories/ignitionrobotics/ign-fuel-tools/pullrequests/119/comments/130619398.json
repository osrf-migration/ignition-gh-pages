{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/119/comments/130619398.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/diff/ignitionrobotics/ign-fuel-tools:815925c07c02..5ed7bbcd6c73?path=src%2Fign.cc"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/pull-requests/119/_/diff#comment-130619398"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 119, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/119.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/pull-requests/119"}}, "title": "Implement deletion"}, "content": {"raw": "How about printing some messages to the user? Something similar to `downloadUrl` above, i.e.\n\n~~~\n    if (ignition::common::Console::Verbosity() >= 3)\n    {\n      std::cout << \"Deleting model: \" << \"\\033[36m\" << std::endl\n                << model.AsPrettyString(\"  \") << \"\\033[39m\" << std::endl;\n    }\n~~~\n\nWe'd need to parse the model URL to get the pretty string though.", "markup": "markdown", "html": "<p>How about printing some messages to the user? Something similar to <code>downloadUrl</code> above, i.e.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">if</span> <span class=\"o\">(</span><span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">common</span><span class=\"p\">::</span><span class=\"nd\">Console</span><span class=\"p\">::</span><span class=\"nd\">Verbosity</span><span class=\"o\">()</span> <span class=\"o\">&gt;=</span> <span class=\"nt\">3</span><span class=\"o\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Deleting model: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"err\">&quot;\\</span><span class=\"mi\">033</span><span class=\"cp\">[</span><span class=\"mi\">36</span><span class=\"nx\">m</span><span class=\"s2\">&quot; &lt;&lt; std::endl</span>\n<span class=\"s2\">                &lt;&lt; model.AsPrettyString(&quot;</span>  <span class=\"s2\">&quot;) &lt;&lt; &quot;</span><span class=\"o\">\\</span><span class=\"mi\">033</span><span class=\"err\">[</span><span class=\"mi\">39</span><span class=\"nx\">m</span><span class=\"s2\">&quot; &lt;&lt; std::endl;</span>\n<span class=\"s2\">    }</span>\n</pre></div>\n\n\n<p>We'd need to parse the model URL to get the pretty string though.</p>", "type": "rendered"}, "created_on": "2020-01-07T00:15:56.450267+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 637, "from": null, "outdated": true, "path": "src/ign.cc"}, "updated_on": "2020-01-07T00:15:56.458404+00:00", "type": "pullrequest_comment", "id": 130619398}