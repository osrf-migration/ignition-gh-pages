{"rendered": {"description": {"raw": "This pull request allows reading models on cache on disk. Here is an example of a cache file structure:\r\n\r\n```\r\nLocalCache_TEST6\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 am1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u251c\u2500\u2500 tm1\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n    \u2514\u2500\u2500 tm2\r\n        \u2514\u2500\u2500 model.config\r\nLocalCache_TEST3\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u2514\u2500\u2500 tm1\r\n        \u2514\u2500\u2500 model.config\r\n```\r\nThe level directories are servers. They have a local name on disk. There are two servers above. The next level are owners. After that are models. A directory is considered a model as long as it has a file called `model.config`.\r\n\r\nThe `LocalCache` is integrated with the `FuelClient`. If servers can't be contacted, the `FuelClient` will return models from cache instead. The local cache supports fetching all models, some models (partial match of source, owner, or name), or one specific model by UniqueName()\r\n\r\n\r\n#TODO\r\n\r\n* Model Fetch should check LocalCache first. This will be another pull request.", "markup": "markdown", "html": "<p>This pull request allows reading models on cache on disk. Here is an example of a cache file structure:</p>\n<div class=\"codehilite\"><pre><span></span>LocalCache_TEST6\n\u251c\u2500\u2500 alice\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 am1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am2\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u251c\u2500\u2500 bob\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bm1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm2\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u2514\u2500\u2500 trudy\n    \u251c\u2500\u2500 tm1\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n    \u2514\u2500\u2500 tm2\n        \u2514\u2500\u2500 model.config\nLocalCache_TEST3\n\u251c\u2500\u2500 alice\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u251c\u2500\u2500 bob\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u2514\u2500\u2500 trudy\n    \u2514\u2500\u2500 tm1\n        \u2514\u2500\u2500 model.config\n</pre></div>\n\n\n<p>The level directories are servers. They have a local name on disk. There are two servers above. The next level are owners. After that are models. A directory is considered a model as long as it has a file called <code>model.config</code>.</p>\n<p>The <code>LocalCache</code> is integrated with the <code>FuelClient</code>. If servers can't be contacted, the <code>FuelClient</code> will return models from cache instead. The local cache supports fetching all models, some models (partial match of source, owner, or name), or one specific model by UniqueName()</p>\n<p>#TODO</p>\n<ul>\n<li>Model Fetch should check LocalCache first. This will be another pull request.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Read Cache of models on filesystem", "markup": "markdown", "html": "<p>Read Cache of models on filesystem</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request allows reading models on cache on disk. Here is an example of a cache file structure:\r\n\r\n```\r\nLocalCache_TEST6\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 am1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u251c\u2500\u2500 tm1\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n    \u2514\u2500\u2500 tm2\r\n        \u2514\u2500\u2500 model.config\r\nLocalCache_TEST3\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u2514\u2500\u2500 tm1\r\n        \u2514\u2500\u2500 model.config\r\n```\r\nThe level directories are servers. They have a local name on disk. There are two servers above. The next level are owners. After that are models. A directory is considered a model as long as it has a file called `model.config`.\r\n\r\nThe `LocalCache` is integrated with the `FuelClient`. If servers can't be contacted, the `FuelClient` will return models from cache instead. The local cache supports fetching all models, some models (partial match of source, owner, or name), or one specific model by UniqueName()\r\n\r\n\r\n#TODO\r\n\r\n* Model Fetch should check LocalCache first. This will be another pull request.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/diffstat/ignitionrobotics/ign-fuel-tools:f1742def3b58%0D27d46beb89a2?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/merge"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/pull-requests/8"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/diff/ignitionrobotics/ign-fuel-tools:f1742def3b58%0D27d46beb89a2?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/pullrequests/8/statuses_page=1.json"}}, "title": "Read Cache of models on filesystem", "close_source_branch": true, "reviewers": [], "id": 8, "destination": {"commit": {"hash": "27d46beb89a2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/commit/27d46beb89a2.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/commits/27d46beb89a2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}ts=default"}}, "type": "repository", "name": "ign-fuel-tools", "full_name": "ignitionrobotics/ign-fuel-tools", "uuid": "{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}"}, "branch": {"name": "default"}}, "created_on": "2017-07-12T17:56:17.598062+00:00", "summary": {"raw": "This pull request allows reading models on cache on disk. Here is an example of a cache file structure:\r\n\r\n```\r\nLocalCache_TEST6\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 am1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm2\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u251c\u2500\u2500 tm1\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\r\n    \u2514\u2500\u2500 tm2\r\n        \u2514\u2500\u2500 model.config\r\nLocalCache_TEST3\r\n\u251c\u2500\u2500 alice\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u251c\u2500\u2500 bob\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm1\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\r\n\u2514\u2500\u2500 trudy\r\n    \u2514\u2500\u2500 tm1\r\n        \u2514\u2500\u2500 model.config\r\n```\r\nThe level directories are servers. They have a local name on disk. There are two servers above. The next level are owners. After that are models. A directory is considered a model as long as it has a file called `model.config`.\r\n\r\nThe `LocalCache` is integrated with the `FuelClient`. If servers can't be contacted, the `FuelClient` will return models from cache instead. The local cache supports fetching all models, some models (partial match of source, owner, or name), or one specific model by UniqueName()\r\n\r\n\r\n#TODO\r\n\r\n* Model Fetch should check LocalCache first. This will be another pull request.", "markup": "markdown", "html": "<p>This pull request allows reading models on cache on disk. Here is an example of a cache file structure:</p>\n<div class=\"codehilite\"><pre><span></span>LocalCache_TEST6\n\u251c\u2500\u2500 alice\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 am1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am2\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u251c\u2500\u2500 bob\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bm1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm2\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u2514\u2500\u2500 trudy\n    \u251c\u2500\u2500 tm1\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.config\n    \u2514\u2500\u2500 tm2\n        \u2514\u2500\u2500 model.config\nLocalCache_TEST3\n\u251c\u2500\u2500 alice\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 am1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u251c\u2500\u2500 bob\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bm1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 model.config\n\u2514\u2500\u2500 trudy\n    \u2514\u2500\u2500 tm1\n        \u2514\u2500\u2500 model.config\n</pre></div>\n\n\n<p>The level directories are servers. They have a local name on disk. There are two servers above. The next level are owners. After that are models. A directory is considered a model as long as it has a file called <code>model.config</code>.</p>\n<p>The <code>LocalCache</code> is integrated with the <code>FuelClient</code>. If servers can't be contacted, the <code>FuelClient</code> will return models from cache instead. The local cache supports fetching all models, some models (partial match of source, owner, or name), or one specific model by UniqueName()</p>\n<p>#TODO</p>\n<ul>\n<li>Model Fetch should check LocalCache first. This will be another pull request.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "d3aea52e7603", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/commit/d3aea52e7603.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/commits/d3aea52e7603"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}ts=default"}}, "type": "repository", "name": "ign-fuel-tools", "full_name": "ignitionrobotics/ign-fuel-tools", "uuid": "{2c96e7f5-2f59-4a4a-877a-87e8f39e29fb}"}, "branch": {"name": "filesystem_cache"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-07-14T17:12:57.366771+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-07-14T17:08:04.684040+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-07-14T17:33:21.805855+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "f1742def3b58", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-fuel-tools/commit/f1742def3b58.json"}, "html": {"href": "#!/ignitionrobotics/ign-fuel-tools/commits/f1742def3b58"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}