{"rendered": {"message": {"raw": "Eliminate potential deadlock from SIGCHLD signal handler\n\nThere were two potential bugs in the way that the SIGCHLD handler was written\npreviously. In one case, the mutex would be locked when the signal was handled,\nand the handler could not get a lock. In other cases, some of the operations\nwe were doing in the handler were not strictly safe.\n\nAs a fix, I have introduced a queue that is populated by the handler and\nconsumed via a worker thread. These use a semaphore to signal (which is safe).", "markup": "markdown", "html": "<p>Eliminate potential deadlock from SIGCHLD signal handler</p>\n<p>There were two potential bugs in the way that the SIGCHLD handler was written<br />\npreviously. In one case, the mutex would be locked when the signal was handled,<br />\nand the handler could not get a lock. In other cases, some of the operations<br />\nwe were doing in the handler were not strictly safe.</p>\n<p>As a fix, I have introduced a queue that is populated by the handler and<br />\nconsumed via a worker thread. These use a semaphore to signal (which is safe).</p>", "type": "rendered"}}, "hash": "0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-launch.json"}, "html": {"href": "#!/ignitionrobotics/ign-launch"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6981a69-ba64-447a-9739-662a89b25082}ts=2278389"}}, "type": "repository", "name": "ign-launch", "full_name": "ignitionrobotics/ign-launch", "uuid": "{b6981a69-ba64-447a-9739-662a89b25082}"}, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-launch/commit/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-launch/commit/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-launch/patch/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790"}, "html": {"href": "#!/ignitionrobotics/ign-launch/commits/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-launch/diff/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-launch/commit/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-launch/commit/0bcdb01470815ffa54370b6fcfe2e4ad0b1f2790/statuses_page=1.json"}}, "author": {"raw": "Michael Carroll <michael@openrobotics.org>", "type": "author", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}}, "summary": {"raw": "Eliminate potential deadlock from SIGCHLD signal handler\n\nThere were two potential bugs in the way that the SIGCHLD handler was written\npreviously. In one case, the mutex would be locked when the signal was handled,\nand the handler could not get a lock. In other cases, some of the operations\nwe were doing in the handler were not strictly safe.\n\nAs a fix, I have introduced a queue that is populated by the handler and\nconsumed via a worker thread. These use a semaphore to signal (which is safe).", "markup": "markdown", "html": "<p>Eliminate potential deadlock from SIGCHLD signal handler</p>\n<p>There were two potential bugs in the way that the SIGCHLD handler was written<br />\npreviously. In one case, the mutex would be locked when the signal was handled,<br />\nand the handler could not get a lock. In other cases, some of the operations<br />\nwe were doing in the handler were not strictly safe.</p>\n<p>As a fix, I have introduced a queue that is populated by the handler and<br />\nconsumed via a worker thread. These use a semaphore to signal (which is safe).</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "c1d633e4733f51d342d89923a8c7c49d270d5c62", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-launch/commit/c1d633e4733f51d342d89923a8c7c49d270d5c62.json"}, "html": {"href": "#!/ignitionrobotics/ign-launch/commits/c1d633e4733f51d342d89923a8c7c49d270d5c62"}}}], "date": "2019-07-17T19:43:13+00:00", "message": "Eliminate potential deadlock from SIGCHLD signal handler\n\nThere were two potential bugs in the way that the SIGCHLD handler was written\npreviously. In one case, the mutex would be locked when the signal was handled,\nand the handler could not get a lock. In other cases, some of the operations\nwe were doing in the handler were not strictly safe.\n\nAs a fix, I have introduced a queue that is populated by the handler and\nconsumed via a worker thread. These use a semaphore to signal (which is safe).", "type": "commit", "git_hash": "8ecae1380c6b9c283d012315ab78dffe4f7807f0", "tags": null, "branches": "sigchld_deadlock_fix"}