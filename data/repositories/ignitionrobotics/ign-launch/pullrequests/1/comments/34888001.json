{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-launch/pullrequests/1/comments/34888001.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-launch/diff/ignitionrobotics/ign-launch:a3b160901e7f..943c6935422d?path=src%2FManager.cc"}, "html": {"href": "#!/ignitionrobotics/ign-launch/pull-requests/1/_/diff#comment-34888001"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-launch/pullrequests/1.json"}, "html": {"href": "#!/ignitionrobotics/ign-launch/pull-requests/1"}}, "title": "Initial launch manager"}, "content": {"raw": "The documentation for std::condition_variable warns about spurious wakeups. It looks like something is needed to check if wait() returned due to one of these.\n\n```\n#!c++\n\nthis->dataPtr->running = true;\n// when running is false, it means Stop() was called\nwhile (this->dataPtr->running)\n  this->dataPtr->runCondition.wait(lock);\n```\n\nThen `Manager::Stop()` would do\n\n```\n#!c++\n\nstd::lock_guard<std::mutex> lock(this->dataPtr->runMutex);\nif (this->dataPtr->running)\n{\n  // Notify thread that it should exit\n  this->dataPtr->running = false;\n  this->dataPtr->runCondition.notify_all();\n}\n```", "markup": "markdown", "html": "<p>The documentation for std::condition_variable warns about spurious wakeups. It looks like something is needed to check if wait() returned due to one of these.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">running</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"c1\">// when running is false, it means Stop() was called</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">running</span><span class=\"p\">)</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">runCondition</span><span class=\"p\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"n\">lock</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Then <code>Manager::Stop()</code> would do</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">lock_guard</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">&gt;</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">runMutex</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">running</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"c1\">// Notify thread that it should exit</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">running</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">runCondition</span><span class=\"p\">.</span><span class=\"n\">notify_all</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-04-11T21:48:50.660466+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 190, "from": null, "outdated": true, "path": "src/Manager.cc"}, "updated_on": "2017-04-11T21:48:50.662829+00:00", "type": "pullrequest_comment", "id": 34888001}