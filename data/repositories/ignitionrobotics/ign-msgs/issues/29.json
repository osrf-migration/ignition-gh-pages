{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a9e7131f-94ac-4283-ae4e-330068146520}ts=1533307"}}, "type": "repository", "name": "ign-msgs", "full_name": "ignitionrobotics/ign-msgs", "uuid": "{a9e7131f-94ac-4283-ae4e-330068146520}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/issues/29/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/29/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/issues/29/actuators-message-fields-assume-rotation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/issues/29/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Actuators message fields assume rotation, don't consider translational", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nI noticed that the Actuators message added in pull request #123 has field names based on rotation, which would be awkward to use with a linear actuator on a prismatic joint. \r\n\r\n# Motivation\r\n\r\nIn gazebo7, the Joint API was also very rotation-centric, but we made an explicit choice to rename functions like `GetAngle(int)` to `Position(int)` to be more general. I realize that this message was inspired by [one that explicitly uses rotation-centric field names](http://docs.ros.org/indigo/api/mav_msgs/html/msg/Actuators.html), but I expect we want a more general field names?\r\n\r\n# Describe alternatives you've considered\r\n\r\nLeave it as-is.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>I noticed that the Actuators message added in <a href=\"#!/ignitionrobotics/ign-msgs/pull-requests/123/blueprint-new-actuators-msg\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #123</a> has field names based on rotation, which would be awkward to use with a linear actuator on a prismatic joint. </p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>In gazebo7, the Joint API was also very rotation-centric, but we made an explicit choice to rename functions like <code>GetAngle(int)</code> to <code>Position(int)</code> to be more general. I realize that this message was inspired by <a data-is-external-link=\"true\" href=\"http://docs.ros.org/indigo/api/mav_msgs/html/msg/Actuators.html\" rel=\"nofollow\">one that explicitly uses rotation-centric field names</a>, but I expect we want a more general field names?</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Leave it as-is.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-05-10T23:04:24.301628+00:00", "milestone": null, "updated_on": "2019-11-14T01:32:04.297555+00:00", "type": "issue", "id": 29}