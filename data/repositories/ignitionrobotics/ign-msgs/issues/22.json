{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a9e7131f-94ac-4283-ae4e-330068146520}ts=1533307"}}, "type": "repository", "name": "ign-msgs", "full_name": "ignitionrobotics/ign-msgs", "uuid": "{a9e7131f-94ac-4283-ae4e-330068146520}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/issues/22/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-msgs/issues/22/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/issues/22/optional-fields-in-proto-3"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/issues/22/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Optional fields in proto 3", "component": null, "votes": 0, "watches": 1, "content": {"raw": "On Protobuf 3 all fields are optional, but only nested messages have the `has_msg` API (i.e. leaf fields don't have a `has_field`). Protobuf will also automatically set default values to fields which are unset, such as 0 to int and false to booleans.\r\n\r\nThis means that it is impossible to know if a boolean was set to false or if it is unset.\r\n\r\nFor example, the `WorldStatistics` message has the following fields:\r\n\r\n~~~\r\nbool paused\r\nint32 model_count\r\n~~~\r\n\r\nWhen receiving a message with paused false and zero models, we don't know if that's indeed true.\r\n\r\nThis could be just something to be aware from the publishing side (i.e. make sure to always set leaf fields), or maybe we want to restructure the messages to avoid this.\r\n\r\nOne suggestion would be to change leaf fields for nested messages, for example:\r\n\r\n~~~\r\nBoolean paused\r\nInt32 model_count\r\n~~~", "markup": "markdown", "html": "<p>On Protobuf 3 all fields are optional, but only nested messages have the <code>has_msg</code> API (i.e. leaf fields don't have a <code>has_field</code>). Protobuf will also automatically set default values to fields which are unset, such as 0 to int and false to booleans.</p>\n<p>This means that it is impossible to know if a boolean was set to false or if it is unset.</p>\n<p>For example, the <code>WorldStatistics</code> message has the following fields:</p>\n<div class=\"codehilite\"><pre><span></span>bool paused\nint32 model_count\n</pre></div>\n\n\n<p>When receiving a message with paused false and zero models, we don't know if that's indeed true.</p>\n<p>This could be just something to be aware from the publishing side (i.e. make sure to always set leaf fields), or maybe we want to restructure the messages to avoid this.</p>\n<p>One suggestion would be to change leaf fields for nested messages, for example:</p>\n<div class=\"codehilite\"><pre><span></span>Boolean paused\nInt32 model_count\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-06-29T19:51:56.889665+00:00", "milestone": null, "updated_on": "2018-10-08T16:45:36.275521+00:00", "type": "issue", "id": 22}