{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/40/comments/48682518.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/40/_/diff#comment-48682518"}}, "parent": {"id": 48681574, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/40/comments/48681574.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/40/_/diff#comment-48681574"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 40, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/40.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/40"}}, "title": "Use ignition CMake"}, "content": {"raw": "I think `set_source_files_properties(${gen_sources} PROPERTIES COMPILE_FLAGS -Wno-switch-default)` can make the trick.\n\nInstead of applying the flag to the entire library target, we do it file by file.", "markup": "markdown", "html": "<p>I think <code>set_source_files_properties(${gen_sources} PROPERTIES COMPILE_FLAGS -Wno-switch-default)</code> can make the trick.</p>\n<p>Instead of applying the flag to the entire library target, we do it file by file.</p>", "type": "rendered"}, "created_on": "2017-11-02T23:46:47.327209+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-11-02T23:49:57.430602+00:00", "type": "pullrequest_comment", "id": 48682518}