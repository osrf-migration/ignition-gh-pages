{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60546970.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60546970"}}, "parent": {"id": 60540350, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60540350.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60540350"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "The `bool stepping_;` private variable gets added after `paused_` and sandwiched between an int32 and a pointer. I imagine your conjecture about alignment is correct. So I guess the safety of this depends on compiler behavior.\n\n~~~\n  // @@protoc_insertion_point(class_scope:ignition.msgs.WorldStatistics)\n private:\n  inline void set_has_header();\n  inline void clear_has_header();\n  inline void set_has_sim_time();\n  inline void clear_has_sim_time();\n  inline void set_has_pause_time();\n  inline void clear_has_pause_time();\n  inline void set_has_real_time();\n  inline void clear_has_real_time();\n  inline void set_has_paused();\n  inline void clear_has_paused();\n  inline void set_has_iterations();\n  inline void clear_has_iterations();\n  inline void set_has_model_count();\n  inline void clear_has_model_count();\n  inline void set_has_log_playback_stats();\n  inline void clear_has_log_playback_stats();\n  inline void set_has_stepping();\n  inline void clear_has_stepping();\n\n  ::google::protobuf::UnknownFieldSet _unknown_fields_;\n\n  ::google::protobuf::uint32 _has_bits_[1];\n  mutable int _cached_size_;\n  ::ignition::msgs::Header* header_;\n  ::ignition::msgs::Time* sim_time_;\n  ::ignition::msgs::Time* pause_time_;\n  ::ignition::msgs::Time* real_time_;\n  ::google::protobuf::uint64 iterations_;\n  ::google::protobuf::int32 model_count_;\n  bool paused_;\n  bool stepping_;\n  ::ignition::msgs::LogPlaybackStatistics* log_playback_stats_;\n  friend void IGNITION_MSGS_VISIBLE protobuf_AddDesc_ignition_2fmsgs_2fworld_5fstats_2eproto();\n  friend void protobuf_AssignDesc_ignition_2fmsgs_2fworld_5fstats_2eproto();\n  friend void protobuf_ShutdownFile_ignition_2fmsgs_2fworld_5fstats_2eproto();\n\n  void InitAsDefaultInstance();\n  static WorldStatistics* default_instance_;\n};\n~~~", "markup": "markdown", "html": "<p>The <code>bool stepping_;</code> private variable gets added after <code>paused_</code> and sandwiched between an int32 and a pointer. I imagine your conjecture about alignment is correct. So I guess the safety of this depends on compiler behavior.</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"o\">//</span> <span class=\"o\">@</span><span class=\"p\">@</span><span class=\"k\">protoc_insertion_point</span><span class=\"o\">(</span><span class=\"nt\">class_scope</span><span class=\"p\">:</span><span class=\"nd\">ignition</span><span class=\"p\">.</span><span class=\"nc\">msgs</span><span class=\"p\">.</span><span class=\"nc\">WorldStatistics</span><span class=\"o\">)</span>\n <span class=\"nt\">private</span><span class=\"o\">:</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_header</span><span class=\"o\">()</span><span class=\"p\">;</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_header</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_sim_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_sim_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_pause_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_pause_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_real_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_real_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_paused</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_paused</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_iterations</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_iterations</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_model_count</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_model_count</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_log_playback_stats</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_log_playback_stats</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_stepping</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_stepping</span><span class=\"o\">();</span>\n\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">UnknownFieldSet</span> <span class=\"nt\">_unknown_fields_</span><span class=\"o\">;</span>\n\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">uint32</span> <span class=\"nt\">_has_bits_</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">;</span>\n  <span class=\"nt\">mutable</span> <span class=\"nt\">int</span> <span class=\"nt\">_cached_size_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Header</span><span class=\"o\">*</span> <span class=\"nt\">header_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">sim_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">pause_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">real_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">uint64</span> <span class=\"nt\">iterations_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">int32</span> <span class=\"nt\">model_count_</span><span class=\"o\">;</span>\n  <span class=\"nt\">bool</span> <span class=\"nt\">paused_</span><span class=\"o\">;</span>\n  <span class=\"nt\">bool</span> <span class=\"nt\">stepping_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">LogPlaybackStatistics</span><span class=\"o\">*</span> <span class=\"nt\">log_playback_stats_</span><span class=\"o\">;</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">IGNITION_MSGS_VISIBLE</span> <span class=\"nt\">protobuf_AddDesc_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">protobuf_AssignDesc_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">protobuf_ShutdownFile_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n\n  <span class=\"nt\">void</span> <span class=\"nt\">InitAsDefaultInstance</span><span class=\"o\">();</span>\n  <span class=\"nt\">static</span> <span class=\"nt\">WorldStatistics</span><span class=\"o\">*</span> <span class=\"nt\">default_instance_</span><span class=\"o\">;</span>\n<span class=\"err\">}</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-03T17:07:21.143201+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-03T17:07:21.149537+00:00", "type": "pullrequest_comment", "id": 60546970}