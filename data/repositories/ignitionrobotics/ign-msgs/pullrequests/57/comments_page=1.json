{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60428943.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60428943"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "How about adding some documentation to the field itself?", "markup": "markdown", "html": "<p>How about adding some documentation to the field itself?</p>", "type": "rendered"}, "created_on": "2018-04-02T17:48:30.435854+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-04-03T10:32:28.190136+00:00", "type": "pullrequest_comment", "id": 60428943}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60449397.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60449397"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "there was some question about whether this PR would break API or ABI. I had to fix a few things in the build scripts (see [release-tools PR](https://bitbucket.org/osrf/release-tools/pull-requests/559/set-ign_-_major_version-variable-in-abi/diff)), but it looks like the checker has no complaints:\n\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_msgs-abichecker-any_to_any-xenial-amd64&build=17)](https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/17/) https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/17/API_ABI_report/", "markup": "markdown", "html": "<p>there was some question about whether this PR would break API or ABI. I had to fix a few things in the build scripts (see <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/release-tools/pull-requests/559/set-ign_-_major_version-variable-in-abi/diff\" rel=\"nofollow\">release-tools PR</a>), but it looks like the checker has no complaints:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/17/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_msgs-abichecker-any_to_any-xenial-amd64&amp;build=17\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/17/API_ABI_report/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/17/API_ABI_report/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-04-02T23:03:22.519280+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-02T23:03:22.522956+00:00", "type": "pullrequest_comment", "id": 60449397}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60452172.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60452172"}}, "parent": {"id": 60449397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60449397.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60449397"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "mmm interesting. The `world_stats.pb.h` header file did show that a new `bool stepping_` private member variable was added.  I've always thought that would break ABI.", "markup": "markdown", "html": "<p>mmm interesting. The <code>world_stats.pb.h</code> header file did show that a new <code>bool stepping_</code> private member variable was added.  I've always thought that would break ABI.</p>", "type": "rendered"}, "created_on": "2018-04-03T00:12:51.847034+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-04-03T00:12:51.850417+00:00", "type": "pullrequest_comment", "id": 60452172}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60466556.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60466556"}}, "parent": {"id": 60452172, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60452172.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60452172"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "it says there's an added symbol but doesn't make it sound like a problem", "markup": "markdown", "html": "<p>it says there's an added symbol but doesn't make it sound like a problem</p>", "type": "rendered"}, "created_on": "2018-04-03T06:32:47.384909+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-03T06:32:47.391666+00:00", "type": "pullrequest_comment", "id": 60466556}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60540350.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60540350"}}, "parent": {"id": 60466556, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60466556.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60466556"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "I don't think this PR should be merged into `ign-msgs1`. \n\n@iche033 is pointing out that adding a member variable increases the size of an instance of `WorldStats`. This PR may break downstream code already built against `ign-msgs1`, but it depends. If `alignof(WorldStats)` is greater than the size of a bool and `sizeof(WorldStats)` is not a multiple of its alignment , then it is possible there is unused space in `WorldStats` instances and the compiler might put this new bool into that previously unused space.\n\nIt might be fine, but there's no guarantee.", "markup": "markdown", "html": "<p>I don't think this PR should be merged into <code>ign-msgs1</code>. </p>\n<p>@iche033 is pointing out that adding a member variable increases the size of an instance of <code>WorldStats</code>. This PR may break downstream code already built against <code>ign-msgs1</code>, but it depends. If <code>alignof(WorldStats)</code> is greater than the size of a bool and <code>sizeof(WorldStats)</code> is not a multiple of its alignment , then it is possible there is unused space in <code>WorldStats</code> instances and the compiler might put this new bool into that previously unused space.</p>\n<p>It might be fine, but there's no guarantee.</p>", "type": "rendered"}, "created_on": "2018-04-03T16:05:27.146832+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-04-03T16:05:27.159584+00:00", "type": "pullrequest_comment", "id": 60540350}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60546970.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60546970"}}, "parent": {"id": 60540350, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60540350.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60540350"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "The `bool stepping_;` private variable gets added after `paused_` and sandwiched between an int32 and a pointer. I imagine your conjecture about alignment is correct. So I guess the safety of this depends on compiler behavior.\n\n~~~\n  // @@protoc_insertion_point(class_scope:ignition.msgs.WorldStatistics)\n private:\n  inline void set_has_header();\n  inline void clear_has_header();\n  inline void set_has_sim_time();\n  inline void clear_has_sim_time();\n  inline void set_has_pause_time();\n  inline void clear_has_pause_time();\n  inline void set_has_real_time();\n  inline void clear_has_real_time();\n  inline void set_has_paused();\n  inline void clear_has_paused();\n  inline void set_has_iterations();\n  inline void clear_has_iterations();\n  inline void set_has_model_count();\n  inline void clear_has_model_count();\n  inline void set_has_log_playback_stats();\n  inline void clear_has_log_playback_stats();\n  inline void set_has_stepping();\n  inline void clear_has_stepping();\n\n  ::google::protobuf::UnknownFieldSet _unknown_fields_;\n\n  ::google::protobuf::uint32 _has_bits_[1];\n  mutable int _cached_size_;\n  ::ignition::msgs::Header* header_;\n  ::ignition::msgs::Time* sim_time_;\n  ::ignition::msgs::Time* pause_time_;\n  ::ignition::msgs::Time* real_time_;\n  ::google::protobuf::uint64 iterations_;\n  ::google::protobuf::int32 model_count_;\n  bool paused_;\n  bool stepping_;\n  ::ignition::msgs::LogPlaybackStatistics* log_playback_stats_;\n  friend void IGNITION_MSGS_VISIBLE protobuf_AddDesc_ignition_2fmsgs_2fworld_5fstats_2eproto();\n  friend void protobuf_AssignDesc_ignition_2fmsgs_2fworld_5fstats_2eproto();\n  friend void protobuf_ShutdownFile_ignition_2fmsgs_2fworld_5fstats_2eproto();\n\n  void InitAsDefaultInstance();\n  static WorldStatistics* default_instance_;\n};\n~~~", "markup": "markdown", "html": "<p>The <code>bool stepping_;</code> private variable gets added after <code>paused_</code> and sandwiched between an int32 and a pointer. I imagine your conjecture about alignment is correct. So I guess the safety of this depends on compiler behavior.</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"o\">//</span> <span class=\"o\">@</span><span class=\"p\">@</span><span class=\"k\">protoc_insertion_point</span><span class=\"o\">(</span><span class=\"nt\">class_scope</span><span class=\"p\">:</span><span class=\"nd\">ignition</span><span class=\"p\">.</span><span class=\"nc\">msgs</span><span class=\"p\">.</span><span class=\"nc\">WorldStatistics</span><span class=\"o\">)</span>\n <span class=\"nt\">private</span><span class=\"o\">:</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_header</span><span class=\"o\">()</span><span class=\"p\">;</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_header</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_sim_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_sim_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_pause_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_pause_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_real_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_real_time</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_paused</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_paused</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_iterations</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_iterations</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_model_count</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_model_count</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_log_playback_stats</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_log_playback_stats</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">set_has_stepping</span><span class=\"o\">();</span>\n  <span class=\"nt\">inline</span> <span class=\"nt\">void</span> <span class=\"nt\">clear_has_stepping</span><span class=\"o\">();</span>\n\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">UnknownFieldSet</span> <span class=\"nt\">_unknown_fields_</span><span class=\"o\">;</span>\n\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">uint32</span> <span class=\"nt\">_has_bits_</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">;</span>\n  <span class=\"nt\">mutable</span> <span class=\"nt\">int</span> <span class=\"nt\">_cached_size_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Header</span><span class=\"o\">*</span> <span class=\"nt\">header_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">sim_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">pause_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">Time</span><span class=\"o\">*</span> <span class=\"nt\">real_time_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">uint64</span> <span class=\"nt\">iterations_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">google</span><span class=\"p\">::</span><span class=\"nd\">protobuf</span><span class=\"p\">::</span><span class=\"nd\">int32</span> <span class=\"nt\">model_count_</span><span class=\"o\">;</span>\n  <span class=\"nt\">bool</span> <span class=\"nt\">paused_</span><span class=\"o\">;</span>\n  <span class=\"nt\">bool</span> <span class=\"nt\">stepping_</span><span class=\"o\">;</span>\n  <span class=\"p\">::</span><span class=\"nd\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">LogPlaybackStatistics</span><span class=\"o\">*</span> <span class=\"nt\">log_playback_stats_</span><span class=\"o\">;</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">IGNITION_MSGS_VISIBLE</span> <span class=\"nt\">protobuf_AddDesc_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">protobuf_AssignDesc_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n  <span class=\"nt\">friend</span> <span class=\"nt\">void</span> <span class=\"nt\">protobuf_ShutdownFile_ignition_2fmsgs_2fworld_5fstats_2eproto</span><span class=\"o\">();</span>\n\n  <span class=\"nt\">void</span> <span class=\"nt\">InitAsDefaultInstance</span><span class=\"o\">();</span>\n  <span class=\"nt\">static</span> <span class=\"nt\">WorldStatistics</span><span class=\"o\">*</span> <span class=\"nt\">default_instance_</span><span class=\"o\">;</span>\n<span class=\"err\">}</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-03T17:07:21.143201+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-03T17:07:21.149537+00:00", "type": "pullrequest_comment", "id": 60546970}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60562232.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60562232"}}, "parent": {"id": 60546970, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57/comments/60546970.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57/_/diff#comment-60546970"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 57, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/57.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/57"}}, "title": "Add stepping field to world_stats message"}, "content": {"raw": "out of curiosity, I changed the new bool to an int32 (85f0e63) and ran another ABI checker job. this one doesn't have API problems, but the ABI complains about the size of the class changing \n\n[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_msgs-abichecker-any_to_any-xenial-amd64&build=19)](https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/19/) https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/19/API_ABI_report/\n\nso usually adding fields will break ABI, but maybe you can get lucky if you add small data like `bool`?", "markup": "markdown", "html": "<p>out of curiosity, I changed the new bool to an int32 (<a href=\"#!/ignitionrobotics/ign-msgs/commits/85f0e63\" rel=\"nofollow\" class=\"ap-connect-link\">85f0e63</a>) and ran another ABI checker job. this one doesn't have API problems, but the ABI complains about the size of the class changing </p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/19/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_msgs-abichecker-any_to_any-xenial-amd64&amp;build=19\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/19/API_ABI_report/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_msgs-abichecker-any_to_any-xenial-amd64/19/API_ABI_report/</a></p>\n<p>so usually adding fields will break ABI, but maybe you can get lucky if you add small data like <code>bool</code>?</p>", "type": "rendered"}, "created_on": "2018-04-03T20:03:16.208354+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-03T20:03:16.211747+00:00", "type": "pullrequest_comment", "id": 60562232}], "page": 1, "size": 7}