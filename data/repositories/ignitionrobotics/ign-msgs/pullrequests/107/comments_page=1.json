{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98541947.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98541947"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "How about making this into `Entity model`? So user-facing code can fill `model.name` and code internal to simulation can use `model.id` for performance.", "markup": "markdown", "html": "<p>How about making this into <code>Entity model</code>? So user-facing code can fill <code>model.name</code> and code internal to simulation can use <code>model.id</code> for performance.</p>", "type": "rendered"}, "created_on": "2019-04-11T22:22:51.250217+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-11T22:22:51.258335+00:00", "type": "pullrequest_comment", "id": 98541947}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98550719.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98550719"}}, "parent": {"id": 98541947, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98541947.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98541947"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "Performers themselves have names eg. `<performer name=\"perf1\">` so using using another field for what the performer refers to would be less confusing. Also, calling it `model` may be too limiting if we ever have other entities such as actors become performers.", "markup": "markdown", "html": "<p>Performers themselves have names eg. <code>&lt;performer name=\"perf1\"&gt;</code> so using using another field for what the performer refers to would be less confusing. Also, calling it <code>model</code> may be too limiting if we ever have other entities such as actors become performers.</p>", "type": "rendered"}, "created_on": "2019-04-12T01:19:32.925915+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-12T01:19:32.939882+00:00", "type": "pullrequest_comment", "id": 98550719}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98551022.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98551022"}}, "parent": {"id": 98550719, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98550719.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98550719"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "Both good points. Performers are also entities (I wanted to turn them into just components of models but I think we'll stay with the entities for now), so they have \"id\"s too. How about:\n\n~~~\n/// \\brief Performer entity.\nEntity entity;\n\n/// \\brief Entity which the performer refers to, such as a model.\nEntity ref_entity;\n~~~\n", "markup": "markdown", "html": "<p>Both good points. Performers are also entities (I wanted to turn them into just components of models but I think we'll stay with the entities for now), so they have \"id\"s too. How about:</p>\n<div class=\"codehilite\"><pre><span></span>/// \\brief Performer entity.\nEntity entity;\n\n/// \\brief Entity which the performer refers to, such as a model.\nEntity ref_entity;\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-12T01:28:26.483987+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-12T01:28:26.494716+00:00", "type": "pullrequest_comment", "id": 98551022}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98648043.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98648043"}}, "parent": {"id": 98551022, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98551022.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98551022"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "The `Entity` message seems overkill. The ID and type contained in `entity.proto` is not needed or used by the level manager.\n\nI also don't see where the name given to a performer, as in `<performer name=\"perf1\">`, is used by a public facing interface. So, I took the approach of automatically creating a performer name.\n\nBasically, I'm going for the easiest user-facing interface possible and ditching anything that feels like extra and unused features.", "markup": "markdown", "html": "<p>The <code>Entity</code> message seems overkill. The ID and type contained in <code>entity.proto</code> is not needed or used by the level manager.</p>\n<p>I also don't see where the name given to a performer, as in <code>&lt;performer name=\"perf1\"&gt;</code>, is used by a public facing interface. So, I took the approach of automatically creating a performer name.</p>\n<p>Basically, I'm going for the easiest user-facing interface possible and ditching anything that feels like extra and unused features.</p>", "type": "rendered"}, "created_on": "2019-04-12T15:08:06.492643+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-12T15:08:06.512666+00:00", "type": "pullrequest_comment", "id": 98648043}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98651072.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98651072"}}, "parent": {"id": 98648043, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98648043.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98648043"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "> The ID and type contained in entity.proto is not needed or used by the level manager.\n\nI'm using the ID when transferring a performer from one secondary to another. Not sure yet if I'll have a use for this message though. We shouldn't be using names to identify entities because they're not guaranteed to be unique or immutable.\n\n> I also don't see where the name given to a performer, as in <performer name=\"perf1\">, is used by a public facing interface. I took the approach of automatically creating a performer name.\n\nIf we don't expect the performer's name to ever be used, we could just remove it instead of generating it. It sounds like now there's an inconsistency between the performers created through SDF and through a message.\n\n---\n\nMy real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.\n\nI've talked to @azeey about this a few times, and the main challenge in doing this right now is that performers are created before models at startup, so there's no entity yet to fill with components. There are several ways we could work around it, but someone has to put some time into making it happen. I think it would be worth it tackling this before we create a performer message that we'll need to tick-tock-update later. Thoughts, @nkoenig?\n\n", "markup": "markdown", "html": "<blockquote>\n<p>The ID and type contained in entity.proto is not needed or used by the level manager.</p>\n</blockquote>\n<p>I'm using the ID when transferring a performer from one secondary to another. Not sure yet if I'll have a use for this message though. We shouldn't be using names to identify entities because they're not guaranteed to be unique or immutable.</p>\n<blockquote>\n<p>I also don't see where the name given to a performer, as in &lt;performer name=\"perf1\"&gt;, is used by a public facing interface. I took the approach of automatically creating a performer name.</p>\n</blockquote>\n<p>If we don't expect the performer's name to ever be used, we could just remove it instead of generating it. It sounds like now there's an inconsistency between the performers created through SDF and through a message.</p>\n<hr />\n<p>My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.</p>\n<p>I've talked to @azeey about this a few times, and the main challenge in doing this right now is that performers are created before models at startup, so there's no entity yet to fill with components. There are several ways we could work around it, but someone has to put some time into making it happen. I think it would be worth it tackling this before we create a performer message that we'll need to tick-tock-update later. Thoughts, @nkoenig?</p>", "type": "rendered"}, "created_on": "2019-04-12T15:26:48.292266+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-12T15:26:48.323076+00:00", "type": "pullrequest_comment", "id": 98651072}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/99055515.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:cc801ca0177c..28c27d53424c?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-99055515"}}, "parent": {"id": 98651072, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98651072.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98651072"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "Right now the performer name is used for printing error messages when multiple performers refer to the same entity. So I think it's still useful to have. \n\n> My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.\n\nI would agree with that. Since the model itself is considered the performer, it makes sense to attach a component tag to accomplish this.\n\n> the main challenge in doing this right now is that performers are created before models at startup\n\nWe can work around it, but I think the `LevelManager` would have to store the names and geometries of all the performers internally instead of in the ECM. I don't know what ramifications that has on distributed sim.\n", "markup": "markdown", "html": "<p>Right now the performer name is used for printing error messages when multiple performers refer to the same entity. So I think it's still useful to have. </p>\n<blockquote>\n<p>My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.</p>\n</blockquote>\n<p>I would agree with that. Since the model itself is considered the performer, it makes sense to attach a component tag to accomplish this.</p>\n<blockquote>\n<p>the main challenge in doing this right now is that performers are created before models at startup</p>\n</blockquote>\n<p>We can work around it, but I think the <code>LevelManager</code> would have to store the names and geometries of all the performers internally instead of in the ECM. I don't know what ramifications that has on distributed sim.</p>", "type": "rendered"}, "created_on": "2019-04-17T00:45:33.712709+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 32, "from": null, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-17T00:45:33.724620+00:00", "type": "pullrequest_comment", "id": 99055515}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/99214806.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-99214806"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "I just need a message that I can send to `ign-gazebo` so that a performer can be created at after load. This PR solves that problem, and is meant to be used by #!/ignitionrobotics/ign-gazebo/pull-requests/264 and by #!/ignitionrobotics/ign-launch/pull-requests/16.\n\nAs a user of ign-gazebo, I want to specify a model by name as a performer. Ideally I'd like to use just a string message, but I couldn't find a nice way to get rid of the Geometry component.\n\nWe can make more and different messages in the future to solve this problem in a different way. \n\nSo, is there any reason not to offer this as an option for Blueprint? Otherwise, I'm going to proceed with this so that subt teams can spawn models into simulation.", "markup": "markdown", "html": "<p>I just need a message that I can send to <code>ign-gazebo</code> so that a performer can be created at after load. This PR solves that problem, and is meant to be used by <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/264\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-gazebo/pull-requests/264</a> and by <a href=\"#!/ignitionrobotics/ign-launch/pull-requests/16\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-launch/pull-requests/16</a>.</p>\n<p>As a user of ign-gazebo, I want to specify a model by name as a performer. Ideally I'd like to use just a string message, but I couldn't find a nice way to get rid of the Geometry component.</p>\n<p>We can make more and different messages in the future to solve this problem in a different way. </p>\n<p>So, is there any reason not to offer this as an option for Blueprint? Otherwise, I'm going to proceed with this so that subt teams can spawn models into simulation.</p>", "type": "rendered"}, "created_on": "2019-04-17T21:13:02.558448+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2019-04-17T21:13:02.571428+00:00", "type": "pullrequest_comment", "id": 99214806}], "page": 1, "size": 7}