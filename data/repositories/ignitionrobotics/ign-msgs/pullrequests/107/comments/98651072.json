{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98651072.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:353463932be9..58f3bfe8fa6b?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98651072"}}, "parent": {"id": 98648043, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98648043.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98648043"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "> The ID and type contained in entity.proto is not needed or used by the level manager.\n\nI'm using the ID when transferring a performer from one secondary to another. Not sure yet if I'll have a use for this message though. We shouldn't be using names to identify entities because they're not guaranteed to be unique or immutable.\n\n> I also don't see where the name given to a performer, as in <performer name=\"perf1\">, is used by a public facing interface. I took the approach of automatically creating a performer name.\n\nIf we don't expect the performer's name to ever be used, we could just remove it instead of generating it. It sounds like now there's an inconsistency between the performers created through SDF and through a message.\n\n---\n\nMy real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.\n\nI've talked to @azeey about this a few times, and the main challenge in doing this right now is that performers are created before models at startup, so there's no entity yet to fill with components. There are several ways we could work around it, but someone has to put some time into making it happen. I think it would be worth it tackling this before we create a performer message that we'll need to tick-tock-update later. Thoughts, @nkoenig?\n\n", "markup": "markdown", "html": "<blockquote>\n<p>The ID and type contained in entity.proto is not needed or used by the level manager.</p>\n</blockquote>\n<p>I'm using the ID when transferring a performer from one secondary to another. Not sure yet if I'll have a use for this message though. We shouldn't be using names to identify entities because they're not guaranteed to be unique or immutable.</p>\n<blockquote>\n<p>I also don't see where the name given to a performer, as in &lt;performer name=\"perf1\"&gt;, is used by a public facing interface. I took the approach of automatically creating a performer name.</p>\n</blockquote>\n<p>If we don't expect the performer's name to ever be used, we could just remove it instead of generating it. It sounds like now there's an inconsistency between the performers created through SDF and through a message.</p>\n<hr />\n<p>My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.</p>\n<p>I've talked to @azeey about this a few times, and the main challenge in doing this right now is that performers are created before models at startup, so there's no entity yet to fill with components. There are several ways we could work around it, but someone has to put some time into making it happen. I think it would be worth it tackling this before we create a performer message that we'll need to tick-tock-update later. Thoughts, @nkoenig?</p>", "type": "rendered"}, "created_on": "2019-04-12T15:26:48.292266+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 32, "from": null, "outdated": true, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-12T15:26:48.323076+00:00", "type": "pullrequest_comment", "id": 98651072}