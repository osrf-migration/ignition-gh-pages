{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/99055515.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-msgs/diff/ignitionrobotics/ign-msgs:cc801ca0177c..28c27d53424c?path=proto%2Fignition%2Fmsgs%2Fperformer.proto"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-99055515"}}, "parent": {"id": 98651072, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107/comments/98651072.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107/_/diff#comment-98651072"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 107, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/107.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/107"}}, "title": "Performer"}, "content": {"raw": "Right now the performer name is used for printing error messages when multiple performers refer to the same entity. So I think it's still useful to have. \n\n> My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.\n\nI would agree with that. Since the model itself is considered the performer, it makes sense to attach a component tag to accomplish this.\n\n> the main challenge in doing this right now is that performers are created before models at startup\n\nWe can work around it, but I think the `LevelManager` would have to store the names and geometries of all the performers internally instead of in the ECM. I don't know what ramifications that has on distributed sim.\n", "markup": "markdown", "html": "<p>Right now the performer name is used for printing error messages when multiple performers refer to the same entity. So I think it's still useful to have. </p>\n<blockquote>\n<p>My real preference would be for a performer not to be an entity at all. Instead, another entity, such as a model, can be turned into a performer by attaching performer components to it. Dealing with performers at the moment can be quite confusing because we always have to remember to get its parent model.</p>\n</blockquote>\n<p>I would agree with that. Since the model itself is considered the performer, it makes sense to attach a component tag to accomplish this.</p>\n<blockquote>\n<p>the main challenge in doing this right now is that performers are created before models at startup</p>\n</blockquote>\n<p>We can work around it, but I think the <code>LevelManager</code> would have to store the names and geometries of all the performers internally instead of in the ECM. I don't know what ramifications that has on distributed sim.</p>", "type": "rendered"}, "created_on": "2019-04-17T00:45:33.712709+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 32, "from": null, "outdated": false, "path": "proto/ignition/msgs/performer.proto"}, "updated_on": "2019-04-17T00:45:33.724620+00:00", "type": "pullrequest_comment", "id": 99055515}