{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126614868.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126614868"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "I know this was already brought up during the meeting, but just for completeness I'll mention that this breaks the C++ API without tick-tocking.\n\nAt a minimum, I think we should add a note to the migration guide explaining what should be called instead of `msg.set_use_parent_model_frame(true)` and `if (msg.use_parent_model_frame())`.\n\nAnd if we want to be extra careful, we could add `[deprecated = true]` to the old field, and add logic in the parsing side which:\n\n* Sets the correct `xyz_expressed_in` if `use_parent_model_frame`\n* Ignores `use_parent_model_frame` if `!xyz_expressed_in().empty()`", "markup": "markdown", "html": "<p>I know this was already brought up during the meeting, but just for completeness I'll mention that this breaks the C++ API without tick-tocking.</p>\n<p>At a minimum, I think we should add a note to the migration guide explaining what should be called instead of <code>msg.set_use_parent_model_frame(true)</code> and <code>if (msg.use_parent_model_frame())</code>.</p>\n<p>And if we want to be extra careful, we could add <code>[deprecated = true]</code> to the old field, and add logic in the parsing side which:</p>\n<ul>\n<li>Sets the correct <code>xyz_expressed_in</code> if <code>use_parent_model_frame</code></li>\n<li>Ignores <code>use_parent_model_frame</code> if <code>!xyz_expressed_in().empty()</code></li>\n</ul>", "type": "rendered"}, "created_on": "2019-11-27T18:14:02.674675+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-11-27T18:14:02.681884+00:00", "type": "pullrequest_comment", "id": 126614868}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126621419.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126621419"}}, "parent": {"id": 126614868, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126614868.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126614868"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "I would agree with this. For sdf files, the 1.6 -> 1.7 converter takes care of setting `xyz_expressed_in` attribute so removing `use_parent_model_frame` from the spec seems okay to me. For msgs, however, removing the field breaks API. I like @{557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8}'s approach, but `xyz_expressed_in.empty()` is a valid value. Should we use `StringValue` instead to make it nullable?", "markup": "markdown", "html": "<p>I would agree with this. For sdf files, the 1.6 -&gt; 1.7 converter takes care of setting <code>xyz_expressed_in</code> attribute so removing <code>use_parent_model_frame</code> from the spec seems okay to me. For msgs, however, removing the field breaks API. I like <span class=\"ap-mention\" data-atlassian-id=\"557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8\">@Louise Poubel</span>'s approach, but <code>xyz_expressed_in.empty()</code> is a valid value. Should we use <code>StringValue</code> instead to make it nullable?</p>", "type": "rendered"}, "created_on": "2019-11-27T19:14:00.707718+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-11-27T19:14:00.722074+00:00", "type": "pullrequest_comment", "id": 126621419}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126631517.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126631517"}}, "parent": {"id": 126621419, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126621419.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126621419"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "I'm open to two approaches:\n\n* always ignore `use_parent_model_frame`; it's only there so it doesn't break compilation\n* require users to implement all the logic for interpreting both `xyz_expressed_in` and `use_parent_model_frame`:\n\n    * if `xyz_expressed_in` is not empty, then completely ignore `use_parent_model_frame`\n\n    * if `xyz_expressed_in` is empty and `use_parent_model_frame` is true, then use `__model__`\n\n    * if `xyz_expressed_in` is empty and `use_parent_model_frame` is false, then it's expressed in the joint frame\n\nI lean towards the first approach to keep life simpler for users. We could provide a helper function that implements the logic of the second approach", "markup": "markdown", "html": "<p>I'm open to two approaches:</p>\n<ul>\n<li>always ignore <code>use_parent_model_frame</code>; it's only there so it doesn't break compilation</li>\n<li>\n<p>require users to implement all the logic for interpreting both <code>xyz_expressed_in</code> and <code>use_parent_model_frame</code>:</p>\n<ul>\n<li>\n<p>if <code>xyz_expressed_in</code> is not empty, then completely ignore <code>use_parent_model_frame</code></p>\n</li>\n<li>\n<p>if <code>xyz_expressed_in</code> is empty and <code>use_parent_model_frame</code> is true, then use <code>__model__</code></p>\n</li>\n<li>\n<p>if <code>xyz_expressed_in</code> is empty and <code>use_parent_model_frame</code> is false, then it's expressed in the joint frame</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>I lean towards the first approach to keep life simpler for users. We could provide a helper function that implements the logic of the second approach</p>", "type": "rendered"}, "created_on": "2019-11-27T20:53:06.996231+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-11-27T20:53:07.003801+00:00", "type": "pullrequest_comment", "id": 126631517}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126635590.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126635590"}}, "parent": {"id": 126631517, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126631517.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126631517"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "Either option works for me. The prospect of breaking compilation is already causing problems, because we'd need to time right when to merge this PR :wink: ", "markup": "markdown", "html": "<p>Either option works for me. The prospect of breaking compilation is already causing problems, because we'd need to time right when to merge this PR <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> </p>", "type": "rendered"}, "created_on": "2019-11-27T21:37:34.258230+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-11-27T21:37:34.266100+00:00", "type": "pullrequest_comment", "id": 126635590}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/127137240.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-127137240"}}, "parent": {"id": 126635590, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/126635590.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-126635590"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "Since this seems to be (at least to me) a very Gazebo specific message, I would lean toward option 2 and add the necessary logic in Gazebo to support both `use_parent_model_frame` and `xyz_expressed_in` for citadel.\n", "markup": "markdown", "html": "<p>Since this seems to be (at least to me) a very Gazebo specific message, I would lean toward option 2 and add the necessary logic in Gazebo to support both <code>use_parent_model_frame</code> and <code>xyz_expressed_in</code> for citadel.</p>", "type": "rendered"}, "created_on": "2019-12-03T01:20:12.046884+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-12-03T01:20:12.054966+00:00", "type": "pullrequest_comment", "id": 127137240}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/127287768.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-127287768"}}, "parent": {"id": 127137240, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160/comments/127137240.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160/_/diff#comment-127137240"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-msgs/pullrequests/160.json"}, "html": {"href": "#!/ignitionrobotics/ign-msgs/pull-requests/160"}}, "title": "[Citadel] [WIP] Add support for sdformat frame semantics"}, "content": {"raw": "See pull request #165", "markup": "markdown", "html": "<p>See <a href=\"#!/ignitionrobotics/ign-msgs/pull-requests/165/citadel-suggestions-to-pull-request-160\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #165</a></p>", "type": "rendered"}, "created_on": "2019-12-03T17:58:49.969566+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-12-03T17:58:49.981036+00:00", "type": "pullrequest_comment", "id": 127287768}], "page": 1, "size": 6}