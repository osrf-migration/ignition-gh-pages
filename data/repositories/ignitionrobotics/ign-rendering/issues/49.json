{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/49/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/49/ogre2-depth-camera-doesnt-trigger-point"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/49/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Ogre2 depth camera doesn't trigger point cloud event", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [ X ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nIf a callback is registered with [Ogre2DepthCamera::ConnectNewRgbPointCloud](#!/ignitionrobotics/ign-rendering/src/7248ad060b060ae4ae53b19f61ed9516a91f8ef3/ogre2/include/ignition/rendering/ogre2/Ogre2DepthCamera.hh#lines-94), it will never be called because the `newRgbPointCloud` is never triggered.\r\n\r\n# Steps to Reproduce\r\n\r\n1. Connect a callback to `ConnectNewRgbPointCloud`\r\n1. Update the camera and see that the callback is not called.\r\n\r\n**Expected behavior:**  \r\n\r\nThe callback is triggered\r\n\r\n**Actual behavior:**\r\n\r\nNothing\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\n2\r\n\r\n# Additional Information\r\n\r\nOgre 1 calls the event, but Ogre2 doesn't:\r\n\r\n```\r\n$ grep -r \"newRgbPointCloud\" .\r\n./ogre/src/OgreDepthCamera.cc:              const std::string &)> newRgbPointCloud;\r\n./ogre/src/OgreDepthCamera.cc:    this->dataPtr->newRgbPointCloud(\r\n./ogre/src/OgreDepthCamera.cc:  return this->dataPtr->newRgbPointCloud.Connect(_subscriber);\r\n./ogre2/src/Ogre2DepthCamera.cc:              const std::string &)> newRgbPointCloud;\r\n./ogre2/src/Ogre2DepthCamera.cc:  return this->dataPtr->newRgbPointCloud.Connect(_subscriber);\r\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>If a callback is registered with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/7248ad060b060ae4ae53b19f61ed9516a91f8ef3/ogre2/include/ignition/rendering/ogre2/Ogre2DepthCamera.hh#lines-94\" rel=\"nofollow\">Ogre2DepthCamera::ConnectNewRgbPointCloud</a>, it will never be called because the <code>newRgbPointCloud</code> is never triggered.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Connect a callback to <code>ConnectNewRgbPointCloud</code></li>\n<li>Update the camera and see that the callback is not called.</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>The callback is triggered</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Nothing</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>2</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>Ogre 1 calls the event, but Ogre2 doesn't:</p>\n<div class=\"codehilite\"><pre><span></span>$ grep -r <span class=\"s2\">&quot;newRgbPointCloud&quot;</span> .\n./ogre/src/OgreDepthCamera.cc:              const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>&gt; newRgbPointCloud<span class=\"p\">;</span>\n./ogre/src/OgreDepthCamera.cc:    this-&gt;dataPtr-&gt;newRgbPointCloud<span class=\"o\">(</span>\n./ogre/src/OgreDepthCamera.cc:  <span class=\"k\">return</span> this-&gt;dataPtr-&gt;newRgbPointCloud.Connect<span class=\"o\">(</span>_subscriber<span class=\"o\">)</span><span class=\"p\">;</span>\n./ogre2/src/Ogre2DepthCamera.cc:              const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>&gt; newRgbPointCloud<span class=\"p\">;</span>\n./ogre2/src/Ogre2DepthCamera.cc:  <span class=\"k\">return</span> this-&gt;dataPtr-&gt;newRgbPointCloud.Connect<span class=\"o\">(</span>_subscriber<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-07T18:26:27.539690+00:00", "milestone": null, "updated_on": "2019-06-07T18:26:27.539690+00:00", "type": "issue", "id": 49}