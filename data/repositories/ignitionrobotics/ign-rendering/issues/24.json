{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/24/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/24/extend-shaders-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/24/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Extend shaders support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "from comment in pull request #55:\n\n* While the ShaderParam currently encodes INT and FLOAT, it should probably be expanded to cover other commonly-used types with more than one value (Vector2, Vector3, Vector4, Matrix33, Matrix44)\n\n* It may be useful to port the capabilities/features framework from ign-physics to the rendering system to indicate that some renderers don't support raw shaders (eg Optix):\n    * ign-physics Feature (wip): #!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&fileviewer=file-view-default\n    * Checking with OGRE: https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html\n\n* Potentially expand for other shader types: Geometry, Compute, Tesselation", "markup": "markdown", "html": "<p>from comment in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/55/add-support-for-custom-shader-materials\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #55</a>:</p>\n<ul>\n<li>\n<p>While the ShaderParam currently encodes INT and FLOAT, it should probably be expanded to cover other commonly-used types with more than one value (Vector2, Vector3, Vector4, Matrix33, Matrix44)</p>\n</li>\n<li>\n<p>It may be useful to port the capabilities/features framework from ign-physics to the rendering system to indicate that some renderers don't support raw shaders (eg Optix):</p>\n<ul>\n<li>ign-physics Feature (wip): <a href=\"#!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&amp;fileviewer=file-view-default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&amp;fileviewer=file-view-default</a></li>\n<li>Checking with OGRE: <a href=\"https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html</a></li>\n</ul>\n</li>\n<li>\n<p>Potentially expand for other shader types: Geometry, Compute, Tesselation</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T21:47:19.194691+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:14.102336+00:00", "type": "issue", "id": 24}