{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/58/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/58/move-user-data-storage-to-node-from-visual"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/58/vote"}}, "reporter": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}, "title": "Move user data storage to Node from Visual", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nI propose that we move the functions `SetUserData` and `UserData` currently residing within the Visual to the Node class in Dome.  This will not affect the current usage of the function, but could provide better scalability.\r\n\r\n# Motivation\r\n\r\nThe functions `SetUserData` and `UserData` were introduced in [This PR](#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual/diff).  It's become quite handy in that certain data can be accessed and set at the plugin level without having to depend upon other classes.  Accessing a visual's entity id as well as being able to set booleans (via ints) in order to give a preview of what moving a visual to a given location might look like without having to make the service request has become quite useful.  However, I do have to make downcasts from NodePtr -> VisualPtr in order to access this function which is not guaranteed to succeed.  Moving both of these functions would maintain the current Visual user data support while also solving my issue of downcasting.  \r\n\r\n# Describe alternatives you've considered\r\n\r\nCurrently, I'm casting from a Node to Visual which isn't guaranteed to succeed as a work-around.\r\n\r\nWhat do you think? @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5}", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>I propose that we move the functions <code>SetUserData</code> and <code>UserData</code> currently residing within the Visual to the Node class in Dome.  This will not affect the current usage of the function, but could provide better scalability.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>The functions <code>SetUserData</code> and <code>UserData</code> were introduced in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual/diff\" rel=\"nofollow\">This PR</a>.  It's become quite handy in that certain data can be accessed and set at the plugin level without having to depend upon other classes.  Accessing a visual's entity id as well as being able to set booleans (via ints) in order to give a preview of what moving a visual to a given location might look like without having to make the service request has become quite useful.  However, I do have to make downcasts from NodePtr -&gt; VisualPtr in order to access this function which is not guaranteed to succeed.  Moving both of these functions would maintain the current Visual user data support while also solving my issue of downcasting.  </p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Currently, I'm casting from a Node to Visual which isn't guaranteed to succeed as a work-around.</p>\n<p>What do you think? <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-02-28T22:52:06.439128+00:00", "milestone": null, "updated_on": "2020-03-03T00:04:25.658630+00:00", "type": "issue", "id": 58}