{"rendered": {"description": {"raw": "tl;dr:\r\n\r\nYou  can now create a RenderWindow with `optix`.\r\n\r\nlong version:\r\n\r\nI started abstracting the RenderWindow class a bit more.  Optix doesn't have a convenient class for attaching to the external windowing system like ogre (implementation is platform-specific code, e.g. searches for xwindow / xdisplay, and cocoa window on OSX, etc) . So in optix's RenderWindow implementation, I'm mocking it using  a render texture.  I've updated the `RenderTarget_TEST` to take in `optix` render engine, and now it shouldn't crash.\r\n\r\nI've also refactored ogre's `CreateRenderWindow` implementation. There was a problem with null `_scene` pointer in RTShaderSystem as identified in pull request #29. This should not happen any more. Updated `Scene_Test` to test creating a render window.", "markup": "markdown", "html": "<p>tl;dr:</p>\n<p>You  can now create a RenderWindow with <code>optix</code>.</p>\n<p>long version:</p>\n<p>I started abstracting the RenderWindow class a bit more.  Optix doesn't have a convenient class for attaching to the external windowing system like ogre (implementation is platform-specific code, e.g. searches for xwindow / xdisplay, and cocoa window on OSX, etc) . So in optix's RenderWindow implementation, I'm mocking it using  a render texture.  I've updated the <code>RenderTarget_TEST</code> to take in <code>optix</code> render engine, and now it shouldn't crash.</p>\n<p>I've also refactored ogre's <code>CreateRenderWindow</code> implementation. There was a problem with null <code>_scene</code> pointer in RTShaderSystem as identified in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/29/check-to-make-sure-the-scene-isnt-nullptr\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #29</a>. This should not happen any more. Updated <code>Scene_Test</code> to test creating a render window.</p>", "type": "rendered"}, "title": {"raw": "Mock render window for optix", "markup": "markdown", "html": "<p>Mock render window for optix</p>", "type": "rendered"}}, "type": "pullrequest", "description": "tl;dr:\r\n\r\nYou  can now create a RenderWindow with `optix`.\r\n\r\nlong version:\r\n\r\nI started abstracting the RenderWindow class a bit more.  Optix doesn't have a convenient class for attaching to the external windowing system like ogre (implementation is platform-specific code, e.g. searches for xwindow / xdisplay, and cocoa window on OSX, etc) . So in optix's RenderWindow implementation, I'm mocking it using  a render texture.  I've updated the `RenderTarget_TEST` to take in `optix` render engine, and now it shouldn't crash.\r\n\r\nI've also refactored ogre's `CreateRenderWindow` implementation. There was a problem with null `_scene` pointer in RTShaderSystem as identified in pull request #29. This should not happen any more. Updated `Scene_Test` to test creating a render window.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diffstat/ignitionrobotics/ign-rendering:49111716678f%0Dd59a14fbf24d?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/33.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/33/merge"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/33"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diff/ignitionrobotics/ign-rendering:49111716678f%0Dd59a14fbf24d?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/33/statuses_page=1.json"}}, "title": "Mock render window for optix", "close_source_branch": true, "reviewers": [], "id": 33, "destination": {"commit": {"hash": "d59a14fbf24d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/d59a14fbf24d.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/d59a14fbf24d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "default"}}, "created_on": "2017-10-04T00:08:33.224404+00:00", "summary": {"raw": "tl;dr:\r\n\r\nYou  can now create a RenderWindow with `optix`.\r\n\r\nlong version:\r\n\r\nI started abstracting the RenderWindow class a bit more.  Optix doesn't have a convenient class for attaching to the external windowing system like ogre (implementation is platform-specific code, e.g. searches for xwindow / xdisplay, and cocoa window on OSX, etc) . So in optix's RenderWindow implementation, I'm mocking it using  a render texture.  I've updated the `RenderTarget_TEST` to take in `optix` render engine, and now it shouldn't crash.\r\n\r\nI've also refactored ogre's `CreateRenderWindow` implementation. There was a problem with null `_scene` pointer in RTShaderSystem as identified in pull request #29. This should not happen any more. Updated `Scene_Test` to test creating a render window.", "markup": "markdown", "html": "<p>tl;dr:</p>\n<p>You  can now create a RenderWindow with <code>optix</code>.</p>\n<p>long version:</p>\n<p>I started abstracting the RenderWindow class a bit more.  Optix doesn't have a convenient class for attaching to the external windowing system like ogre (implementation is platform-specific code, e.g. searches for xwindow / xdisplay, and cocoa window on OSX, etc) . So in optix's RenderWindow implementation, I'm mocking it using  a render texture.  I've updated the <code>RenderTarget_TEST</code> to take in <code>optix</code> render engine, and now it shouldn't crash.</p>\n<p>I've also refactored ogre's <code>CreateRenderWindow</code> implementation. There was a problem with null <code>_scene</code> pointer in RTShaderSystem as identified in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/29/check-to-make-sure-the-scene-isnt-nullptr\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #29</a>. This should not happen any more. Updated <code>Scene_Test</code> to test creating a render window.</p>", "type": "rendered"}, "source": {"commit": {"hash": "4e744492b906", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/4e744492b906.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/4e744492b906"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "scene_renderwindow"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-10-06T01:27:29.490080+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-09T20:27:36.964090+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-10-09T20:27:46.693387+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "49111716678f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/49111716678f.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/49111716678f"}}}, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}