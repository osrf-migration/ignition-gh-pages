{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/246/comments/140816957.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/246/_/diff#comment-140816957"}}, "parent": {"id": 140356173, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/246/comments/140356173.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/246/_/diff#comment-140356173"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 246, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/246.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/246"}}, "title": "Ogre2 grid"}, "content": {"raw": "After some investigation, I somewhat believe this error to be an artifact of how the materials are cleaned up rather than this implementation of ogre2 grid, although I could be wrong.  This grid test for Ogre1 and Ogre2 behaves the same way in both cases in terms of Material cleanup order, except the ogre2 version results in a crash.  For both versions of ogre, the material that the grid makes a copy of is destroyed before the grid\u2019s deconstructor is called - I believe this occurs when the destroy call is made to the scene.  This same material\u2019s deconstructor is called again when the grid\u2019s deconstructor is called - this is called after the scene has been destroyed - this is where the crash occurs in Ogre2, it is actually a failed assertion, possibly one that is not made in Ogre1.  What further supports this being an artifact of the clean order is the fac that I removed the last two lines in the test that destroy the scene and unload the engine, and the Ogre2 test runs successfully.  Any thoughts? @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} ", "markup": "markdown", "html": "<p>After some investigation, I somewhat believe this error to be an artifact of how the materials are cleaned up rather than this implementation of ogre2 grid, although I could be wrong.  This grid test for Ogre1 and Ogre2 behaves the same way in both cases in terms of Material cleanup order, except the ogre2 version results in a crash.  For both versions of ogre, the material that the grid makes a copy of is destroyed before the grid\u2019s deconstructor is called - I believe this occurs when the destroy call is made to the scene.  This same material\u2019s deconstructor is called again when the grid\u2019s deconstructor is called - this is called after the scene has been destroyed - this is where the crash occurs in Ogre2, it is actually a failed assertion, possibly one that is not made in Ogre1.  What further supports this being an artifact of the clean order is the fac that I removed the last two lines in the test that destroy the scene and unload the engine, and the Ogre2 test runs successfully.  Any thoughts? <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> </p>", "type": "rendered"}, "created_on": "2020-03-18T21:13:40.532094+00:00", "user": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}, "updated_on": "2020-03-18T21:13:40.543979+00:00", "type": "pullrequest_comment", "id": 140816957}