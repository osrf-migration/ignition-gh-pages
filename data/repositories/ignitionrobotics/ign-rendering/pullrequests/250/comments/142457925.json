{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/250/comments/142457925.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/250/_/diff#comment-142457925"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/250.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/250"}}, "title": "AABB to Dome"}, "content": {"raw": "Note that this PR adds support for `LocalBoundingBox()` and `BoundingBox()` for Visuals.  \n  \nThere is an important distinction between this implementation and Gazebo classics, namely, Ignition\u2019s `LocalBoundingBox()` function is Gazebo classic\u2019s `BoundingBox()` function.  The `LocalBoundingBox()` call will return the bounding box in the respective visual\u2019s local space sized to the world\u2019s scale.  On the other hand, the `BoundingBox()` call returns the bounding box of the respective visual in the world frame.  Gazebo classic calculated this world frame bounding box in the `ModelAlign.cc` file, but I felt that this property should be one held/calculated within the Visual as opposed to one left to others to calculate from the local bounding box.  This allows for greater scalability in the future \\(if we want to eventually make the switch to display the world bounding box for a selected visual - a more useful, yet more computationally intensive alternative to the current local bounding box way\\).\n\nAdditionally, the local and world bounding boxes are calculated almost identically, the only difference is the transform to use - should we transform to world space or the top level visual\u2019s space?  ", "markup": "markdown", "html": "<p>Note that this PR adds support for <code>LocalBoundingBox()</code> and <code>BoundingBox()</code> for Visuals.  </p>\n<p>There is an important distinction between this implementation and Gazebo classics, namely, Ignition\u2019s <code>LocalBoundingBox()</code> function is Gazebo classic\u2019s <code>BoundingBox()</code> function.  The <code>LocalBoundingBox()</code> call will return the bounding box in the respective visual\u2019s local space sized to the world\u2019s scale.  On the other hand, the <code>BoundingBox()</code> call returns the bounding box of the respective visual in the world frame.  Gazebo classic calculated this world frame bounding box in the <code>ModelAlign.cc</code> file, but I felt that this property should be one held/calculated within the Visual as opposed to one left to others to calculate from the local bounding box.  This allows for greater scalability in the future (if we want to eventually make the switch to display the world bounding box for a selected visual - a more useful, yet more computationally intensive alternative to the current local bounding box way).</p>\n<p>Additionally, the local and world bounding boxes are calculated almost identically, the only difference is the transform to use - should we transform to world space or the top level visual\u2019s space?  </p>", "type": "rendered"}, "created_on": "2020-03-27T23:56:17.134239+00:00", "user": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}, "updated_on": "2020-03-27T23:56:17.136713+00:00", "type": "pullrequest_comment", "id": 142457925}