{"rendered": {"description": {"raw": "~~Depends on pull request #200 and pull request #201. Please review them first~~\r\n\r\nAdds ogre1.x and ogre2.x implementation of a thermal camera.\r\n\r\nThe data output is an image of single channel 16 bit temperature values. Typical thermal sensors produces data in 10mK or 100mK resolutions and this behavior can be configured by setting the thermal camera\u2019s LinearResolution.\r\n\r\ne.g. for LinearResolution of 0.01 \\(10mK\\), the max temperature data generated is:\r\n\r\n65535 \\* 0.01 = 655.35 Kelvin / 680.72 F / 360.4 C\r\n\r\nAnother example is the FLIR Lepton camera which outputs 14 bit data, which can be simulated by setting LinearResolution to 0.04.\r\n\r\nThe temperature of a Visual can be set using `Visual::SetUserData` function introduced in pull request #200 with the key `temperature`, and the environment temperature is set using `TheramlCamera::SetAmbientTemperature`\r\n\r\n\u200c\r\n\r\nUpdate [70b4a9b](#!/ignitionrobotics/ign-rendering/commits/70b4a9b65a06fed9e64e2a7bffcc360192a31897): Added function to set temperature variation for heat sources \\(instead of using a hard coded value\\).  If not set, uniform temperature is assumed for the entire body of the heat source.", "markup": "markdown", "html": "<p><del>Depends on <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #200</a> and <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/201/add-16-bit-format\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #201</a>. Please review them first</del></p>\n<p>Adds ogre1.x and ogre2.x implementation of a thermal camera.</p>\n<p>The data output is an image of single channel 16 bit temperature values. Typical thermal sensors produces data in 10mK or 100mK resolutions and this behavior can be configured by setting the thermal camera\u2019s LinearResolution.</p>\n<p>e.g. for LinearResolution of 0.01 (10mK), the max temperature data generated is:</p>\n<p>65535 * 0.01 = 655.35 Kelvin / 680.72 F / 360.4 C</p>\n<p>Another example is the FLIR Lepton camera which outputs 14 bit data, which can be simulated by setting LinearResolution to 0.04.</p>\n<p>The temperature of a Visual can be set using <code>Visual::SetUserData</code> function introduced in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #200</a> with the key <code>temperature</code>, and the environment temperature is set using <code>TheramlCamera::SetAmbientTemperature</code></p>\n<p>\u200c</p>\n<p>Update <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/commits/70b4a9b65a06fed9e64e2a7bffcc360192a31897\" rel=\"nofollow\">70b4a9b</a>: Added function to set temperature variation for heat sources (instead of using a hard coded value).  If not set, uniform temperature is assumed for the entire body of the heat source.</p>", "type": "rendered"}, "title": {"raw": "Add ThermalCamera", "markup": "markdown", "html": "<p>Add ThermalCamera</p>", "type": "rendered"}}, "type": "pullrequest", "description": "~~Depends on pull request #200 and pull request #201. Please review them first~~\r\n\r\nAdds ogre1.x and ogre2.x implementation of a thermal camera.\r\n\r\nThe data output is an image of single channel 16 bit temperature values. Typical thermal sensors produces data in 10mK or 100mK resolutions and this behavior can be configured by setting the thermal camera\u2019s LinearResolution.\r\n\r\ne.g. for LinearResolution of 0.01 \\(10mK\\), the max temperature data generated is:\r\n\r\n65535 \\* 0.01 = 655.35 Kelvin / 680.72 F / 360.4 C\r\n\r\nAnother example is the FLIR Lepton camera which outputs 14 bit data, which can be simulated by setting LinearResolution to 0.04.\r\n\r\nThe temperature of a Visual can be set using `Visual::SetUserData` function introduced in pull request #200 with the key `temperature`, and the environment temperature is set using `TheramlCamera::SetAmbientTemperature`\r\n\r\n\u200c\r\n\r\nUpdate [70b4a9b](#!/ignitionrobotics/ign-rendering/commits/70b4a9b65a06fed9e64e2a7bffcc360192a31897): Added function to set temperature variation for heat sources \\(instead of using a hard coded value\\).  If not set, uniform temperature is assumed for the entire body of the heat source.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/202/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diffstat/ignitionrobotics/ign-rendering:a61ab3250c98%0Dd3f1e787d5de?from_pullrequest_id=202"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/202/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/202.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/202/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/202/merge"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/202"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/202/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diff/ignitionrobotics/ign-rendering:a61ab3250c98%0Dd3f1e787d5de?from_pullrequest_id=202"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/202/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/202/statuses_page=1.json"}}, "title": "Add ThermalCamera", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}], "id": 202, "destination": {"commit": {"hash": "d3f1e787d5de", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/d3f1e787d5de.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/d3f1e787d5de"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "default"}}, "created_on": "2019-09-27T00:38:25.629842+00:00", "summary": {"raw": "~~Depends on pull request #200 and pull request #201. Please review them first~~\r\n\r\nAdds ogre1.x and ogre2.x implementation of a thermal camera.\r\n\r\nThe data output is an image of single channel 16 bit temperature values. Typical thermal sensors produces data in 10mK or 100mK resolutions and this behavior can be configured by setting the thermal camera\u2019s LinearResolution.\r\n\r\ne.g. for LinearResolution of 0.01 \\(10mK\\), the max temperature data generated is:\r\n\r\n65535 \\* 0.01 = 655.35 Kelvin / 680.72 F / 360.4 C\r\n\r\nAnother example is the FLIR Lepton camera which outputs 14 bit data, which can be simulated by setting LinearResolution to 0.04.\r\n\r\nThe temperature of a Visual can be set using `Visual::SetUserData` function introduced in pull request #200 with the key `temperature`, and the environment temperature is set using `TheramlCamera::SetAmbientTemperature`\r\n\r\n\u200c\r\n\r\nUpdate [70b4a9b](#!/ignitionrobotics/ign-rendering/commits/70b4a9b65a06fed9e64e2a7bffcc360192a31897): Added function to set temperature variation for heat sources \\(instead of using a hard coded value\\).  If not set, uniform temperature is assumed for the entire body of the heat source.", "markup": "markdown", "html": "<p><del>Depends on <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #200</a> and <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/201/add-16-bit-format\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #201</a>. Please review them first</del></p>\n<p>Adds ogre1.x and ogre2.x implementation of a thermal camera.</p>\n<p>The data output is an image of single channel 16 bit temperature values. Typical thermal sensors produces data in 10mK or 100mK resolutions and this behavior can be configured by setting the thermal camera\u2019s LinearResolution.</p>\n<p>e.g. for LinearResolution of 0.01 (10mK), the max temperature data generated is:</p>\n<p>65535 * 0.01 = 655.35 Kelvin / 680.72 F / 360.4 C</p>\n<p>Another example is the FLIR Lepton camera which outputs 14 bit data, which can be simulated by setting LinearResolution to 0.04.</p>\n<p>The temperature of a Visual can be set using <code>Visual::SetUserData</code> function introduced in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #200</a> with the key <code>temperature</code>, and the environment temperature is set using <code>TheramlCamera::SetAmbientTemperature</code></p>\n<p>\u200c</p>\n<p>Update <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/commits/70b4a9b65a06fed9e64e2a7bffcc360192a31897\" rel=\"nofollow\">70b4a9b</a>: Added function to set temperature variation for heat sources (instead of using a hard coded value).  If not set, uniform temperature is assumed for the entire body of the heat source.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3e114056bf52", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/3e114056bf52.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/3e114056bf52"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "thermal"}}, "comment_count": 43, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-11-14T15:38:34.086031+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}}, {"role": "REVIEWER", "participated_on": "2019-11-04T20:58:25.112244+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2019-11-15T19:21:29.663894+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2019-11-13T00:58:04.542108+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2019-11-14T02:38:32.421407+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}, {"role": "PARTICIPANT", "participated_on": "2019-11-15T19:41:49.875306+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-11-15T19:41:49.875306+00:00", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "merge_commit": {"hash": "a61ab3250c98", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/a61ab3250c98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/a61ab3250c98"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}