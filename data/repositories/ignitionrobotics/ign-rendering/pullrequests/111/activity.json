{"pagelen": 50, "values": [{"update": {"description": "Added support for roughness, metalness, and environment maps in materials. You can also set roughness and metalness values directly without.\r\n\r\nUpdated ogre2\\_demo to include a pump mesh that uses PBR textures and a box that has an environment map. Also tweaked the red sphere to give a glossy metallic appearance. Note: you\u2019ll need the collada fixes in [this ign-common PR](#!/ignitionrobotics/ign-common/pull-requests/152/colladaloader-fixes/diff) to load the pump mesh.\r\n\r\n![](https://bitbucket.org/repo/zq9ear/images/3244575173-ogre2_demo_pbr.png)", "title": "Ogre2: Add support for PBR maps", "destination": {"commit": {"hash": "47f2828908d0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/47f2828908d0.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/47f2828908d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "gz11"}}, "reason": "", "source": {"commit": {"hash": "f6d952769ac0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f6d952769ac0.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f6d952769ac0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "ogre2_pbs_maps"}}, "state": "MERGED", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2018-11-05T21:29:21.072186+00:00"}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"approval": {"date": "2018-11-05T20:31:08.457388+00:00", "pullrequest": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}, "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111/comments/81398404.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111/_/diff#comment-81398404"}}, "parent": {"id": 81395903, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111/comments/81395903.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111/_/diff#comment-81395903"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}, "content": {"raw": "Yup, that fixed it. It looks great! Just in time for Christmas. ", "markup": "markdown", "html": "<p>Yup, that fixed it. It looks great! Just in time for Christmas. </p>", "type": "rendered"}, "created_on": "2018-11-05T20:30:30.280553+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-11-05T20:30:30.289063+00:00", "type": "pullrequest_comment", "id": 81398404}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111/comments/81395903.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111/_/diff#comment-81395903"}}, "parent": {"id": 81395645, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111/comments/81395645.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111/_/diff#comment-81395645"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}, "content": {"raw": "do you have the latest ign-common gz11 branch? It needs the [fix in this PR](#!/ignitionrobotics/ign-common/pull-requests/152/colladaloader-fixes/diff)", "markup": "markdown", "html": "<p>do you have the latest ign-common gz11 branch? It needs the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-common/pull-requests/152/colladaloader-fixes/diff\" rel=\"nofollow\">fix in this PR</a></p>", "type": "rendered"}, "created_on": "2018-11-05T20:04:22.379391+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-11-05T20:04:22.388388+00:00", "type": "pullrequest_comment", "id": 81395903}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111/comments/81395645.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111/_/diff#comment-81395645"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}, "content": {"raw": "Hi Ian, I tried t run the ogre2\\_demo, I have the following SIGSEGV.  \nAm I missing something?  \n\n    Thread 1 \"ogre2_demo\" received signal SIGSEGV, Segmentation fault.\n    __GI_____strtod_l_internal (\n        nptr=0x30303030302e300a <error: Cannot access memory at address 0x30303030302e300a>, endptr=0x7fffffffd8e0, group=<optimized out>, \n        loc=0x7ffff667d560 <_nl_global_locale>) at strtod_l.c:609\n    609\tstrtod_l.c: No such file or directory.\n    (gdb) bt\n    #0  __GI_____strtod_l_internal (\n        nptr=0x30303030302e300a <error: Cannot access memory at address 0x30303030302e300a>, endptr=0x7fffffffd8e0, group=<optimized out>, \n        loc=0x7ffff667d560 <_nl_global_locale>) at strtod_l.c:609\n    #1  0x00007ffff7472084 in double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #2  0x00007ffff74680c1 in ignition::common::ColladaLoaderPrivate::LoadTexCoords(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<ignition::math::v6::Vector2<double>, std::allocator<ignition::math::v6::Vector2<double> > >&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #3  0x00007ffff746ee0d in ignition::common::ColladaLoaderPrivate::LoadTriangles(tinyxml2::XMLElement*, ignition::math::v6::Matrix4<double> const&, ignition::common::Mesh*) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #4  0x00007ffff746f331 in ignition::common::ColladaLoaderPrivate::LoadGeometry(tinyxml2::XMLElement*, ignition::math::v6::Matrix4<double> const&, ignition::common::Mesh*) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #5  0x00007ffff7470fbf in ignition::common::ColladaLoaderPrivate::LoadNode(tinyxml2::XMLElement*, ignition::common::Mesh*, ignition::math::v6::Matrix4<double> const&) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #6  0x00007ffff7471541 in ignition::common::ColladaLoaderPrivate::LoadScene(igni-------Ty----------------Type <return> to continue, or q <return> to quit---q\n    Quit\n    (gdb) bt\n    #0  __GI_____strtod_l_internal (\n        nptr=0x30303030302e300a <error: Cannot access memory at address 0x30303030302e300a>, \n        endptr=0x7fffffffd8e0, group=<optimized out>, loc=0x7ffff667d560 <_nl_global_locale>)\n        at strtod_l.c:609\n    #1  0x00007ffff7472084 in double __gnu_cxx::__stoa<double, double, char>(double (*)(char const*, char**), char const*, char const*, unsigned long*) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #2  0x00007ffff74680c1 in ignition::common::ColladaLoaderPrivate::LoadTexCoords(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<ignition::math::v6::Vector2<double>, std::allocator<ignition::math::v6::Vector2<double> > >&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #3  0x00007ffff746ee0d in ignition::common::ColladaLoaderPrivate::LoadTriangles(tinyxml2::XMLElement*, ignition::math::v6::Matrix4<double> const&, ignition::common::Mesh*) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #4  0x00007ffff746f331 in ignition::common::ColladaLoaderPrivate::LoadGeometry(tinyxml2::XMLElement*, ignition::math::v6::Matrix4<double> const&, ignition::common::Mesh*) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #5  0x00007ffff7470fbf in ignition::common::ColladaLoaderPrivate::LoadNode(tinyxml2::XMLElement*, ignition::common::Mesh*, ignition::math::v6::Matrix4<double> const&) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #6  0x00007ffff7471541 in ignition::common::ColladaLoaderPrivate::LoadScene(ignition::common::Mesh*)\n        () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #7  0x00007ffff7471a99 in ignition::common::ColladaLoader::Load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    #8  0x00007ffff747f9e1 in ignition::common::MeshManager::Load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()\n       from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n    ---Type <return> to continue, or q <return> to quit---\n    #9  0x000055555555b6db in buildScene(std::shared_ptr<ignition::rendering::v1::Scene>) ()\n    #10 0x000055555555dfa4 in createCamera(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()\n    #11 0x000055555555e26d in main ()", "markup": "markdown", "html": "<p>Hi Ian, I tried t run the ogre2_demo, I have the following SIGSEGV.<br />\nAm I missing something?  </p>\n<div class=\"codehilite\"><pre><span></span>Thread 1 &quot;ogre2_demo&quot; received signal SIGSEGV, Segmentation fault.\n__GI_____strtod_l_internal (\n    nptr=0x30303030302e300a &lt;error: Cannot access memory at address 0x30303030302e300a&gt;, endptr=0x7fffffffd8e0, group=&lt;optimized out&gt;, \n    loc=0x7ffff667d560 &lt;_nl_global_locale&gt;) at strtod_l.c:609\n609 strtod_l.c: No such file or directory.\n(gdb) bt\n#0  __GI_____strtod_l_internal (\n    nptr=0x30303030302e300a &lt;error: Cannot access memory at address 0x30303030302e300a&gt;, endptr=0x7fffffffd8e0, group=&lt;optimized out&gt;, \n    loc=0x7ffff667d560 &lt;_nl_global_locale&gt;) at strtod_l.c:609\n#1  0x00007ffff7472084 in double __gnu_cxx::__stoa&lt;double, double, char&gt;(double (*)(char const*, char**), char const*, char const*, unsigned long*) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#2  0x00007ffff74680c1 in ignition::common::ColladaLoaderPrivate::LoadTexCoords(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;ignition::math::v6::Vector2&lt;double&gt;, std::allocator&lt;ignition::math::v6::Vector2&lt;double&gt; &gt; &gt;&amp;, std::map&lt;unsigned int, unsigned int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;&amp;) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#3  0x00007ffff746ee0d in ignition::common::ColladaLoaderPrivate::LoadTriangles(tinyxml2::XMLElement*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;, ignition::common::Mesh*) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#4  0x00007ffff746f331 in ignition::common::ColladaLoaderPrivate::LoadGeometry(tinyxml2::XMLElement*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;, ignition::common::Mesh*) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#5  0x00007ffff7470fbf in ignition::common::ColladaLoaderPrivate::LoadNode(tinyxml2::XMLElement*, ignition::common::Mesh*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;) () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#6  0x00007ffff7471541 in ignition::common::ColladaLoaderPrivate::LoadScene(igni-------Ty----------------Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---q\nQuit\n(gdb) bt\n#0  __GI_____strtod_l_internal (\n    nptr=0x30303030302e300a &lt;error: Cannot access memory at address 0x30303030302e300a&gt;, \n    endptr=0x7fffffffd8e0, group=&lt;optimized out&gt;, loc=0x7ffff667d560 &lt;_nl_global_locale&gt;)\n    at strtod_l.c:609\n#1  0x00007ffff7472084 in double __gnu_cxx::__stoa&lt;double, double, char&gt;(double (*)(char const*, char**), char const*, char const*, unsigned long*) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#2  0x00007ffff74680c1 in ignition::common::ColladaLoaderPrivate::LoadTexCoords(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;ignition::math::v6::Vector2&lt;double&gt;, std::allocator&lt;ignition::math::v6::Vector2&lt;double&gt; &gt; &gt;&amp;, std::map&lt;unsigned int, unsigned int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#3  0x00007ffff746ee0d in ignition::common::ColladaLoaderPrivate::LoadTriangles(tinyxml2::XMLElement*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;, ignition::common::Mesh*) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#4  0x00007ffff746f331 in ignition::common::ColladaLoaderPrivate::LoadGeometry(tinyxml2::XMLElement*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;, ignition::common::Mesh*) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#5  0x00007ffff7470fbf in ignition::common::ColladaLoaderPrivate::LoadNode(tinyxml2::XMLElement*, ignition::common::Mesh*, ignition::math::v6::Matrix4&lt;double&gt; const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#6  0x00007ffff7471541 in ignition::common::ColladaLoaderPrivate::LoadScene(ignition::common::Mesh*)\n    () from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#7  0x00007ffff7471a99 in ignition::common::ColladaLoader::Load(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n#8  0x00007ffff747f9e1 in ignition::common::MeshManager::Load(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) ()\n   from /usr/lib/x86_64-linux-gnu/libignition-common3-graphics.so.3\n---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---\n#9  0x000055555555b6db in buildScene(std::shared_ptr&lt;ignition::rendering::v1::Scene&gt;) ()\n#10 0x000055555555dfa4 in createCamera(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) ()\n#11 0x000055555555e26d in main ()\n</pre></div>", "type": "rendered"}, "created_on": "2018-11-05T20:01:35.416706+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-11-05T20:01:35.424940+00:00", "type": "pullrequest_comment", "id": 81395645}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"update": {"description": "Added support for roughness, metalness, and environment maps in materials. You can also set roughness and metalness values directly without.\r\n\r\nUpdated ogre2\\_demo to include a pump mesh that uses PBR textures and a box that has an environment map. Also tweaked the red sphere to give a glossy metallic appearance. Note: you\u2019ll need the collada fixes in [this ign-common PR](#!/ignitionrobotics/ign-common/pull-requests/152/colladaloader-fixes/diff) to load the pump mesh.\r\n\r\n![](https://bitbucket.org/repo/zq9ear/images/3244575173-ogre2_demo_pbr.png)", "title": "Ogre2: Add support for PBR maps", "destination": {"commit": {"hash": "f3e624903bca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f3e624903bca.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f3e624903bca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "gz11"}}, "reason": "", "source": {"commit": {"hash": "f6d952769ac0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f6d952769ac0.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f6d952769ac0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "ogre2_pbs_maps"}}, "state": "OPEN", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2018-11-02T23:40:54.312976+00:00"}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}, {"update": {"description": "Added support for roughness, metalness, and environment maps in materials. You can also set roughness and metalness values directly without.\r\n\r\nUpdated ogre2\\_demo to include a pump mesh that uses PBR textures and a box that has an environment map. Also tweaked the red sphere to give a glossy metallic appearance. Note: you\u2019ll need the collada fixes in [this ign-common PR](#!/ignitionrobotics/ign-common/pull-requests/152/colladaloader-fixes/diff) to load the pump mesh.\r\n\r\n![](https://bitbucket.org/repo/zq9ear/images/3244575173-ogre2_demo_pbr.png)", "title": "Ogre2: Add support for PBR maps", "destination": {"commit": {"hash": "f3e624903bca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f3e624903bca.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f3e624903bca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "gz11"}}, "reason": "", "source": {"commit": {"hash": "f6d952769ac0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f6d952769ac0.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f6d952769ac0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "ogre2_pbs_maps"}}, "state": "OPEN", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2018-11-02T23:40:54.276394+00:00"}, "pull_request": {"type": "pullrequest", "id": 111, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/111.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/111"}}, "title": "Ogre2: Add support for PBR maps"}}]}