{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851094.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851094"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Are the vertex and fragment shaders ported over from gazebo? I see there are references to `laser_xxx_pass.frag` and `laser_xx_pass.vert` but I don\u2019t see the files", "markup": "markdown", "html": "<p>Are the vertex and fragment shaders ported over from gazebo? I see there are references to <code>laser_xxx_pass.frag</code> and <code>laser_xx_pass.vert</code> but I don\u2019t see the files</p>", "type": "rendered"}, "created_on": "2018-10-11T21:29:24.644263+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-11T21:29:24.652722+00:00", "type": "pullrequest_comment", "id": 78851094}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78977304.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78977304"}}, "parent": {"id": 78851094, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851094.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851094"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "I am really sorry, I never added them to the repository, but I was using them in my computer.", "markup": "markdown", "html": "<p>I am really sorry, I never added them to the repository, but I was using them in my computer.</p>", "type": "rendered"}, "created_on": "2018-10-12T21:05:29.378717+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-12T21:05:29.393457+00:00", "type": "pullrequest_comment", "id": 78977304}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851430.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851430"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "For debugging whether or not shaders are loaded / working, an easy way is to modify `laser_2nd_pass.frag` and set `gl_FragColor` so something like `vec4(12, 34, 56, 1)` and verify that these are the values you get when blit to `this->dataPtr->laserBuffer` [here](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT519)", "markup": "markdown", "html": "<p>For debugging whether or not shaders are loaded / working, an easy way is to modify <code>laser_2nd_pass.frag</code> and set <code>gl_FragColor</code> so something like <code>vec4(12, 34, 56, 1)</code> and verify that these are the values you get when blit to <code>this-&gt;dataPtr-&gt;laserBuffer</code> <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT519\" rel=\"nofollow\">here</a></p>", "type": "rendered"}, "created_on": "2018-10-11T21:33:36.686583+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-11T21:33:36.693083+00:00", "type": "pullrequest_comment", "id": 78851430}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851492.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851492"}}, "parent": {"id": 78851430, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851430.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851430"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "`~/.igintion/rendering/ogre.log` may also give some warnings/errors if things don\u2019t work well", "markup": "markdown", "html": "<p><code>~/.igintion/rendering/ogre.log</code> may also give some warnings/errors if things don\u2019t work well</p>", "type": "rendered"}, "created_on": "2018-10-11T21:34:34.111415+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-11T21:34:34.122131+00:00", "type": "pullrequest_comment", "id": 78851492}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78977462.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78977462"}}, "parent": {"id": 78851492, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851492.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851492"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Looking into this. Any ideas why the [notifyRenderSingleObject](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT802) is not being called?", "markup": "markdown", "html": "<p>Looking into this. Any ideas why the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT802\" rel=\"nofollow\">notifyRenderSingleObject</a> is not being called?</p>", "type": "rendered"}, "created_on": "2018-10-12T21:08:45.055067+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-12T21:08:45.063044+00:00", "type": "pullrequest_comment", "id": 78977462}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79304904.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79304904"}}, "parent": {"id": 78977462, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78977462.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78977462"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Not exactly, I'm also looking into it. I think the first pass material maynot be setup properly. I tried printing out `_material->isLoaded` and it's returning `0`. Debugging into ogre also shows that when the render target\u2019s update is called, no render pass is actually being run.", "markup": "markdown", "html": "<p>Not exactly, I'm also looking into it. I think the first pass material maynot be setup properly. I tried printing out <code>_material-&gt;isLoaded</code> and it's returning <code>0</code>. Debugging into ogre also shows that when the render target\u2019s update is called, no render pass is actually being run.</p>", "type": "rendered"}, "created_on": "2018-10-16T22:14:17.093081+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-16T22:14:17.101418+00:00", "type": "pullrequest_comment", "id": 79304904}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79450829.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79450829"}}, "parent": {"id": 79304904, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79304904.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79304904"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "If I comment [this line](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT477) [notifyRenderSingleObject](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT802) is called but it is always zero, including the buffer from the second pass. When it is called the material is loaded., but I still thing that something is missing. I set the fragment parameters [here](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT366).  But I clearly leaved something out when I moved the first pass material. I am looking that.", "markup": "markdown", "html": "<p>If I comment <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT477\" rel=\"nofollow\">this line</a> <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT802\" rel=\"nofollow\">notifyRenderSingleObject</a> is called but it is always zero, including the buffer from the second pass. When it is called the material is loaded., but I still thing that something is missing. I set the fragment parameters <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/OgreGpuRays.ccT366\" rel=\"nofollow\">here</a>.  But I clearly leaved something out when I moved the first pass material. I am looking that.</p>", "type": "rendered"}, "created_on": "2018-10-17T20:19:54.394378+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-17T20:19:54.405073+00:00", "type": "pullrequest_comment", "id": 79450829}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79452091.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79452091"}}, "parent": {"id": 79450829, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79450829.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79450829"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "From ogre.log:\n\n    17:09:11: Added resource location '/usr/local/share/ignition/rendering-1/ogre/media/rtshaderlib150' of type 'FileSystem' to resource group 'General'\n    17:09:11: Creating resource group ShaderGeneratorResourceGroup\n    17:09:11: Added resource location '/home/docker/.ignition/rendering/ogre-rtshader/nobody-rtshaderlibcache/' of type 'FileSystem' to resource group 'ShaderGeneratorResourceGroup'\n    17:09:11: Added resource location '/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan1st_vertex_shader.glsl' of type 'FileSystem' to resource group 'General'\n    17:09:11: Added resource location '/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan1st_fragment_shader.glsl' of type 'FileSystem' to resource group 'General'\n    17:09:11: Added resource location '/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan2nd_vertex_shader.glsl' of type 'FileSystem' to resource group 'General'\n    17:09:11: Added resource location '/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan2nd_fragment_shader.glsl' of type 'FileSystem' to resource group 'General'\n    17:09:11: Texture: spot_shadow_fade.png: Loading 1 faces(PF_R8G8B8,128x128x1) with 5 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,128x128x1.\n    17:09:12: OGRE EXCEPTION(5:ItemIdentityException): Parameter at the given index was not found. in Renderable::getCustomParameter at /usr/include/OGRE/OgreRenderable.h (line 279)\n    17:09:12: OGRE EXCEPTION(5:ItemIdentityException): Parameter at the given index was not found. in Renderable::getCustomParameter at /usr/include/OGRE/OgreRenderable.h (line 279)", "markup": "markdown", "html": "<p>From ogre.log:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/usr/local/share/ignition/rendering-1/ogre/media/rtshaderlib150&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;General&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Creating</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"n\">ShaderGeneratorResourceGroup</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/home/docker/.ignition/rendering/ogre-rtshader/nobody-rtshaderlibcache/&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;ShaderGeneratorResourceGroup&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan1st_vertex_shader.glsl&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;General&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan1st_fragment_shader.glsl&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;General&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan2nd_vertex_shader.glsl&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;General&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Added</span> <span class=\"n\">resource</span> <span class=\"n\">location</span> <span class=\"s1\">&#39;/usr/local/share/ignition/rendering-1/ogre/media/materials/programs/laser_scan2nd_fragment_shader.glsl&#39;</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"s1\">&#39;FileSystem&#39;</span> <span class=\"n\">to</span> <span class=\"n\">resource</span> <span class=\"n\">group</span> <span class=\"s1\">&#39;General&#39;</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">:</span> <span class=\"n\">Texture</span><span class=\"o\">:</span> <span class=\"n\">spot_shadow_fade</span><span class=\"o\">.</span><span class=\"na\">png</span><span class=\"o\">:</span> <span class=\"n\">Loading</span> <span class=\"mi\">1</span> <span class=\"n\">faces</span><span class=\"o\">(</span><span class=\"n\">PF_R8G8B8</span><span class=\"o\">,</span><span class=\"mi\">128</span><span class=\"n\">x128x1</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"mi\">5</span> <span class=\"n\">hardware</span> <span class=\"n\">generated</span> <span class=\"n\">mipmaps</span> <span class=\"n\">from</span> <span class=\"n\">Image</span><span class=\"o\">.</span> <span class=\"n\">Internal</span> <span class=\"n\">format</span> <span class=\"k\">is</span> <span class=\"n\">PF_X8R8G8B8</span><span class=\"o\">,</span><span class=\"mi\">128</span><span class=\"n\">x128x1</span><span class=\"o\">.</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span> <span class=\"n\">OGRE</span> <span class=\"n\">EXCEPTION</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">:</span><span class=\"n\">ItemIdentityException</span><span class=\"o\">):</span> <span class=\"n\">Parameter</span> <span class=\"n\">at</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">index</span> <span class=\"n\">was</span> <span class=\"n\">not</span> <span class=\"n\">found</span><span class=\"o\">.</span> <span class=\"k\">in</span> <span class=\"n\">Renderable</span><span class=\"o\">::</span><span class=\"n\">getCustomParameter</span> <span class=\"n\">at</span> <span class=\"sr\">/usr/include/OGRE/</span><span class=\"n\">OgreRenderable</span><span class=\"o\">.</span><span class=\"na\">h</span> <span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"mi\">279</span><span class=\"o\">)</span>\n<span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">09</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span> <span class=\"n\">OGRE</span> <span class=\"n\">EXCEPTION</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">:</span><span class=\"n\">ItemIdentityException</span><span class=\"o\">):</span> <span class=\"n\">Parameter</span> <span class=\"n\">at</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">index</span> <span class=\"n\">was</span> <span class=\"n\">not</span> <span class=\"n\">found</span><span class=\"o\">.</span> <span class=\"k\">in</span> <span class=\"n\">Renderable</span><span class=\"o\">::</span><span class=\"n\">getCustomParameter</span> <span class=\"n\">at</span> <span class=\"sr\">/usr/include/OGRE/</span><span class=\"n\">OgreRenderable</span><span class=\"o\">.</span><span class=\"na\">h</span> <span class=\"o\">(</span><span class=\"n\">line</span> <span class=\"mi\">279</span><span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-10-17T20:32:20.552649+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-17T20:32:47.222826+00:00", "type": "pullrequest_comment", "id": 79452091}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/79396947.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-79396947"}}, "parent": {"id": 78851430, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/78851430.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-78851430"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "I checked this and I have the first number divided by two. But it is running the second pass.", "markup": "markdown", "html": "<p>I checked this and I have the first number divided by two. But it is running the second pass.</p>", "type": "rendered"}, "created_on": "2018-10-17T13:40:17.152000+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-17T13:40:17.200376+00:00", "type": "pullrequest_comment", "id": 79396947}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80239174.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80239174"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "I have a version that I think is working in the `gpu_rays_ian2` branch. I\u2019m going to tidy it up a little more and pass it back to you. \n\nSome thoughts while going through the code.\n\n* The GpuRays public API may need to be trimmed down a bit. The old Gazebo GpuLaser class exposes many public functions that are not really useful other than for the GpuRaySensor.  \n* BaseGpuRays inherits from BaseCamera but there are a few similar variables and functions, e.g. BaseCamera has a `hfov` var of type `math::Radian` but BaseGpuRays has the same variable of type double\n* Laser and GpuRays are used interchangeable. Maybe it\u2019s good to be consistent and keep to the same term\n\n", "markup": "markdown", "html": "<p>I have a version that I think is working in the <code>gpu_rays_ian2</code> branch. I\u2019m going to tidy it up a little more and pass it back to you. </p>\n<p>Some thoughts while going through the code.</p>\n<ul>\n<li>The GpuRays public API may need to be trimmed down a bit. The old Gazebo GpuLaser class exposes many public functions that are not really useful other than for the GpuRaySensor.  </li>\n<li>BaseGpuRays inherits from BaseCamera but there are a few similar variables and functions, e.g. BaseCamera has a <code>hfov</code> var of type <code>math::Radian</code> but BaseGpuRays has the same variable of type double</li>\n<li>Laser and GpuRays are used interchangeable. Maybe it\u2019s good to be consistent and keep to the same term</li>\n</ul>", "type": "rendered"}, "created_on": "2018-10-25T01:14:00.171512+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-25T01:14:00.180934+00:00", "type": "pullrequest_comment", "id": 80239174}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80369216.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80369216"}}, "parent": {"id": 80239174, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80239174.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80239174"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Let me know when you finish tidying up your changes and I will continue with the cleaning and tidying it up. Thanks a lot for your help Ian. It looks like  using materials fixed it.   \n\nI totally agree that we can trim down the API. I  included into GpuRays all the calculations for the cameras configuration based on the HFOV and VFOV. Doing so those methods are not even necessary for GpuRaySensor.   \n", "markup": "markdown", "html": "<p>Let me know when you finish tidying up your changes and I will continue with the cleaning and tidying it up. Thanks a lot for your help Ian. It looks like  using materials fixed it.   </p>\n<p>I totally agree that we can trim down the API. I  included into GpuRays all the calculations for the cameras configuration based on the HFOV and VFOV. Doing so those methods are not even necessary for GpuRaySensor.   </p>", "type": "rendered"}, "created_on": "2018-10-25T20:14:32.966296+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-25T20:14:32.979182+00:00", "type": "pullrequest_comment", "id": 80369216}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80374337.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80374337"}}, "parent": {"id": 80369216, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80369216.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80369216"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "yeah using materials helped. It took a while but I found that the reason the 1st pass was not run is because that `this->dataPtr->ogreCamera` is not set up properly. Since we\u2019re not creating this camera using the OgreCamera class, I just had to port some of the code to make sure after we create the camera with its rotation, clip dist, FOVs, aspect ratio set to the correct values.", "markup": "markdown", "html": "<p>yeah using materials helped. It took a while but I found that the reason the 1st pass was not run is because that <code>this-&gt;dataPtr-&gt;ogreCamera</code> is not set up properly. Since we\u2019re not creating this camera using the OgreCamera class, I just had to port some of the code to make sure after we create the camera with its rotation, clip dist, FOVs, aspect ratio set to the correct values.</p>", "type": "rendered"}, "created_on": "2018-10-25T21:06:59.083625+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-25T21:06:59.093609+00:00", "type": "pullrequest_comment", "id": 80374337}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80381526.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80381526"}}, "parent": {"id": 80369216, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80369216.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80369216"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "ok I have tidied up the code - it's still in the same branch, `gpu_rays_ian2`. Can you take it from here? We probably also want to port more gpu\\_laser integration tests from gazebo.\n\nI have not addressed the 3 points I mentioned in the previous point, I\u2019ll leave that to you. \n\n* Public API, I think the APIs you had in the integration test gives a good idea of what users may expect from the GpuRays class. We could hide many of the others inside OgreGpuRays.\n* The code check script should help catch some of these issues\n* Optional. Don\u2019t have strong opinion on this.\n\n", "markup": "markdown", "html": "<p>ok I have tidied up the code - it's still in the same branch, <code>gpu_rays_ian2</code>. Can you take it from here? We probably also want to port more gpu_laser integration tests from gazebo.</p>\n<p>I have not addressed the 3 points I mentioned in the previous point, I\u2019ll leave that to you. </p>\n<ul>\n<li>Public API, I think the APIs you had in the integration test gives a good idea of what users may expect from the GpuRays class. We could hide many of the others inside OgreGpuRays.</li>\n<li>The code check script should help catch some of these issues</li>\n<li>Optional. Don\u2019t have strong opinion on this.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-10-25T22:46:19.110661+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-10-25T22:46:19.121761+00:00", "type": "pullrequest_comment", "id": 80381526}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80469826.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80469826"}}, "parent": {"id": 80381526, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/80381526.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-80381526"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Perfect, I will continue from here. Thank you so much.", "markup": "markdown", "html": "<p>Perfect, I will continue from here. Thank you so much.</p>", "type": "rendered"}, "created_on": "2018-10-26T14:44:56.839595+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-10-26T14:44:56.850275+00:00", "type": "pullrequest_comment", "id": 80469826}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81404696.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81404696"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Besides issue [#33](#!/ignitionrobotics/ign-rendering/issues/33/clean-properly-after-each-test) this is ready for review. Something nice to have that can be added are:\n\n* Add channels as a property, with its getter and setter.\n* Add clamping options with a method `void SetClamping(bool value)` and  a getter`bool Clamping()`. This way is possible to configure the [glsl program to clamp the value to the max value or leave it to infinity](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/media/materials/programs/gpu_rays_1st_pass_fs.glslT14). The same can be done for minimal value. This is a nice feature so it is not necessary to iterate over the values in order to do it as it is done so far.\n\nThese two nice to have are really easy to add, I am not doing it because they would be new features and you might have some opinions about them.", "markup": "markdown", "html": "<p>Besides issue <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/issues/33/clean-properly-after-each-test\" rel=\"nofollow\">#33</a> this is ready for review. Something nice to have that can be added are:</p>\n<ul>\n<li>Add channels as a property, with its getter and setter.</li>\n<li>Add clamping options with a method <code>void SetClamping(bool value)</code> and  a getter<code>bool Clamping()</code>. This way is possible to configure the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#Logre/src/media/materials/programs/gpu_rays_1st_pass_fs.glslT14\" rel=\"nofollow\">glsl program to clamp the value to the max value or leave it to infinity</a>. The same can be done for minimal value. This is a nice feature so it is not necessary to iterate over the values in order to do it as it is done so far.</li>\n</ul>\n<p>These two nice to have are really easy to add, I am not doing it because they would be new features and you might have some opinions about them.</p>", "type": "rendered"}, "created_on": "2018-11-05T21:37:16.127235+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-11-05T21:37:16.134830+00:00", "type": "pullrequest_comment", "id": 81404696}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81568683.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81568683"}}, "parent": {"id": 81404696, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81404696.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81404696"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Great thanks. Regarding channels, I\u2019m thinking of abstracting more of the implementation details so the users don\u2019t need to know about the internal format of how data are packed. The current way we\u2019re returning the data through an rgb image is not very intuitive from the users perspective, especially when r = depth, g = retro, and b = n/a.  We should probably just return an array of depth values. We can address this in a separate PR.\n\nWe used to clamp the readings but was advised about this [REP](http://www.ros.org/reps/rep-0117.html) so we changed to use `inf` for consistency. But I agree it\u2019s still a nice configuration and we can add it in case anyone wants to use it\n\n I made some changes in the [gpu\\_rays\\_ian](#!/ignitionrobotics/ign-rendering/branch/gpu_rays_ian?dest=gpu_rays#diff) branch.  The main changes are:\n\n* Clean up scene after tests  and fix running test one after another. The tests now pass.  I had to make one tweak to the `EXPECT_DOUBLE_EQ` checks in RaysUnitBox test though.\n* Moved more functions from BaseGpuRays to OgreGpuRays. \n* Doxygen changes\n\nCould you take a look at these changes and merge if they look ok to you? thanks.", "markup": "markdown", "html": "<p>Great thanks. Regarding channels, I\u2019m thinking of abstracting more of the implementation details so the users don\u2019t need to know about the internal format of how data are packed. The current way we\u2019re returning the data through an rgb image is not very intuitive from the users perspective, especially when r = depth, g = retro, and b = n/a.  We should probably just return an array of depth values. We can address this in a separate PR.</p>\n<p>We used to clamp the readings but was advised about this <a data-is-external-link=\"true\" href=\"http://www.ros.org/reps/rep-0117.html\" rel=\"nofollow\">REP</a> so we changed to use <code>inf</code> for consistency. But I agree it\u2019s still a nice configuration and we can add it in case anyone wants to use it</p>\n<p>I made some changes in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/branch/gpu_rays_ian?dest=gpu_rays#diff\" rel=\"nofollow\">gpu_rays_ian</a> branch.  The main changes are:</p>\n<ul>\n<li>Clean up scene after tests  and fix running test one after another. The tests now pass.  I had to make one tweak to the <code>EXPECT_DOUBLE_EQ</code> checks in RaysUnitBox test though.</li>\n<li>Moved more functions from BaseGpuRays to OgreGpuRays. </li>\n<li>Doxygen changes</li>\n</ul>\n<p>Could you take a look at these changes and merge if they look ok to you? thanks.</p>", "type": "rendered"}, "created_on": "2018-11-07T01:39:06.276725+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-11-07T01:39:06.287199+00:00", "type": "pullrequest_comment", "id": 81568683}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81710372.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81710372"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Thanks Ian and Steven for the changes and fixes. I added an optional clamping option, which is disabled by default. If everything looks ok I think we can merge it.", "markup": "markdown", "html": "<p>Thanks Ian and Steven for the changes and fixes. I added an optional clamping option, which is disabled by default. If everything looks ok I think we can merge it.</p>", "type": "rendered"}, "created_on": "2018-11-08T00:07:46.904683+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2018-11-08T00:07:46.914183+00:00", "type": "pullrequest_comment", "id": 81710372}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81863123.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81863123"}}, "parent": {"id": 81710372, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81710372.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81710372"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "looks good. I cleaned up some doxygen comments, and made a couple of changes to APIs to be consistent with other classes in ign-rendering. [3b87702](#!/ignitionrobotics/ign-rendering/commits/3b87702232123d6c4898f40079f6247162199a8b)\n\napproving!", "markup": "markdown", "html": "<p>looks good. I cleaned up some doxygen comments, and made a couple of changes to APIs to be consistent with other classes in ign-rendering. <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/commits/3b87702232123d6c4898f40079f6247162199a8b\" rel=\"nofollow\">3b87702</a></p>\n<p>approving!</p>", "type": "rendered"}, "created_on": "2018-11-09T01:12:13.550048+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-11-09T01:12:13.558346+00:00", "type": "pullrequest_comment", "id": 81863123}], "page": 1, "size": 18}