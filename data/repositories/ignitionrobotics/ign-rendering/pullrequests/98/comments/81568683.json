{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81568683.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81568683"}}, "parent": {"id": 81404696, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98/comments/81404696.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98/_/diff#comment-81404696"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 98, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/98.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/98"}}, "title": "Add gpu rays class for lidar simulation"}, "content": {"raw": "Great thanks. Regarding channels, I\u2019m thinking of abstracting more of the implementation details so the users don\u2019t need to know about the internal format of how data are packed. The current way we\u2019re returning the data through an rgb image is not very intuitive from the users perspective, especially when r = depth, g = retro, and b = n/a.  We should probably just return an array of depth values. We can address this in a separate PR.\n\nWe used to clamp the readings but was advised about this [REP](http://www.ros.org/reps/rep-0117.html) so we changed to use `inf` for consistency. But I agree it\u2019s still a nice configuration and we can add it in case anyone wants to use it\n\n I made some changes in the [gpu\\_rays\\_ian](#!/ignitionrobotics/ign-rendering/branch/gpu_rays_ian?dest=gpu_rays#diff) branch.  The main changes are:\n\n* Clean up scene after tests  and fix running test one after another. The tests now pass.  I had to make one tweak to the `EXPECT_DOUBLE_EQ` checks in RaysUnitBox test though.\n* Moved more functions from BaseGpuRays to OgreGpuRays. \n* Doxygen changes\n\nCould you take a look at these changes and merge if they look ok to you? thanks.", "markup": "markdown", "html": "<p>Great thanks. Regarding channels, I\u2019m thinking of abstracting more of the implementation details so the users don\u2019t need to know about the internal format of how data are packed. The current way we\u2019re returning the data through an rgb image is not very intuitive from the users perspective, especially when r = depth, g = retro, and b = n/a.  We should probably just return an array of depth values. We can address this in a separate PR.</p>\n<p>We used to clamp the readings but was advised about this <a data-is-external-link=\"true\" href=\"http://www.ros.org/reps/rep-0117.html\" rel=\"nofollow\">REP</a> so we changed to use <code>inf</code> for consistency. But I agree it\u2019s still a nice configuration and we can add it in case anyone wants to use it</p>\n<p>I made some changes in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/branch/gpu_rays_ian?dest=gpu_rays#diff\" rel=\"nofollow\">gpu_rays_ian</a> branch.  The main changes are:</p>\n<ul>\n<li>Clean up scene after tests  and fix running test one after another. The tests now pass.  I had to make one tweak to the <code>EXPECT_DOUBLE_EQ</code> checks in RaysUnitBox test though.</li>\n<li>Moved more functions from BaseGpuRays to OgreGpuRays. </li>\n<li>Doxygen changes</li>\n</ul>\n<p>Could you take a look at these changes and merge if they look ok to you? thanks.</p>", "type": "rendered"}, "created_on": "2018-11-07T01:39:06.276725+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-11-07T01:39:06.287199+00:00", "type": "pullrequest_comment", "id": 81568683}