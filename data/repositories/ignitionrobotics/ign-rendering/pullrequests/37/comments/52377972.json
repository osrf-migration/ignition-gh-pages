{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/37/comments/52377972.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diff/ignitionrobotics/ign-rendering:c02f8bcaea6a..f70b3f5b73ba?path=examples%2Fcustom_shaders%2Fcustom_shaders.cc"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/37/_/diff#comment-52377972"}}, "parent": {"id": 52318183, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/37/comments/52318183.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/37/_/diff#comment-52318183"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 37, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/37.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/37"}}, "title": "Custom shaders on all objects seen by a camera"}, "content": {"raw": "Ah now I understand. Returning a reference means engines that don't support shader params need to do something other than return a nullptr. Which option fits best with the API's already in ign-rendering?\n\n1. `BaseMaterial::FragmentShaderParams()` becomes pure virutual returning `ShaderParams &`. `OptixMaterial::FragmentShaderParams()` returns a valid reference to params but does nothing with them.\n2. `FragmentShaderParams()` returns a shared_ptr, but `ShaderParams` gets an alternative to `operator=()` so users write `material->FragmentShaderParams()->Set(\"maxRange\", 10.0f);`\n3. `bool FragmentShaderParams(ShaderParams &&_params)` gets an output variable and returns a bool. If the return is True then the user's variable was set.\n4. ?", "markup": "markdown", "html": "<p>Ah now I understand. Returning a reference means engines that don't support shader params need to do something other than return a nullptr. Which option fits best with the API's already in ign-rendering?</p>\n<ol>\n<li><code>BaseMaterial::FragmentShaderParams()</code> becomes pure virutual returning <code>ShaderParams &amp;</code>. <code>OptixMaterial::FragmentShaderParams()</code> returns a valid reference to params but does nothing with them.</li>\n<li><code>FragmentShaderParams()</code> returns a shared_ptr, but <code>ShaderParams</code> gets an alternative to <code>operator=()</code> so users write <code>material-&gt;FragmentShaderParams()-&gt;Set(\"maxRange\", 10.0f);</code></li>\n<li><code>bool FragmentShaderParams(ShaderParams &amp;&amp;_params)</code> gets an output variable and returns a bool. If the return is True then the user's variable was set.</li>\n<li>?</li>\n</ol>", "type": "rendered"}, "created_on": "2017-12-20T16:30:16.689169+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": null, "from": null, "outdated": true, "path": "examples/custom_shaders/custom_shaders.cc"}, "updated_on": "2017-12-20T16:30:16.691773+00:00", "type": "pullrequest_comment", "id": 52377972}