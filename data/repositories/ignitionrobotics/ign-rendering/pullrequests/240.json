{"rendered": {"reason": {"raw": "The fix increases memory footprint in models with shared textures since they get now duplicated. Needs rethinking on how to handle resource sharing among different models.", "markup": "markdown", "html": "<p>The fix increases memory footprint in models with shared textures since they get now duplicated. Needs rethinking on how to handle resource sharing among different models.</p>", "type": "rendered"}, "description": {"raw": "Before this PR, only the file name was passed to ogre2 when setting the texture for a mesh, the engine would then look for the first match for that specific filename in all the paths that it saved.  \r\nThis resulted in incorrect behavior in case there is multiple models which have textures with the same name, for example both [this asset](https://app.ignitionrobotics.org/openrobotics/fuel/models/SmallTrolley) and [this asset ](https://app.ignitionrobotics.org/openrobotics/fuel/models/HospitalPillow)have a texture called texture.png. If both are loaded, the second one will use the same texture as the first one.\r\n\r\nThis PR passes the entire file path to the Ogre resource manager instead of only the filename to remove this ambiguity. Its logic is similar to the one in the [Ogre1](#!/ignitionrobotics/ign-rendering/src/ee3bdc5fbe6ece157ae73fc03af2ce9deade2079/ogre/src/OgreMaterial.cc#lines-502) \\(where the bug doesn\u2019t happen\\).\r\n\r\nIt\u2019s not super obvious with the two assets because of the white textures so I edited the pillow\u2019s texture.png to have a big red circle, following the behavior before the PR:\r\n\r\nWhen pillow is the first object to be loaded \\(its texture is applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/845872511-image.png)\r\nAnd when the trolley is loaded first instead \\(trolley texture applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/2975769559-image.png)\r\nBy contrast, this is the behavior after the PR \\(every object has the right texture\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/47541856-image.png)\r\n\u200c", "markup": "markdown", "html": "<p>Before this PR, only the file name was passed to ogre2 when setting the texture for a mesh, the engine would then look for the first match for that specific filename in all the paths that it saved.<br />\nThis resulted in incorrect behavior in case there is multiple models which have textures with the same name, for example both <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/openrobotics/fuel/models/SmallTrolley\" rel=\"nofollow\">this asset</a> and <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/openrobotics/fuel/models/HospitalPillow\" rel=\"nofollow\">this asset </a>have a texture called texture.png. If both are loaded, the second one will use the same texture as the first one.</p>\n<p>This PR passes the entire file path to the Ogre resource manager instead of only the filename to remove this ambiguity. Its logic is similar to the one in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/ee3bdc5fbe6ece157ae73fc03af2ce9deade2079/ogre/src/OgreMaterial.cc#lines-502\" rel=\"nofollow\">Ogre1</a> (where the bug doesn\u2019t happen).</p>\n<p>It\u2019s not super obvious with the two assets because of the white textures so I edited the pillow\u2019s texture.png to have a big red circle, following the behavior before the PR:</p>\n<p>When pillow is the first object to be loaded (its texture is applied to both objects):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/845872511-image.png\" />\nAnd when the trolley is loaded first instead (trolley texture applied to both objects):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/2975769559-image.png\" />\nBy contrast, this is the behavior after the PR (every object has the right texture):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/47541856-image.png\" />\n\u200c</p>", "type": "rendered"}, "title": {"raw": "Fix texture path in ogre2", "markup": "markdown", "html": "<p>Fix texture path in ogre2</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Before this PR, only the file name was passed to ogre2 when setting the texture for a mesh, the engine would then look for the first match for that specific filename in all the paths that it saved.  \r\nThis resulted in incorrect behavior in case there is multiple models which have textures with the same name, for example both [this asset](https://app.ignitionrobotics.org/openrobotics/fuel/models/SmallTrolley) and [this asset ](https://app.ignitionrobotics.org/openrobotics/fuel/models/HospitalPillow)have a texture called texture.png. If both are loaded, the second one will use the same texture as the first one.\r\n\r\nThis PR passes the entire file path to the Ogre resource manager instead of only the filename to remove this ambiguity. Its logic is similar to the one in the [Ogre1](#!/ignitionrobotics/ign-rendering/src/ee3bdc5fbe6ece157ae73fc03af2ce9deade2079/ogre/src/OgreMaterial.cc#lines-502) \\(where the bug doesn\u2019t happen\\).\r\n\r\nIt\u2019s not super obvious with the two assets because of the white textures so I edited the pillow\u2019s texture.png to have a big red circle, following the behavior before the PR:\r\n\r\nWhen pillow is the first object to be loaded \\(its texture is applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/845872511-image.png)\r\nAnd when the trolley is loaded first instead \\(trolley texture applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/2975769559-image.png)\r\nBy contrast, this is the behavior after the PR \\(every object has the right texture\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/47541856-image.png)\r\n\u200c", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/240/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diffstat/ignitionrobotics/ign-rendering:6fb344bcacb6%0Df82294951a15?from_pullrequest_id=240"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/240/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/240.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/240/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/240/merge"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/240"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/240/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diff/ignitionrobotics/ign-rendering:6fb344bcacb6%0Df82294951a15?from_pullrequest_id=240"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/240/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/240/statuses_page=1.json"}}, "title": "Fix texture path in ogre2", "close_source_branch": false, "reviewers": [], "id": 240, "destination": {"commit": {"hash": "f82294951a15", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/f82294951a15.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/f82294951a15"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "ign-rendering3"}}, "created_on": "2020-02-26T09:04:30.270066+00:00", "summary": {"raw": "Before this PR, only the file name was passed to ogre2 when setting the texture for a mesh, the engine would then look for the first match for that specific filename in all the paths that it saved.  \r\nThis resulted in incorrect behavior in case there is multiple models which have textures with the same name, for example both [this asset](https://app.ignitionrobotics.org/openrobotics/fuel/models/SmallTrolley) and [this asset ](https://app.ignitionrobotics.org/openrobotics/fuel/models/HospitalPillow)have a texture called texture.png. If both are loaded, the second one will use the same texture as the first one.\r\n\r\nThis PR passes the entire file path to the Ogre resource manager instead of only the filename to remove this ambiguity. Its logic is similar to the one in the [Ogre1](#!/ignitionrobotics/ign-rendering/src/ee3bdc5fbe6ece157ae73fc03af2ce9deade2079/ogre/src/OgreMaterial.cc#lines-502) \\(where the bug doesn\u2019t happen\\).\r\n\r\nIt\u2019s not super obvious with the two assets because of the white textures so I edited the pillow\u2019s texture.png to have a big red circle, following the behavior before the PR:\r\n\r\nWhen pillow is the first object to be loaded \\(its texture is applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/845872511-image.png)\r\nAnd when the trolley is loaded first instead \\(trolley texture applied to both objects\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/2975769559-image.png)\r\nBy contrast, this is the behavior after the PR \\(every object has the right texture\\):\r\n\r\n![](data/bitbucket.org/repo/zq9ear/images/47541856-image.png)\r\n\u200c", "markup": "markdown", "html": "<p>Before this PR, only the file name was passed to ogre2 when setting the texture for a mesh, the engine would then look for the first match for that specific filename in all the paths that it saved.<br />\nThis resulted in incorrect behavior in case there is multiple models which have textures with the same name, for example both <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/openrobotics/fuel/models/SmallTrolley\" rel=\"nofollow\">this asset</a> and <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/openrobotics/fuel/models/HospitalPillow\" rel=\"nofollow\">this asset </a>have a texture called texture.png. If both are loaded, the second one will use the same texture as the first one.</p>\n<p>This PR passes the entire file path to the Ogre resource manager instead of only the filename to remove this ambiguity. Its logic is similar to the one in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/ee3bdc5fbe6ece157ae73fc03af2ce9deade2079/ogre/src/OgreMaterial.cc#lines-502\" rel=\"nofollow\">Ogre1</a> (where the bug doesn\u2019t happen).</p>\n<p>It\u2019s not super obvious with the two assets because of the white textures so I edited the pillow\u2019s texture.png to have a big red circle, following the behavior before the PR:</p>\n<p>When pillow is the first object to be loaded (its texture is applied to both objects):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/845872511-image.png\" />\nAnd when the trolley is loaded first instead (trolley texture applied to both objects):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/2975769559-image.png\" />\nBy contrast, this is the behavior after the PR (every object has the right texture):</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/zq9ear/images/47541856-image.png\" />\n\u200c</p>", "type": "rendered"}, "source": {"commit": {"hash": "6fb344bcacb6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/6fb344bcacb6.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/6fb344bcacb6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "fix_ogre2_texture_path"}}, "comment_count": 4, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-03-06T00:34:38.119943+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2020-03-06T00:29:05.910881+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "The fix increases memory footprint in models with shared textures since they get now duplicated. Needs rethinking on how to handle resource sharing among different models.", "updated_on": "2020-03-31T03:36:19.619276+00:00", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "merge_commit": null, "closed_by": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}}