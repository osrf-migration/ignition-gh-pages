{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/comments/132960441.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/233/_/diff#comment-132960441"}}, "parent": {"id": 132956824, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/comments/132956824.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/233/_/diff#comment-132956824"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 233, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/233"}}, "title": "Add API to check which engines are loaded"}, "content": {"raw": "Most of the time we'll be dealing with a single engine. That's currently the case on Ignition Gazebo.\n\nTake the `GridConfig` plugin for example. That plugin is not responsible for loading an engine and creating a scene, it's just supposed to work with a pre-existing engine+scene. So I imagine it would start somewhat like this:\n\n```.cpp\nauto loadedEngines = rendering::loadedEngines();\nif (loadedEngines.empty())\n{\n  ignerr << \"No rendering engine loaded, the grid config plugin will not work.\" << std::endl;\n  return;\n}\n\nauto engineName = loadedEngines[0];\nif (loadedEngines.size() > 1)\n{\n  igndbg << \"More than one render engine is loaded. Grid plugin will work with engine [\"\n             << engineName << \"]\" << std::endl;\n}\n\nauto engine = rendering::engine(engineName);\nif (nullptr == engine)\n{\n  ignerr << \"Internal error: failed to get render engine[\"\n             << engineName << \"]\" << std::endl;\n  return;\n}\n\nif (engine->SceneCount() == 0)\n{\n  ignerr << \"No scene found, the grid config plugin will not work.\" << std::endl;\n  return;\n}\n\nauto scene = engine->SceneByIndex(0);\nif (nullptr == scene)\n{\n  ignerr << \"Internal error: failed to get scene with index 0.\" << std::endl;\n  return;\n}\n\nif (engine->SceneCount() > 1)\n{\n  igndbg << \"More than one scene found. Grid plugin will work with scene [\"\n             << scene->Name() << \"]\" << std::endl;\n}\n```", "markup": "markdown", "html": "<p>Most of the time we'll be dealing with a single engine. That's currently the case on Ignition Gazebo.</p>\n<p>Take the <code>GridConfig</code> plugin for example. That plugin is not responsible for loading an engine and creating a scene, it's just supposed to work with a pre-existing engine+scene. So I imagine it would start somewhat like this:</p>\n<div class=\"codehilite language-cpp\"><pre><span></span><span class=\"k\">auto</span> <span class=\"n\">loadedEngines</span> <span class=\"o\">=</span> <span class=\"n\">rendering</span><span class=\"o\">::</span><span class=\"n\">loadedEngines</span><span class=\"p\">();</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">loadedEngines</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">ignerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;No rendering engine loaded, the grid config plugin will not work.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">auto</span> <span class=\"n\">engineName</span> <span class=\"o\">=</span> <span class=\"n\">loadedEngines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">loadedEngines</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">igndbg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;More than one render engine is loaded. Grid plugin will work with engine [&quot;</span>\n             <span class=\"o\">&lt;&lt;</span> <span class=\"n\">engineName</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">auto</span> <span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">rendering</span><span class=\"o\">::</span><span class=\"n\">engine</span><span class=\"p\">(</span><span class=\"n\">engineName</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">nullptr</span> <span class=\"o\">==</span> <span class=\"n\">engine</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">ignerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Internal error: failed to get render engine[&quot;</span>\n             <span class=\"o\">&lt;&lt;</span> <span class=\"n\">engineName</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">-&gt;</span><span class=\"n\">SceneCount</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">ignerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;No scene found, the grid config plugin will not work.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">auto</span> <span class=\"n\">scene</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">-&gt;</span><span class=\"n\">SceneByIndex</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">nullptr</span> <span class=\"o\">==</span> <span class=\"n\">scene</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">ignerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Internal error: failed to get scene with index 0.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">-&gt;</span><span class=\"n\">SceneCount</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">igndbg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;More than one scene found. Grid plugin will work with scene [&quot;</span>\n             <span class=\"o\">&lt;&lt;</span> <span class=\"n\">scene</span><span class=\"o\">-&gt;</span><span class=\"n\">Name</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2020-01-23T22:59:57.107052+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-01-23T22:59:57.114013+00:00", "type": "pullrequest_comment", "id": 132960441}