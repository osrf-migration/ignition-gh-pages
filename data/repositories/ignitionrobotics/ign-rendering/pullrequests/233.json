{"rendered": {"description": {"raw": "Add a couple of functions to check if an engine is already loaded, and to get the list of engines already loaded.\r\n\r\nSome use cases:\r\n\r\n* I want to load `ogre` only if I know `ogre2` is not loaded yet, and vice-versa\r\n* I want to use any (or all) engine that's already loaded without needing to refer to it by name. Then I can do something like:\r\n\r\n```\r\nauto loadedEngines = rendering::loadedEngines();\r\nif (!loadedEngines.empty())\r\n  auto engine = rendering::engine(loadedEngines[0]);\r\n```", "markup": "markdown", "html": "<p>Add a couple of functions to check if an engine is already loaded, and to get the list of engines already loaded.</p>\n<p>Some use cases:</p>\n<ul>\n<li>I want to load <code>ogre</code> only if I know <code>ogre2</code> is not loaded yet, and vice-versa</li>\n<li>I want to use any (or all) engine that's already loaded without needing to refer to it by name. Then I can do something like:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">auto</span> <span class=\"nt\">loadedEngines</span> <span class=\"o\">=</span> <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">loadedEngines</span><span class=\"o\">();</span>\n<span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">loadedEngines</span><span class=\"p\">.</span><span class=\"nc\">empty</span><span class=\"o\">())</span>\n  <span class=\"nt\">auto</span> <span class=\"nt\">engine</span> <span class=\"o\">=</span> <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">engine</span><span class=\"o\">(</span><span class=\"nt\">loadedEngines</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">);</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Add API to check which engines are loaded", "markup": "markdown", "html": "<p>Add API to check which engines are loaded</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Add a couple of functions to check if an engine is already loaded, and to get the list of engines already loaded.\r\n\r\nSome use cases:\r\n\r\n* I want to load `ogre` only if I know `ogre2` is not loaded yet, and vice-versa\r\n* I want to use any (or all) engine that's already loaded without needing to refer to it by name. Then I can do something like:\r\n\r\n```\r\nauto loadedEngines = rendering::loadedEngines();\r\nif (!loadedEngines.empty())\r\n  auto engine = rendering::engine(loadedEngines[0]);\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/233/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diffstat/ignitionrobotics/ign-rendering:e5086aa412be%0D29b2d520cce5?from_pullrequest_id=233"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/233/merge"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/pull-requests/233"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/diff/ignitionrobotics/ign-rendering:e5086aa412be%0D29b2d520cce5?from_pullrequest_id=233"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/pullrequests/233/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-rendering/pullrequests/233/statuses_page=1.json"}}, "title": "Add API to check which engines are loaded", "close_source_branch": true, "reviewers": [{"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, {"display_name": "Claire Wang", "uuid": "{4b4ab2f2-8148-463e-a671-2eed1e6ccd42}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D"}, "html": {"href": "https://bitbucket.org/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d3f35705e485d0dab01c896/a44642e6-28d8-4727-b9cc-b4c18e91d167/128"}}, "nickname": "Claire Wang", "type": "user", "account_id": "5d3f35705e485d0dab01c896"}], "id": 233, "destination": {"commit": {"hash": "29b2d520cce5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/29b2d520cce5.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/29b2d520cce5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "ign-rendering2"}}, "created_on": "2020-01-23T02:18:16.647563+00:00", "summary": {"raw": "Add a couple of functions to check if an engine is already loaded, and to get the list of engines already loaded.\r\n\r\nSome use cases:\r\n\r\n* I want to load `ogre` only if I know `ogre2` is not loaded yet, and vice-versa\r\n* I want to use any (or all) engine that's already loaded without needing to refer to it by name. Then I can do something like:\r\n\r\n```\r\nauto loadedEngines = rendering::loadedEngines();\r\nif (!loadedEngines.empty())\r\n  auto engine = rendering::engine(loadedEngines[0]);\r\n```", "markup": "markdown", "html": "<p>Add a couple of functions to check if an engine is already loaded, and to get the list of engines already loaded.</p>\n<p>Some use cases:</p>\n<ul>\n<li>I want to load <code>ogre</code> only if I know <code>ogre2</code> is not loaded yet, and vice-versa</li>\n<li>I want to use any (or all) engine that's already loaded without needing to refer to it by name. Then I can do something like:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">auto</span> <span class=\"nt\">loadedEngines</span> <span class=\"o\">=</span> <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">loadedEngines</span><span class=\"o\">();</span>\n<span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">loadedEngines</span><span class=\"p\">.</span><span class=\"nc\">empty</span><span class=\"o\">())</span>\n  <span class=\"nt\">auto</span> <span class=\"nt\">engine</span> <span class=\"o\">=</span> <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">engine</span><span class=\"o\">(</span><span class=\"nt\">loadedEngines</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">);</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "9db06289e623", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/9db06289e623.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/9db06289e623"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "branch": {"name": "loaded_engines"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2020-02-04T00:23:20.780055+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": "2020-01-30T02:47:36.901710+00:00", "type": "participant", "approved": true, "user": {"display_name": "Claire Wang", "uuid": "{4b4ab2f2-8148-463e-a671-2eed1e6ccd42}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D"}, "html": {"href": "https://bitbucket.org/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d3f35705e485d0dab01c896/a44642e6-28d8-4727-b9cc-b4c18e91d167/128"}}, "nickname": "Claire Wang", "type": "user", "account_id": "5d3f35705e485d0dab01c896"}}, {"role": "REVIEWER", "participated_on": "2020-02-04T00:13:20.335155+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2020-02-04T01:38:55.749091+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "e5086aa412be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/commit/e5086aa412be.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/commits/e5086aa412be"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}