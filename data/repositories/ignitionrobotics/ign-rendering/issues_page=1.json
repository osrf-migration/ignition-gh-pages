{"pagelen": 100, "values": [{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/1/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/1/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/1/adding-removing-models"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/1/vote"}}, "reporter": {"display_name": "Pedro Os\u00f3rio", "uuid": "{1abaad62-2c38-4702-8192-4d22bb14b252}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1abaad62-2c38-4702-8192-4d22bb14b252%7D"}, "html": {"href": "https://bitbucket.org/%7B1abaad62-2c38-4702-8192-4d22bb14b252%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c75e8bbb33da388cd461bcbd9ab52bbad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPO-3.png"}}, "nickname": "pedroosorio88", "type": "user", "account_id": "557058:3dd79336-8422-455b-8ed2-c5e552d15985"}, "title": "Adding/Removing Models", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi IGN team !\n\nI'm working on a custom gazebo client and i'm using IGN to render the scene. Whenever i add a model it throws : \n\n[Err] [SceneManager.cc:1639] invalid parent name: minho_robot_2::base\n[Wrn] [SceneManager.cc:1640] using scene root node\n\nThe model isn't displayed properly at first. \n\n![before.png](data/bitbucket.org/repo/zq9ear/images/3511116263-before.png)\n\nIf i close and re-open the client, now it is properly displayed. \n\n![after.png](data/bitbucket.org/repo/zq9ear/images/3235579331-after.png)\n\nIt means that \"refreshing\" makes everything work correctly, as parents are correctly assigned. What am i doing wrong here, where is this behavior coming from ?", "markup": "markdown", "html": "<p>Hi IGN team !</p>\n<p>I'm working on a custom gazebo client and i'm using IGN to render the scene. Whenever i add a model it throws : </p>\n<p>[Err] [SceneManager.cc:1639] invalid parent name: minho_robot_2::base\n[Wrn] [SceneManager.cc:1640] using scene root node</p>\n<p>The model isn't displayed properly at first. </p>\n<p><img alt=\"before.png\" src=\"data/bitbucket.org/repo/zq9ear/images/3511116263-before.png\" /></p>\n<p>If i close and re-open the client, now it is properly displayed. </p>\n<p><img alt=\"after.png\" src=\"data/bitbucket.org/repo/zq9ear/images/3235579331-after.png\" /></p>\n<p>It means that \"refreshing\" makes everything work correctly, as parents are correctly assigned. What am i doing wrong here, where is this behavior coming from ?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-09-25T12:03:52.379597+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:32.163705+00:00", "type": "issue", "id": 1}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/2/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/2/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/2/remove-boost"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/2/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Remove boost", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Use functions in ign-common instead.", "markup": "markdown", "html": "<p>Use functions in ign-common instead.</p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-08-14T16:49:10.358191+00:00", "milestone": null, "updated_on": "2017-08-24T18:32:59.775732+00:00", "type": "issue", "id": 2}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/3/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/3/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/3/fix-optix-mesh-loading"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/3/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Fix Optix Mesh loading", "component": null, "votes": 0, "watches": 1, "content": {"raw": "duck.dae currently doesn't render in optix in the mesh viewer example", "markup": "markdown", "html": "<p>duck.dae currently doesn't render in optix in the mesh viewer example</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-08-24T18:35:14.958783+00:00", "milestone": null, "updated_on": "2017-09-28T19:34:04.485931+00:00", "type": "issue", "id": 3}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/4/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/4/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/4/add-optix-ray-object-intersection"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/4/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add Optix ray object intersection", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Implement it in a new OptixRayQuery class", "markup": "markdown", "html": "<p>Implement it in a new OptixRayQuery class</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-24T19:43:00.171744+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:24.052612+00:00", "type": "issue", "id": 4}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/5/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/5/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/5/ogre-setbackgroundcolor-works-only-after"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/5/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[OGRE] SetBackgroundColor works only after cameras are created", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-09-13T19:48:36.149036+00:00", "milestone": null, "updated_on": "2017-09-28T19:33:46.827219+00:00", "type": "issue", "id": 5}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/6/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/6/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/6/add-function-to-enable-disable-shadows-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/6/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add function to enable/disable shadows in Scene", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-14T17:26:34.018084+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:30.960468+00:00", "type": "issue", "id": 6}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/7/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/7/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/7/make-install-required-for-tests"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/7/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Make install required for tests", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Update the code/tests so that `make install` is not required.\n\nThis may only be true for optix tests.", "markup": "markdown", "html": "<p>Update the code/tests so that <code>make install</code> is not required.</p>\n<p>This may only be true for optix tests.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-15T15:14:40.276666+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:58.844216+00:00", "type": "issue", "id": 7}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/8/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/8/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/8/fix-example-textures"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/8/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Fix example textures", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is a slight problem with the examples. If I create a `build` directory under `examples` and do the normal `cmake/make`, then I'll get the executables but they won't find resources correctly. The `mesh_viewer` and `custom_scene_viewer` demonstrate this problem.\r\n\r\nI think you could either update the source & cmake appropriately, or force people to compile each example independently.", "markup": "markdown", "html": "<p>There is a slight problem with the examples. If I create a <code>build</code> directory under <code>examples</code> and do the normal <code>cmake/make</code>, then I'll get the executables but they won't find resources correctly. The <code>mesh_viewer</code> and <code>custom_scene_viewer</code> demonstrate this problem.</p>\n<p>I think you could either update the source &amp; cmake appropriately, or force people to compile each example independently.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-09-15T15:26:24.548238+00:00", "milestone": null, "updated_on": "2017-10-05T17:23:23.076491+00:00", "type": "issue", "id": 8}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/9/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/9/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/9/add-test-that-changes-screen-size"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/9/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Add test that changes screen size", "component": null, "votes": 0, "watches": 1, "content": {"raw": "See pull request #26, and the comments for `Scene_TEST.cc`. It would be nice if we can add a test that changes the rendering scene size.", "markup": "markdown", "html": "<p>See <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/26/fix-scene-background-color\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #26</a>, and the comments for <code>Scene_TEST.cc</code>. It would be nice if we can add a test that changes the rendering scene size.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-09-27T16:04:15.718057+00:00", "milestone": null, "updated_on": "2017-10-05T17:25:36.648151+00:00", "type": "issue", "id": 9}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/10/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/10/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/10/use-ign-common-image-pixelformats"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/10/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Use ign-common Image pixelformats", "component": null, "votes": 0, "watches": 1, "content": {"raw": "PixelFormats are defined both in `ignition::common::Image` and `ignition::rendering::PixelFormats`.\n\nFor consistency, it would be nice to use the version in ignition common. This will also help ignition::msgs.", "markup": "markdown", "html": "<p>PixelFormats are defined both in <code>ignition::common::Image</code> and <code>ignition::rendering::PixelFormats</code>.</p>\n<p>For consistency, it would be nice to use the version in ignition common. This will also help ignition::msgs.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-10-04T17:55:53.563531+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:57.375414+00:00", "type": "issue", "id": 10}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/11/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/11/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/11/support-gradient-background-color"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/11/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Support gradient background color", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "duplicate", "version": null, "edited_on": null, "created_on": "2017-10-04T23:55:27.605695+00:00", "milestone": null, "updated_on": "2018-01-03T00:17:27.692113+00:00", "type": "issue", "id": 11}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/12/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/12/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/12/add-optix-grid-implementation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/12/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add optix grid implementation", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-10-05T17:25:10.734642+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:22.803320+00:00", "type": "issue", "id": 12}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/13/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/13/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/13/ownership-questions"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/13/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Ownership questions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I noticed on the examples that it is common to use `Scene::Create*` functions to instantiate most of the rendering types, as opposed to directly calling the type's constructor. All `Create*` functions return shared pointers.\n\n1. Does the scene keep shared ownership of everything which is created by `Scene::Create*`?\n\n```\nThis seems to be true for some types but not others, for example:\n```\n\n```\n    auto light = scene->CreateDirectionalLight();\n    ASSERT_EQ(light.use_count(), 2u); // passes\n```\n\n```\n    auto ray = scene->CreateRayQuery();\n    ASSERT_EQ(ray.use_count(), 1u); // passes\n```\n\n    I'd suggest we return `unique_ptr`s for those which the scene won't be keeping1. When calling `Visual::AddChild`, is the ownership shared with the visual? The same goes for other `Add` and `Set` functions which take `shared_ptr`s\n\n1. What's the appropriate way to destroy something which was created with `Scene::Create*`? There are some `Scene::Destroy*` functions, but there isn't a 1-1 relation to the creates. How to destroy the missing ones?\n\n1. Is there a situation when an object should / could be instantiated without the use of `Scene::Create*`?", "markup": "markdown", "html": "<p>I noticed on the examples that it is common to use <code>Scene::Create*</code> functions to instantiate most of the rendering types, as opposed to directly calling the type's constructor. All <code>Create*</code> functions return shared pointers.</p>\n<ol>\n<li>Does the scene keep shared ownership of everything which is created by <code>Scene::Create*</code>?</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>This seems to be true for some types but not others, for example:\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>    auto light = scene-&gt;CreateDirectionalLight();\n    ASSERT_EQ(light.use_count(), 2u); // passes\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>    auto ray = scene-&gt;CreateRayQuery();\n    ASSERT_EQ(ray.use_count(), 1u); // passes\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>I&#39;d suggest we return `unique_ptr`s for those which the scene won&#39;t be keeping1. When calling `Visual::AddChild`, is the ownership shared with the visual? The same goes for other `Add` and `Set` functions which take `shared_ptr`s\n</pre></div>\n\n\n<ol>\n<li>\n<p>What's the appropriate way to destroy something which was created with <code>Scene::Create*</code>? There are some <code>Scene::Destroy*</code> functions, but there isn't a 1-1 relation to the creates. How to destroy the missing ones?</p>\n</li>\n<li>\n<p>Is there a situation when an object should / could be instantiated without the use of <code>Scene::Create*</code>?</p>\n</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-11-04T00:32:26.584487+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:50.981311+00:00", "type": "issue", "id": 13}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/14/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/14/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/14/object-name"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/14/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Object name", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The name of objects (Object::Name) is used by the GUI, but the Name is not user friendly.  For example, the name has a number in order to guarantee uniqueness.\n\nMaybe an Object can support a \"user-friendly\" name as well.", "markup": "markdown", "html": "<p>The name of objects (Object::Name) is used by the GUI, but the Name is not user friendly.  For example, the name has a number in order to guarantee uniqueness.</p>\n<p>Maybe an Object can support a \"user-friendly\" name as well.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-14T19:04:15.311465+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:19.921905+00:00", "type": "issue", "id": 14}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/15/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/15/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/15/support-gradient-background-color"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/15/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Support gradient background color", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "continue the work started here:\r\nhttps://bitbucket.org/apojomovsky/ign-rendering/branch/boilerplate_for_rectangle_2d#diff\r\n\r\nexample code for ogre implementation:\r\nhttps://forums.ogre3d.org/viewtopic.php?f=2&t=60677", "markup": "markdown", "html": "<p>continue the work started here:\n<a href=\"https://bitbucket.org/apojomovsky/ign-rendering/branch/boilerplate_for_rectangle_2d#diff\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/apojomovsky/ign-rendering/branch/boilerplate_for_rectangle_2d#diff</a></p>\n<p>example code for ogre implementation:\n<a href=\"https://forums.ogre3d.org/viewtopic.php?f=2&amp;t=60677\" rel=\"nofollow\" class=\"ap-connect-link\">https://forums.ogre3d.org/viewtopic.php?f=2&amp;t=60677</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-02T22:43:56.521227+00:00", "milestone": null, "updated_on": "2018-06-22T15:56:04.110064+00:00", "type": "issue", "id": 15}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/16/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/16/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/16/ign-cmake-integration"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/16/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "ign-cmake integration", "component": null, "votes": 0, "watches": 1, "content": {"raw": "WIP in `ign-cmake` branch\r\n\r\ndepends on ign-cmake's [Components](#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff) feature\r\n\r\nThis will change the ign-rendering's file structure from:\r\n\r\n~~~\r\nign-rendering:\r\n    - src/\r\n        - ogre\r\n        - optix\r\n    - include/ignition/rendering/\r\n        - ogre\r\n        - optix\r\n~~~\r\n\r\nto:\r\n\r\n~~~\r\nign-rendering:\r\n    - ogre\r\n        - src\r\n        - include/ignition/rendering/ogre\r\n    - optix\r\n        - src\r\n        - include/ignition/rendering/optix\r\n    - src\r\n    - include\r\n~~~", "markup": "markdown", "html": "<p>WIP in <code>ign-cmake</code> branch</p>\n<p>depends on ign-cmake's <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff\" rel=\"nofollow\">Components</a> feature</p>\n<p>This will change the ign-rendering's file structure from:</p>\n<div class=\"codehilite\"><pre><span></span>ign-rendering:\n    - src/\n        - ogre\n        - optix\n    - include/ignition/rendering/\n        - ogre\n        - optix\n</pre></div>\n\n\n<p>to:</p>\n<div class=\"codehilite\"><pre><span></span>ign-rendering:\n    - ogre\n        - src\n        - include/ignition/rendering/ogre\n    - optix\n        - src\n        - include/ignition/rendering/optix\n    - src\n    - include\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-02T22:50:23.538123+00:00", "milestone": null, "updated_on": "2018-04-02T15:58:14.682082+00:00", "type": "issue", "id": 16}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/17/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/17/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/17/add-visualization-plugin-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/17/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add visualization plugin support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "First step is to support a generic Scene plugin that lets user modify the existing scene.\n\nNeed to look into ign-common's [plugin framework](#!/ignitionrobotics/ign-common/pull-requests/59/expanding-the-functionality-of-the-plugin/diff)", "markup": "markdown", "html": "<p>First step is to support a generic Scene plugin that lets user modify the existing scene.</p>\n<p>Need to look into ign-common's <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-common/pull-requests/59/expanding-the-functionality-of-the-plugin/diff\" rel=\"nofollow\">plugin framework</a></p>", "type": "rendered"}, "assignee": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-02T22:53:05.625412+00:00", "milestone": null, "updated_on": "2018-07-16T17:37:29.814048+00:00", "type": "issue", "id": 17}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/18/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/18/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/18/add-optix-render-window"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/18/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add Optix render window", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The `RenderWindow` class works by attaching to an existing GUI window using its ID /  window [?at=default&fileviewer=file-view-default#RenderTarget.hh-105 handle string ](#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/include/ignition/rendering/RenderTarget.hh). This currently  works for ogre as it already has built-in [?at=default&fileviewer=file-view-default render window support ](#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/src/ogre/OgreRenderTarget.cc). The [?at=default&fileviewer=file-view-default OptixRenderWindow ](#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/src/optix/OptixRenderTarget.cc) class is currently just a stub and doesn't do anything.\n\nFor optix, we currently require the user to save the image data a buffer in memory then  display it into their own window (e.g. see [?at=default&fileviewer=file-view-default#GlutWindow.cc-95 this line in simple_demo that captures data into image data object ](#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/examples/simple!UNITO-UNDERSCORE!demo/GlutWindow.cc) example) which requires users to write more code. \n\nIt would be nice to have a common `RenderWindow` API that masks these differences.", "markup": "markdown", "html": "<p>The <code>RenderWindow</code> class works by attaching to an existing GUI window using its ID /  window <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/include/ignition/rendering/RenderTarget.hh\" rel=\"nofollow\">?at=default&amp;fileviewer=file-view-default#RenderTarget.hh-105 handle string </a>. This currently  works for ogre as it already has built-in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/src/ogre/OgreRenderTarget.cc\" rel=\"nofollow\">?at=default&amp;fileviewer=file-view-default render window support </a>. The <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/src/optix/OptixRenderTarget.cc\" rel=\"nofollow\">?at=default&amp;fileviewer=file-view-default OptixRenderWindow </a> class is currently just a stub and doesn't do anything.</p>\n<p>For optix, we currently require the user to save the image data a buffer in memory then  display it into their own window (e.g. see <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/dbd3a10d910e6e7a0fdaa3312c88d85758d5067a/examples/simple!UNITO-UNDERSCORE!demo/GlutWindow.cc\" rel=\"nofollow\">?at=default&amp;fileviewer=file-view-default#GlutWindow.cc-95 this line in simple_demo that captures data into image data object </a> example) which requires users to write more code. </p>\n<p>It would be nice to have a common <code>RenderWindow</code> API that masks these differences.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-02T23:14:04.929900+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:48.696531+00:00", "type": "issue", "id": 18}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/19/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/19/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/19/optix-support-mouse-picking"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/19/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Optix: Support mouse picking", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Add a function that lets user pass in x, y coordinates in screen and returns the name / ID of selected entity in the scene\n\nOgre implementation:\n\n- port gazebo's [selection buffer](https://bitbucket.org/osrf/gazebo/src/eddba39b82cd7a8d9d2e3cff7c6a43174bdd972b/gazebo/rendering/selection_buffer/?at=default) and offer a function similar to gazebo's [Scene::VisualAt](https://bitbucket.org/osrf/gazebo/src/eddba39b82cd7a8d9d2e3cff7c6a43174bdd972b/gazebo/rendering/Scene.cc?at=default&fileviewer=file-view-default#Scene.cc-988)\n\nOptix:\n\n- TBD", "markup": "markdown", "html": "<p>Add a function that lets user pass in x, y coordinates in screen and returns the name / ID of selected entity in the scene</p>\n<p>Ogre implementation:</p>\n<ul>\n<li>port gazebo's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/eddba39b82cd7a8d9d2e3cff7c6a43174bdd972b/gazebo/rendering/selection_buffer/?at=default\" rel=\"nofollow\">selection buffer</a> and offer a function similar to gazebo's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/eddba39b82cd7a8d9d2e3cff7c6a43174bdd972b/gazebo/rendering/Scene.cc?at=default&amp;fileviewer=file-view-default#Scene.cc-988\" rel=\"nofollow\">Scene::VisualAt</a></li>\n</ul>\n<p>Optix:</p>\n<ul>\n<li>TBD</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "state": "open", "version": null, "edited_on": null, "created_on": "2018-01-02T23:19:40.827181+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:29.555281+00:00", "type": "issue", "id": 19}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/20/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/20/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/20/add-render-engine-plugin-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/20/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add render engine plugin support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "initial implementation in `ign-cmake` branch", "markup": "markdown", "html": "<p>initial implementation in <code>ign-cmake</code> branch</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-12T21:00:44.542862+00:00", "milestone": null, "updated_on": "2018-04-02T17:12:34.083654+00:00", "type": "issue", "id": 20}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/21/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/21/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/21/optix-add-text-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/21/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Optix: Add text support", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "For ogre, migrate [MovableText](https://bitbucket.org/osrf/gazebo/src/bcbea7608b1ad88067ef652e8e7a4b93ec1001cf/gazebo/rendering/MovableText.hh?at=default&fileviewer=file-view-default) class from gazebo along with necessary media files like [fonts](https://bitbucket.org/osrf/gazebo/src/bcbea7608b1ad88067ef652e8e7a4b93ec1001cf/media/fonts/?at=default)", "markup": "markdown", "html": "<p>For ogre, migrate <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/bcbea7608b1ad88067ef652e8e7a4b93ec1001cf/gazebo/rendering/MovableText.hh?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">MovableText</a> class from gazebo along with necessary media files like <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/bcbea7608b1ad88067ef652e8e7a4b93ec1001cf/media/fonts/?at=default\" rel=\"nofollow\">fonts</a></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2018-01-12T21:03:40.988857+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:33.317916+00:00", "type": "issue", "id": 21}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/22/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/22/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/22/consider-merging-pure-virtual-class"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/22/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Consider merging pure virtual class interfaces with base implementation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Instead of having pure virtual interfaces in `include/ignition/rendering`, we can merge the Base* implementations from `include/ignition/rendering/base/` in to `src`. \n\nIt's a trade off between cleaner separation of code and improving code maintainability and extensibility:\n\nMain advantages:\n\n* reduces the number of files to maintain\n* easier to add/update/remove features or functions in classes \n\nTemplated Base classes also them difficult to add private implementations using the pimpl pattern", "markup": "markdown", "html": "<p>Instead of having pure virtual interfaces in <code>include/ignition/rendering</code>, we can merge the Base* implementations from <code>include/ignition/rendering/base/</code> in to <code>src</code>. </p>\n<p>It's a trade off between cleaner separation of code and improving code maintainability and extensibility:</p>\n<p>Main advantages:</p>\n<ul>\n<li>reduces the number of files to maintain</li>\n<li>easier to add/update/remove features or functions in classes </li>\n</ul>\n<p>Templated Base classes also them difficult to add private implementations using the pimpl pattern</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-01-13T04:00:29.252401+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:47.312961+00:00", "type": "issue", "id": 22}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/23/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/23/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/23/homebrew-build-is-broken"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/23/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "homebrew build is broken", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Since the `ign-cmake` branch was merged in pull request #51, several CI builds have been broken, including homebrew. I just added a homebrew formula for `ignition-cmake1` and updated the `ignition-rendering` formula to a more recent commit and to use the newer version.\r\n\r\n* https://github.com/osrf/homebrew-simulation/commit/87fcc84dcefd014dbfa5d9b133d08d8b868a5ae5\r\n* https://github.com/osrf/homebrew-simulation/commit/4591ccaa0c304c1b4e94f1ea92cc4a1b6a3385a0\r\n\r\nIt's still failing though: [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_sensors-ci-default-homebrew-amd64&build=12)](https://build.osrfoundation.org/job/ignition_sensors-ci-default-homebrew-amd64/12/) https://build.osrfoundation.org/job/ignition_sensors-ci-default-homebrew-amd64/12/\r\n\r\n~~~\r\n==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/ignition-rendering0/0.0.0~20180315~c2a8d58 -DCMAKE_BUILD_TYPE=Release -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_VERBOSE_MAKEFILE=ON -Wno-dev\r\n\r\nLast 15 lines from /Users/jenkins/Library/Logs/Homebrew/ignition-rendering0/01.cmake:\r\n-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success\r\n-- Adding 11 UNIT tests\r\n-- Adding 2 INTEGRATION tests\r\n-- No tests have been specified for PERFORMANCE\r\n-- No tests have been specified for REGRESSION\r\n-- Configuring library: ignition-rendering0-ogre\r\n-- Found OpenGL: /System/Library/Frameworks/OpenGL.framework   \r\n-- No tests have been specified for UNIT\r\n-- Skipping the component [optix] because the following packages are missing: OptiX\r\n-- Found Doxygen: /usr/local/bin/doxygen (found version \"1.8.14\") found components:  doxygen missing components:  dot\r\n-- Build configuration successful\r\n-- Build type: Release\r\n-- Install prefix: /usr/local/Cellar/ignition-rendering0/0.0.0~20180315~c2a8d58\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/ignition-rendering0-20180322-77039-1r44wxb/ignitionrobotics-ign-rendering-c2a8d5847cfe/CMakeFiles/CMakeOutput.log\".\r\n~~~", "markup": "markdown", "html": "<p>Since the <code>ign-cmake</code> branch was merged in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/51/ign-cmake-integration\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #51</a>, several CI builds have been broken, including homebrew. I just added a homebrew formula for <code>ignition-cmake1</code> and updated the <code>ignition-rendering</code> formula to a more recent commit and to use the newer version.</p>\n<ul>\n<li><a href=\"https://github.com/osrf/homebrew-simulation/commit/87fcc84dcefd014dbfa5d9b133d08d8b868a5ae5\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/osrf/homebrew-simulation/commit/87fcc84dcefd014dbfa5d9b133d08d8b868a5ae5</a></li>\n<li><a href=\"https://github.com/osrf/homebrew-simulation/commit/4591ccaa0c304c1b4e94f1ea92cc4a1b6a3385a0\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/osrf/homebrew-simulation/commit/4591ccaa0c304c1b4e94f1ea92cc4a1b6a3385a0</a></li>\n</ul>\n<p>It's still failing though: <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_sensors-ci-default-homebrew-amd64/12/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_sensors-ci-default-homebrew-amd64&amp;build=12\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_sensors-ci-default-homebrew-amd64/12/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_sensors-ci-default-homebrew-amd64/12/</a></p>\n<div class=\"codehilite\"><pre><span></span>==&gt; cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/ignition-rendering0/0.0.0~20180315~c2a8d58 -DCMAKE_BUILD_TYPE=Release -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_VERBOSE_MAKEFILE=ON -Wno-dev\n\nLast 15 lines from /Users/jenkins/Library/Logs/Homebrew/ignition-rendering0/01.cmake:\n-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success\n-- Adding 11 UNIT tests\n-- Adding 2 INTEGRATION tests\n-- No tests have been specified for PERFORMANCE\n-- No tests have been specified for REGRESSION\n-- Configuring library: ignition-rendering0-ogre\n-- Found OpenGL: /System/Library/Frameworks/OpenGL.framework   \n-- No tests have been specified for UNIT\n-- Skipping the component [optix] because the following packages are missing: OptiX\n-- Found Doxygen: /usr/local/bin/doxygen (found version &quot;1.8.14&quot;) found components:  doxygen missing components:  dot\n-- Build configuration successful\n-- Build type: Release\n-- Install prefix: /usr/local/Cellar/ignition-rendering0/0.0.0~20180315~c2a8d58\n-- Configuring incomplete, errors occurred!\nSee also &quot;/tmp/ignition-rendering0-20180322-77039-1r44wxb/ignitionrobotics-ign-rendering-c2a8d5847cfe/CMakeFiles/CMakeOutput.log&quot;.\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-03-22T20:29:43.565830+00:00", "milestone": null, "updated_on": "2018-03-23T00:11:50.625063+00:00", "type": "issue", "id": 23}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/24/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/24/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/24/extend-shaders-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/24/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Extend shaders support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "from comment in pull request #55:\n\n* While the ShaderParam currently encodes INT and FLOAT, it should probably be expanded to cover other commonly-used types with more than one value (Vector2, Vector3, Vector4, Matrix33, Matrix44)\n\n* It may be useful to port the capabilities/features framework from ign-physics to the rendering system to indicate that some renderers don't support raw shaders (eg Optix):\n    * ign-physics Feature (wip): #!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&fileviewer=file-view-default\n    * Checking with OGRE: https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html\n\n* Potentially expand for other shader types: Geometry, Compute, Tesselation", "markup": "markdown", "html": "<p>from comment in <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/55/add-support-for-custom-shader-materials\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #55</a>:</p>\n<ul>\n<li>\n<p>While the ShaderParam currently encodes INT and FLOAT, it should probably be expanded to cover other commonly-used types with more than one value (Vector2, Vector3, Vector4, Matrix33, Matrix44)</p>\n</li>\n<li>\n<p>It may be useful to port the capabilities/features framework from ign-physics to the rendering system to indicate that some renderers don't support raw shaders (eg Optix):</p>\n<ul>\n<li>ign-physics Feature (wip): <a href=\"#!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&amp;fileviewer=file-view-default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/src/c553b7d281a000b2111ae929ef2714ab32b2d01f/include/ignition/physics/Feature.hh?at=FeatureSystem&amp;fileviewer=file-view-default</a></li>\n<li>Checking with OGRE: <a href=\"https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.ogre3d.org/docs/api/1.9/class_ogre_1_1_render_system_capabilities.html</a></li>\n</ul>\n</li>\n<li>\n<p>Potentially expand for other shader types: Geometry, Compute, Tesselation</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-04-30T21:47:19.194691+00:00", "milestone": null, "updated_on": "2018-10-01T22:17:14.102336+00:00", "type": "issue", "id": 24}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/25/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/25/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/25/ogretext-not-rendering-after-66"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/25/vote"}}, "reporter": {"display_name": "Deanna Hood", "uuid": "{40d490b4-7de9-4c89-ac1c-2219a22057eb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D"}, "html": {"href": "https://bitbucket.org/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5/f7b56737-eb1f-481f-beb1-50c179565cf4/128"}}, "nickname": "d_hood", "type": "user", "account_id": "557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5"}, "title": "OgreText not rendering after #66", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I have developed #!/ignitionrobotics/ign-gui/pull-requests/137 using a pinned version of ignition rendering.\n\nI just updated to the default branch and noticed that the MoveableText I was using no longer displays.\n\nI have narrowed it down to a change [between these commits ](#!/ignitionrobotics/ign-rendering/branches/compare/f247..9a91), i.e. #!/ignitionrobotics/ign-rendering/pull-requests/66. (9a91 it works, f247 it doesn't render). I saw that that PR was to improve performance.. perhaps it is a little too efficient now? :smile:\n\nI'm testing with `ign gui -c src/ign_gui/examples/config/display_plugins.config` on [this branch ](#!/ignitionrobotics/ign-gui/pull-requests/137).", "markup": "markdown", "html": "<p>I have developed <a href=\"#!/ignitionrobotics/ign-gui/pull-requests/137\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-gui/pull-requests/137</a> using a pinned version of ignition rendering.</p>\n<p>I just updated to the default branch and noticed that the MoveableText I was using no longer displays.</p>\n<p>I have narrowed it down to a change <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/branches/compare/f247..9a91\" rel=\"nofollow\">between these commits </a>, i.e. <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/66\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-rendering/pull-requests/66</a>. (9a91 it works, f247 it doesn't render). I saw that that PR was to improve performance.. perhaps it is a little too efficient now? <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /></p>\n<p>I'm testing with <code>ign gui -c src/ign_gui/examples/config/display_plugins.config</code> on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gui/pull-requests/137\" rel=\"nofollow\">this branch </a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-10T00:58:43.968696+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:44.317803+00:00", "type": "issue", "id": 25}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/26/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/26.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/26/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/26/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/26/shadows-test-fails-on-macos"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/26/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Shadows test fails on macOS", "component": null, "votes": 0, "watches": 1, "content": {"raw": "https://build.osrfoundation.org/job/ignition_rendering-ci-default-homebrew-amd64/16/testReport/(root)/Shadows_ShadowsTest/Shadows_0/", "markup": "markdown", "html": "<p><a href=\"https://build.osrfoundation.org/job/ignition_rendering-ci-default-homebrew-amd64/16/testReport/(root)/Shadows_ShadowsTest/Shadows_0/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_rendering-ci-default-homebrew-amd64/16/testReport/(root)/Shadows_ShadowsTest/Shadows_0/</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-21T22:13:58.583031+00:00", "milestone": null, "updated_on": "2018-09-05T19:12:12.726463+00:00", "type": "issue", "id": 26}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/27/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/27/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/27/mesh-addition-removal-and-addition-with"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/27/vote"}}, "reporter": {"display_name": "Agustin Alba Chicar", "uuid": "{f3bbaa08-99e1-49b3-8f98-5b977c6eba97}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf3bbaa08-99e1-49b3-8f98-5b977c6eba97%7D"}, "html": {"href": "https://bitbucket.org/%7Bf3bbaa08-99e1-49b3-8f98-5b977c6eba97%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d716e079277d77637f722fa92b531e08d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-2.png"}}, "nickname": "eku-agalbachicar", "type": "user", "account_id": "557058:d26116f3-31d1-4633-8fe7-5165529b0595"}, "title": "Mesh addition, removal and addition with the same name shows the first mesh", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "After loading a `Mesh` into a `Scene`, it may be needed to remove it and then add a new `Mesh` with the same name but a different _shape_. If this is the case, the second time the mesh is loaded into the `Scene` the output shows the first one (i.e. first I add a cube called \"mesh\", then I remove the cube, then I add a cone whose name is \"mesh\" too, finally it shows cube instead of a cone).\n\nIn the meantime, I appended an increasing counter to the mesh names so they are unique  and that made it work.\n\nNote also that meshes are created at runtime but not loaded from a file.\n\nI am working with Ogre, I couldn't test it in Optix.", "markup": "markdown", "html": "<p>After loading a <code>Mesh</code> into a <code>Scene</code>, it may be needed to remove it and then add a new <code>Mesh</code> with the same name but a different <em>shape</em>. If this is the case, the second time the mesh is loaded into the <code>Scene</code> the output shows the first one (i.e. first I add a cube called \"mesh\", then I remove the cube, then I add a cone whose name is \"mesh\" too, finally it shows cube instead of a cone).</p>\n<p>In the meantime, I appended an increasing counter to the mesh names so they are unique  and that made it work.</p>\n<p>Note also that meshes are created at runtime but not loaded from a file.</p>\n<p>I am working with Ogre, I couldn't test it in Optix.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-07-30T20:25:40.742304+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:41.287348+00:00", "type": "issue", "id": 27}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/28/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/28/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/28/new-homebrew-bottle"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/28/vote"}}, "reporter": {"display_name": "Deanna Hood", "uuid": "{40d490b4-7de9-4c89-ac1c-2219a22057eb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D"}, "html": {"href": "https://bitbucket.org/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5/f7b56737-eb1f-481f-beb1-50c179565cf4/128"}}, "nickname": "d_hood", "type": "user", "account_id": "557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5"}, "title": "New homebrew bottle", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I am looking to submit a PR to https://github.com/osrf/homebrew-simulation/ to make a new bottle for ignition-rendering0 for #!/ignitionrobotics/ign-gui/pull-requests/143\n\nFrom a comment at #!/ignitionrobotics/ign-gui/pull-requests/143/remove-override-of-onvisibilitychange-for/diff#comment-71298175 I'm led to believe this is a straightforward thing to do, I just have to bump to a newer commit. If that's the case, is the [current default tip](#!/ignitionrobotics/ign-rendering/commits/13c229e9fd45b8daff9f7705a5717a96ccd9ba74?at=default) OK to use?", "markup": "markdown", "html": "<p>I am looking to submit a PR to <a href=\"https://github.com/osrf/homebrew-simulation/\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/osrf/homebrew-simulation/</a> to make a new bottle for ignition-rendering0 for <a href=\"#!/ignitionrobotics/ign-gui/pull-requests/143\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-gui/pull-requests/143</a></p>\n<p>From a comment at <a href=\"#!/ignitionrobotics/ign-gui/pull-requests/143/remove-override-of-onvisibilitychange-for/diff#comment-71298175\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-gui/pull-requests/143/remove-override-of-onvisibilitychange-for/diff#comment-71298175</a> I'm led to believe this is a straightforward thing to do, I just have to bump to a newer commit. If that's the case, is the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/commits/13c229e9fd45b8daff9f7705a5717a96ccd9ba74?at=default\" rel=\"nofollow\">current default tip</a> OK to use?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-07-31T18:23:32.618309+00:00", "milestone": null, "updated_on": "2018-09-05T20:42:24.157449+00:00", "type": "issue", "id": 28}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/29/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/29/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/29/depthcamera-compilation-error-on-clang"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/29/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "DepthCamera compilation error on clang / macOS", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "There is a compilation error for clang / macOS in `OgreScene.cc` related to the `DepthCamera` class since pull request #93. I haven't tested with clang on Ubuntu yet.\r\n\r\n~~~\r\nogre/src/OgreScene.cc:376:34: error: no viable conversion from 'shared_ptr<ignition::rendering::v1::OgreDepthCamera>' to\r\n      'shared_ptr<ignition::rendering::v1::OgreObject>'\r\n  bool result = this->InitObject(camera, _id, _name);\r\n                                 ^~~~~~\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3703:23: note: candidate constructor not viable: no known conversion from\r\n      'ignition::rendering::v1::OgreDepthCameraPtr' (aka 'std::__1::shared_ptr<ignition::rendering::v1::OgreDepthCamera>') to 'std::nullptr_t' (aka 'nullptr_t') for 1st argument\r\n    _LIBCPP_CONSTEXPR shared_ptr(nullptr_t) _NOEXCEPT;\r\n                      ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3717:5: note: candidate constructor not viable: no known conversion from\r\n      'ignition::rendering::v1::OgreDepthCameraPtr' (aka 'std::__1::shared_ptr<ignition::rendering::v1::OgreDepthCamera>') to 'const\r\n      std::__1::shared_ptr<ignition::rendering::v1::OgreObject> &' for 1st argument\r\n    shared_ptr(const shared_ptr& __r) _NOEXCEPT;\r\n    ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3725:5: note: candidate constructor not viable: no known conversion from\r\n      'ignition::rendering::v1::OgreDepthCameraPtr' (aka 'std::__1::shared_ptr<ignition::rendering::v1::OgreDepthCamera>') to\r\n      'std::__1::shared_ptr<ignition::rendering::v1::OgreObject> &&' for 1st argument\r\n    shared_ptr(shared_ptr&& __r) _NOEXCEPT;\r\n    ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3720:9: note: candidate template ignored: requirement\r\n      'is_convertible<OgreDepthCamera *, element_type *>::value' was not satisfied [with _Yp = ignition::rendering::v1::OgreDepthCamera]\r\n        shared_ptr(const shared_ptr<_Yp>& __r,\r\n        ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3726:52: note: candidate template ignored: requirement\r\n      'is_convertible<OgreDepthCamera *, element_type *>::value' was not satisfied [with _Yp = ignition::rendering::v1::OgreDepthCamera]\r\n    template<class _Yp> _LIBCPP_INLINE_VISIBILITY  shared_ptr(shared_ptr<_Yp>&& __r,\r\n                                                   ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3745:9: note: candidate template ignored: could not match 'unique_ptr'\r\n      against 'shared_ptr'\r\n        shared_ptr(unique_ptr<_Yp, _Dp>&&,\r\n        ^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3754:9: note: candidate template ignored: could not match 'unique_ptr'\r\n      against 'shared_ptr'\r\n        shared_ptr(unique_ptr<_Yp, _Dp>&&,\r\n        ^\r\n/Users/jenkins/Desktop/ign-rendering/ogre/include/ignition/rendering/ogre/OgreScene.hh:142:56: note: passing argument to parameter '_object' here\r\n      protected: virtual bool InitObject(OgreObjectPtr _object,\r\n                                                       ^\r\n1 error generated.\r\n\r\n~~~\r\n\r\nThe clearest way to see the error is by adding the following `static_assert`:\r\n\r\n~~~\r\ndiff -r 153ef8853a87 ogre/src/OgreDepthCamera.cc\r\n--- a/ogre/src/OgreDepthCamera.cc       Thu Oct 11 11:47:22 2018 -0700\r\n+++ b/ogre/src/OgreDepthCamera.cc       Thu Oct 11 15:59:53 2018 -0700\r\n@@ -15,6 +15,7 @@\r\n  *\r\n */\r\n \r\n+#include <type_traits>\r\n #include \"ignition/rendering/ogre/OgreDepthCamera.hh\"\r\n #include <ignition/math/Helpers.hh>\r\n #if (_WIN32)\r\n@@ -30,6 +31,7 @@\r\n OgreDepthCamera::OgreDepthCamera()\r\n   : dataPtr(new OgreDepthCameraPrivate())\r\n {\r\n+  static_assert(std::is_convertible<OgreDepthCamera*, OgreObject*>::value);\r\n }\r\n \r\n //////////////////////////////////////////////////\r\n~~~\r\n\r\nThis passes on Ubuntu with gcc, but fails on macOS with clang:\r\n\r\n~~~\r\nogre/src/OgreDepthCamera.cc:34:3:\r\n error: static_assert failed due to requirement 'std::is_convertible<OgreDepthCamera *, OgreObject *>::value'\r\n  static_assert(std::is_convertible<OgreDepthCamera*, OgreObject*>::value);\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n1 error generated.\r\nmake[2]: *** [ogre/src/CMakeFiles/ignition-rendering1-ogre.dir/OgreDepthCamera.cc.o] Error 1\r\nmake[1]: *** [ogre/src/CMakeFiles/ignition-rendering1-ogre.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n~~~\r\n\r\ncc @JChoclin", "markup": "markdown", "html": "<p>There is a compilation error for clang / macOS in <code>OgreScene.cc</code> related to the <code>DepthCamera</code> class since <a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/93/depth-camera\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #93</a>. I haven't tested with clang on Ubuntu yet.</p>\n<div class=\"codehilite\"><pre><span></span>ogre/src/OgreScene.cc:376:34: error: no viable conversion from &#39;shared_ptr&lt;ignition::rendering::v1::OgreDepthCamera&gt;&#39; to\n      &#39;shared_ptr&lt;ignition::rendering::v1::OgreObject&gt;&#39;\n  bool result = this-&gt;InitObject(camera, _id, _name);\n                                 ^~~~~~\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3703:23: note: candidate constructor not viable: no known conversion from\n      &#39;ignition::rendering::v1::OgreDepthCameraPtr&#39; (aka &#39;std::__1::shared_ptr&lt;ignition::rendering::v1::OgreDepthCamera&gt;&#39;) to &#39;std::nullptr_t&#39; (aka &#39;nullptr_t&#39;) for 1st argument\n    _LIBCPP_CONSTEXPR shared_ptr(nullptr_t) _NOEXCEPT;\n                      ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3717:5: note: candidate constructor not viable: no known conversion from\n      &#39;ignition::rendering::v1::OgreDepthCameraPtr&#39; (aka &#39;std::__1::shared_ptr&lt;ignition::rendering::v1::OgreDepthCamera&gt;&#39;) to &#39;const\n      std::__1::shared_ptr&lt;ignition::rendering::v1::OgreObject&gt; &amp;&#39; for 1st argument\n    shared_ptr(const shared_ptr&amp; __r) _NOEXCEPT;\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3725:5: note: candidate constructor not viable: no known conversion from\n      &#39;ignition::rendering::v1::OgreDepthCameraPtr&#39; (aka &#39;std::__1::shared_ptr&lt;ignition::rendering::v1::OgreDepthCamera&gt;&#39;) to\n      &#39;std::__1::shared_ptr&lt;ignition::rendering::v1::OgreObject&gt; &amp;&amp;&#39; for 1st argument\n    shared_ptr(shared_ptr&amp;&amp; __r) _NOEXCEPT;\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3720:9: note: candidate template ignored: requirement\n      &#39;is_convertible&lt;OgreDepthCamera *, element_type *&gt;::value&#39; was not satisfied [with _Yp = ignition::rendering::v1::OgreDepthCamera]\n        shared_ptr(const shared_ptr&lt;_Yp&gt;&amp; __r,\n        ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3726:52: note: candidate template ignored: requirement\n      &#39;is_convertible&lt;OgreDepthCamera *, element_type *&gt;::value&#39; was not satisfied [with _Yp = ignition::rendering::v1::OgreDepthCamera]\n    template&lt;class _Yp&gt; _LIBCPP_INLINE_VISIBILITY  shared_ptr(shared_ptr&lt;_Yp&gt;&amp;&amp; __r,\n                                                   ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3745:9: note: candidate template ignored: could not match &#39;unique_ptr&#39;\n      against &#39;shared_ptr&#39;\n        shared_ptr(unique_ptr&lt;_Yp, _Dp&gt;&amp;&amp;,\n        ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory:3754:9: note: candidate template ignored: could not match &#39;unique_ptr&#39;\n      against &#39;shared_ptr&#39;\n        shared_ptr(unique_ptr&lt;_Yp, _Dp&gt;&amp;&amp;,\n        ^\n/Users/jenkins/Desktop/ign-rendering/ogre/include/ignition/rendering/ogre/OgreScene.hh:142:56: note: passing argument to parameter &#39;_object&#39; here\n      protected: virtual bool InitObject(OgreObjectPtr _object,\n                                                       ^\n1 error generated.\n</pre></div>\n\n\n<p>The clearest way to see the error is by adding the following <code>static_assert</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 153ef8853a87 ogre/src/OgreDepthCamera.cc</span>\n<span class=\"gd\">--- a/ogre/src/OgreDepthCamera.cc       Thu Oct 11 11:47:22 2018 -0700</span>\n<span class=\"gi\">+++ b/ogre/src/OgreDepthCamera.cc       Thu Oct 11 15:59:53 2018 -0700</span>\n<span class=\"gu\">@@ -15,6 +15,7 @@</span>\n  *\n */\n\n<span class=\"gi\">+#include &lt;type_traits&gt;</span>\n #include &quot;ignition/rendering/ogre/OgreDepthCamera.hh&quot;\n #include &lt;ignition/math/Helpers.hh&gt;\n #if (_WIN32)\n<span class=\"gu\">@@ -30,6 +31,7 @@</span>\n OgreDepthCamera::OgreDepthCamera()\n   : dataPtr(new OgreDepthCameraPrivate())\n {\n<span class=\"gi\">+  static_assert(std::is_convertible&lt;OgreDepthCamera*, OgreObject*&gt;::value);</span>\n }\n\n //////////////////////////////////////////////////\n</pre></div>\n\n\n<p>This passes on Ubuntu with gcc, but fails on macOS with clang:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">ogre</span><span class=\"o\">/</span><span class=\"nt\">src</span><span class=\"o\">/</span><span class=\"nt\">OgreDepthCamera</span><span class=\"p\">.</span><span class=\"nc\">cc</span><span class=\"p\">:</span><span class=\"nd\">34</span><span class=\"p\">:</span><span class=\"nd\">3</span><span class=\"o\">:</span>\n <span class=\"nt\">error</span><span class=\"o\">:</span> <span class=\"nt\">static_assert</span> <span class=\"nt\">failed</span> <span class=\"nt\">due</span> <span class=\"nt\">to</span> <span class=\"nt\">requirement</span> <span class=\"s1\">&#39;std::is_convertible&lt;OgreDepthCamera *, OgreObject *&gt;::value&#39;</span>\n  <span class=\"nt\">static_assert</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">is_convertible</span><span class=\"o\">&lt;</span><span class=\"nt\">OgreDepthCamera</span><span class=\"o\">*,</span> <span class=\"nt\">OgreObject</span><span class=\"o\">*&gt;</span><span class=\"p\">::</span><span class=\"nd\">value</span><span class=\"o\">);</span>\n  <span class=\"o\">^</span>             <span class=\"o\">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>\n<span class=\"nt\">1</span> <span class=\"nt\">error</span> <span class=\"nt\">generated</span><span class=\"o\">.</span>\n<span class=\"nt\">make</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"cp\">[</span><span class=\"nx\">ogre</span><span class=\"p\">/</span><span class=\"nx\">src</span><span class=\"p\">/</span><span class=\"nx\">CMakeFiles</span><span class=\"p\">/</span><span class=\"nx\">ignition</span><span class=\"na\">-rendering1-ogre.dir</span><span class=\"p\">/</span><span class=\"nx\">OgreDepthCamera.cc.o</span><span class=\"cp\">]</span> <span class=\"nt\">Error</span> <span class=\"nt\">1</span>\n<span class=\"nt\">make</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"cp\">[</span><span class=\"nx\">ogre</span><span class=\"p\">/</span><span class=\"nx\">src</span><span class=\"p\">/</span><span class=\"nx\">CMakeFiles</span><span class=\"p\">/</span><span class=\"nx\">ignition</span><span class=\"na\">-rendering1-ogre.dir</span><span class=\"p\">/</span><span class=\"nb\">all</span><span class=\"cp\">]</span> <span class=\"nt\">Error</span> <span class=\"nt\">2</span>\n<span class=\"nt\">make</span><span class=\"o\">:</span> <span class=\"o\">***</span> <span class=\"cp\">[</span><span class=\"kc\">all</span><span class=\"cp\">]</span> <span class=\"nt\">Error</span> <span class=\"nt\">2</span>\n</pre></div>\n\n\n<p>cc @JChoclin</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-10-11T23:06:18.265283+00:00", "milestone": null, "updated_on": "2018-10-25T21:42:35.687361+00:00", "type": "issue", "id": 29}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/30/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/30.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/30/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/30/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/30/new-gz11-prerelease-for-brew-bottles"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/30/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "New gz11 prerelease for brew bottles", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The homebrew build was recently fixed, so it would be nice to make a new prerelease of ignition-rendering1 (gz11) so we can build homebrew bottles. Is now ok, or are there other pull requests that we want to merge first?", "markup": "markdown", "html": "<p>The homebrew build was recently fixed, so it would be nice to make a new prerelease of ignition-rendering1 (gz11) so we can build homebrew bottles. Is now ok, or are there other pull requests that we want to merge first?</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-10-25T21:44:57.738071+00:00", "milestone": null, "updated_on": "2018-10-26T17:17:29.823809+00:00", "type": "issue", "id": 30}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/31/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/31/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/31/rtshadersystemmaterial-installed-into"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/31/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "RTShaderSystem.material installed into weird place", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The `RTShaderSystem.material` file is installed into a weird place:\n\n*  `<prefix>/share/gazebo-/media/rtshaderlib/materials/RTShaderSystem.material`\n\n#!/ignitionrobotics/ign-rendering/src/5b63d5869b865da7f5ccb041abbb905f272ab5a9/ogre/src/media/rtshaderlib150/materials/CMakeLists.txt?at=default&fileviewer=file-view-default#CMakeLists.txt-4\n\n@iche033 where should this file be installed?", "markup": "markdown", "html": "<p>The <code>RTShaderSystem.material</code> file is installed into a weird place:</p>\n<ul>\n<li><code>&lt;prefix&gt;/share/gazebo-/media/rtshaderlib/materials/RTShaderSystem.material</code></li>\n</ul>\n<p><a href=\"#!/ignitionrobotics/ign-rendering/src/5b63d5869b865da7f5ccb041abbb905f272ab5a9/ogre/src/media/rtshaderlib150/materials/CMakeLists.txt?at=default&amp;fileviewer=file-view-default#CMakeLists.txt-4\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-rendering/src/5b63d5869b865da7f5ccb041abbb905f272ab5a9/ogre/src/media/rtshaderlib150/materials/CMakeLists.txt?at=default&amp;fileviewer=file-view-default#CMakeLists.txt-4</a></p>\n<p>@iche033 where should this file be installed?</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-10-26T21:40:11.680066+00:00", "milestone": null, "updated_on": "2018-10-26T23:03:45.124079+00:00", "type": "issue", "id": 31}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/32/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/32.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/32/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/32/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/32/ogre1x-point-and-spot-lights-dont-cast"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/32/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "[Ogre1.x] Point and spot lights don't cast shadows", "component": null, "votes": 2, "watches": 5, "content": {"raw": "# Summary\n\nAll lights have the [Light::SetCastShadow](#!/ignitionrobotics/ign-rendering/src/5b63d5869b865da7f5ccb041abbb905f272ab5a9/include/ignition/rendering/Light.hh?fileviewer=file-view-default#Light.hh-106) function, but it only works if the light type is directional.\n\n# Motivation\n\nI noticed this while reviewing [this Ign-Gazebo PR](#!/ignitionrobotics/ign-gazebo/pull-requests/70/add-support-for-lights/). The issue is analogous to [Gazebo issue 2083](https://bitbucket.org/osrf/gazebo/issues/2083/point-and-spot-lights-dont-cast-shadows).\n\n# Describe alternatives you've considered\n\n* Implement shadows for all light types\n* Print a warning if the function is called for a light that doesn't support shadows\n\n# Additional context\n\nThis blue spot light had shadows on:\n\n![lightshadow.png](data/bitbucket.org/repo/zq9ear/images/2194816254-lightshadow.png)", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>All lights have the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/5b63d5869b865da7f5ccb041abbb905f272ab5a9/include/ignition/rendering/Light.hh?fileviewer=file-view-default#Light.hh-106\" rel=\"nofollow\">Light::SetCastShadow</a> function, but it only works if the light type is directional.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>I noticed this while reviewing <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/70/add-support-for-lights/\" rel=\"nofollow\">this Ign-Gazebo PR</a>. The issue is analogous to <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/2083/point-and-spot-lights-dont-cast-shadows\" rel=\"nofollow\">Gazebo issue 2083</a>.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<ul>\n<li>Implement shadows for all light types</li>\n<li>Print a warning if the function is called for a light that doesn't support shadows</li>\n</ul>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>\n<p>This blue spot light had shadows on:</p>\n<p><img alt=\"lightshadow.png\" src=\"data/bitbucket.org/repo/zq9ear/images/2194816254-lightshadow.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-10-30T17:48:03.394565+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:39.899724+00:00", "type": "issue", "id": 32}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/33/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/33.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/33/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/33/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/33/clean-properly-after-each-test"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/33/vote"}}, "reporter": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "title": "Clean properly after each test", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For some reason several test fails if they update a camera. This happens with RaysUnitBox and LaserVertical tests in [gpu_rays tests](#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#chg-test/integration/gpu_rays.cc). \n\nIf you comment one of them, it passes but if you run both, the second will always fails. Order doesn't matter.\n\nIt looks like something is not cleaned properly.", "markup": "markdown", "html": "<p>For some reason several test fails if they update a camera. This happens with RaysUnitBox and LaserVertical tests in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/98/add-gpu-rays-class-for-lidar-simulation/diff#chg-test/integration/gpu_rays.cc\" rel=\"nofollow\">gpu_rays tests</a>. </p>\n<p>If you comment one of them, it passes but if you run both, the second will always fails. Order doesn't matter.</p>\n<p>It looks like something is not cleaned properly.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-11-05T21:28:25.258999+00:00", "milestone": null, "updated_on": "2018-11-09T20:25:38.066322+00:00", "type": "issue", "id": 33}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/34/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/34.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/34/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/34/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/34/ogre2x-not-all-lights-cast-shadows"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/34/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre2.x] Not all lights cast shadows", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description \nshadow maps are limited to those defined in [PbsMaterials.compositor ](#!/ignitionrobotics/ign-rendering/src/gz11/ogre2/src/media/2.0/scripts/Compositors/PbsMaterials.compositor)\n\nWe need to add the ability to create more shadow maps for new lights added to the scene\n\n# Steps to Reproduce\nAdd two spot lights.\n\n**Expected behavior:**\n\nBoth lights should cast shadows\n\n**Actual behavior:**\n\nOnly the spot light closest to the camera casts shadows\n\n**Reproduces how often:**\n\nall the time\n\n# Versions\nogre2 in `gz11` branch", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>shadow maps are limited to those defined in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/gz11/ogre2/src/media/2.0/scripts/Compositors/PbsMaterials.compositor\" rel=\"nofollow\">PbsMaterials.compositor </a></p>\n<p>We need to add the ability to create more shadow maps for new lights added to the scene</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>Add two spot lights.</p>\n<p><strong>Expected behavior:</strong></p>\n<p>Both lights should cast shadows</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Only the spot light closest to the camera casts shadows</p>\n<p><strong>Reproduces how often:</strong></p>\n<p>all the time</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>ogre2 in <code>gz11</code> branch</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-09T23:12:06.481570+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:36.042794+00:00", "type": "issue", "id": 34}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/35/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/35.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/35/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/35/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/35/ogre1x-gpurays-integration-tests-are"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/35/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre1.x] GpuRays integration tests are failing on homebrew", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Jenkins homebrew job caught two test failures:\n\n`GpuRays/GpuRaysTest.RaysUnitBox/ogre`\n\n`GpuRays/GpuRaysTest.LaserVertical/ogre`\n\nIn gazebo, the `LaserVertical` test is disabled for macOS so that's a known issue but `RaysUnitBox` should pass. \n\nOutput from jenkins below:\n\nGpuRays/GpuRaysTest.RaysUnitBox/ogre\n\n```\n/Users/jenkins/workspace/ignition_rendering-ci-pr_any-homebrew-amd64/ign-rendering/test/integration/gpu_rays.cc:248\nThe difference between scan[mid] and expectedRangeAtMidPointBox1 is 2.5, which exceeds 1e-4, where\nscan[mid] evaluates to 0,\nexpectedRangeAtMidPointBox1 evaluates to 2.5, and\n1e-4 evaluates to 0.0001.\n```\n\nGpuRays/GpuRaysTest.LaserVertical/ogre\n\n```\n/Users/jenkins/workspace/ignition_rendering-ci-pr_any-homebrew-amd64/ign-rendering/test/integration/gpu_rays.cc:382\nThe difference between scan[i * hRayCount * channels + mid] and expectedRange is 0.094709730238659473, which exceeds 1e-3, where\nscan[i * hRayCount * channels + mid] evaluates to 0.25884366035461426,\nexpectedRange evaluates to 0.35355339059327373, and\n1e-3 evaluates to 0.001.\n```", "markup": "markdown", "html": "<p>Jenkins homebrew job caught two test failures:</p>\n<p><code>GpuRays/GpuRaysTest.RaysUnitBox/ogre</code></p>\n<p><code>GpuRays/GpuRaysTest.LaserVertical/ogre</code></p>\n<p>In gazebo, the <code>LaserVertical</code> test is disabled for macOS so that's a known issue but <code>RaysUnitBox</code> should pass. </p>\n<p>Output from jenkins below:</p>\n<p>GpuRays/GpuRaysTest.RaysUnitBox/ogre</p>\n<div class=\"codehilite\"><pre><span></span>/Users/jenkins/workspace/ignition_rendering-ci-pr_any-homebrew-amd64/ign-rendering/test/integration/gpu_rays.cc:248\nThe difference between scan[mid] and expectedRangeAtMidPointBox1 is 2.5, which exceeds 1e-4, where\nscan[mid] evaluates to 0,\nexpectedRangeAtMidPointBox1 evaluates to 2.5, and\n1e-4 evaluates to 0.0001.\n</pre></div>\n\n\n<p>GpuRays/GpuRaysTest.LaserVertical/ogre</p>\n<div class=\"codehilite\"><pre><span></span>/Users/jenkins/workspace/ignition_rendering-ci-pr_any-homebrew-amd64/ign-rendering/test/integration/gpu_rays.cc:382\nThe difference between scan[i * hRayCount * channels + mid] and expectedRange is 0.094709730238659473, which exceeds 1e-3, where\nscan[i * hRayCount * channels + mid] evaluates to 0.25884366035461426,\nexpectedRange evaluates to 0.35355339059327373, and\n1e-3 evaluates to 0.001.\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-13T22:59:38.899478+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:34.632016+00:00", "type": "issue", "id": 35}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/36/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/36.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/36/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/36/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/36/wrong-ogre-library-loaded-at-runtime-when"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/36/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Wrong ogre library loaded at runtime when Ogre1.x and Ogre2.x are both installed", "component": null, "votes": 0, "watches": 3, "content": {"raw": "# Description \nCompilation works fine and the correct version of ogre libraries are linked but the wrong version of ogre library gets loaded during run time. It always loads the first libOgreMain.so it finds in the path, resulting in memory corruption when a test or a demo is run.\n\n# Steps to Reproduce\n1. Install ogre 1.9 (e.g. libogre-1.9-dev)\n\n1. install ogre 2.1 (e.g. from source into $HOME/local)\n\n1. build ign-rendering\n\n1. run `make test`\n\n**Expected behavior:**\n\ntests run without crashing\n\n**Actual behavior:**\n\ntest crashes with a msg about memory corruption", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>Compilation works fine and the correct version of ogre libraries are linked but the wrong version of ogre library gets loaded during run time. It always loads the first libOgreMain.so it finds in the path, resulting in memory corruption when a test or a demo is run.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>\n<p>Install ogre 1.9 (e.g. libogre-1.9-dev)</p>\n</li>\n<li>\n<p>install ogre 2.1 (e.g. from source into $HOME/local)</p>\n</li>\n<li>\n<p>build ign-rendering</p>\n</li>\n<li>\n<p>run <code>make test</code></p>\n</li>\n</ol>\n<p><strong>Expected behavior:</strong></p>\n<p>tests run without crashing</p>\n<p><strong>Actual behavior:</strong></p>\n<p>test crashes with a msg about memory corruption</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-16T20:16:49.396638+00:00", "milestone": null, "updated_on": "2020-03-10T02:49:40.679880+00:00", "type": "issue", "id": 36}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/37/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/37.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/37/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/37/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/37/ogre2x-only-2-spot-lights-are-visible-at"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/37/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre2.x] Only 2 spot lights are visible at any one time", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description \nWhen multiple spots lights are created and added to the scene, only two of them are visible at any one time. The choice of which two spot lights that are enabled is dependent on the camera pose.\n\n# Steps to Reproduce\n1. Create 3 spot lights and add to the scene\n2. Orient the camera to look at all 3 lights\n\n**Expected behavior:**\n\nAll 3 spots lights should be visible\n\n**Actual behavior:**\n\nThe 2 spot lights closer to the camera are visible while the 3rd one is not.", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>When multiple spots lights are created and added to the scene, only two of them are visible at any one time. The choice of which two spot lights that are enabled is dependent on the camera pose.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Create 3 spot lights and add to the scene</li>\n<li>Orient the camera to look at all 3 lights</li>\n</ol>\n<p><strong>Expected behavior:</strong></p>\n<p>All 3 spots lights should be visible</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The 2 spot lights closer to the camera are visible while the 3rd one is not.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-11-19T22:51:19.387069+00:00", "milestone": null, "updated_on": "2019-02-08T19:14:58.798875+00:00", "type": "issue", "id": 37}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/38/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/38.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/38/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/38/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/38/ogre1x-multi-line-text-not-rendered"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/38/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre1.x] Multi-line text not rendered correctly", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description \nOgreText object doesn't render multiline string properly. \n\n# Steps to Reproduce\n1. Create an ignition::rendering::Text object and give it a string: \"Hello\\nWorld\"\n\n**Expected behavior:**\n\nThe text should be rendered as\n\n```\nHello\nWorld\n```\n\n**Actual behavior:**\n\nText is rendered as:\n\n```\nHello  World\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>OgreText object doesn't render multiline string properly. </p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Create an ignition::rendering::Text object and give it a string: \"Hello\\nWorld\"</li>\n</ol>\n<p><strong>Expected behavior:</strong></p>\n<p>The text should be rendered as</p>\n<div class=\"codehilite\"><pre><span></span>Hello\nWorld\n</pre></div>\n\n\n<p><strong>Actual behavior:</strong></p>\n<p>Text is rendered as:</p>\n<div class=\"codehilite\"><pre><span></span>Hello  World\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-11-21T20:05:20.646146+00:00", "milestone": null, "updated_on": "2018-11-29T01:12:37.314473+00:00", "type": "issue", "id": 38}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/39/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/39.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/39/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/39/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/39/ogre1x-mesh-material-memory-leak"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/39/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre1.x] Mesh material memory leak", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Each time a mesh (submesh) is created, a new default material is also created for the mesh. That new material is never deleted.\r\n\r\n[related code](#!/ignitionrobotics/ign-rendering/src/59625e7f3e78559a595a1aef698312afb94c8a24/ogre/src/OgreMeshFactory.cc?at=gz11&fileviewer=file-view-default#OgreMeshFactory.cc-428:434)", "markup": "markdown", "html": "<p>Each time a mesh (submesh) is created, a new default material is also created for the mesh. That new material is never deleted.</p>\n<p><a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/59625e7f3e78559a595a1aef698312afb94c8a24/ogre/src/OgreMeshFactory.cc?at=gz11&amp;fileviewer=file-view-default#OgreMeshFactory.cc-428:434\" rel=\"nofollow\">related code</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-11-26T21:37:05.588241+00:00", "milestone": null, "updated_on": "2018-11-29T01:07:26.226296+00:00", "type": "issue", "id": 39}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/40/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/40/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/40/rendering-engine-plugins-not-loaded-on"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/40/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Rendering engine plugins not loaded on Windows", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When tests are runs on jenkins, the rendering plugins are not found and prints out this msg:\r\n\r\n```\r\n1: [Err] [d:\\jenkins\\workspace\\ign_rendering-ci-win\\ws\\ign-rendering\\src\\renderenginemanager.cc:268] Failed to load plugin [ignition-rendering0-ogre] : couldn't find shared library.\r\n```\r\n\r\nIt could be a path problem", "markup": "markdown", "html": "<p>When tests are runs on jenkins, the rendering plugins are not found and prints out this msg:</p>\n<div class=\"codehilite\"><pre><span></span>1: [Err] [d:\\jenkins\\workspace\\ign_rendering-ci-win\\ws\\ign-rendering\\src\\renderenginemanager.cc:268] Failed to load plugin [ignition-rendering0-ogre] : couldn&#39;t find shared library.\n</pre></div>\n\n\n<p>It could be a path problem</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-04T20:06:22.912531+00:00", "milestone": null, "updated_on": "2018-12-04T20:06:22.912531+00:00", "type": "issue", "id": 40}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/41/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/41.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/41/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/41/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/41/ogre2-creates-glsl-files-in-the-run"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/41/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Ogre2 creates glsl files in the run directory", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\n\n* [ X ] Put an X between the brackets on this line if you have done all of the following:\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\n    * Checked that your issue isn't already filed.\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\n\n# Description \n\nAfter running an executable which uses Ogre2, a lot of `*.glsl` files show up in the directory where the executable was run from.\n\n# Steps to Reproduce\n\n1. Build the ogre2 demo:\n\n        cd examples/ogre2_demo\n        mkdir build\n        cd build\n        cmake ..\n        make\n\n2. Run the demo:\n\n    `./ogre2_demo`\n\n3. Check the directory, new files like the following were created:\n\n        ~/ign-rendering/examples/ogre2_demo/build$ ls\n        536871296PixelShader_ps.glsl   536903808VertexShader_vs.glsl  536969600PixelShader_ps.glsl   537035136VertexShader_vs.glsl  CMakeTmp             ogre2_demo\n        536871296VertexShader_vs.glsl  536903936PixelShader_ps.glsl   536969600VertexShader_vs.glsl  537067904PixelShader_ps.glsl   Makefile\n        536903680PixelShader_ps.glsl   536903936VertexShader_vs.glsl  537002368PixelShader_ps.glsl   537067904VertexShader_vs.glsl  cmake_install.cmake\n        536903680VertexShader_vs.glsl  536936832PixelShader_ps.glsl   537002368VertexShader_vs.glsl  CMakeCache.txt                 example_config.hh\n        536903808PixelShader_ps.glsl   536936832VertexShader_vs.glsl  537035136PixelShader_ps.glsl   CMakeFiles                     media\n\n**Expected behavior:**  \n\nI'd expect ign-rendering to clean up after itself, or at least to create the files under `/tmp`?\n\n**Actual behavior:**\n\nIt leaves a bunch of files\n\n**Reproduces how often:** \n\nAlways\n\n# Versions\n\n`gz11` branch", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>After running an executable which uses Ogre2, a lot of <code>*.glsl</code> files show up in the directory where the executable was run from.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>\n<p>Build the ogre2 demo:</p>\n<div class=\"codehilite\"><pre><span></span>cd examples/ogre2_demo\nmkdir build\ncd build\ncmake ..\nmake\n</pre></div>\n\n\n</li>\n<li>\n<p>Run the demo:</p>\n<p><code>./ogre2_demo</code></p>\n</li>\n<li>\n<p>Check the directory, new files like the following were created:</p>\n<div class=\"codehilite\"><pre><span></span>~/ign-rendering/examples/ogre2_demo/build$ ls\n536871296PixelShader_ps.glsl   536903808VertexShader_vs.glsl  536969600PixelShader_ps.glsl   537035136VertexShader_vs.glsl  CMakeTmp             ogre2_demo\n536871296VertexShader_vs.glsl  536903936PixelShader_ps.glsl   536969600VertexShader_vs.glsl  537067904PixelShader_ps.glsl   Makefile\n536903680PixelShader_ps.glsl   536903936VertexShader_vs.glsl  537002368PixelShader_ps.glsl   537067904VertexShader_vs.glsl  cmake_install.cmake\n536903680VertexShader_vs.glsl  536936832PixelShader_ps.glsl   537002368VertexShader_vs.glsl  CMakeCache.txt                 example_config.hh\n536903808PixelShader_ps.glsl   536936832VertexShader_vs.glsl  537035136PixelShader_ps.glsl   CMakeFiles                     media\n</pre></div>\n\n\n</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>I'd expect ign-rendering to clean up after itself, or at least to create the files under <code>/tmp</code>?</p>\n<p><strong>Actual behavior:</strong></p>\n<p>It leaves a bunch of files</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>Always</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p><code>gz11</code> branch</p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-12-21T02:31:51.167056+00:00", "milestone": null, "updated_on": "2019-01-09T19:46:19.503170+00:00", "type": "issue", "id": 41}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/42/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/42.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/42/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/42/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/42/ogre2-incorrect-texture-mapping"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/42/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Ogre2 incorrect texture mapping", "component": null, "votes": 0, "watches": 2, "content": {"raw": "# Prerequisites\n\n* [X] Put an X between the brackets on this line if you have done all of the following:\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\n    * Checked that your issue isn't already filed.\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\n\n# Description \n\nOgre2 does not produce a correct texture mapping with some (or all) collada files.\n\n# Steps to Reproduce\n\n1. This pull request is required: #!/ignitionrobotics/ign-gazebo/pull-requests/112\n2. Then run `ign-gazebo -f examples/worlds/fuel.world` in the root of the ign-gazebo source directory.\n3. Look at the backback, and it should look like:\n\n![bad_texture.png](data/bitbucket.org/repo/zq9ear/images/3066824261-bad_texture.png)\n\n**Expected behavior:**  \n\nWhen ogre1x is used, the backpack's texture looks  correct.\n\n![correct_texture.png](data/bitbucket.org/repo/zq9ear/images/1069327453-correct_texture.png)\n\n**Reproduces how often:** \n\nOccurs 100% of the time.", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[X] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Ogre2 does not produce a correct texture mapping with some (or all) collada files.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>This pull request is required: <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/112\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-gazebo/pull-requests/112</a></li>\n<li>Then run <code>ign-gazebo -f examples/worlds/fuel.world</code> in the root of the ign-gazebo source directory.</li>\n<li>Look at the backback, and it should look like:</li>\n</ol>\n<p><img alt=\"bad_texture.png\" src=\"data/bitbucket.org/repo/zq9ear/images/3066824261-bad_texture.png\" /></p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>When ogre1x is used, the backpack's texture looks  correct.</p>\n<p><img alt=\"correct_texture.png\" src=\"data/bitbucket.org/repo/zq9ear/images/1069327453-correct_texture.png\" /></p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>Occurs 100% of the time.</p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "closed", "version": null, "edited_on": null, "created_on": "2019-01-24T16:58:15.861377+00:00", "milestone": null, "updated_on": "2019-02-07T18:12:42.817642+00:00", "type": "issue", "id": 42}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/43/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/43.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/43/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/43/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/43/should-i-have-both-ogre-and-ogre2"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/43/vote"}}, "reporter": {"display_name": "Pei JIA", "uuid": "{18260a78-aa91-4162-bcbb-4faf42e302fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B18260a78-aa91-4162-bcbb-4faf42e302fb%7D"}, "html": {"href": "https://bitbucket.org/%7B18260a78-aa91-4162-bcbb-4faf42e302fb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/df5d59ece7861fc9ec3aa8eeac85b8f2d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPJ-6.png"}}, "nickname": "jiapei100", "type": "user", "account_id": "557058:0da63616-bdf0-4ee7-99c3-8aa2b48a02bd"}, "title": "Should I have both OGRE and OGRE2 installed?", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Hi, I successfully had OGRE2 installed, but while I tried to build ign-rendering, I got the following ERROR message:\r\n\r\n\r\n```\r\n#!console\r\n\r\n-- BUILD WARNINGS\r\n-- Cannot build component [ogre] - Missing: IgnOGRE (Components: RTShaderSystem, Terrain, Overlay)\r\n-- Cannot build component [optix] - Missing: OptiX\r\n-- END BUILD WARNINGS\r\n```\r\n\r\n\r\nAnd then, I tried to install OGRE. I had OGRE successfully built, but failed to install with the following ERROR message:\r\n\r\n```\r\n#!console\r\n\r\nSelecting previously unselected package ogre.\r\n(Reading database ... 677630 files and directories currently installed.)\r\nPreparing to unpack .../build/ogre_1.11.5-6_amd64.deb ...\r\nUnpacking ogre (1.11.5-6) ...\r\ndpkg: error processing archive \r\n ....../orge/build/ogre_1.11.5-6_amd64.deb (--install):\r\n trying to overwrite '/usr/local/include/OGRE/MeshLodGenerator/OgreLod0Stripifier.h', which is also in package ogre2 2.1.0-6\r\ndpkg-deb: error: paste subprocess was killed by signal (Broken pipe)\r\nErrors were encountered while processing:\r\n ....../orge/build/ogre_1.11.5-6_amd64.deb\r\n```\r\n\r\nSo, my questions are:\r\n1. Do I need to install both OGRE2 and OGRE?\r\n2. Is it possible to enable ALL components, including **RTShaderSystem**, **Terrain**, **Overlay** from OGRE2 ONLY?\r\n\r\n\r\nCheers", "markup": "markdown", "html": "<p>Hi, I successfully had OGRE2 installed, but while I tried to build ign-rendering, I got the following ERROR message:</p>\n<div class=\"codehilite language-console\"><pre><span></span><span class=\"go\">-- BUILD WARNINGS</span>\n<span class=\"go\">-- Cannot build component [ogre] - Missing: IgnOGRE (Components: RTShaderSystem, Terrain, Overlay)</span>\n<span class=\"go\">-- Cannot build component [optix] - Missing: OptiX</span>\n<span class=\"go\">-- END BUILD WARNINGS</span>\n</pre></div>\n\n\n<p>And then, I tried to install OGRE. I had OGRE successfully built, but failed to install with the following ERROR message:</p>\n<div class=\"codehilite language-console\"><pre><span></span><span class=\"go\">Selecting previously unselected package ogre.</span>\n<span class=\"go\">(Reading database ... 677630 files and directories currently installed.)</span>\n<span class=\"go\">Preparing to unpack .../build/ogre_1.11.5-6_amd64.deb ...</span>\n<span class=\"go\">Unpacking ogre (1.11.5-6) ...</span>\n<span class=\"go\">dpkg: error processing archive </span>\n<span class=\"go\"> ....../orge/build/ogre_1.11.5-6_amd64.deb (--install):</span>\n<span class=\"go\"> trying to overwrite &#39;/usr/local/include/OGRE/MeshLodGenerator/OgreLod0Stripifier.h&#39;, which is also in package ogre2 2.1.0-6</span>\n<span class=\"go\">dpkg-deb: error: paste subprocess was killed by signal (Broken pipe)</span>\n<span class=\"go\">Errors were encountered while processing:</span>\n<span class=\"go\"> ....../orge/build/ogre_1.11.5-6_amd64.deb</span>\n</pre></div>\n\n\n<p>So, my questions are:\n1. Do I need to install both OGRE2 and OGRE?\n2. Is it possible to enable ALL components, including <strong>RTShaderSystem</strong>, <strong>Terrain</strong>, <strong>Overlay</strong> from OGRE2 ONLY?</p>\n<p>Cheers</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-01-31T21:28:13.212138+00:00", "milestone": null, "updated_on": "2019-02-07T02:46:44.500224+00:00", "type": "issue", "id": 43}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/44/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/44/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/44/renable-tests-in-pipelines"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/44/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Renable tests in pipelines.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Pull request #142 disabled tests in pipelines because they are flaky. This issue is resolved when the tests are enabled and not flaky.", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-rendering/pull-requests/142/disable-tests-on-pipelines\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #142</a> disabled tests in pipelines because they are flaky. This issue is resolved when the tests are enabled and not flaky.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-14T15:27:51.885570+00:00", "milestone": null, "updated_on": "2019-02-14T15:27:51.885570+00:00", "type": "issue", "id": 44}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/45/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/45.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/45/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/45/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/45/unloading-engine-plugin-causes-tests-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/45/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Unloading engine plugin causes tests to crash on Windows", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Description \r\n\r\nOn windows, the tests run fine and calls to [unloadEnginePlugin](#!/ignitionrobotics/ign-rendering/src/8bfca2dce901c5bff2340c55006bdb52610a4a95/src/RenderEngineManager.cc#lines-397) return without an error but the tests crash on exit with the following msg\r\n\r\n```\r\nunknown file\r\nSEH exception with code 0xc0000005 thrown in the test body.\r\n```\r\nNote that this problem is observed on our windows jenkins machine that currently only run tests using the `ogre` rendering engine\r\n\r\n# Steps to Reproduce\r\n\r\n1. Run any ignition rendering test\r\n\r\n**Expected behavior:**  \r\n\r\nTest passes\r\n\r\n**Actual behavior:**\r\n\r\nTest crashes with error msg\r\n\r\n**Reproduces how often:** \r\n\r\nAll the time\r\n\r\n# Versions\r\n\r\nAll versions", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>On windows, the tests run fine and calls to <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/8bfca2dce901c5bff2340c55006bdb52610a4a95/src/RenderEngineManager.cc#lines-397\" rel=\"nofollow\">unloadEnginePlugin</a> return without an error but the tests crash on exit with the following msg</p>\n<div class=\"codehilite\"><pre><span></span>unknown file\nSEH exception with code 0xc0000005 thrown in the test body.\n</pre></div>\n\n\n<p>Note that this problem is observed on our windows jenkins machine that currently only run tests using the <code>ogre</code> rendering engine</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Run any ignition rendering test</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>Test passes</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Test crashes with error msg</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>All the time</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>All versions</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-08T00:39:14.436127+00:00", "milestone": null, "updated_on": "2019-03-08T00:39:43.879702+00:00", "type": "issue", "id": 45}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/46/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/46.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/46/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/46/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/46/obj-not-rendered-correctly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/46/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "OBJ not rendered correctly", "component": null, "votes": 0, "watches": 2, "content": {"raw": "# Description\r\n\r\nAn OBJ file is not rendered correctly using ign-gazebo1.\r\n\r\nThe model in question is available [here](https://app.ignitionrobotics.org/openrobotics/fuel/models/edgar). \r\n\r\n# Steps to Reproduce\r\n\r\n1. Run ign-gazebo using this SDF file:\r\n\r\n```\r\n<?xml version=\"1.0\" ?>\r\n<sdf version=\"1.6\">\r\n  <world name=\"edgar\">\r\n    <plugin\r\n      filename=\"libignition-gazebo1-physics-system.so\"\r\n      name=\"ignition::gazebo::systems::Physics\">\r\n    </plugin>\r\n    <plugin\r\n      filename=\"libignition-gazebo1-scene-broadcaster-system.so\"\r\n      name=\"ignition::gazebo::systems::SceneBroadcaster\">\r\n    </plugin>\r\n    <gui fullscreen=\"0\">\r\n      <!-- 3D scene -->\r\n      <plugin filename=\"Scene3D\" name=\"3D View\">\r\n        <ignition-gui>\r\n          <title>3D View</title>\r\n          <property type=\"bool\" key=\"showTitleBar\">false</property>\r\n          <property type=\"string\" key=\"state\">docked</property>\r\n        </ignition-gui>\r\n\r\n        <engine>ogre2</engine>\r\n        <scene>scene</scene>\r\n        <ambient_light>0.4 0.4 0.4</ambient_light>\r\n        <background_color>0.8 0.8 0.8</background_color>\r\n        <camera_pose>-6 0 6 0 0.5 0</camera_pose>\r\n        <service>/world/edgar/scene/info</service>\r\n        <pose_topic>/world/edgar/pose/info</pose_topic>\r\n        <scene_topic>/world/edgar/scene/info</scene_topic>\r\n        <deletion_topic>/world/edgar/scene/deletion</deletion_topic>\r\n      </plugin>\r\n\r\n      <!-- World control -->\r\n      <plugin filename=\"WorldControl\" name=\"World control\">\r\n        <ignition-gui>\r\n          <title>World control</title>\r\n          <property type=\"bool\" key=\"showTitleBar\">false</property>\r\n          <property type=\"bool\" key=\"resizable\">false</property>\r\n          <property type=\"double\" key=\"height\">72</property>\r\n          <property type=\"double\" key=\"width\">121</property>\r\n          <property type=\"double\" key=\"z\">1</property>\r\n\r\n          <property type=\"string\" key=\"state\">floating</property>\r\n          <anchors target=\"3D View\">\r\n            <line own=\"left\" target=\"left\"/>\r\n            <line own=\"bottom\" target=\"bottom\"/>\r\n          </anchors>\r\n        </ignition-gui>\r\n\r\n        <play_pause>true</play_pause>\r\n        <step>true</step>\r\n        <start_paused>true</start_paused>\r\n        <service>/world/edgar/control</service>\r\n        <stats_topic>/world/edgar/stats</stats_topic>\r\n\r\n      </plugin>\r\n\r\n      <!-- World statistics -->\r\n      <plugin filename=\"WorldStats\" name=\"World stats\">\r\n        <ignition-gui>\r\n          <title>World stats</title>\r\n          <property type=\"bool\" key=\"showTitleBar\">false</property>\r\n          <property type=\"bool\" key=\"resizable\">false</property>\r\n          <property type=\"double\" key=\"height\">110</property>\r\n          <property type=\"double\" key=\"width\">290</property>\r\n          <property type=\"double\" key=\"z\">1</property>\r\n\r\n          <property type=\"string\" key=\"state\">floating</property>\r\n          <anchors target=\"3D View\">\r\n            <line own=\"right\" target=\"right\"/>\r\n            <line own=\"bottom\" target=\"bottom\"/>\r\n          </anchors>\r\n        </ignition-gui>\r\n\r\n        <sim_time>true</sim_time>\r\n        <real_time>true</real_time>\r\n        <real_time_factor>true</real_time_factor>\r\n        <iterations>true</iterations>\r\n        <topic>/world/edgar/stats</topic>\r\n      </plugin>\r\n    </gui>\r\n\r\n    <include>\r\n      <uri>https://fuel.ignitionrobotics.org/1.0/openrobotics/models/edgar </uri>\r\n    </include>\r\n  </world>\r\n</sdf>\r\n```\r\n\r\n2. Rotate the camera around a bunch until you find the model. It'll look like:\r\n\r\n![edgar_bad.png](data/bitbucket.org/repo/zq9ear/images/2295900035-edgar_bad.png)\r\n\r\n**Expected behavior:**  \r\n\r\nUsing gazebo10, the model looks correct. \r\n\r\n![edgar_good.jpg](data/bitbucket.org/repo/zq9ear/images/2910696462-edgar_good.jpg)", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>An OBJ file is not rendered correctly using ign-gazebo1.</p>\n<p>The model in question is available <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/openrobotics/fuel/models/edgar\" rel=\"nofollow\">here</a>. </p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Run ign-gazebo using this SDF file:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; ?&gt;</span>\n<span class=\"nt\">&lt;sdf</span> <span class=\"na\">version=</span><span class=\"s\">&quot;1.6&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;edgar&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;plugin</span>\n      <span class=\"na\">filename=</span><span class=\"s\">&quot;libignition-gazebo1-physics-system.so&quot;</span>\n      <span class=\"na\">name=</span><span class=\"s\">&quot;ignition::gazebo::systems::Physics&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n    <span class=\"nt\">&lt;plugin</span>\n      <span class=\"na\">filename=</span><span class=\"s\">&quot;libignition-gazebo1-scene-broadcaster-system.so&quot;</span>\n      <span class=\"na\">name=</span><span class=\"s\">&quot;ignition::gazebo::systems::SceneBroadcaster&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n    <span class=\"nt\">&lt;gui</span> <span class=\"na\">fullscreen=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"c\">&lt;!-- 3D scene --&gt;</span>\n      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;Scene3D&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;3D View&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;ignition-gui&gt;</span>\n          <span class=\"nt\">&lt;title&gt;</span>3D View<span class=\"nt\">&lt;/title&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;bool&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;showTitleBar&quot;</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;state&quot;</span><span class=\"nt\">&gt;</span>docked<span class=\"nt\">&lt;/property&gt;</span>\n        <span class=\"nt\">&lt;/ignition-gui&gt;</span>\n\n        <span class=\"nt\">&lt;engine&gt;</span>ogre2<span class=\"nt\">&lt;/engine&gt;</span>\n        <span class=\"nt\">&lt;scene&gt;</span>scene<span class=\"nt\">&lt;/scene&gt;</span>\n        <span class=\"nt\">&lt;ambient_light&gt;</span>0.4 0.4 0.4<span class=\"nt\">&lt;/ambient_light&gt;</span>\n        <span class=\"nt\">&lt;background_color&gt;</span>0.8 0.8 0.8<span class=\"nt\">&lt;/background_color&gt;</span>\n        <span class=\"nt\">&lt;camera_pose&gt;</span>-6 0 6 0 0.5 0<span class=\"nt\">&lt;/camera_pose&gt;</span>\n        <span class=\"nt\">&lt;service&gt;</span>/world/edgar/scene/info<span class=\"nt\">&lt;/service&gt;</span>\n        <span class=\"nt\">&lt;pose_topic&gt;</span>/world/edgar/pose/info<span class=\"nt\">&lt;/pose_topic&gt;</span>\n        <span class=\"nt\">&lt;scene_topic&gt;</span>/world/edgar/scene/info<span class=\"nt\">&lt;/scene_topic&gt;</span>\n        <span class=\"nt\">&lt;deletion_topic&gt;</span>/world/edgar/scene/deletion<span class=\"nt\">&lt;/deletion_topic&gt;</span>\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n\n      <span class=\"c\">&lt;!-- World control --&gt;</span>\n      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;WorldControl&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;World control&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;ignition-gui&gt;</span>\n          <span class=\"nt\">&lt;title&gt;</span>World control<span class=\"nt\">&lt;/title&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;bool&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;showTitleBar&quot;</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;bool&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;resizable&quot;</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;height&quot;</span><span class=\"nt\">&gt;</span>72<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;width&quot;</span><span class=\"nt\">&gt;</span>121<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;z&quot;</span><span class=\"nt\">&gt;</span>1<span class=\"nt\">&lt;/property&gt;</span>\n\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;state&quot;</span><span class=\"nt\">&gt;</span>floating<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;anchors</span> <span class=\"na\">target=</span><span class=\"s\">&quot;3D View&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;line</span> <span class=\"na\">own=</span><span class=\"s\">&quot;left&quot;</span> <span class=\"na\">target=</span><span class=\"s\">&quot;left&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;line</span> <span class=\"na\">own=</span><span class=\"s\">&quot;bottom&quot;</span> <span class=\"na\">target=</span><span class=\"s\">&quot;bottom&quot;</span><span class=\"nt\">/&gt;</span>\n          <span class=\"nt\">&lt;/anchors&gt;</span>\n        <span class=\"nt\">&lt;/ignition-gui&gt;</span>\n\n        <span class=\"nt\">&lt;play_pause&gt;</span>true<span class=\"nt\">&lt;/play_pause&gt;</span>\n        <span class=\"nt\">&lt;step&gt;</span>true<span class=\"nt\">&lt;/step&gt;</span>\n        <span class=\"nt\">&lt;start_paused&gt;</span>true<span class=\"nt\">&lt;/start_paused&gt;</span>\n        <span class=\"nt\">&lt;service&gt;</span>/world/edgar/control<span class=\"nt\">&lt;/service&gt;</span>\n        <span class=\"nt\">&lt;stats_topic&gt;</span>/world/edgar/stats<span class=\"nt\">&lt;/stats_topic&gt;</span>\n\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n\n      <span class=\"c\">&lt;!-- World statistics --&gt;</span>\n      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;WorldStats&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;World stats&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;ignition-gui&gt;</span>\n          <span class=\"nt\">&lt;title&gt;</span>World stats<span class=\"nt\">&lt;/title&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;bool&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;showTitleBar&quot;</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;bool&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;resizable&quot;</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;height&quot;</span><span class=\"nt\">&gt;</span>110<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;width&quot;</span><span class=\"nt\">&gt;</span>290<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;double&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;z&quot;</span><span class=\"nt\">&gt;</span>1<span class=\"nt\">&lt;/property&gt;</span>\n\n          <span class=\"nt\">&lt;property</span> <span class=\"na\">type=</span><span class=\"s\">&quot;string&quot;</span> <span class=\"na\">key=</span><span class=\"s\">&quot;state&quot;</span><span class=\"nt\">&gt;</span>floating<span class=\"nt\">&lt;/property&gt;</span>\n          <span class=\"nt\">&lt;anchors</span> <span class=\"na\">target=</span><span class=\"s\">&quot;3D View&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;line</span> <span class=\"na\">own=</span><span class=\"s\">&quot;right&quot;</span> <span class=\"na\">target=</span><span class=\"s\">&quot;right&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;line</span> <span class=\"na\">own=</span><span class=\"s\">&quot;bottom&quot;</span> <span class=\"na\">target=</span><span class=\"s\">&quot;bottom&quot;</span><span class=\"nt\">/&gt;</span>\n          <span class=\"nt\">&lt;/anchors&gt;</span>\n        <span class=\"nt\">&lt;/ignition-gui&gt;</span>\n\n        <span class=\"nt\">&lt;sim_time&gt;</span>true<span class=\"nt\">&lt;/sim_time&gt;</span>\n        <span class=\"nt\">&lt;real_time&gt;</span>true<span class=\"nt\">&lt;/real_time&gt;</span>\n        <span class=\"nt\">&lt;real_time_factor&gt;</span>true<span class=\"nt\">&lt;/real_time_factor&gt;</span>\n        <span class=\"nt\">&lt;iterations&gt;</span>true<span class=\"nt\">&lt;/iterations&gt;</span>\n        <span class=\"nt\">&lt;topic&gt;</span>/world/edgar/stats<span class=\"nt\">&lt;/topic&gt;</span>\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n    <span class=\"nt\">&lt;/gui&gt;</span>\n\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>https://fuel.ignitionrobotics.org/1.0/openrobotics/models/edgar <span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/world&gt;</span>\n<span class=\"nt\">&lt;/sdf&gt;</span>\n</pre></div>\n\n\n<ol>\n<li>Rotate the camera around a bunch until you find the model. It'll look like:</li>\n</ol>\n<p><img alt=\"edgar_bad.png\" src=\"data/bitbucket.org/repo/zq9ear/images/2295900035-edgar_bad.png\" /></p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>Using gazebo10, the model looks correct. </p>\n<p><img alt=\"edgar_good.jpg\" src=\"data/bitbucket.org/repo/zq9ear/images/2910696462-edgar_good.jpg\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-21T22:04:09.501905+00:00", "milestone": null, "updated_on": "2019-03-25T20:41:56.667950+00:00", "type": "issue", "id": 46}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/47/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/47.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/47/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/47/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/47/ogre2-doesnt-support-transparency-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/47/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Ogre2 doesn't support transparency in <material> colors", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description \r\n\r\nThe alpha value of colors in `<material>` tags seem to be ignored when using Ogre2.   \r\n\r\n# Steps to Reproduce\r\n\r\n1. Run the attached sdf in ign-gazebo\r\n2. Change the `<engine>` to ogre and run in ign-gazebo.\r\n\r\n**Expected behavior:**  \r\nAlpha values to affect transparency. In the example, the red box should have a transparency of 0.5.\r\n\r\n**Actual behavior:**\r\n\r\nTransparency is not affected by alpha values\r\n\r\n**Reproduces how often:** \r\n\r\n100 %\r\n\r\n# Versions\r\n\r\nAll versions", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>The alpha value of colors in <code>&lt;material&gt;</code> tags seem to be ignored when using Ogre2.   </p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Run the attached sdf in ign-gazebo</li>\n<li>Change the <code>&lt;engine&gt;</code> to ogre and run in ign-gazebo.</li>\n</ol>\n<p><strong>Expected behavior:</strong><br />\nAlpha values to affect transparency. In the example, the red box should have a transparency of 0.5.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Transparency is not affected by alpha values</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100 %</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>All versions</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-25T21:46:41.556290+00:00", "milestone": null, "updated_on": "2019-03-25T21:46:41.556290+00:00", "type": "issue", "id": 47}, {"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/48/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/48/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/48/gizmo-size-changes-when-translating-camera"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/48/vote"}}, "reporter": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "title": "Gizmo size changes when translating camera.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe gizmo size changes when translating the camera.  The Euclidean distance from the camera to the selected visual is used to calculate the size of the gizmo. Instead, the distance from the camera to a plane could be used.\r\n\r\n# Motivation\r\n\r\nThis would be a minor improvement to the gizmo, and is low priority.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The gizmo size changes when translating the camera.  The Euclidean distance from the camera to the selected visual is used to calculate the size of the gizmo. Instead, the distance from the camera to a plane could be used.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>This would be a minor improvement to the gizmo, and is low priority.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-04-17T19:38:24.813765+00:00", "milestone": null, "updated_on": "2019-04-17T19:38:24.813765+00:00", "type": "issue", "id": 48}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/49/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/49/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/49/ogre2-depth-camera-doesnt-trigger-point"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/49/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Ogre2 depth camera doesn't trigger point cloud event", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [ X ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nIf a callback is registered with [Ogre2DepthCamera::ConnectNewRgbPointCloud](#!/ignitionrobotics/ign-rendering/src/7248ad060b060ae4ae53b19f61ed9516a91f8ef3/ogre2/include/ignition/rendering/ogre2/Ogre2DepthCamera.hh#lines-94), it will never be called because the `newRgbPointCloud` is never triggered.\r\n\r\n# Steps to Reproduce\r\n\r\n1. Connect a callback to `ConnectNewRgbPointCloud`\r\n1. Update the camera and see that the callback is not called.\r\n\r\n**Expected behavior:**  \r\n\r\nThe callback is triggered\r\n\r\n**Actual behavior:**\r\n\r\nNothing\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\n2\r\n\r\n# Additional Information\r\n\r\nOgre 1 calls the event, but Ogre2 doesn't:\r\n\r\n```\r\n$ grep -r \"newRgbPointCloud\" .\r\n./ogre/src/OgreDepthCamera.cc:              const std::string &)> newRgbPointCloud;\r\n./ogre/src/OgreDepthCamera.cc:    this->dataPtr->newRgbPointCloud(\r\n./ogre/src/OgreDepthCamera.cc:  return this->dataPtr->newRgbPointCloud.Connect(_subscriber);\r\n./ogre2/src/Ogre2DepthCamera.cc:              const std::string &)> newRgbPointCloud;\r\n./ogre2/src/Ogre2DepthCamera.cc:  return this->dataPtr->newRgbPointCloud.Connect(_subscriber);\r\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>If a callback is registered with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/7248ad060b060ae4ae53b19f61ed9516a91f8ef3/ogre2/include/ignition/rendering/ogre2/Ogre2DepthCamera.hh#lines-94\" rel=\"nofollow\">Ogre2DepthCamera::ConnectNewRgbPointCloud</a>, it will never be called because the <code>newRgbPointCloud</code> is never triggered.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Connect a callback to <code>ConnectNewRgbPointCloud</code></li>\n<li>Update the camera and see that the callback is not called.</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>The callback is triggered</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Nothing</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>2</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>Ogre 1 calls the event, but Ogre2 doesn't:</p>\n<div class=\"codehilite\"><pre><span></span>$ grep -r <span class=\"s2\">&quot;newRgbPointCloud&quot;</span> .\n./ogre/src/OgreDepthCamera.cc:              const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>&gt; newRgbPointCloud<span class=\"p\">;</span>\n./ogre/src/OgreDepthCamera.cc:    this-&gt;dataPtr-&gt;newRgbPointCloud<span class=\"o\">(</span>\n./ogre/src/OgreDepthCamera.cc:  <span class=\"k\">return</span> this-&gt;dataPtr-&gt;newRgbPointCloud.Connect<span class=\"o\">(</span>_subscriber<span class=\"o\">)</span><span class=\"p\">;</span>\n./ogre2/src/Ogre2DepthCamera.cc:              const std::string <span class=\"p\">&amp;</span><span class=\"o\">)</span>&gt; newRgbPointCloud<span class=\"p\">;</span>\n./ogre2/src/Ogre2DepthCamera.cc:  <span class=\"k\">return</span> this-&gt;dataPtr-&gt;newRgbPointCloud.Connect<span class=\"o\">(</span>_subscriber<span class=\"o\">)</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-07T18:26:27.539690+00:00", "milestone": null, "updated_on": "2019-06-07T18:26:27.539690+00:00", "type": "issue", "id": 49}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/50/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/50.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/50/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/50/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/50/create-viewcontroller-using-keyboard-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/50/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Create ViewController using keyboard and mouse in first-person perspective", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThere are many games that use a first-person perspective with keyboard keys for moving forward, backward, left, and right (often WASD) and using the mouse to change the camera angle. This could be a nice alternative to the OrbitViewController in certain circumstances.\r\n\r\n# Motivation\r\n\r\nWhile visualizing tunnel envirnments for SubT, I have trouble using the OrbitViewController to inspect the inside of the tunnels. I think a first person view controller would be more natural for these types of worlds.\r\n\r\nIt would require responding to key events in addition to mouse events.\r\n\r\n# Describe alternatives you've considered\r\n\r\nWe already have the Orbit View controller. Also some people like to use ESDF and other mappings instead of WASD, so perhaps the mapping could be configurable.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>There are many games that use a first-person perspective with keyboard keys for moving forward, backward, left, and right (often WASD) and using the mouse to change the camera angle. This could be a nice alternative to the OrbitViewController in certain circumstances.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>While visualizing tunnel envirnments for SubT, I have trouble using the OrbitViewController to inspect the inside of the tunnels. I think a first person view controller would be more natural for these types of worlds.</p>\n<p>It would require responding to key events in addition to mouse events.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>We already have the Orbit View controller. Also some people like to use ESDF and other mappings instead of WASD, so perhaps the mapping could be configurable.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-13T20:58:36.711958+00:00", "milestone": null, "updated_on": "2019-06-13T20:58:36.711958+00:00", "type": "issue", "id": 50}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/51/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/51.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/51/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/51/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/51/crash-at-starting-with-ogre21-and-opengl"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/51/vote"}}, "reporter": null, "title": "Crash at starting with  OGRE2.1 and OpenGL", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": null, "content": {"raw": "# Description \r\nAfter installing ignition-blueprint with apt, Ign gazebo crash with the shapes.sdf sample.\r\nIt's not able to load properly OGRE2.1 . I've already try to compile OGRE but nothing changed. I'm running gazebo with  Ubuntu-18 LTS and I only have a Graphic Intel chipset.\r\n\r\nYou can see bellow the error message : \r\n```\r\n#!bash\r\n\r\n\r\n[GUI] [Err] [Ogre2RenderEngine.cc:450] Unable to load Ogre Plugin[/usr/lib/x86_64-linux-gnu/OGRE-2.1/OGRE/RenderSystem_GL3Plus]. Rendering will not be possible.Make sure you have installed OGRE properly.\r\n[GUI] [Err] [Ogre2RenderEngine.cc:484] unable to find OpenGL rendering system. OGRE is probably installed incorrectly. Double check the OGRE cmake output, and make sure OpenGL is enabled.\r\n/usr/lib/ruby/ignition/cmdgazebo2.rb:302: [BUG] Segmentation fault at 0x0000000000000000\r\n```\r\nI didn't find any fix for my issue that's why i'm writing here.\r\nThank\r\n\r\n\r\n\r\n# Steps to Reproduce\r\n\r\n1. Follow this tutorial : https://ignitionrobotics.org/docs/blueprint\r\n2. run `ign gazebo shapes.sdf`\r\n\r\n\r\n**Expected behavior:**  \r\n\r\nGazebo start normally. \r\n\r\n**Actual behavior:**\r\n\r\nGet this error message : \r\n```\r\n#!bash\r\n\r\n\r\n[GUI] [Err] [Ogre2RenderEngine.cc:450] Unable to load Ogre Plugin[/usr/lib/x86_64-linux-gnu/OGRE-2.1/OGRE/RenderSystem_GL3Plus]. Rendering will not be possible.Make sure you have installed OGRE properly.\r\n[GUI] [Err] [Ogre2RenderEngine.cc:484] unable to find OpenGL rendering system. OGRE is probably installed incorrectly. Double check the OGRE cmake output, and make sure OpenGL is enabled.\r\n/usr/lib/ruby/ignition/cmdgazebo2.rb:302: [BUG] Segmentation fault at 0x0000000000000000\r\n```", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>After installing ignition-blueprint with apt, Ign gazebo crash with the shapes.sdf sample.\nIt's not able to load properly OGRE2.1 . I've already try to compile OGRE but nothing changed. I'm running gazebo with  Ubuntu-18 LTS and I only have a Graphic Intel chipset.</p>\n<p>You can see bellow the error message : </p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"o\">[</span>GUI<span class=\"o\">]</span> <span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Ogre2RenderEngine.cc:450<span class=\"o\">]</span> Unable to load Ogre Plugin<span class=\"o\">[</span>/usr/lib/x86_64-linux-gnu/OGRE-2.1/OGRE/RenderSystem_GL3Plus<span class=\"o\">]</span>. Rendering will not be possible.Make sure you have installed OGRE properly.\n<span class=\"o\">[</span>GUI<span class=\"o\">]</span> <span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Ogre2RenderEngine.cc:484<span class=\"o\">]</span> unable to find OpenGL rendering system. OGRE is probably installed incorrectly. Double check the OGRE cmake output, and make sure OpenGL is enabled.\n/usr/lib/ruby/ignition/cmdgazebo2.rb:302: <span class=\"o\">[</span>BUG<span class=\"o\">]</span> Segmentation fault at 0x0000000000000000\n</pre></div>\n\n\n<p>I didn't find any fix for my issue that's why i'm writing here.\nThank</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Follow this tutorial : <a href=\"https://ignitionrobotics.org/docs/blueprint\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/docs/blueprint</a></li>\n<li>run <code>ign gazebo shapes.sdf</code></li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>Gazebo start normally. </p>\n<p><strong>Actual behavior:</strong></p>\n<p>Get this error message : </p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"o\">[</span>GUI<span class=\"o\">]</span> <span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Ogre2RenderEngine.cc:450<span class=\"o\">]</span> Unable to load Ogre Plugin<span class=\"o\">[</span>/usr/lib/x86_64-linux-gnu/OGRE-2.1/OGRE/RenderSystem_GL3Plus<span class=\"o\">]</span>. Rendering will not be possible.Make sure you have installed OGRE properly.\n<span class=\"o\">[</span>GUI<span class=\"o\">]</span> <span class=\"o\">[</span>Err<span class=\"o\">]</span> <span class=\"o\">[</span>Ogre2RenderEngine.cc:484<span class=\"o\">]</span> unable to find OpenGL rendering system. OGRE is probably installed incorrectly. Double check the OGRE cmake output, and make sure OpenGL is enabled.\n/usr/lib/ruby/ignition/cmdgazebo2.rb:302: <span class=\"o\">[</span>BUG<span class=\"o\">]</span> Segmentation fault at 0x0000000000000000\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-04T09:43:28.044656+00:00", "milestone": null, "updated_on": "2019-07-08T17:25:21.402238+00:00", "type": "issue", "id": 51}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/52/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/52.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/52/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/52/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/52/add-support-for-generating-rgbd-rgbxyz"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/52/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Add support for generating RGBD / RGBXYZ data", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe DepthCamera class currently only support generating depth data. We can extend it to support returning RGBD and RGBXYZ data.\r\n\r\n# Motivation\r\n\r\nCurrently the RGBD camera sensor in ign-sensors uses a Camera and a DepthCamera to generate rgbd and point cloud data. This is inefficient because\r\n\r\n* It needs to do 2 render and copy operations. \r\n* It is doing extra computation to recreate xyz values from depth \\(d\\) for point cloud generation. It should not have to do this since xyz data area already available in the DepthCamera shaders. In fact we\u2019re converting xyz to d in the shaders in order to return depth data.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The DepthCamera class currently only support generating depth data. We can extend it to support returning RGBD and RGBXYZ data.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>Currently the RGBD camera sensor in ign-sensors uses a Camera and a DepthCamera to generate rgbd and point cloud data. This is inefficient because</p>\n<ul>\n<li>It needs to do 2 render and copy operations. </li>\n<li>It is doing extra computation to recreate xyz values from depth (d) for point cloud generation. It should not have to do this since xyz data area already available in the DepthCamera shaders. In fact we\u2019re converting xyz to d in the shaders in order to return depth data.</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-26T04:39:06.554637+00:00", "milestone": null, "updated_on": "2020-02-28T18:17:21.743240+00:00", "type": "issue", "id": 52}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/53/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/53.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/53/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/53/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/53/ogre2x-spot-point-light-shines-through"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/53/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "[Ogre2.x] Spot / Point light shines through objects", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description\r\n\r\nSpot / point light shines through objects. Objects are lit even when they are fully occluded.\r\n\r\nThe same problems also happens when using ogre1.x.\r\n\r\n# Step to reproduce\r\n\r\n1. Put box A in front of a spot light\r\n2. Put box B behind box A so that box A sits in between the spot light and box B.\r\n\r\n## Expected behavior\r\n\r\nBox B should not be lit\r\n\r\n## Actual Behavior\r\n\r\nBox B is lit by the spot light\r\n\r\n## Reproduces how often\r\n\r\nAll the time\r\n\r\n# Versions\r\n\r\nall versions", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>Spot / point light shines through objects. Objects are lit even when they are fully occluded.</p>\n<p>The same problems also happens when using ogre1.x.</p>\n<h1 id=\"markdown-header-step-to-reproduce\">Step to reproduce</h1>\n<ol>\n<li>Put box A in front of a spot light</li>\n<li>Put box B behind box A so that box A sits in between the spot light and box B.</li>\n</ol>\n<h2 id=\"markdown-header-expected-behavior\">Expected behavior</h2>\n<p>Box B should not be lit</p>\n<h2 id=\"markdown-header-actual-behavior\">Actual Behavior</h2>\n<p>Box B is lit by the spot light</p>\n<h2 id=\"markdown-header-reproduces-how-often\">Reproduces how often</h2>\n<p>All the time</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>all versions</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-27T06:27:27.766062+00:00", "milestone": null, "updated_on": "2019-10-25T01:04:23.039735+00:00", "type": "issue", "id": 53}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/54/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/54/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/54/problems-with-the-examples"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/54/vote"}}, "reporter": {"display_name": "Levente Vajda", "uuid": "{87022fb2-b1a1-410b-a8cd-8e45eda8e9a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B87022fb2-b1a1-410b-a8cd-8e45eda8e9a0%7D"}, "html": {"href": "https://bitbucket.org/%7B87022fb2-b1a1-410b-a8cd-8e45eda8e9a0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ca7774083a735bc0a065f5640f8264b7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-4.png"}}, "nickname": "vlevente", "type": "user", "account_id": "5aa40fe25a4d02288412b8b8"}, "title": "Problems with the examples", "component": {"name": "optix", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453290.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Hello, \r\n\r\nI\u2019m trying to use ign-rendering on Ubuntu 18.04 with Optix 6.0 and Gazebo 9.11.0.  My goal is to use Gazebo with Optix just like in the gazebo\\_scene\\_viewer example. \r\n\r\nGz11 branch:  I followed the installation guide from the read me and ran the tests, from the 48 tests The following tests failed:  \r\n1 - UNIT\\_Camera\\_TEST \\(Failed\\)  \r\n23 - UNIT\\_Scene\\_TEST \\(Failed\\)  \r\n41 - INTEGRATION\\_camera \\(Failed\\)  \r\n43 - INTEGRATION\\_shadows \\(Failed\\)  \r\n45 - INTEGRATION\\_scene \\(Failed\\)  \r\n47 - PERFORMANCE\\_scene\\_factory \\(Failed\\)  \r\n\r\nI tried to run these tests from the default branch, from the 60 test 8 failed:   \r\n1 - UNIT\\_Camera\\_TEST \\(Failed\\)  \r\n5 - UNIT\\_GizmoVisual\\_TEST \\(SEGFAULT\\)  \r\n31 - UNIT\\_Scene\\_TEST \\(Failed\\)  \r\n39 - UNIT\\_TransformController\\_TEST \\(SEGFAULT\\)  \r\n51 - INTEGRATION\\_camera \\(Failed\\)  \r\n53 - INTEGRATION\\_render\\_pass \\(Failed\\)  \r\n57 - INTEGRATION\\_scene \\(Failed\\)  \r\n59 - PERFORMANCE\\_scene\\_factory \\(Failed\\)\r\n\r\nThese tests fail with unique errors, if needed I can post the error messages.  Despite the failed tests, there are examples that run at least to a certain degree.  For example the custom\\_scene\\_viewer run perfectly but after switching between render engines cause an error: \r\n\r\n```\r\nterminate called after throwing an instance of 'optix::Exception'\r\n  what():  Unknown error (Details: Function \"RTresult _rtContextLaunch2D(RTcontext, unsigned int, RTsize, RTsize)\" caught exception: Assertion failed: \"!m_building : dirty list modified while build in progress\", file: <internal>, line: 95)\r\nAborted (core dumped)\r\n```\r\n\r\nThe gazebo\\_scene\\_viewer2\\_demo also throws this error message immediately.  I used valgrind to log what happened in the background \\(see the attachment\\). Am I missing something or why the examples can't work?\r\n\r\nThanks,\r\n\r\nLevente\r\n\r\n\u200c\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Hello, </p>\n<p>I\u2019m trying to use ign-rendering on Ubuntu 18.04 with Optix 6.0 and Gazebo 9.11.0.  My goal is to use Gazebo with Optix just like in the gazebo_scene_viewer example. </p>\n<p>Gz11 branch:  I followed the installation guide from the read me and ran the tests, from the 48 tests The following tests failed:<br />\n1 - UNIT_Camera_TEST (Failed)<br />\n23 - UNIT_Scene_TEST (Failed)<br />\n41 - INTEGRATION_camera (Failed)<br />\n43 - INTEGRATION_shadows (Failed)<br />\n45 - INTEGRATION_scene (Failed)<br />\n47 - PERFORMANCE_scene_factory (Failed)  </p>\n<p>I tried to run these tests from the default branch, from the 60 test 8 failed: <br />\n1 - UNIT_Camera_TEST (Failed)<br />\n5 - UNIT_GizmoVisual_TEST (SEGFAULT)<br />\n31 - UNIT_Scene_TEST (Failed)<br />\n39 - UNIT_TransformController_TEST (SEGFAULT)<br />\n51 - INTEGRATION_camera (Failed)<br />\n53 - INTEGRATION_render_pass (Failed)<br />\n57 - INTEGRATION_scene (Failed)<br />\n59 - PERFORMANCE_scene_factory (Failed)</p>\n<p>These tests fail with unique errors, if needed I can post the error messages.  Despite the failed tests, there are examples that run at least to a certain degree.  For example the custom_scene_viewer run perfectly but after switching between render engines cause an error: </p>\n<div class=\"codehilite\"><pre><span></span>terminate called after throwing an instance of &#39;optix::Exception&#39;\n  what():  Unknown error (Details: Function &quot;RTresult _rtContextLaunch2D(RTcontext, unsigned int, RTsize, RTsize)&quot; caught exception: Assertion failed: &quot;!m_building : dirty list modified while build in progress&quot;, file: &lt;internal&gt;, line: 95)\nAborted (core dumped)\n</pre></div>\n\n\n<p>The gazebo_scene_viewer2_demo also throws this error message immediately.  I used valgrind to log what happened in the background (see the attachment). Am I missing something or why the examples can't work?</p>\n<p>Thanks,</p>\n<p>Levente</p>\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-24T14:40:39.700822+00:00", "milestone": null, "updated_on": "2019-10-05T19:25:42.422164+00:00", "type": "issue", "id": 54}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/55/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/55/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/55/why-cant-gazebo_scene_viewer-run"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/55/vote"}}, "reporter": {"display_name": "kuwano", "uuid": "{510e546d-8a31-4640-afc9-7bf1e5ef3a6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B510e546d-8a31-4640-afc9-7bf1e5ef3a6a%7D"}, "html": {"href": "https://bitbucket.org/%7B510e546d-8a31-4640-afc9-7bf1e5ef3a6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9760fc3d8a047c1764de1684760882fbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsK-3.png"}}, "nickname": "kuwano", "type": "user", "account_id": "5dea00288743750d00b831ec"}, "title": "Why can't gazebo_scene_viewer run?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi, I\u2019m kuwano.  \r\nI\u2019m trying to run gazebo\\_scene\\_viewer on ubuntu 18.04.\r\n\r\nI\u2019ve done the ignition-rendering installation\\(Source install\\) following README.md.  \r\n[#!/ignitionrobotics/ign-rendering/src/default/README.md#markdown-header-building-from-source](#!/ignitionrobotics/ign-rendering/src/default/README.md#markdown-header-building-from-source)\r\n\r\nAlthough gazebo\\_scene\\_viewer can connect to gzserver, the following error occurs and cannot be executed.  \r\nWhy this error occured ?\r\n\r\n```\r\nkuwano@kuwano-pc:~/ign-rendering/examples/gazebo_scene_viewer/build$ ./gazebo_scene_viewer\r\n[Msg] Waiting for master.\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.0.14\r\nEngine 'ogre' is not supported\r\nEngine 'optix' is not supported\r\nSegmentation fault (\u30b3\u30a2\u30c0\u30f3\u30d7)\r\n```\r\n\r\n# Environment\r\n\r\n* ubuntu 18.04 LTS\r\n* Intel\u00ae Core\u2122 i7-6700K CPU @ 4.00GHz \u00d7 8\r\n* GeForce GTX 1060 6GB/PCIe/SSE2\r\n* RAM 32GB\r\n* CUDA toolkit 10.0\r\n* OptiX-SDK-6.5.0\r\n* Gazebo-9\r\n\r\n```\r\nkuwano@kuwano-pc:~$ nvidia-smi\r\nFri Dec 6 16:35:50 2019\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 440.33.01 Driver Version: 440.33.01 CUDA Version: 10.2 |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC |\r\n| Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. |\r\n|===============================+======================+======================|\r\n| 0 GeForce GTX 106... On | 00000000:01:00.0 On | N/A |\r\n| 0% 49C P0 31W / 180W | 568MiB / 6075MiB | 4% Default |\r\n+-------------------------------+----------------------+----------------------+\r\n+-----------------------------------------------------------------------------+\r\n| Processes: GPU Memory || GPU PID Type Process name Usage |\r\n|=============================================================================|\r\n| 0 1046 G /usr/lib/xorg/Xorg 18MiB |\r\n| 0 1088 G /usr/bin/gnome-shell 48MiB |\r\n| 0 2324 G /usr/lib/xorg/Xorg 205MiB |\r\n| 0 2470 G /usr/bin/gnome-shell 95MiB |\r\n| 0 9592 G ...quest-channel-token=6352663722780733213 110MiB |\r\n| 0 22021 G gzserver 3MiB |\r\n 0 22022 G gzclient 78MiB |\r\n| 0 23057 G gnome-control-center 1MiB |\r\n+-----------------------------------------------------------------------------+\r\nkuwano@kuwano-pc:~$ nvcc -V\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2019 NVIDIA Corporation\r\nBuilt on Wed_Oct_23_19:24:38_PDT_2019\r\nCuda compilation tools, release 10.2, V10.2.8\r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Hi, I\u2019m kuwano.<br />\nI\u2019m trying to run gazebo_scene_viewer on ubuntu 18.04.</p>\n<p>I\u2019ve done the ignition-rendering installation(Source install) following README.md.<br />\n<a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/default/README.md#markdown-header-building-from-source\" rel=\"nofollow\">#!/ignitionrobotics/ign-rendering/src/default/README.md#markdown-header-building-from-source</a></p>\n<p>Although gazebo_scene_viewer can connect to gzserver, the following error occurs and cannot be executed.<br />\nWhy this error occured ?</p>\n<div class=\"codehilite\"><pre><span></span>kuwano@kuwano-pc:~/ign-rendering/examples/gazebo_scene_viewer/build$ ./gazebo_scene_viewer\n[Msg] Waiting for master.\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\n[Msg] Publicized address: 192.168.0.14\nEngine &#39;ogre&#39; is not supported\nEngine &#39;optix&#39; is not supported\nSegmentation fault (\u30b3\u30a2\u30c0\u30f3\u30d7)\n</pre></div>\n\n\n<h1 id=\"markdown-header-environment\">Environment</h1>\n<ul>\n<li>ubuntu 18.04 LTS</li>\n<li>Intel\u00ae Core\u2122 i7-6700K CPU @ 4.00GHz \u00d7 8</li>\n<li>GeForce GTX 1060 6GB/PCIe/SSE2</li>\n<li>RAM 32GB</li>\n<li>CUDA toolkit 10.0</li>\n<li>OptiX-SDK-6.5.0</li>\n<li>Gazebo-9</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>kuwano@kuwano-pc:~$ nvidia-smi\nFri Dec 6 16:35:50 2019\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 440.33.01 Driver Version: 440.33.01 CUDA Version: 10.2 |\n|-------------------------------+----------------------+----------------------+\n| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC |\n| Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. |\n|===============================+======================+======================|\n| 0 GeForce GTX 106... On | 00000000:01:00.0 On | N/A |\n| 0% 49C P0 31W / 180W | 568MiB / 6075MiB | 4% Default |\n+-------------------------------+----------------------+----------------------+\n+-----------------------------------------------------------------------------+\n| Processes: GPU Memory || GPU PID Type Process name Usage |\n|=============================================================================|\n| 0 1046 G /usr/lib/xorg/Xorg 18MiB |\n| 0 1088 G /usr/bin/gnome-shell 48MiB |\n| 0 2324 G /usr/lib/xorg/Xorg 205MiB |\n| 0 2470 G /usr/bin/gnome-shell 95MiB |\n| 0 9592 G ...quest-channel-token=6352663722780733213 110MiB |\n| 0 22021 G gzserver 3MiB |\n 0 22022 G gzclient 78MiB |\n| 0 23057 G gnome-control-center 1MiB |\n+-----------------------------------------------------------------------------+\nkuwano@kuwano-pc:~$ nvcc -V\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2019 NVIDIA Corporation\nBuilt on Wed_Oct_23_19:24:38_PDT_2019\nCuda compilation tools, release 10.2, V10.2.8\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-12-06T07:37:05.267217+00:00", "milestone": null, "updated_on": "2019-12-12T16:55:41.758493+00:00", "type": "issue", "id": 55}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/56/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/56.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/56/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/56/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/56/examples-gazebo_scene_viewer"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/56/vote"}}, "reporter": {"display_name": "Alejandro Hern\u00e1ndez", "uuid": "{e246cb8c-7058-4077-878d-b64139eed698}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be246cb8c-7058-4077-878d-b64139eed698%7D"}, "html": {"href": "https://bitbucket.org/%7Be246cb8c-7058-4077-878d-b64139eed698%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a79dc55d95ed2653247d116/abf2aa8b-89f8-4c9c-9750-c48dcde9d599/128"}}, "nickname": "ahcorde", "type": "user", "account_id": "5a79dc55d95ed2653247d116"}, "title": "Examples: gazebo_scene_viewer", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I have been testing the ign-rendering3 examples and I'm stuck in the gazebo\\_scene\\_viewer example. When I execute the code a segmentation fault happened in this [line](#!/ignitionrobotics/ign-rendering/src/7955e01d76e7181726622b126947bb8dd43128d1/ogre/src/OgreMeshFactory.cc#lines-349) \r\n\r\nWith this fix I'm able to run the program without segmentation fault:\r\n\r\n```\r\n        if(defaultMat != nullptr){\r\n          mat->CopyFrom(defaultMat);\r\n        }\r\n```\r\n\r\nBut the window is fully black. 'm launching gazebo and launching the example as indicated in the [video](https://vimeo.com/139969646). Any idea how to run the demo? \r\n\r\nBy the way, is does make sense to create some documentation about running the examples?", "markup": "markdown", "html": "<p>I have been testing the ign-rendering3 examples and I'm stuck in the gazebo_scene_viewer example. When I execute the code a segmentation fault happened in this <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/7955e01d76e7181726622b126947bb8dd43128d1/ogre/src/OgreMeshFactory.cc#lines-349\" rel=\"nofollow\">line</a> </p>\n<p>With this fix I'm able to run the program without segmentation fault:</p>\n<div class=\"codehilite\"><pre><span></span>        if(defaultMat != nullptr){\n          mat-&gt;CopyFrom(defaultMat);\n        }\n</pre></div>\n\n\n<p>But the window is fully black. 'm launching gazebo and launching the example as indicated in the <a data-is-external-link=\"true\" href=\"https://vimeo.com/139969646\" rel=\"nofollow\">video</a>. Any idea how to run the demo? </p>\n<p>By the way, is does make sense to create some documentation about running the examples?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2020-01-10T21:01:58.226068+00:00", "milestone": null, "updated_on": "2020-01-23T17:34:25.308050+00:00", "type": "issue", "id": 56}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/57/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/57.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/57/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/57/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/57/actor-animation-flickering"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/57/vote"}}, "reporter": {"display_name": "Sarathkrishnan Ramesh", "uuid": "{4863ddae-095b-4548-987b-a364c4012e01}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4863ddae-095b-4548-987b-a364c4012e01%7D"}, "html": {"href": "https://bitbucket.org/%7B4863ddae-095b-4548-987b-a364c4012e01%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5c9bad79203e134514cf86a8/b7e8978f-1e47-4014-ae2e-af396180f9bc/128"}}, "nickname": "sarath18", "type": "user", "account_id": "5c9bad79203e134514cf86a8"}, "title": "Actor animation flickering", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I found this weird issue in ign-rendering/examples `actor_animation` example. The actor's pose keeps on flickering after it has completed the entire animation once. Screen recording attached below shows the issue.\r\n\r\n[https://imgur.com/ix956Pk](https://imgur.com/ix956Pk)\r\n\r\nI have tested this issue in 2 different systems using ignition-rendering3. I am yet to find the cause of the issue.", "markup": "markdown", "html": "<p>I found this weird issue in ign-rendering/examples <code>actor_animation</code> example. The actor's pose keeps on flickering after it has completed the entire animation once. Screen recording attached below shows the issue.</p>\n<p><a data-is-external-link=\"true\" href=\"https://imgur.com/ix956Pk\" rel=\"nofollow\">https://imgur.com/ix956Pk</a></p>\n<p>I have tested this issue in 2 different systems using ignition-rendering3. I am yet to find the cause of the issue.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2020-02-22T08:23:34.516124+00:00", "milestone": null, "updated_on": "2020-02-28T11:09:30.750845+00:00", "type": "issue", "id": 57}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/58/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/58/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/58/move-user-data-storage-to-node-from-visual"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/58/vote"}}, "reporter": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}, "title": "Move user data storage to Node from Visual", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nI propose that we move the functions `SetUserData` and `UserData` currently residing within the Visual to the Node class in Dome.  This will not affect the current usage of the function, but could provide better scalability.\r\n\r\n# Motivation\r\n\r\nThe functions `SetUserData` and `UserData` were introduced in [This PR](#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual/diff).  It's become quite handy in that certain data can be accessed and set at the plugin level without having to depend upon other classes.  Accessing a visual's entity id as well as being able to set booleans (via ints) in order to give a preview of what moving a visual to a given location might look like without having to make the service request has become quite useful.  However, I do have to make downcasts from NodePtr -> VisualPtr in order to access this function which is not guaranteed to succeed.  Moving both of these functions would maintain the current Visual user data support while also solving my issue of downcasting.  \r\n\r\n# Describe alternatives you've considered\r\n\r\nCurrently, I'm casting from a Node to Visual which isn't guaranteed to succeed as a work-around.\r\n\r\nWhat do you think? @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5}", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>I propose that we move the functions <code>SetUserData</code> and <code>UserData</code> currently residing within the Visual to the Node class in Dome.  This will not affect the current usage of the function, but could provide better scalability.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>The functions <code>SetUserData</code> and <code>UserData</code> were introduced in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/200/support-storing-user-data-in-visual/diff\" rel=\"nofollow\">This PR</a>.  It's become quite handy in that certain data can be accessed and set at the plugin level without having to depend upon other classes.  Accessing a visual's entity id as well as being able to set booleans (via ints) in order to give a preview of what moving a visual to a given location might look like without having to make the service request has become quite useful.  However, I do have to make downcasts from NodePtr -&gt; VisualPtr in order to access this function which is not guaranteed to succeed.  Moving both of these functions would maintain the current Visual user data support while also solving my issue of downcasting.  </p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Currently, I'm casting from a Node to Visual which isn't guaranteed to succeed as a work-around.</p>\n<p>What do you think? <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-02-28T22:52:06.439128+00:00", "milestone": null, "updated_on": "2020-03-03T00:04:25.658630+00:00", "type": "issue", "id": 58}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/59/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/59.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/59/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/59/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/59/ogre-1-selection-highlighting-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/59/vote"}}, "reporter": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}, "title": "Ogre 1 Selection highlighting issue", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Description \r\n\r\nAfter the selection capabilities were added, I noticed that the objects in Ogre 1 were not being highlighted when selected.  There is a hacky fix seen in [this PR](#!/ignitionrobotics/ign-gazebo/pull-requests/544), but this would introduce a memory leak and not solve the actual problem.  There seems to be some sort of inconsistency between the Ogre 1 and Ogre 2 versions of Visual and Material that live within rendering - Ogre 2 exhibits the desired behavior.\r\n\r\n# Steps to Reproduce\r\n\r\n1. `ign gazebo rolling_shapes.sdf`\r\n2. Select an entity\r\n\r\n**Expected behavior:**  \r\n\r\nThe entity should be highlighted when selected.\r\n\r\n**Actual behavior:**\r\n\r\nNo visual change occurs (the entity is still registered as selected though).\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nCurrently in blueprint and citadel", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>After the selection capabilities were added, I noticed that the objects in Ogre 1 were not being highlighted when selected.  There is a hacky fix seen in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/544\" rel=\"nofollow\">this PR</a>, but this would introduce a memory leak and not solve the actual problem.  There seems to be some sort of inconsistency between the Ogre 1 and Ogre 2 versions of Visual and Material that live within rendering - Ogre 2 exhibits the desired behavior.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li><code>ign gazebo rolling_shapes.sdf</code></li>\n<li>Select an entity</li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>The entity should be highlighted when selected.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>No visual change occurs (the entity is still registered as selected though).</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>Currently in blueprint and citadel</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-03-04T22:51:31.212414+00:00", "milestone": null, "updated_on": "2020-03-04T22:51:31.212414+00:00", "type": "issue", "id": 59}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/60/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/60.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/60/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/60/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/60/ogre2-transparency-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/60/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Ogre2 transparency issue", "component": {"name": "ogre2.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/502384.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "When a visual is set to be transparent, sometimes the object behind the transparent object disappears / becomes as the camera pans from around it.\r\n\r\nsee gif in this comment: [#!/ignitionrobotics/ign-gazebo/pull-requests/547/add-support-for-setting-visual/diff#comment-140398963](#!/ignitionrobotics/ign-gazebo/pull-requests/547/add-support-for-setting-visual/diff#comment-140398963)\r\n\r\n> I had a chance to play with it with the Cafe model \\(chosen since it\u2019s quite a complex one\\) and observed some visual glitches.\r\n>\r\n> \u2026 but you can see an object disappearing after the first window and the walls becoming white after the second.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>When a visual is set to be transparent, sometimes the object behind the transparent object disappears / becomes as the camera pans from around it.</p>\n<p>see gif in this comment: <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/547/add-support-for-setting-visual/diff#comment-140398963\" rel=\"nofollow\">#!/ignitionrobotics/ign-gazebo/pull-requests/547/add-support-for-setting-visual/diff#comment-140398963</a></p>\n<blockquote>\n<p>I had a chance to play with it with the Cafe model (chosen since it\u2019s quite a complex one) and observed some visual glitches.</p>\n<p>\u2026 but you can see an object disappearing after the first window and the walls becoming white after the second.</p>\n</blockquote>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-03-18T04:03:03.444519+00:00", "milestone": null, "updated_on": "2020-03-18T04:03:03.444519+00:00", "type": "issue", "id": 60}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f6b404b6-f373-460d-a470-69ff6f27cd93}ts=1533308"}}, "type": "repository", "name": "ign-rendering", "full_name": "ignitionrobotics/ign-rendering", "uuid": "{f6b404b6-f373-460d-a470-69ff6f27cd93}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/61/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/61.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/61/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rendering/issues/61/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rendering/issues/61/crash-on-ogre1-camera-sensor-cleanup"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rendering/issues/61/vote"}}, "reporter": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "title": "Crash on ogre1 camera sensor cleanup", "component": {"name": "ogre1.x", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rendering/components/453289.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "# Description\r\n\r\nWhen exiting ign-gazebo, cleaning up camera based sensors \\(e.g. camera, lidar, etc\\) causes segfaults.  Ogre2 works fine though.\r\n\r\n# Steps to reproduce\r\n\r\n1. change ign-gazebo\u2019s `sensors_demo.sdf` world file to use ogre1.x, i.e. change `ogre2` to `ogre`\r\n2. launch ign-gazebo with `sensors_demo.sdf` world\r\n3. exit ign-gazebo by closing the gui\r\n4. ign-gazebo segfaults \r\n\r\n\\*\\* Expected Behavior \\*\\*\r\n\r\nign-gazebo exist cleanly\r\n\r\n\\*\\* Actual Behavior \\*\\*\r\n\r\nign-gazebo server segfaults\r\n\r\n\\*\\* Reproduces how often \\*\\*\r\n\r\nall the time\r\n\r\n\u200c", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>When exiting ign-gazebo, cleaning up camera based sensors (e.g. camera, lidar, etc) causes segfaults.  Ogre2 works fine though.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to reproduce</h1>\n<ol>\n<li>change ign-gazebo\u2019s <code>sensors_demo.sdf</code> world file to use ogre1.x, i.e. change <code>ogre2</code> to <code>ogre</code></li>\n<li>launch ign-gazebo with <code>sensors_demo.sdf</code> world</li>\n<li>exit ign-gazebo by closing the gui</li>\n<li>ign-gazebo segfaults </li>\n</ol>\n<p>** Expected Behavior **</p>\n<p>ign-gazebo exist cleanly</p>\n<p>** Actual Behavior **</p>\n<p>ign-gazebo server segfaults</p>\n<p>** Reproduces how often **</p>\n<p>all the time</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-03T22:14:43.204703+00:00", "milestone": null, "updated_on": "2020-04-03T22:14:43.204703+00:00", "type": "issue", "id": 61}], "page": 1, "size": 61}