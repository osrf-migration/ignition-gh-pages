{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rndf.json"}, "html": {"href": "#!/ignitionrobotics/ign-rndf"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ea8a188-577c-4b20-b2fe-fa11d563d06e}ts=c_plus_plus"}}, "type": "repository", "name": "ign-rndf", "full_name": "ignitionrobotics/ign-rndf", "uuid": "{1ea8a188-577c-4b20-b2fe-fa11d563d06e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rndf/issues/2/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/2/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rndf/issues/2/add-a-tag-as-exit-or-entry-to-waypoints"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rndf/issues/2/vote"}}, "reporter": {"display_name": "Agustin Alba Chicar", "uuid": "{8bdb6c14-4455-4664-9346-942102361f75}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8bdb6c14-4455-4664-9346-942102361f75%7D"}, "html": {"href": "https://bitbucket.org/%7B8bdb6c14-4455-4664-9346-942102361f75%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:53e8cbc5-23f1-4d62-aaaf-4a25ebc31c8f/07535b33-5cf2-4e10-bcd5-38bf6b994a6a/128"}}, "nickname": "agalbachicar", "type": "user", "account_id": "557058:53e8cbc5-23f1-4d62-aaaf-4a25ebc31c8f"}, "title": "Add a tag as exit or entry to waypoints", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The current API provides a way to identify the lane's exit waypoints as RNDF defines it. However, it will be very useful to have a property method in the Waypoint class to identify it as an entry, an exit or just a common waypoint. \r\n\r\nThe use case for this property can be found when creating Maliput lanes. A RNDF lane is composed of a collection of waypoints but a Maliput Lane is specified in terms of a function. Consequently, we define just a starting point and an ending point for the function and we avoid all the points. The first and last points can be in terms of RNDF definition:\r\n\r\n* The first or the last point of a lane.\r\n* An entry or an exit point.\r\n\r\nThe nature of the second option is due to Maliput's relation between Lanes and BranchPoints. LaneEnds should belong to a BranchPoint, so entry and exit waypoints are candidates to be defined as BranchPoints. Beyond the formal explanation and focusing in code, when creating Maliput Lanes from RNDF Lanes, it will be simpler if we have all the waypoints of a line and I can query them wether or not they are entries or exits and make the groups of waypoints that will make a lane. In case we keep the current API, I need to query the structure first and make a map with them and I think it's worth moving it to the parsing stage.", "markup": "markdown", "html": "<p>The current API provides a way to identify the lane's exit waypoints as RNDF defines it. However, it will be very useful to have a property method in the Waypoint class to identify it as an entry, an exit or just a common waypoint. </p>\n<p>The use case for this property can be found when creating Maliput lanes. A RNDF lane is composed of a collection of waypoints but a Maliput Lane is specified in terms of a function. Consequently, we define just a starting point and an ending point for the function and we avoid all the points. The first and last points can be in terms of RNDF definition:</p>\n<ul>\n<li>The first or the last point of a lane.</li>\n<li>An entry or an exit point.</li>\n</ul>\n<p>The nature of the second option is due to Maliput's relation between Lanes and BranchPoints. LaneEnds should belong to a BranchPoint, so entry and exit waypoints are candidates to be defined as BranchPoints. Beyond the formal explanation and focusing in code, when creating Maliput Lanes from RNDF Lanes, it will be simpler if we have all the waypoints of a line and I can query them wether or not they are entries or exits and make the groups of waypoints that will make a lane. In case we keep the current API, I need to query the structure first and make a map with them and I think it's worth moving it to the parsing stage.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-04-26T14:46:30.498124+00:00", "milestone": null, "updated_on": "2017-05-10T17:14:35.011639+00:00", "type": "issue", "id": 2}