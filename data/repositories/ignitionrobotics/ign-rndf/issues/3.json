{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-rndf.json"}, "html": {"href": "#!/ignitionrobotics/ign-rndf"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1ea8a188-577c-4b20-b2fe-fa11d563d06e}ts=c_plus_plus"}}, "type": "repository", "name": "ign-rndf", "full_name": "ignitionrobotics/ign-rndf", "uuid": "{1ea8a188-577c-4b20-b2fe-fa11d563d06e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rndf/issues/3/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-rndf/issues/3/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-rndf/issues/3/flaky-test-failure-of-rndfloadsamples"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-rndf/issues/3/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Flaky test failure of RNDF.loadSamples (UNIT_RNDF_TEST) on homebrew", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There was a [test failure](https://build.osrfoundation.org/view/main/view/BuildCopTests/job/ignition_rndf-ci-default-homebrew-amd64/10/testReport/junit/(root)/UNIT_RNDF_TEST/test_ran/) of `UNIT_RNDF_TEST` on homebrew, though it has passed two times since then. I reproduced the failure with a loop on my machine and got the following backtrace on the 15th try:\r\n\r\n~~~\r\nulimit -c unlimited\r\nwhile src/UNIT_RNDF_TEST ; do date >> test_count; done\r\n~~~\r\n\r\n~~~\r\n[==========] Running 9 tests from 2 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 8 tests from RNDF\r\n[ RUN      ] RNDF.Name\r\n[       OK ] RNDF.Name (0 ms)\r\n[ RUN      ] RNDF.segments\r\nRNDF::AddSegment() Invalid segment with Id [-1]\r\nRNDF::AddSegment() error: Existing segment\r\n[       OK ] RNDF.segments (1 ms)\r\n[ RUN      ] RNDF.zones\r\n[RNDF::AddZone() Invalid zone [-1]\r\n[RNDF::AddZone() error: Existing zone\r\n[       OK ] RNDF.zones (0 ms)\r\n[ RUN      ] RNDF.Date\r\n[       OK ] RNDF.Date (0 ms)\r\n[ RUN      ] RNDF.Version\r\n[       OK ] RNDF.Version (0 ms)\r\n[ RUN      ] RNDF.Validation\r\n[       OK ] RNDF.Validation (0 ms)\r\n[ RUN      ] RNDF.loadInexistentFiles\r\nError opening RNDF [__inexistentFile___.rndf]\r\nError opening RNDF [__inexistentFile___.rndf]\r\n[       OK ] RNDF.loadInexistentFiles (0 ms)\r\n[ RUN      ] RNDF.loadSamples\r\nSegmentation fault: 11 (core dumped)\r\n~~~\r\n\r\n~~~\r\n(lldb) bt\r\n* thread #1: tid = 0x0000, 0x000000010d1819a0 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) [inlined] __istype(_c=<unavailable>, _f=16384) + 23 at ctype.h:158, stop reason = signal SIGSTOP\r\n  * frame #0: 0x000000010d1819a0 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) [inlined] __istype(_c=<unavailable>, _f=16384) + 23 at ctype.h:158\r\n    frame #1: 0x000000010d181989 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) [inlined] isspace(_c=<unavailable>) at ctype.h:269\r\n    frame #2: 0x000000010d181989 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) [inlined] void std::__1::replace_if<std::__1::__wrap_iter<char*>, int (*)(int), char>(__new_value=0x0000000000000020)(int), char const&) + 5 at algorithm:1995\r\n    frame #3: 0x000000010d181984 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(_str=<unavailable>) + 980 at ParserUtils.cc:72\r\n    frame #4: 0x000000010d181bf5 libignition-rndf0.0.dylib`ignition::rndf::nextRealLine(_rndfFile=0x00007fff52b165a0, _line=\"\\0* ============================ */\\09\\x9a\\x7f\\0\\0xs\\x19 \\x01\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0 ?\\x9e??\\a\\0?\\x01\\0\\0\\0\\0\\0\\0 \\0S\\x1d \\x01\\0\\0\\0?K! ?P??, _lineNumber=0x00007fff52b16564) + 133 at ParserUtils.cc:103\r\n    frame #5: 0x000000010d1822d5 libignition-rndf0.0.dylib`ignition::rndf::parsePositive(_rndfFile=<unavailable>, _delimiter=\"segment\", _value=0x00007fff52b1639c, _lineNumber=0x00007fff52b16564) + 53 at ParserUtils.cc:160\r\n    frame #6: 0x000000010d18cb11 libignition-rndf0.0.dylib`ignition::rndf::Segment::Load(this=0x00007fff52b164b0, _rndfFile=0x00007fff52b165a0, _lineNumber=0x00007fff52b16564, _exitCache=size=126, _waypointCache=size=578) + 81 at Segment.cc:170\r\n    frame #7: 0x000000010d1875e2 libignition-rndf0.0.dylib`ignition::rndf::RNDF::Load(this=0x00007fff52b16b28, _filePath=<unavailable>) + 754 at RNDF.cc:246\r\n    frame #8: 0x000000010d18877c libignition-rndf0.0.dylib`ignition::rndf::RNDF::RNDF(this=<unavailable>, _filepath=<unavailable>) + 76 at RNDF.cc:201\r\n    frame #9: 0x000000010d0f7cb1 UNIT_RNDF_TEST`RNDF_loadSamples_Test::TestBody(this=<unavailable>) + 24929 at RNDF_TEST.cc:370\r\n    frame #10: 0x000000010d11fb7c UNIT_RNDF_TEST`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [inlined] void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(method=<unavailable>, location=<unavailable>)(), char const*) + 156 at gtest.cc:2079\r\n    frame #11: 0x000000010d11fb6f UNIT_RNDF_TEST`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=<unavailable>, method=<unavailable>, location=<unavailable>)(), char const*) + 143 at gtest.cc:2115\r\n    frame #12: 0x000000010d10b23a UNIT_RNDF_TEST`testing::Test::Run(this=0x00007f9a39c05ad0) + 298 at gtest.cc:2151\r\n    frame #13: 0x000000010d10bf32 UNIT_RNDF_TEST`testing::TestInfo::Run(this=0x00007f9a39c05720) + 370 at gtest.cc:2327\r\n    frame #14: 0x000000010d10c623 UNIT_RNDF_TEST`testing::TestCase::Run(this=0x00007f9a39c04fe0) + 451 at gtest.cc:2445\r\n    frame #15: 0x000000010d113b3b UNIT_RNDF_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x00007f9a39c04cc0) + 939 at gtest.cc:4316\r\n    frame #16: 0x000000010d120254 UNIT_RNDF_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) [inlined] bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(method=<unavailable>, location=<unavailable>)(), char const*) + 14 at gtest.cc:2079\r\n    frame #17: 0x000000010d120246 UNIT_RNDF_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=<unavailable>, method=<unavailable>, location=\"auxiliary test code (environments or event listeners)\")(), char const*) + 134 at gtest.cc:2115\r\n    frame #18: 0x000000010d11373e UNIT_RNDF_TEST`testing::UnitTest::Run(this=<unavailable>) + 174 at gtest.cc:3927\r\n    frame #19: 0x000000010d0fd5a1 UNIT_RNDF_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\r\n    frame #20: 0x000000010d0fd594 UNIT_RNDF_TEST`main(argc=<unavailable>, argv=<unavailable>) + 20 at RNDF_TEST.cc:1206\r\n    frame #21: 0x00007fff88cbd5c9 libdyld.dylib`start + 1\r\n(lldb)\r\n~~~\r\n\r\nThe backtrace implicates the [trimWhitespaces function](#!/ignitionrobotics/ign-rndf/src/6c40bc792d5daef684b26a292cdc34710732787d/src/ParserUtils.cc?at=default&fileviewer=file-view-default#ParserUtils.cc-44). Some brief investigation indicated that it failed on lines with `/*` `*/` comments. There are probably some memory management errors in that function.", "markup": "markdown", "html": "<p>There was a <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/view/main/view/BuildCopTests/job/ignition_rndf-ci-default-homebrew-amd64/10/testReport/junit/(root)/UNIT_RNDF_TEST/test_ran/\" rel=\"nofollow\">test failure</a> of <code>UNIT_RNDF_TEST</code> on homebrew, though it has passed two times since then. I reproduced the failure with a loop on my machine and got the following backtrace on the 15th try:</p>\n<div class=\"codehilite\"><pre><span></span>ulimit -c unlimited\nwhile src/UNIT_RNDF_TEST ; do date &gt;&gt; test_count; done\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>[==========] Running 9 tests from 2 test cases.\n[----------] Global test environment set-up.\n[----------] 8 tests from RNDF\n[ RUN      ] RNDF.Name\n[       OK ] RNDF.Name (0 ms)\n[ RUN      ] RNDF.segments\nRNDF::AddSegment() Invalid segment with Id [-1]\nRNDF::AddSegment() error: Existing segment\n[       OK ] RNDF.segments (1 ms)\n[ RUN      ] RNDF.zones\n[RNDF::AddZone() Invalid zone [-1]\n[RNDF::AddZone() error: Existing zone\n[       OK ] RNDF.zones (0 ms)\n[ RUN      ] RNDF.Date\n[       OK ] RNDF.Date (0 ms)\n[ RUN      ] RNDF.Version\n[       OK ] RNDF.Version (0 ms)\n[ RUN      ] RNDF.Validation\n[       OK ] RNDF.Validation (0 ms)\n[ RUN      ] RNDF.loadInexistentFiles\nError opening RNDF [__inexistentFile___.rndf]\nError opening RNDF [__inexistentFile___.rndf]\n[       OK ] RNDF.loadInexistentFiles (0 ms)\n[ RUN      ] RNDF.loadSamples\nSegmentation fault: 11 (core dumped)\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>(lldb) bt\n* thread #1: tid = 0x0000, 0x000000010d1819a0 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) [inlined] __istype(_c=&lt;unavailable&gt;, _f=16384) + 23 at ctype.h:158, stop reason = signal SIGSTOP\n  * frame #0: 0x000000010d1819a0 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) [inlined] __istype(_c=&lt;unavailable&gt;, _f=16384) + 23 at ctype.h:158\n    frame #1: 0x000000010d181989 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) [inlined] isspace(_c=&lt;unavailable&gt;) at ctype.h:269\n    frame #2: 0x000000010d181989 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) [inlined] void std::__1::replace_if&lt;std::__1::__wrap_iter&lt;char*&gt;, int (*)(int), char&gt;(__new_value=0x0000000000000020)(int), char const&amp;) + 5 at algorithm:1995\n    frame #3: 0x000000010d181984 libignition-rndf0.0.dylib`ignition::rndf::trimWhitespaces(_str=&lt;unavailable&gt;) + 980 at ParserUtils.cc:72\n    frame #4: 0x000000010d181bf5 libignition-rndf0.0.dylib`ignition::rndf::nextRealLine(_rndfFile=0x00007fff52b165a0, _line=&quot;\\0* ============================ */\\09\\x9a\\x7f\\0\\0xs\\x19 \\x01\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0 ?\\x9e??\\a\\0?\\x01\\0\\0\\0\\0\\0\\0 \\0S\\x1d \\x01\\0\\0\\0?K! ?P??, _lineNumber=0x00007fff52b16564) + 133 at ParserUtils.cc:103\n    frame #5: 0x000000010d1822d5 libignition-rndf0.0.dylib`ignition::rndf::parsePositive(_rndfFile=&lt;unavailable&gt;, _delimiter=&quot;segment&quot;, _value=0x00007fff52b1639c, _lineNumber=0x00007fff52b16564) + 53 at ParserUtils.cc:160\n    frame #6: 0x000000010d18cb11 libignition-rndf0.0.dylib`ignition::rndf::Segment::Load(this=0x00007fff52b164b0, _rndfFile=0x00007fff52b165a0, _lineNumber=0x00007fff52b16564, _exitCache=size=126, _waypointCache=size=578) + 81 at Segment.cc:170\n    frame #7: 0x000000010d1875e2 libignition-rndf0.0.dylib`ignition::rndf::RNDF::Load(this=0x00007fff52b16b28, _filePath=&lt;unavailable&gt;) + 754 at RNDF.cc:246\n    frame #8: 0x000000010d18877c libignition-rndf0.0.dylib`ignition::rndf::RNDF::RNDF(this=&lt;unavailable&gt;, _filepath=&lt;unavailable&gt;) + 76 at RNDF.cc:201\n    frame #9: 0x000000010d0f7cb1 UNIT_RNDF_TEST`RNDF_loadSamples_Test::TestBody(this=&lt;unavailable&gt;) + 24929 at RNDF_TEST.cc:370\n    frame #10: 0x000000010d11fb7c UNIT_RNDF_TEST`void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(testing::Test*, void (testing::Test::*)(), char const*) [inlined] void testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(method=&lt;unavailable&gt;, location=&lt;unavailable&gt;)(), char const*) + 156 at gtest.cc:2079\n    frame #11: 0x000000010d11fb6f UNIT_RNDF_TEST`void testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;(object=&lt;unavailable&gt;, method=&lt;unavailable&gt;, location=&lt;unavailable&gt;)(), char const*) + 143 at gtest.cc:2115\n    frame #12: 0x000000010d10b23a UNIT_RNDF_TEST`testing::Test::Run(this=0x00007f9a39c05ad0) + 298 at gtest.cc:2151\n    frame #13: 0x000000010d10bf32 UNIT_RNDF_TEST`testing::TestInfo::Run(this=0x00007f9a39c05720) + 370 at gtest.cc:2327\n    frame #14: 0x000000010d10c623 UNIT_RNDF_TEST`testing::TestCase::Run(this=0x00007f9a39c04fe0) + 451 at gtest.cc:2445\n    frame #15: 0x000000010d113b3b UNIT_RNDF_TEST`testing::internal::UnitTestImpl::RunAllTests(this=0x00007f9a39c04cc0) + 939 at gtest.cc:4316\n    frame #16: 0x000000010d120254 UNIT_RNDF_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) [inlined] bool testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(method=&lt;unavailable&gt;, location=&lt;unavailable&gt;)(), char const*) + 14 at gtest.cc:2079\n    frame #17: 0x000000010d120246 UNIT_RNDF_TEST`bool testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;(object=&lt;unavailable&gt;, method=&lt;unavailable&gt;, location=&quot;auxiliary test code (environments or event listeners)&quot;)(), char const*) + 134 at gtest.cc:2115\n    frame #18: 0x000000010d11373e UNIT_RNDF_TEST`testing::UnitTest::Run(this=&lt;unavailable&gt;) + 174 at gtest.cc:3927\n    frame #19: 0x000000010d0fd5a1 UNIT_RNDF_TEST`main [inlined] RUN_ALL_TESTS() + 33 at gtest.h:2288\n    frame #20: 0x000000010d0fd594 UNIT_RNDF_TEST`main(argc=&lt;unavailable&gt;, argv=&lt;unavailable&gt;) + 20 at RNDF_TEST.cc:1206\n    frame #21: 0x00007fff88cbd5c9 libdyld.dylib`start + 1\n(lldb)\n</pre></div>\n\n\n<p>The backtrace implicates the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rndf/src/6c40bc792d5daef684b26a292cdc34710732787d/src/ParserUtils.cc?at=default&amp;fileviewer=file-view-default#ParserUtils.cc-44\" rel=\"nofollow\">trimWhitespaces function</a>. Some brief investigation indicated that it failed on lines with <code>/*</code> <code>*/</code> comments. There are probably some memory management errors in that function.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-05-24T22:15:31.612118+00:00", "milestone": null, "updated_on": "2017-05-25T17:19:31.129429+00:00", "type": "issue", "id": 3}