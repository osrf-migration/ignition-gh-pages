{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/146/comments/71734858.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diff/ignitionrobotics/ign-gui:acbad47d6d8f..c33f96cc3a5b?path=src%2FDisplayPlugin.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/146/_/diff#comment-71734858"}}, "parent": {"id": 71725730, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/146/comments/71725730.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/146/_/diff#comment-71725730"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 146, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/146.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/146"}}, "title": "Make collapsible button of relevant display plugins \"flat\""}, "content": {"raw": "I totally agree with you that putting it in the QSS makes the plugin less self-contained and feels like bad design.\n\nMy main worry is that having this hardcoded in the C++ code could lead to undesired effects when someone *does* choose to add some QSS on top of it. I've had problems setting other such properties before, and by looking at [questions like this](https://stackoverflow.com/a/34654801/6451468), I suspect the `flat` property can cause problems down the road. Based on these experiences, I've sort of defaulted to the \"best practice\" of leaving all styling responsibilities to the QSS.\n\nOne thing that I've thought about before and I think could address the concerns here, was allowing plugins to have their own stylesheets, instead of relying on a single global sheet. But that will probably never happen...\n\nIn any case, this was mainly a suggestion and a heads up in case you run into styling issues with this button in the future. Feel free to leave the implementation like this :wink: ", "markup": "markdown", "html": "<p>I totally agree with you that putting it in the QSS makes the plugin less self-contained and feels like bad design.</p>\n<p>My main worry is that having this hardcoded in the C++ code could lead to undesired effects when someone <em>does</em> choose to add some QSS on top of it. I've had problems setting other such properties before, and by looking at <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/34654801/6451468\" rel=\"nofollow\">questions like this</a>, I suspect the <code>flat</code> property can cause problems down the road. Based on these experiences, I've sort of defaulted to the \"best practice\" of leaving all styling responsibilities to the QSS.</p>\n<p>One thing that I've thought about before and I think could address the concerns here, was allowing plugins to have their own stylesheets, instead of relying on a single global sheet. But that will probably never happen...</p>\n<p>In any case, this was mainly a suggestion and a heads up in case you run into styling issues with this button in the future. Feel free to leave the implementation like this <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> </p>", "type": "rendered"}, "created_on": "2018-08-01T21:00:30.254508+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "outdated": true, "path": "src/DisplayPlugin.cc"}, "updated_on": "2018-08-01T21:00:30.262521+00:00", "type": "pullrequest_comment", "id": 71734858}