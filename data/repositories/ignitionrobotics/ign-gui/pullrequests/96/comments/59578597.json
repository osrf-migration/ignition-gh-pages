{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/96/comments/59578597.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/96/_/diff#comment-59578597"}}, "parent": {"id": 59143313, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/96/comments/59143313.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/96/_/diff#comment-59143313"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 96, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/96.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/96"}}, "title": "save configuration to the default location on exit"}, "content": {"raw": "To summarize the current options:\n\n1. Add `<save_on_exit>` option and set it to `false` here (disabled).\n    * Pros: Easier to implement, non-intrusive change.\n    * Cons: It's transparent to the user, someone can save unintentionally the last changes (although the user needs to explicitly activate the option).\n1. Add dialog window detecting all changes in position, size, and widget state (e.g.: user camera pose).\n    1. Comparing the entire logical state of all widgets\n        * Pros: More conservative, as users won't be surprised with saved changes the next time they start their application.\n        * Cons: Could be a bit annoying to have a dialog window every time that we interact with some widget; our API doesn't fully support the comparison of the entire logical state so it might be harder to implement.\n    1. Comparing plain XML configurations\n        * More conservative, as users won't be surprised with saved changes the next time they start their application.\n        * Cons: Could be a bit annoying to have a dialog window every time that we interact with some widget; the low level comparison can conclude that two configurations are different due to spacing or other non-logical differences.\n\nDo we have consensus? I'm leaning towards option (1).", "markup": "markdown", "html": "<p>To summarize the current options:</p>\n<ol>\n<li>Add <code>&lt;save_on_exit&gt;</code> option and set it to <code>false</code> here (disabled).<ul>\n<li>Pros: Easier to implement, non-intrusive change.</li>\n<li>Cons: It's transparent to the user, someone can save unintentionally the last changes (although the user needs to explicitly activate the option).</li>\n</ul>\n</li>\n<li>Add dialog window detecting all changes in position, size, and widget state (e.g.: user camera pose).<ol>\n<li>Comparing the entire logical state of all widgets<ul>\n<li>Pros: More conservative, as users won't be surprised with saved changes the next time they start their application.</li>\n<li>Cons: Could be a bit annoying to have a dialog window every time that we interact with some widget; our API doesn't fully support the comparison of the entire logical state so it might be harder to implement.</li>\n</ul>\n</li>\n<li>Comparing plain XML configurations<ul>\n<li>More conservative, as users won't be surprised with saved changes the next time they start their application.</li>\n<li>Cons: Could be a bit annoying to have a dialog window every time that we interact with some widget; the low level comparison can conclude that two configurations are different due to spacing or other non-logical differences.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p>Do we have consensus? I'm leaning towards option (1).</p>", "type": "rendered"}, "created_on": "2018-03-22T10:58:42.042443+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2018-03-22T11:02:03.029683+00:00", "type": "pullrequest_comment", "id": 59578597}