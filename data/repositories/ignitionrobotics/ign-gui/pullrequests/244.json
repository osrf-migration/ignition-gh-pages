{"rendered": {"description": {"raw": "QML contexts are helpful to share C++ data with the QML file.\r\n\r\nSo far, we've been using the application's root context for that, for example:\r\n\r\n```\r\n  ignition::gui::App()->Engine()->rootContext()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nHowever, this becomes a problem if we want to have different `customData`s working side-by-side.\r\n\r\nWith this pull request, plugins can set properties within their own context and avoid polluting the root context:\r\n\r\n```\r\n  this->Context()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nThis is especially handy if users need to instantiate the same plugin more than once. I ran into this need while working on [inspectors](#!/ignitionrobotics/ign-gazebo/pull-requests/528/wip-component-inspector/diff).\r\n\r\nAs far as I could tell, there's no way to get the original `QQmlContext` from the plugin item, so I needed to expose it here.", "markup": "markdown", "html": "<p>QML contexts are helpful to share C++ data with the QML file.</p>\n<p>So far, we've been using the application's root context for that, for example:</p>\n<div class=\"codehilite\"><pre><span></span>  ignition::gui::App()-&gt;Engine()-&gt;rootContext()-&gt;setContextProperty(\n      &quot;CustomData&quot;, &amp;this-&gt;dataPtr-&gt;customData);\n</pre></div>\n\n\n<p>However, this becomes a problem if we want to have different <code>customData</code>s working side-by-side.</p>\n<p>With this pull request, plugins can set properties within their own context and avoid polluting the root context:</p>\n<div class=\"codehilite\"><pre><span></span>  this-&gt;Context()-&gt;setContextProperty(\n      &quot;CustomData&quot;, &amp;this-&gt;dataPtr-&gt;customData);\n</pre></div>\n\n\n<p>This is especially handy if users need to instantiate the same plugin more than once. I ran into this need while working on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/528/wip-component-inspector/diff\" rel=\"nofollow\">inspectors</a>.</p>\n<p>As far as I could tell, there's no way to get the original <code>QQmlContext</code> from the plugin item, so I needed to expose it here.</p>", "type": "rendered"}, "title": {"raw": "Expose QML context to plugins", "markup": "markdown", "html": "<p>Expose QML context to plugins</p>", "type": "rendered"}}, "type": "pullrequest", "description": "QML contexts are helpful to share C++ data with the QML file.\r\n\r\nSo far, we've been using the application's root context for that, for example:\r\n\r\n```\r\n  ignition::gui::App()->Engine()->rootContext()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nHowever, this becomes a problem if we want to have different `customData`s working side-by-side.\r\n\r\nWith this pull request, plugins can set properties within their own context and avoid polluting the root context:\r\n\r\n```\r\n  this->Context()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nThis is especially handy if users need to instantiate the same plugin more than once. I ran into this need while working on [inspectors](#!/ignitionrobotics/ign-gazebo/pull-requests/528/wip-component-inspector/diff).\r\n\r\nAs far as I could tell, there's no way to get the original `QQmlContext` from the plugin item, so I needed to expose it here.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/244/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diffstat/ignitionrobotics/ign-gui:0149f837634a%0D126897c9cea6?from_pullrequest_id=244"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/244/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/244.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/244/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/244/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/244"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/244/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diff/ignitionrobotics/ign-gui:0149f837634a%0D126897c9cea6?from_pullrequest_id=244"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/244/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/244/statuses_page=1.json"}}, "title": "Expose QML context to plugins", "close_source_branch": true, "reviewers": [{"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}], "id": 244, "destination": {"commit": {"hash": "126897c9cea6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/126897c9cea6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/126897c9cea6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "ign-gui2"}}, "created_on": "2020-02-27T22:24:27.565773+00:00", "summary": {"raw": "QML contexts are helpful to share C++ data with the QML file.\r\n\r\nSo far, we've been using the application's root context for that, for example:\r\n\r\n```\r\n  ignition::gui::App()->Engine()->rootContext()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nHowever, this becomes a problem if we want to have different `customData`s working side-by-side.\r\n\r\nWith this pull request, plugins can set properties within their own context and avoid polluting the root context:\r\n\r\n```\r\n  this->Context()->setContextProperty(\r\n      \"CustomData\", &this->dataPtr->customData);\r\n```\r\n\r\nThis is especially handy if users need to instantiate the same plugin more than once. I ran into this need while working on [inspectors](#!/ignitionrobotics/ign-gazebo/pull-requests/528/wip-component-inspector/diff).\r\n\r\nAs far as I could tell, there's no way to get the original `QQmlContext` from the plugin item, so I needed to expose it here.", "markup": "markdown", "html": "<p>QML contexts are helpful to share C++ data with the QML file.</p>\n<p>So far, we've been using the application's root context for that, for example:</p>\n<div class=\"codehilite\"><pre><span></span>  ignition::gui::App()-&gt;Engine()-&gt;rootContext()-&gt;setContextProperty(\n      &quot;CustomData&quot;, &amp;this-&gt;dataPtr-&gt;customData);\n</pre></div>\n\n\n<p>However, this becomes a problem if we want to have different <code>customData</code>s working side-by-side.</p>\n<p>With this pull request, plugins can set properties within their own context and avoid polluting the root context:</p>\n<div class=\"codehilite\"><pre><span></span>  this-&gt;Context()-&gt;setContextProperty(\n      &quot;CustomData&quot;, &amp;this-&gt;dataPtr-&gt;customData);\n</pre></div>\n\n\n<p>This is especially handy if users need to instantiate the same plugin more than once. I ran into this need while working on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/528/wip-component-inspector/diff\" rel=\"nofollow\">inspectors</a>.</p>\n<p>As far as I could tell, there's no way to get the original <code>QQmlContext</code> from the plugin item, so I needed to expose it here.</p>", "type": "rendered"}, "source": {"commit": {"hash": "877077c014cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/877077c014cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/877077c014cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "expose_qml_context"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2020-03-03T23:45:35.553217+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Shepherd", "uuid": "{c4803212-effe-4921-9323-02cd01b8bc9c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4803212-effe-4921-9323-02cd01b8bc9c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d114073a232e50bd6f26983/41da687b-99ee-4c7e-a527-0202b6dc55f5/128"}}, "nickname": "John Shepherd", "type": "user", "account_id": "5d114073a232e50bd6f26983"}}], "reason": "", "updated_on": "2020-03-04T01:19:04.880663+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "0149f837634a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/0149f837634a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/0149f837634a"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}