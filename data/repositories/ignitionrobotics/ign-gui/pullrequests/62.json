{"rendered": {"description": {"raw": "This is the start of bringing rendering to Ignition GUI.\r\n\r\n### Scene3D\r\n\r\nThe `Scene3D` plugin offers an interactive view into a 3D scene. It may create an empty scene or add a new \"user camera\" to an existing scene. \r\n\r\nThe idea is to keep it very basic so it can be reused for many use cases. All it offers is:\r\n\r\n* Simple mouse controls (We will be improving native mouse controls on ign-rendering so the current implementation is very naive just to have something working. I didn't even bother writing tests for it yet)\r\n\r\n* Configuration of scene properties at startup, such as background color\r\n\r\n* Configuration of camera properties at startup (only pose for now)\r\n\r\nThe idea is not to add any more functionality to this plugin. Instead, other plugins can be used to populate and manage the scene. \r\n\r\nWe take advantage of the fact that the render engine on ign-rendering is a singleton so that other plugins on the same process can directly access its scenes. The `Grid3D` plugin offers an example.\r\n\r\n### Grid3D\r\n\r\nThis is an example of a plugin which connects to a scene previously created on a `Scene3D` plugin and  creates / reads / updates / removes resources from it.\r\n\r\n* It can insert grids:\r\n\r\n    * at startup according to the config file\r\n    * via the GUI\r\n\r\n* It can inspect properties, edit and delete grids through the UI\r\n\r\n* The refresh button is useful to reload the list of grids in case grids have been deleted / created by others\r\n\r\n* Added a `delete_later` attribute so any plugin can choose to close itself\r\n\r\nThis is intended as an example, I can imagine we add similar plugins for lights, geometries, etc.\r\n\r\n### Demo\r\n\r\nRun the demo:\r\n\r\n    ign gui -c ../examples/config/scene3d.config\r\n\r\n![gridpr.gif](data/bitbucket.org/repo/64K5zaR/images/511624492-gridpr.gif)\r\n\r\nI encourage reviewers to:\r\n\r\n* Play with different scene / grid configuration files\r\n* Add / remove plugins\r\n* Try out all the buttons on the GUI\r\n\r\n### Future (closely related) work\r\n\r\n* Save updated properties on config file when plugins are saved\r\n\r\n* Add a separate plugin to manage scene properties via the GUI, the same way we can manage grids\r\n\r\n* How to save a \"delete-later\" plugin?", "markup": "markdown", "html": "<p>This is the start of bringing rendering to Ignition GUI.</p>\n<h3 id=\"markdown-header-scene3d\">Scene3D</h3>\n<p>The <code>Scene3D</code> plugin offers an interactive view into a 3D scene. It may create an empty scene or add a new \"user camera\" to an existing scene. </p>\n<p>The idea is to keep it very basic so it can be reused for many use cases. All it offers is:</p>\n<ul>\n<li>\n<p>Simple mouse controls (We will be improving native mouse controls on ign-rendering so the current implementation is very naive just to have something working. I didn't even bother writing tests for it yet)</p>\n</li>\n<li>\n<p>Configuration of scene properties at startup, such as background color</p>\n</li>\n<li>\n<p>Configuration of camera properties at startup (only pose for now)</p>\n</li>\n</ul>\n<p>The idea is not to add any more functionality to this plugin. Instead, other plugins can be used to populate and manage the scene. </p>\n<p>We take advantage of the fact that the render engine on ign-rendering is a singleton so that other plugins on the same process can directly access its scenes. The <code>Grid3D</code> plugin offers an example.</p>\n<h3 id=\"markdown-header-grid3d\">Grid3D</h3>\n<p>This is an example of a plugin which connects to a scene previously created on a <code>Scene3D</code> plugin and  creates / reads / updates / removes resources from it.</p>\n<ul>\n<li>\n<p>It can insert grids:</p>\n<ul>\n<li>at startup according to the config file</li>\n<li>via the GUI</li>\n</ul>\n</li>\n<li>\n<p>It can inspect properties, edit and delete grids through the UI</p>\n</li>\n<li>\n<p>The refresh button is useful to reload the list of grids in case grids have been deleted / created by others</p>\n</li>\n<li>\n<p>Added a <code>delete_later</code> attribute so any plugin can choose to close itself</p>\n</li>\n</ul>\n<p>This is intended as an example, I can imagine we add similar plugins for lights, geometries, etc.</p>\n<h3 id=\"markdown-header-demo\">Demo</h3>\n<p>Run the demo:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -c ../examples/config/scene3d.config\n</pre></div>\n\n\n<p><img alt=\"gridpr.gif\" src=\"data/bitbucket.org/repo/64K5zaR/images/511624492-gridpr.gif\" /></p>\n<p>I encourage reviewers to:</p>\n<ul>\n<li>Play with different scene / grid configuration files</li>\n<li>Add / remove plugins</li>\n<li>Try out all the buttons on the GUI</li>\n</ul>\n<h3 id=\"markdown-header-future-closely-related-work\">Future (closely related) work</h3>\n<ul>\n<li>\n<p>Save updated properties on config file when plugins are saved</p>\n</li>\n<li>\n<p>Add a separate plugin to manage scene properties via the GUI, the same way we can manage grids</p>\n</li>\n<li>\n<p>How to save a \"delete-later\" plugin?</p>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Rendering plugins: Scene3D and Grid3D", "markup": "markdown", "html": "<p>Rendering plugins: Scene3D and Grid3D</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is the start of bringing rendering to Ignition GUI.\r\n\r\n### Scene3D\r\n\r\nThe `Scene3D` plugin offers an interactive view into a 3D scene. It may create an empty scene or add a new \"user camera\" to an existing scene. \r\n\r\nThe idea is to keep it very basic so it can be reused for many use cases. All it offers is:\r\n\r\n* Simple mouse controls (We will be improving native mouse controls on ign-rendering so the current implementation is very naive just to have something working. I didn't even bother writing tests for it yet)\r\n\r\n* Configuration of scene properties at startup, such as background color\r\n\r\n* Configuration of camera properties at startup (only pose for now)\r\n\r\nThe idea is not to add any more functionality to this plugin. Instead, other plugins can be used to populate and manage the scene. \r\n\r\nWe take advantage of the fact that the render engine on ign-rendering is a singleton so that other plugins on the same process can directly access its scenes. The `Grid3D` plugin offers an example.\r\n\r\n### Grid3D\r\n\r\nThis is an example of a plugin which connects to a scene previously created on a `Scene3D` plugin and  creates / reads / updates / removes resources from it.\r\n\r\n* It can insert grids:\r\n\r\n    * at startup according to the config file\r\n    * via the GUI\r\n\r\n* It can inspect properties, edit and delete grids through the UI\r\n\r\n* The refresh button is useful to reload the list of grids in case grids have been deleted / created by others\r\n\r\n* Added a `delete_later` attribute so any plugin can choose to close itself\r\n\r\nThis is intended as an example, I can imagine we add similar plugins for lights, geometries, etc.\r\n\r\n### Demo\r\n\r\nRun the demo:\r\n\r\n    ign gui -c ../examples/config/scene3d.config\r\n\r\n![gridpr.gif](data/bitbucket.org/repo/64K5zaR/images/511624492-gridpr.gif)\r\n\r\nI encourage reviewers to:\r\n\r\n* Play with different scene / grid configuration files\r\n* Add / remove plugins\r\n* Try out all the buttons on the GUI\r\n\r\n### Future (closely related) work\r\n\r\n* Save updated properties on config file when plugins are saved\r\n\r\n* Add a separate plugin to manage scene properties via the GUI, the same way we can manage grids\r\n\r\n* How to save a \"delete-later\" plugin?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/62/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diffstat/ignitionrobotics/ign-gui:216776de290a%0De0e3941950f4?from_pullrequest_id=62"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/62/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/62.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/62/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/62/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/62"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/62/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diff/ignitionrobotics/ign-gui:216776de290a%0De0e3941950f4?from_pullrequest_id=62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/62/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/62/statuses_page=1.json"}}, "title": "Rendering plugins: Scene3D and Grid3D", "close_source_branch": true, "reviewers": [], "id": 62, "destination": {"commit": {"hash": "e0e3941950f4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/e0e3941950f4.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/e0e3941950f4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "default"}}, "created_on": "2017-11-10T01:09:52.601316+00:00", "summary": {"raw": "This is the start of bringing rendering to Ignition GUI.\r\n\r\n### Scene3D\r\n\r\nThe `Scene3D` plugin offers an interactive view into a 3D scene. It may create an empty scene or add a new \"user camera\" to an existing scene. \r\n\r\nThe idea is to keep it very basic so it can be reused for many use cases. All it offers is:\r\n\r\n* Simple mouse controls (We will be improving native mouse controls on ign-rendering so the current implementation is very naive just to have something working. I didn't even bother writing tests for it yet)\r\n\r\n* Configuration of scene properties at startup, such as background color\r\n\r\n* Configuration of camera properties at startup (only pose for now)\r\n\r\nThe idea is not to add any more functionality to this plugin. Instead, other plugins can be used to populate and manage the scene. \r\n\r\nWe take advantage of the fact that the render engine on ign-rendering is a singleton so that other plugins on the same process can directly access its scenes. The `Grid3D` plugin offers an example.\r\n\r\n### Grid3D\r\n\r\nThis is an example of a plugin which connects to a scene previously created on a `Scene3D` plugin and  creates / reads / updates / removes resources from it.\r\n\r\n* It can insert grids:\r\n\r\n    * at startup according to the config file\r\n    * via the GUI\r\n\r\n* It can inspect properties, edit and delete grids through the UI\r\n\r\n* The refresh button is useful to reload the list of grids in case grids have been deleted / created by others\r\n\r\n* Added a `delete_later` attribute so any plugin can choose to close itself\r\n\r\nThis is intended as an example, I can imagine we add similar plugins for lights, geometries, etc.\r\n\r\n### Demo\r\n\r\nRun the demo:\r\n\r\n    ign gui -c ../examples/config/scene3d.config\r\n\r\n![gridpr.gif](data/bitbucket.org/repo/64K5zaR/images/511624492-gridpr.gif)\r\n\r\nI encourage reviewers to:\r\n\r\n* Play with different scene / grid configuration files\r\n* Add / remove plugins\r\n* Try out all the buttons on the GUI\r\n\r\n### Future (closely related) work\r\n\r\n* Save updated properties on config file when plugins are saved\r\n\r\n* Add a separate plugin to manage scene properties via the GUI, the same way we can manage grids\r\n\r\n* How to save a \"delete-later\" plugin?", "markup": "markdown", "html": "<p>This is the start of bringing rendering to Ignition GUI.</p>\n<h3 id=\"markdown-header-scene3d\">Scene3D</h3>\n<p>The <code>Scene3D</code> plugin offers an interactive view into a 3D scene. It may create an empty scene or add a new \"user camera\" to an existing scene. </p>\n<p>The idea is to keep it very basic so it can be reused for many use cases. All it offers is:</p>\n<ul>\n<li>\n<p>Simple mouse controls (We will be improving native mouse controls on ign-rendering so the current implementation is very naive just to have something working. I didn't even bother writing tests for it yet)</p>\n</li>\n<li>\n<p>Configuration of scene properties at startup, such as background color</p>\n</li>\n<li>\n<p>Configuration of camera properties at startup (only pose for now)</p>\n</li>\n</ul>\n<p>The idea is not to add any more functionality to this plugin. Instead, other plugins can be used to populate and manage the scene. </p>\n<p>We take advantage of the fact that the render engine on ign-rendering is a singleton so that other plugins on the same process can directly access its scenes. The <code>Grid3D</code> plugin offers an example.</p>\n<h3 id=\"markdown-header-grid3d\">Grid3D</h3>\n<p>This is an example of a plugin which connects to a scene previously created on a <code>Scene3D</code> plugin and  creates / reads / updates / removes resources from it.</p>\n<ul>\n<li>\n<p>It can insert grids:</p>\n<ul>\n<li>at startup according to the config file</li>\n<li>via the GUI</li>\n</ul>\n</li>\n<li>\n<p>It can inspect properties, edit and delete grids through the UI</p>\n</li>\n<li>\n<p>The refresh button is useful to reload the list of grids in case grids have been deleted / created by others</p>\n</li>\n<li>\n<p>Added a <code>delete_later</code> attribute so any plugin can choose to close itself</p>\n</li>\n</ul>\n<p>This is intended as an example, I can imagine we add similar plugins for lights, geometries, etc.</p>\n<h3 id=\"markdown-header-demo\">Demo</h3>\n<p>Run the demo:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -c ../examples/config/scene3d.config\n</pre></div>\n\n\n<p><img alt=\"gridpr.gif\" src=\"data/bitbucket.org/repo/64K5zaR/images/511624492-gridpr.gif\" /></p>\n<p>I encourage reviewers to:</p>\n<ul>\n<li>Play with different scene / grid configuration files</li>\n<li>Add / remove plugins</li>\n<li>Try out all the buttons on the GUI</li>\n</ul>\n<h3 id=\"markdown-header-future-closely-related-work\">Future (closely related) work</h3>\n<ul>\n<li>\n<p>Save updated properties on config file when plugins are saved</p>\n</li>\n<li>\n<p>Add a separate plugin to manage scene properties via the GUI, the same way we can manage grids</p>\n</li>\n<li>\n<p>How to save a \"delete-later\" plugin?</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "63bc2e88e616", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/63bc2e88e616.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/63bc2e88e616"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "scene_3d"}}, "comment_count": 67, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-12-21T05:43:06.947609+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-26T16:28:44.716049+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-14T22:15:01.606458+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-26T18:24:14.745983+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-12-26T18:31:24.672102+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "216776de290a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/216776de290a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/216776de290a"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}