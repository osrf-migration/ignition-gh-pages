{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128/comments/68284711.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128/_/diff#comment-68284711"}}, "parent": {"id": 68284008, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128/comments/68284008.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128/_/diff#comment-68284008"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 128, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128"}}, "title": "[gz11] Application"}, "content": {"raw": "I just realized this approach takes away a bit of flexibility from downstream projects. For example, there's a project doing the following:\n\n~~~\n  // Attempt to load window layout from default config file.\n  // If it's not available, load it from configFile.\n  if (!ignition::gui::loadDefaultConfig()) {\n    // If config file parsed from args is not\n    // a valid path, exit the application.\n    if(!ignition::gui::loadConfig(configFile)) {\n      return 1;\n    }\n  }\n\n  // Create main window (i.e. InitializeMainWindow)\n  ignition::gui::createMainWindow();\n~~~\n\nBy making `LoadDefaultConfig` private, we prevent them from doing these kinds of checks.\n\nI think we can support all these cases without much effort:\n\n* Load plugins/config **after** initializing window (needs to be supported anyway for the GUI)\n* Load plugins/config **before** initializing window (just to prevent errors in case user initializes afterwards)\n* Load plugins/config **while** initializing window (added by your branch)\n\n", "markup": "markdown", "html": "<p>I just realized this approach takes away a bit of flexibility from downstream projects. For example, there's a project doing the following:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"o\">//</span> <span class=\"nt\">Attempt</span> <span class=\"nt\">to</span> <span class=\"nt\">load</span> <span class=\"nt\">window</span> <span class=\"nt\">layout</span> <span class=\"nt\">from</span> <span class=\"nt\">default</span> <span class=\"nt\">config</span> <span class=\"nt\">file</span><span class=\"o\">.</span>\n  <span class=\"o\">//</span> <span class=\"nt\">If</span> <span class=\"nt\">it</span><span class=\"err\">&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">not</span> <span class=\"nt\">available</span><span class=\"o\">,</span> <span class=\"nt\">load</span> <span class=\"nt\">it</span> <span class=\"nt\">from</span> <span class=\"nt\">configFile</span><span class=\"o\">.</span>\n  <span class=\"nt\">if</span> <span class=\"o\">(!</span><span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">gui</span><span class=\"p\">::</span><span class=\"nd\">loadDefaultConfig</span><span class=\"o\">())</span> <span class=\"p\">{</span>\n    <span class=\"err\">//</span> <span class=\"err\">If</span> <span class=\"err\">config</span> <span class=\"err\">file</span> <span class=\"err\">parsed</span> <span class=\"err\">from</span> <span class=\"err\">args</span> <span class=\"err\">is</span> <span class=\"err\">not</span>\n    <span class=\"err\">//</span> <span class=\"err\">a</span> <span class=\"err\">valid</span> <span class=\"err\">path,</span> <span class=\"err\">exit</span> <span class=\"err\">the</span> <span class=\"err\">application.</span>\n    <span class=\"err\">if(!</span><span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">gui</span><span class=\"o\">::</span><span class=\"nf\">loadConfig</span><span class=\"p\">(</span><span class=\"n\">configFile</span><span class=\"p\">))</span> <span class=\"err\">{</span>\n      <span class=\"n\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"err\">}</span>\n\n  <span class=\"o\">//</span> <span class=\"nt\">Create</span> <span class=\"nt\">main</span> <span class=\"nt\">window</span> <span class=\"o\">(</span><span class=\"nt\">i</span><span class=\"p\">.</span><span class=\"nc\">e</span><span class=\"o\">.</span> <span class=\"nt\">InitializeMainWindow</span><span class=\"o\">)</span>\n  <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">gui</span><span class=\"p\">::</span><span class=\"nd\">createMainWindow</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>By making <code>LoadDefaultConfig</code> private, we prevent them from doing these kinds of checks.</p>\n<p>I think we can support all these cases without much effort:</p>\n<ul>\n<li>Load plugins/config <strong>after</strong> initializing window (needs to be supported anyway for the GUI)</li>\n<li>Load plugins/config <strong>before</strong> initializing window (just to prevent errors in case user initializes afterwards)</li>\n<li>Load plugins/config <strong>while</strong> initializing window (added by your branch)</li>\n</ul>", "type": "rendered"}, "created_on": "2018-06-27T01:23:54.794521+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-06-27T01:23:54.802783+00:00", "type": "pullrequest_comment", "id": 68284711}