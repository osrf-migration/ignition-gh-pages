{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128/comments/68407309.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128/_/diff#comment-68407309"}}, "parent": {"id": 68406802, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128/comments/68406802.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128/_/diff#comment-68406802"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 128, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/128.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/128"}}, "title": "[gz11] Application"}, "content": {"raw": "Something like this:\n\n~~~\ndiff -r d717a5f9b9e8 include/ignition/gui/Application.hh\n--- a/include/ignition/gui/Application.hh       Tue Jun 26 18:47:54 2018 -0700\n+++ b/include/ignition/gui/Application.hh       Wed Jun 27 13:50:29 2018 -0700\n@@ -86,13 +86,10 @@\n       public: bool Initialize(const WindowType _type,\n                               const std::string &_config);\n \n-      /// \\brief Initialize the application window(s) with a given\n-      /// configuration and plugins.\n+      /// \\brief Initialize the application window(s) with the given plugins.\n       /// \\param[in] _type Window type, such as main window or dialog.\n-      /// \\param[in] _config Path to config file.\n       /// \\param[in] _plugins Configuration for plugins\n       public: bool Initialize(const WindowType _type,\n-                              const std::string &_config,\n                               const std::vector<PluginConfig> &_plugins);\n \n       /// \\brief Get the QML engine\ndiff -r d717a5f9b9e8 src/Application.cc\n--- a/src/Application.cc        Tue Jun 26 18:47:54 2018 -0700\n+++ b/src/Application.cc        Wed Jun 27 13:50:29 2018 -0700\n@@ -391,7 +391,6 @@\n \n /////////////////////////////////////////////////\n bool Application::Initialize(const WindowType _type,\n-                             const std::string &_config,\n                              const std::vector<PluginConfig> &_plugins)\n {\n   for (const auto plugin : _plugins)\n@@ -400,11 +399,6 @@\n       return false;\n   }\n \n-  if (_config.empty())\n-    this->LoadDefaultConfig();\n-  else\n-    this->LoadConfig(_config);\n-\n   return this->Initialize(_type);\n }\n \ndiff -r d717a5f9b9e8 src/Application_TEST.cc\n--- a/src/Application_TEST.cc   Tue Jun 26 18:47:54 2018 -0700\n+++ b/src/Application_TEST.cc   Wed Jun 27 13:50:29 2018 -0700\n@@ -323,7 +323,8 @@\n     app.AddPluginPath(testBuildPath);\n \n     // Initialize dialog\n-    EXPECT_TRUE(app.Initialize(WindowType::kDialog, \"\", {{\"TestPlugin\"}}));\n+    PluginConfig plugin{\"TestPlugin\"};\n+    EXPECT_TRUE(app.Initialize(WindowType::kDialog, {plugin}));\n \n     // Close dialog after some time\n     auto closed = false;\n@@ -357,8 +358,8 @@\n     app.AddPluginPath(testBuildPath);\n \n     // Initialize dialogs\n-    EXPECT_TRUE(app.Initialize(WindowType::kDialog, \"\",\n-          {{\"TestPlugin\"}, {\"TestPlugin\"}}));\n+    std::vector<PluginConfig> plugins{{\"TestPlugin\"}, {\"TestPlugin\"}};\n+    EXPECT_TRUE(app.Initialize(WindowType::kDialog, plugins));\n \n     // Close dialogs after some time\n     auto closed = false;\ndiff -r d717a5f9b9e8 src/Plugin_TEST.cc\n--- a/src/Plugin_TEST.cc        Tue Jun 26 18:47:54 2018 -0700\n+++ b/src/Plugin_TEST.cc        Wed Jun 27 13:50:29 2018 -0700\n@@ -56,8 +56,8 @@\n   pluginDoc.Parse(pluginStr);\n \n   // Create main window\n-  EXPECT_TRUE(app.Initialize(WindowType::kMainWindow, \"\",\n-        {{\"TestPlugin\", pluginDoc.FirstChildElement(\"plugin\")}}));\n+  PluginConfig plugin{\"TestPlugin\", pluginDoc.FirstChildElement(\"plugin\")};\n+  EXPECT_TRUE(app.Initialize(WindowType::kMainWindow, {plugin}));\n \n   auto win = app.findChild<MainWindow *>();\n   ASSERT_NE(nullptr, win);\ndiff -r d717a5f9b9e8 src/ign.cc\n--- a/src/ign.cc        Tue Jun 26 18:47:54 2018 -0700\n+++ b/src/ign.cc        Wed Jun 27 13:50:29 2018 -0700\n@@ -63,8 +63,8 @@\n {\n   ignition::gui::Application app(g_argc, g_argv);\n \n-  if (!app.Initialize(ignition::gui::WindowType::kDialog, \"\",\n-      {{_filename}}))\n+  ignition::gui::PluginConfig plugin{_filename};\n+  if (!app.Initialize(ignition::gui::WindowType::kDialog, {plugin}))\n   {\n     return;\n   }\n~~~", "markup": "markdown", "html": "<p>Something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r d717a5f9b9e8 include/ignition/gui/Application.hh</span>\n<span class=\"gd\">--- a/include/ignition/gui/Application.hh       Tue Jun 26 18:47:54 2018 -0700</span>\n<span class=\"gi\">+++ b/include/ignition/gui/Application.hh       Wed Jun 27 13:50:29 2018 -0700</span>\n<span class=\"gu\">@@ -86,13 +86,10 @@</span>\n       public: bool Initialize(const WindowType _type,\n                               const std::string &amp;_config);\n\n<span class=\"gd\">-      /// \\brief Initialize the application window(s) with a given</span>\n<span class=\"gd\">-      /// configuration and plugins.</span>\n<span class=\"gi\">+      /// \\brief Initialize the application window(s) with the given plugins.</span>\n       /// \\param[in] _type Window type, such as main window or dialog.\n<span class=\"gd\">-      /// \\param[in] _config Path to config file.</span>\n       /// \\param[in] _plugins Configuration for plugins\n       public: bool Initialize(const WindowType _type,\n<span class=\"gd\">-                              const std::string &amp;_config,</span>\n                               const std::vector&lt;PluginConfig&gt; &amp;_plugins);\n\n       /// \\brief Get the QML engine\n<span class=\"gh\">diff -r d717a5f9b9e8 src/Application.cc</span>\n<span class=\"gd\">--- a/src/Application.cc        Tue Jun 26 18:47:54 2018 -0700</span>\n<span class=\"gi\">+++ b/src/Application.cc        Wed Jun 27 13:50:29 2018 -0700</span>\n<span class=\"gu\">@@ -391,7 +391,6 @@</span>\n\n /////////////////////////////////////////////////\n bool Application::Initialize(const WindowType _type,\n<span class=\"gd\">-                             const std::string &amp;_config,</span>\n                              const std::vector&lt;PluginConfig&gt; &amp;_plugins)\n {\n   for (const auto plugin : _plugins)\n<span class=\"gu\">@@ -400,11 +399,6 @@</span>\n       return false;\n   }\n\n<span class=\"gd\">-  if (_config.empty())</span>\n<span class=\"gd\">-    this-&gt;LoadDefaultConfig();</span>\n<span class=\"gd\">-  else</span>\n<span class=\"gd\">-    this-&gt;LoadConfig(_config);</span>\n<span class=\"gd\">-</span>\n   return this-&gt;Initialize(_type);\n }\n\n<span class=\"gh\">diff -r d717a5f9b9e8 src/Application_TEST.cc</span>\n<span class=\"gd\">--- a/src/Application_TEST.cc   Tue Jun 26 18:47:54 2018 -0700</span>\n<span class=\"gi\">+++ b/src/Application_TEST.cc   Wed Jun 27 13:50:29 2018 -0700</span>\n<span class=\"gu\">@@ -323,7 +323,8 @@</span>\n     app.AddPluginPath(testBuildPath);\n\n     // Initialize dialog\n<span class=\"gd\">-    EXPECT_TRUE(app.Initialize(WindowType::kDialog, &quot;&quot;, {{&quot;TestPlugin&quot;}}));</span>\n<span class=\"gi\">+    PluginConfig plugin{&quot;TestPlugin&quot;};</span>\n<span class=\"gi\">+    EXPECT_TRUE(app.Initialize(WindowType::kDialog, {plugin}));</span>\n\n     // Close dialog after some time\n     auto closed = false;\n<span class=\"gu\">@@ -357,8 +358,8 @@</span>\n     app.AddPluginPath(testBuildPath);\n\n     // Initialize dialogs\n<span class=\"gd\">-    EXPECT_TRUE(app.Initialize(WindowType::kDialog, &quot;&quot;,</span>\n<span class=\"gd\">-          {{&quot;TestPlugin&quot;}, {&quot;TestPlugin&quot;}}));</span>\n<span class=\"gi\">+    std::vector&lt;PluginConfig&gt; plugins{{&quot;TestPlugin&quot;}, {&quot;TestPlugin&quot;}};</span>\n<span class=\"gi\">+    EXPECT_TRUE(app.Initialize(WindowType::kDialog, plugins));</span>\n\n     // Close dialogs after some time\n     auto closed = false;\n<span class=\"gh\">diff -r d717a5f9b9e8 src/Plugin_TEST.cc</span>\n<span class=\"gd\">--- a/src/Plugin_TEST.cc        Tue Jun 26 18:47:54 2018 -0700</span>\n<span class=\"gi\">+++ b/src/Plugin_TEST.cc        Wed Jun 27 13:50:29 2018 -0700</span>\n<span class=\"gu\">@@ -56,8 +56,8 @@</span>\n   pluginDoc.Parse(pluginStr);\n\n   // Create main window\n<span class=\"gd\">-  EXPECT_TRUE(app.Initialize(WindowType::kMainWindow, &quot;&quot;,</span>\n<span class=\"gd\">-        {{&quot;TestPlugin&quot;, pluginDoc.FirstChildElement(&quot;plugin&quot;)}}));</span>\n<span class=\"gi\">+  PluginConfig plugin{&quot;TestPlugin&quot;, pluginDoc.FirstChildElement(&quot;plugin&quot;)};</span>\n<span class=\"gi\">+  EXPECT_TRUE(app.Initialize(WindowType::kMainWindow, {plugin}));</span>\n\n   auto win = app.findChild&lt;MainWindow *&gt;();\n   ASSERT_NE(nullptr, win);\n<span class=\"gh\">diff -r d717a5f9b9e8 src/ign.cc</span>\n<span class=\"gd\">--- a/src/ign.cc        Tue Jun 26 18:47:54 2018 -0700</span>\n<span class=\"gi\">+++ b/src/ign.cc        Wed Jun 27 13:50:29 2018 -0700</span>\n<span class=\"gu\">@@ -63,8 +63,8 @@</span>\n {\n   ignition::gui::Application app(g_argc, g_argv);\n\n<span class=\"gd\">-  if (!app.Initialize(ignition::gui::WindowType::kDialog, &quot;&quot;,</span>\n<span class=\"gd\">-      {{_filename}}))</span>\n<span class=\"gi\">+  ignition::gui::PluginConfig plugin{_filename};</span>\n<span class=\"gi\">+  if (!app.Initialize(ignition::gui::WindowType::kDialog, {plugin}))</span>\n   {\n     return;\n   }\n</pre></div>", "type": "rendered"}, "created_on": "2018-06-27T20:50:58.079458+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-06-27T20:50:58.087038+00:00", "type": "pullrequest_comment", "id": 68407309}