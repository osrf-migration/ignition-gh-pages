{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/150/comments/73903065.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/150/_/diff#comment-73903065"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 150, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/150.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/150"}}, "title": "Realtime factor display plugin: Attach RTF text to Camera of the Scene"}, "content": {"raw": "Ready for review please. Requires [#!/ignitionrobotics/ign-rendering/pull-requests/88](#!/ignitionrobotics/ign-rendering/pull-requests/88) which is still under review but the direction has been approved.\n\nHere\u2019s a demo of the RTF display in the example config, though the RTF display doesn\u2019t currently make sense in the demo config because nothing is publishing the RTF.\n\n_The gif was created with a simulation publishing the RTF independently, just to pump the update callback to re-calculate on window resize_.\n\n![](data/bitbucket.org/repo/64K5zaR/images/1674502324-RealtimeFactorDisplay_overlay.gif)\nThe text will be attached to the camera, so it will be re-positioned based on the camera\u2019s change in pose automatically from panning or zooming. It will _not_ automatically reposition the text when the camera is resized. It is _not_ responding to camera resize events directly, it is just being updated whenever a RTF message is received, which is why there is a little big of lag between camera resize and the text recalculation.  \n  \nThe text is positioned in the bottom left because I right alignment didn\u2019t seem to be working.\n\n\u200c\n\nThe text position relative to the camera is calculated via back projection from the bottom left corner of the image plane into camera 3D coordinates, using its projection matrix. [These calculations are followed](http://docs.ros.org/melodic/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html#l00282), from PinholeCameraModel::projectPixelTo3dRay in image\\_geometry ros package \\(though the equations for back-projection are generally well established, but that\u2019s the specific code I followed\\).\n\n\u200c\n\nBecause the projection matrix is used, this works with other cameras as well. I\u2019ve tested with a camera with `IGN_DTOR(60));` also and it works. There are still a few magic numbers in the calculations though that probably have equations associated with them, but I determined them empirically.", "markup": "markdown", "html": "<p>Ready for review please. Requires <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/88\" rel=\"nofollow\">#!/ignitionrobotics/ign-rendering/pull-requests/88</a> which is still under review but the direction has been approved.</p>\n<p>Here\u2019s a demo of the RTF display in the example config, though the RTF display doesn\u2019t currently make sense in the demo config because nothing is publishing the RTF.</p>\n<p><em>The gif was created with a simulation publishing the RTF independently, just to pump the update callback to re-calculate on window resize</em>.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/64K5zaR/images/1674502324-RealtimeFactorDisplay_overlay.gif\" />\nThe text will be attached to the camera, so it will be re-positioned based on the camera\u2019s change in pose automatically from panning or zooming. It will <em>not</em> automatically reposition the text when the camera is resized. It is <em>not</em> responding to camera resize events directly, it is just being updated whenever a RTF message is received, which is why there is a little big of lag between camera resize and the text recalculation.  </p>\n<p>The text is positioned in the bottom left because I right alignment didn\u2019t seem to be working.</p>\n<p>\u200c</p>\n<p>The text position relative to the camera is calculated via back projection from the bottom left corner of the image plane into camera 3D coordinates, using its projection matrix. <a data-is-external-link=\"true\" href=\"http://docs.ros.org/melodic/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html#l00282\" rel=\"nofollow\">These calculations are followed</a>, from PinholeCameraModel::projectPixelTo3dRay in image_geometry ros package (though the equations for back-projection are generally well established, but that\u2019s the specific code I followed).</p>\n<p>\u200c</p>\n<p>Because the projection matrix is used, this works with other cameras as well. I\u2019ve tested with a camera with <code>IGN_DTOR(60));</code> also and it works. There are still a few magic numbers in the calculations though that probably have equations associated with them, but I determined them empirically.</p>", "type": "rendered"}, "created_on": "2018-08-23T21:49:58.290401+00:00", "user": {"display_name": "Deanna Hood", "uuid": "{40d490b4-7de9-4c89-ac1c-2219a22057eb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D"}, "html": {"href": "https://bitbucket.org/%7B40d490b4-7de9-4c89-ac1c-2219a22057eb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5/f7b56737-eb1f-481f-beb1-50c179565cf4/128"}}, "nickname": "d_hood", "type": "user", "account_id": "557058:ec666897-79d8-48b4-ae27-4f0e9e56f5b5"}, "updated_on": "2018-08-23T21:49:58.297220+00:00", "type": "pullrequest_comment", "id": 73903065}