{"rendered": {"description": {"raw": "Pull request #17 added an example on how to override the default style using cmake. This PR adds many other ways to do it:\r\n\r\nFrom the command line:\r\n\r\n    ign gui -s libPublisher.so -t examples/standalone/style_cmake/style.qss\r\n\r\nOn a config file:\r\n\r\n    ign gui -c examples/config/stylesheet.config\r\n\r\nWith C++:\r\n\r\n    ignition::gui::setQssFile(const std::string &_qssFile)\r\n    ignition::gui::applyStyleSheet()\r\n\r\nThrough the GUI:\r\n\r\n![qss.gif](data/bitbucket.org/repo/64K5zaR/images/4084367144-qss.gif)\r\n\r\n## Future work\r\n\r\n* Allow separate stylesheets for each plugin\r\n* Offer preset material design styles. For this I'm currently pursuing 2 leads:\r\n    1. Generating stylesheets substituting color variables on a template stylesheet\r\n    1. Supporting QtQuick and its built-in material design styles", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-gui/pull-requests/17/example-and-documentation-on-overriding\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #17</a> added an example on how to override the default style using cmake. This PR adds many other ways to do it:</p>\n<p>From the command line:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -s libPublisher.so -t examples/standalone/style_cmake/style.qss\n</pre></div>\n\n\n<p>On a config file:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -c examples/config/stylesheet.config\n</pre></div>\n\n\n<p>With C++:</p>\n<div class=\"codehilite\"><pre><span></span>ignition::gui::setQssFile(const std::string &amp;_qssFile)\nignition::gui::applyStyleSheet()\n</pre></div>\n\n\n<p>Through the GUI:</p>\n<p><img alt=\"qss.gif\" src=\"data/bitbucket.org/repo/64K5zaR/images/4084367144-qss.gif\" /></p>\n<h2 id=\"markdown-header-future-work\">Future work</h2>\n<ul>\n<li>Allow separate stylesheets for each plugin</li>\n<li>Offer preset material design styles. For this I'm currently pursuing 2 leads:<ol>\n<li>Generating stylesheets substituting color variables on a template stylesheet</li>\n<li>Supporting QtQuick and its built-in material design styles</li>\n</ol>\n</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Custom stylesheets", "markup": "markdown", "html": "<p>Custom stylesheets</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Pull request #17 added an example on how to override the default style using cmake. This PR adds many other ways to do it:\r\n\r\nFrom the command line:\r\n\r\n    ign gui -s libPublisher.so -t examples/standalone/style_cmake/style.qss\r\n\r\nOn a config file:\r\n\r\n    ign gui -c examples/config/stylesheet.config\r\n\r\nWith C++:\r\n\r\n    ignition::gui::setQssFile(const std::string &_qssFile)\r\n    ignition::gui::applyStyleSheet()\r\n\r\nThrough the GUI:\r\n\r\n![qss.gif](data/bitbucket.org/repo/64K5zaR/images/4084367144-qss.gif)\r\n\r\n## Future work\r\n\r\n* Allow separate stylesheets for each plugin\r\n* Offer preset material design styles. For this I'm currently pursuing 2 leads:\r\n    1. Generating stylesheets substituting color variables on a template stylesheet\r\n    1. Supporting QtQuick and its built-in material design styles", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diffstat/ignitionrobotics/ign-gui:ba26f17198bc%0D341587aae76a?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/24.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/24/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gui/pull-requests/24"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/diff/ignitionrobotics/ign-gui:ba26f17198bc%0D341587aae76a?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gui/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gui/pullrequests/24/statuses_page=1.json"}}, "title": "Custom stylesheets", "close_source_branch": true, "reviewers": [], "id": 24, "destination": {"commit": {"hash": "341587aae76a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/341587aae76a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/341587aae76a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "default"}}, "created_on": "2017-09-06T19:22:58.333116+00:00", "summary": {"raw": "Pull request #17 added an example on how to override the default style using cmake. This PR adds many other ways to do it:\r\n\r\nFrom the command line:\r\n\r\n    ign gui -s libPublisher.so -t examples/standalone/style_cmake/style.qss\r\n\r\nOn a config file:\r\n\r\n    ign gui -c examples/config/stylesheet.config\r\n\r\nWith C++:\r\n\r\n    ignition::gui::setQssFile(const std::string &_qssFile)\r\n    ignition::gui::applyStyleSheet()\r\n\r\nThrough the GUI:\r\n\r\n![qss.gif](data/bitbucket.org/repo/64K5zaR/images/4084367144-qss.gif)\r\n\r\n## Future work\r\n\r\n* Allow separate stylesheets for each plugin\r\n* Offer preset material design styles. For this I'm currently pursuing 2 leads:\r\n    1. Generating stylesheets substituting color variables on a template stylesheet\r\n    1. Supporting QtQuick and its built-in material design styles", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-gui/pull-requests/17/example-and-documentation-on-overriding\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #17</a> added an example on how to override the default style using cmake. This PR adds many other ways to do it:</p>\n<p>From the command line:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -s libPublisher.so -t examples/standalone/style_cmake/style.qss\n</pre></div>\n\n\n<p>On a config file:</p>\n<div class=\"codehilite\"><pre><span></span>ign gui -c examples/config/stylesheet.config\n</pre></div>\n\n\n<p>With C++:</p>\n<div class=\"codehilite\"><pre><span></span>ignition::gui::setQssFile(const std::string &amp;_qssFile)\nignition::gui::applyStyleSheet()\n</pre></div>\n\n\n<p>Through the GUI:</p>\n<p><img alt=\"qss.gif\" src=\"data/bitbucket.org/repo/64K5zaR/images/4084367144-qss.gif\" /></p>\n<h2 id=\"markdown-header-future-work\">Future work</h2>\n<ul>\n<li>Allow separate stylesheets for each plugin</li>\n<li>Offer preset material design styles. For this I'm currently pursuing 2 leads:<ol>\n<li>Generating stylesheets substituting color variables on a template stylesheet</li>\n<li>Supporting QtQuick and its built-in material design styles</li>\n</ol>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "46557aa8ee6f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/46557aa8ee6f.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/46557aa8ee6f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui"}, "avatar": {"href": "data/bytebucket.org/ravatar/{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}ts=1406854"}}, "type": "repository", "name": "ign-gui", "full_name": "ignitionrobotics/ign-gui", "uuid": "{d80b97c2-f3f9-42b2-86b0-8c1fd4aa845f}"}, "branch": {"name": "stylesheets"}}, "comment_count": 56, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-09-08T16:45:40.070275+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2017-09-08T16:35:15.714547+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-09-08T17:13:59.044764+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "ba26f17198bc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gui/commit/ba26f17198bc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gui/commits/ba26f17198bc"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}