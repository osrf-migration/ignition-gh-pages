{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/18/comments/38247184.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/18#comment-38247184"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/18.json"}}, "type": "issue", "id": 18, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "title": "Many compiler warnings are disabled"}, "content": {"raw": "this patch works for `ign-math`:\n\n~~~\ndiff -r 14518dfda0f0 CMakeLists.txt\n--- a/CMakeLists.txt\tFri Jul 07 20:24:46 2017 +0000\n+++ b/CMakeLists.txt\tFri Jul 14 15:43:57 2017 -0700\n@@ -176,6 +176,20 @@\n unset (CMAKE_C_FLAGS_ALL CACHE)\n unset (CMAKE_CXX_FLAGS CACHE)\n \n+# USE_HOST_CFLAGS (default TRUE)\n+# Will check building host machine for proper cflags\n+if(NOT DEFINED USE_HOST_CFLAGS OR USE_HOST_CFLAGS)\n+  message(STATUS \"Enable host CFlags\")\n+  include (${project_cmake_dir}/HostCFlags.cmake)\n+endif()\n+\n+# USE_UPSTREAM_CFLAGS (default TRUE)\n+# Will use predefined ignition developers cflags\n+if(NOT DEFINED USE_UPSTREAM_CFLAGS OR USE_UPSTREAM_CFLAGS)\n+  message(STATUS \"Enable upstream CFlags\")\n+  include(${project_cmake_dir}/DefaultCFlags.cmake)\n+endif()\n+\n # Check if warning options are avaliable for the compiler and return WARNING_CXX_FLAGS variable\n # MSVC generates tons of warnings on gtest code.\n # Recommended to use /W4 instead of /Wall\ndiff -r 14518dfda0f0 cmake/Utils.cmake\n--- a/cmake/Utils.cmake\tFri Jul 07 20:24:46 2017 +0000\n+++ b/cmake/Utils.cmake\tFri Jul 14 15:43:57 2017 -0700\n@@ -97,19 +97,6 @@\n \n #################################################\n macro (ign_setup_unix)\n-  # USE_HOST_CFLAGS (default TRUE)\n-  # Will check building host machine for proper cflags\n-  if(NOT DEFINED USE_HOST_CFLAGS OR USE_HOST_CFLAGS)\n-    message(STATUS \"Enable host CFlags\")\n-    include (${project_cmake_dir}/HostCFlags.cmake)\n-  endif()\n-\n-  # USE_UPSTREAM_CFLAGS (default TRUE)\n-  # Will use predefined ignition developers cflags\n-  if(NOT DEFINED USE_UPSTREAM_CFLAGS OR USE_UPSTREAM_CFLAGS)\n-     message(STATUS \"Enable upstream CFlags\")\n-     include(${project_cmake_dir}/DefaultCFlags.cmake)\n-  endif()\n endmacro()\n \n #################################################\n~~~", "markup": "markdown", "html": "<p>this patch works for <code>ign-math</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 14518dfda0f0 CMakeLists.txt</span>\n<span class=\"gd\">--- a/CMakeLists.txt    Fri Jul 07 20:24:46 2017 +0000</span>\n<span class=\"gi\">+++ b/CMakeLists.txt    Fri Jul 14 15:43:57 2017 -0700</span>\n<span class=\"gu\">@@ -176,6 +176,20 @@</span>\n unset (CMAKE_C_FLAGS_ALL CACHE)\n unset (CMAKE_CXX_FLAGS CACHE)\n\n<span class=\"gi\">+# USE_HOST_CFLAGS (default TRUE)</span>\n<span class=\"gi\">+# Will check building host machine for proper cflags</span>\n<span class=\"gi\">+if(NOT DEFINED USE_HOST_CFLAGS OR USE_HOST_CFLAGS)</span>\n<span class=\"gi\">+  message(STATUS &quot;Enable host CFlags&quot;)</span>\n<span class=\"gi\">+  include (${project_cmake_dir}/HostCFlags.cmake)</span>\n<span class=\"gi\">+endif()</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+# USE_UPSTREAM_CFLAGS (default TRUE)</span>\n<span class=\"gi\">+# Will use predefined ignition developers cflags</span>\n<span class=\"gi\">+if(NOT DEFINED USE_UPSTREAM_CFLAGS OR USE_UPSTREAM_CFLAGS)</span>\n<span class=\"gi\">+  message(STATUS &quot;Enable upstream CFlags&quot;)</span>\n<span class=\"gi\">+  include(${project_cmake_dir}/DefaultCFlags.cmake)</span>\n<span class=\"gi\">+endif()</span>\n<span class=\"gi\">+</span>\n # Check if warning options are avaliable for the compiler and return WARNING_CXX_FLAGS variable\n # MSVC generates tons of warnings on gtest code.\n # Recommended to use /W4 instead of /Wall\n<span class=\"gh\">diff -r 14518dfda0f0 cmake/Utils.cmake</span>\n<span class=\"gd\">--- a/cmake/Utils.cmake Fri Jul 07 20:24:46 2017 +0000</span>\n<span class=\"gi\">+++ b/cmake/Utils.cmake Fri Jul 14 15:43:57 2017 -0700</span>\n<span class=\"gu\">@@ -97,19 +97,6 @@</span>\n\n #################################################\n macro (ign_setup_unix)\n<span class=\"gd\">-  # USE_HOST_CFLAGS (default TRUE)</span>\n<span class=\"gd\">-  # Will check building host machine for proper cflags</span>\n<span class=\"gd\">-  if(NOT DEFINED USE_HOST_CFLAGS OR USE_HOST_CFLAGS)</span>\n<span class=\"gd\">-    message(STATUS &quot;Enable host CFlags&quot;)</span>\n<span class=\"gd\">-    include (${project_cmake_dir}/HostCFlags.cmake)</span>\n<span class=\"gd\">-  endif()</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-  # USE_UPSTREAM_CFLAGS (default TRUE)</span>\n<span class=\"gd\">-  # Will use predefined ignition developers cflags</span>\n<span class=\"gd\">-  if(NOT DEFINED USE_UPSTREAM_CFLAGS OR USE_UPSTREAM_CFLAGS)</span>\n<span class=\"gd\">-     message(STATUS &quot;Enable upstream CFlags&quot;)</span>\n<span class=\"gd\">-     include(${project_cmake_dir}/DefaultCFlags.cmake)</span>\n<span class=\"gd\">-  endif()</span>\n endmacro()\n\n #################################################\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-14T22:45:03.201746+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38247184}