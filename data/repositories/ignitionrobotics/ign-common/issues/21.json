{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/21/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/21/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/21/the-use-of-symlinks-on-windows-is-dubious"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/21/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "The use of symlinks on Windows is dubious", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I've been grinding away at getting `ignition-common` to work properly on Windows, and there is only one last hurdle that I've encountered: symlinks. In the `UNIT_Filesystem_TEST`, we have tests called `symlink_exists` and `directory_iterator` which attempt to create symlinks and then test for their existence.\r\n\r\nIt seems that creating symlinks on Windows is not at all similar to ordinary file or directory creation, the way it is on UNIX. Creating symlinks on Windows requires any one of the following (1) disabling User Account Control [UAC], (2) configuring user settings to permit a user to create symlinks, or (3) providing administrative privileges to any application that wants to create a symlink. While this isn't an authoritative source, I found [this blog post](http://blog.rlucas.net/rants/dont-bother-with-symlinks-in-windows-7/) to be the most concise and accurate summary of what I've discovered while scouring the web.\r\n\r\nI consider these three conditions to be extremely problematic for the following reasons:\r\n\r\n1. Disabling UAC is a major security risk and is not something that we should even consider doing just for the sake of running some tests.\r\n\r\n2. The way to grant users permission for creating symlinks is by enabling a `SeCreateSymbolicLinkPrivilege` setting for them, but this can only be set using `secpol.msc`, and that only works on \"Professional\" and \"Ultimate\" versions of Windows. Users who have \"Home Premium\" (which will be common among casual users) will not even have this option.\r\n\r\n3. Giving administrative privileges to a test application requires manual intervention by the user, and even if that is technically possible, it would still be asking far too much to have a user trust our testing framework with administrative rights. Also, there may be office environments in which a user would not even have the ability to grant such rights anyhow.\r\n\r\nIn Microsoft's [official documentation on creating symbolic links](https://docs.microsoft.com/en-us/windows/device-security/security-policy-settings/create-symbolic-links) they appear to hold a pretty firm stance that symbolic links represent a security vulnerability, so I doubt any of these conditions are going to change in the foreseeable future.\r\n\r\nThat being the case, I propose we turn off these symbolic link tests for Windows by default, since there does not appear to be a reasonable way to make it work through normal deployment. We can use a cmake variable to toggle whether those specific tests are compiled for Windows (which will be off by default), and then if someone wants to test it, they can configure cmake to turn the variable on so that those tests are included, and then they can take responsibility for meeting one of the conditions that are required to create symbolic links.", "markup": "markdown", "html": "<p>I've been grinding away at getting <code>ignition-common</code> to work properly on Windows, and there is only one last hurdle that I've encountered: symlinks. In the <code>UNIT_Filesystem_TEST</code>, we have tests called <code>symlink_exists</code> and <code>directory_iterator</code> which attempt to create symlinks and then test for their existence.</p>\n<p>It seems that creating symlinks on Windows is not at all similar to ordinary file or directory creation, the way it is on UNIX. Creating symlinks on Windows requires any one of the following (1) disabling User Account Control [UAC], (2) configuring user settings to permit a user to create symlinks, or (3) providing administrative privileges to any application that wants to create a symlink. While this isn't an authoritative source, I found <a data-is-external-link=\"true\" href=\"http://blog.rlucas.net/rants/dont-bother-with-symlinks-in-windows-7/\" rel=\"nofollow\">this blog post</a> to be the most concise and accurate summary of what I've discovered while scouring the web.</p>\n<p>I consider these three conditions to be extremely problematic for the following reasons:</p>\n<ol>\n<li>\n<p>Disabling UAC is a major security risk and is not something that we should even consider doing just for the sake of running some tests.</p>\n</li>\n<li>\n<p>The way to grant users permission for creating symlinks is by enabling a <code>SeCreateSymbolicLinkPrivilege</code> setting for them, but this can only be set using <code>secpol.msc</code>, and that only works on \"Professional\" and \"Ultimate\" versions of Windows. Users who have \"Home Premium\" (which will be common among casual users) will not even have this option.</p>\n</li>\n<li>\n<p>Giving administrative privileges to a test application requires manual intervention by the user, and even if that is technically possible, it would still be asking far too much to have a user trust our testing framework with administrative rights. Also, there may be office environments in which a user would not even have the ability to grant such rights anyhow.</p>\n</li>\n</ol>\n<p>In Microsoft's <a data-is-external-link=\"true\" href=\"https://docs.microsoft.com/en-us/windows/device-security/security-policy-settings/create-symbolic-links\" rel=\"nofollow\">official documentation on creating symbolic links</a> they appear to hold a pretty firm stance that symbolic links represent a security vulnerability, so I doubt any of these conditions are going to change in the foreseeable future.</p>\n<p>That being the case, I propose we turn off these symbolic link tests for Windows by default, since there does not appear to be a reasonable way to make it work through normal deployment. We can use a cmake variable to toggle whether those specific tests are compiled for Windows (which will be off by default), and then if someone wants to test it, they can configure cmake to turn the variable on so that those tests are included, and then they can take responsibility for meeting one of the conditions that are required to create symbolic links.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-07T17:40:39.842351+00:00", "milestone": null, "updated_on": "2017-09-07T17:54:41.936372+00:00", "type": "issue", "id": 21}