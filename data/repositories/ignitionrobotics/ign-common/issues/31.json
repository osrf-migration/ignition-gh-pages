{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/31/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/31/move-plugins-into-their-own-project"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/31/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Move plugins into their own project", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While I've been advocating for this for a while, there now seems to be a tangible motive for spinning the plugin framework of `ign-common` into its own project.\r\n\r\nTalking with @wjwwood and @mikaelarguedas , they have expressed a serious interest in using the ignition plugin framework as a replacement for `class_loader` in ROS2. Our plugin library will provide (pending some backlogged pull requests) a number of powerful features and safety measures that are currently unobtainable in `class_loader` due to legacy design issues.\r\n\r\nThe only barrier to adoption is that the plugin framework needs to be provided as its own library, independent from `ign-common`. I think this is a reasonable and desirable change to make, and it may motivate even wider adoption of the library, going beyond the ROS and Gazebo communities.\r\n\r\nI can easily do this right away and migrate the open plugin PRs over to a new project, but first I wanted to get a gauge of the ignition developers' feelings on this.", "markup": "markdown", "html": "<p>While I've been advocating for this for a while, there now seems to be a tangible motive for spinning the plugin framework of <code>ign-common</code> into its own project.</p>\n<p>Talking with @wjwwood and @mikaelarguedas , they have expressed a serious interest in using the ignition plugin framework as a replacement for <code>class_loader</code> in ROS2. Our plugin library will provide (pending some backlogged pull requests) a number of powerful features and safety measures that are currently unobtainable in <code>class_loader</code> due to legacy design issues.</p>\n<p>The only barrier to adoption is that the plugin framework needs to be provided as its own library, independent from <code>ign-common</code>. I think this is a reasonable and desirable change to make, and it may motivate even wider adoption of the library, going beyond the ROS and Gazebo communities.</p>\n<p>I can easily do this right away and migrate the open plugin PRs over to a new project, but first I wanted to get a gauge of the ignition developers' feelings on this.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-31T18:14:34.074973+00:00", "milestone": null, "updated_on": "2019-04-17T20:16:49.953659+00:00", "type": "issue", "id": 31}