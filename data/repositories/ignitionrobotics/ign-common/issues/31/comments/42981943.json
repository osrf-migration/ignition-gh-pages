{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31/comments/42981943.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/31#comment-42981943"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "title": "Move plugins into their own project"}, "content": {"raw": "[1] The final version of the plugin system does not use `StringUtils` (the current version on `ign-common1` does, I believe, but the version in the latest PR does not). It has no dependence on `Filesystem`, because the lookup of plugin paths is done by the `SystemPaths` class which would remain in `ign-common`. The `PluginLoader` class requires that it be given the full, exact path of the plugin library, so it does not have any use for additional Filesystem features. This was actually one of the selling points for the ROS folk.\n\nIt does currently use some warning suppression features of `ign-common`, and while I would hate to duplicate those, I don't consider it to be a dealbreaker.\n\n[2] While I am a fan of the components concept, I think this particular case would be an abuse of components, and it would do little if anything to help with broader adoption. The components concept works best when the components are extending the functionality of the base library, but that wouldn't really be the case here. We'd still be submersing the plugin framework into a mess of other, completely unrelated libraries which do nothing to help or extend the features of the plugin framework.\n\nTo maximize adoption and usefulness, the plugin framework should be completely free of baggage. Just think about how troublesome it can be to try to use just one component of Boost. While Boost is technically modular, it can be difficult and confusing for users to figure out how to install and link to just one component/module.", "markup": "markdown", "html": "<p>[1] The final version of the plugin system does not use <code>StringUtils</code> (the current version on <code>ign-common1</code> does, I believe, but the version in the latest PR does not). It has no dependence on <code>Filesystem</code>, because the lookup of plugin paths is done by the <code>SystemPaths</code> class which would remain in <code>ign-common</code>. The <code>PluginLoader</code> class requires that it be given the full, exact path of the plugin library, so it does not have any use for additional Filesystem features. This was actually one of the selling points for the ROS folk.</p>\n<p>It does currently use some warning suppression features of <code>ign-common</code>, and while I would hate to duplicate those, I don't consider it to be a dealbreaker.</p>\n<p>[2] While I am a fan of the components concept, I think this particular case would be an abuse of components, and it would do little if anything to help with broader adoption. The components concept works best when the components are extending the functionality of the base library, but that wouldn't really be the case here. We'd still be submersing the plugin framework into a mess of other, completely unrelated libraries which do nothing to help or extend the features of the plugin framework.</p>\n<p>To maximize adoption and usefulness, the plugin framework should be completely free of baggage. Just think about how troublesome it can be to try to use just one component of Boost. While Boost is technically modular, it can be difficult and confusing for users to figure out how to install and link to just one component/module.</p>", "type": "rendered"}, "created_on": "2018-01-31T19:26:53.695392+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-01-31T19:29:46.899034+00:00", "type": "issue_comment", "id": 42981943}