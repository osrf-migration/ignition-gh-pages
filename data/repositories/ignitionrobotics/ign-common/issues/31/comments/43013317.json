{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31/comments/43013317.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/31#comment-43013317"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "title": "Move plugins into their own project"}, "content": {"raw": "I definitely agree that `plugin` or `plugins` alone might make it sound like a repository of plugins, which is the wrong thing to convey.\n\nI was also considering `ignition-dl`, since the library is building on top of `libdl` (even on Windows, we build on top of `dlfcn-win32`, which is a Windows wrapper library that provides the `libdl` interface). But I'm afraid that name is not very communicative for anyone who isn't familiar with `libdl`.\n\nWith respect to `ignition-pluginloader`, I had some plans to split the library into `ignition-plugin[s]`, `ignition-plugin[s]-loader`, and `ignition-plugin[s]-register` where `-loader` and `-register` are components of the main library. Libraries that need to load plugins would link against `ignition-plugin[s]-loader` while libraries that want to *be* plugins would link against `ignition-plugin[s]-register`. That should help users to understand what parts of the plugin framework are meant for loading plugins versus becoming a plugin, and it would allow plugin creators to generate plugins without having a `libdl` or `dlfcn-win32` dependency (it would also help us deal with [an issue in GCC](https://bugzilla.mozilla.org/show_bug.cgi?id=826567), but I won't get into the weeds on that in this post).\n\nStill, if the project name were `ignition-plugin[s]`, then these component names wouldn't help with communicating the intent of the project at the surface level.", "markup": "markdown", "html": "<p>I definitely agree that <code>plugin</code> or <code>plugins</code> alone might make it sound like a repository of plugins, which is the wrong thing to convey.</p>\n<p>I was also considering <code>ignition-dl</code>, since the library is building on top of <code>libdl</code> (even on Windows, we build on top of <code>dlfcn-win32</code>, which is a Windows wrapper library that provides the <code>libdl</code> interface). But I'm afraid that name is not very communicative for anyone who isn't familiar with <code>libdl</code>.</p>\n<p>With respect to <code>ignition-pluginloader</code>, I had some plans to split the library into <code>ignition-plugin[s]</code>, <code>ignition-plugin[s]-loader</code>, and <code>ignition-plugin[s]-register</code> where <code>-loader</code> and <code>-register</code> are components of the main library. Libraries that need to load plugins would link against <code>ignition-plugin[s]-loader</code> while libraries that want to <em>be</em> plugins would link against <code>ignition-plugin[s]-register</code>. That should help users to understand what parts of the plugin framework are meant for loading plugins versus becoming a plugin, and it would allow plugin creators to generate plugins without having a <code>libdl</code> or <code>dlfcn-win32</code> dependency (it would also help us deal with <a data-is-external-link=\"true\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=826567\" rel=\"nofollow\">an issue in GCC</a>, but I won't get into the weeds on that in this post).</p>\n<p>Still, if the project name were <code>ignition-plugin[s]</code>, then these component names wouldn't help with communicating the intent of the project at the surface level.</p>", "type": "rendered"}, "created_on": "2018-02-01T18:32:26.039391+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 43013317}