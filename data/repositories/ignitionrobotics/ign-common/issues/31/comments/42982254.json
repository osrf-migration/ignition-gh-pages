{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31/comments/42982254.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/31#comment-42982254"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/31.json"}}, "type": "issue", "id": 31, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "title": "Move plugins into their own project"}, "content": {"raw": "Right the dependency issue is the main thing, but also it's more of a mess to maintain when it's encased in a project with a miscellaneous group of other libraries that might be getting maintained orthogonally to the plugins. The stability of the plugin framework shouldn't be coupled with the stability of, for example, our audio-visual component. As a component, the version number on the library will be forcibly kept in sync with the version number of `ign-common` as a whole.\n\nBesides maintainability, I also have concerns about end-user experience:\n\n1. Building from source is more of a chore for users who want to build it from source (and there may be any number of legitimate reasons that they want to / need to do this).\n\n2. The debian would still depend on the base `ign-common` library, even though it shouldn't be necessary.\n\n(2) can be solved in the Components system by explicitly decoupling the plugin component from the main library (this is an option in the `ign_add_component(~)` function), but that just begs the question of why not make it its own project if there isn't even a dependency on the base library?\n\n(1) Doesn't really have a solution besides putting it in its own project.", "markup": "markdown", "html": "<p>Right the dependency issue is the main thing, but also it's more of a mess to maintain when it's encased in a project with a miscellaneous group of other libraries that might be getting maintained orthogonally to the plugins. The stability of the plugin framework shouldn't be coupled with the stability of, for example, our audio-visual component. As a component, the version number on the library will be forcibly kept in sync with the version number of <code>ign-common</code> as a whole.</p>\n<p>Besides maintainability, I also have concerns about end-user experience:</p>\n<ol>\n<li>\n<p>Building from source is more of a chore for users who want to build it from source (and there may be any number of legitimate reasons that they want to / need to do this).</p>\n</li>\n<li>\n<p>The debian would still depend on the base <code>ign-common</code> library, even though it shouldn't be necessary.</p>\n</li>\n</ol>\n<p>(2) can be solved in the Components system by explicitly decoupling the plugin component from the main library (this is an option in the <code>ign_add_component(~)</code> function), but that just begs the question of why not make it its own project if there isn't even a dependency on the base library?</p>\n<p>(1) Doesn't really have a solution besides putting it in its own project.</p>", "type": "rendered"}, "created_on": "2018-01-31T19:42:52.879755+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 42982254}