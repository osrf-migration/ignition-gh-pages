{"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-common/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/14/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-common/issues/14/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/issues/14/modularize-use-components"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/issues/14/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Modularize / use components", "component": null, "votes": 3, "watches": 6, "content": {"raw": "Ignition-common is currently a collection of several useful pieces which don't really belong in any other existing Ignition project. But many of these pieces don't have much in common among themselves either.\r\n\r\nI suggest before we go too far and start making other libraries depend on Ignition common, we consider breaking this library into a few others, and merge some of `gazebo::util` with it. One motivation is not to bring lots of dependencies like GTS to everyone who just wants to use the plugin loader, for example.\r\n\r\nThis is a quick example of a division we could do:\r\n\r\nNew library | Classes / headers | Note | Who will use it\r\n-------------- | -------------------- | --- | ---\r\n\"Events\" | Event | | Gazebo\r\n | MouseEvent | | Ignition GUI\r\n | KeyEvent | | Ignition GUI\r\n\"Plugins\" | PluginInfo | | Gazebo, GUI, Rendering, Physics, Sensors\r\n | PluginLoader | | =\r\n | PluginMacros | | =\r\n\"AudioVideo\" | AudioDecoder | | Sensors\r\n | Video | | Sensors, GUI?\r\n | VideoEncoder | | Sensors, GUI?\r\n | OpenAL | from `gazebo::util` | Sensors\r\n\"Graphics\" | Animation | animation | Rendering, Physics\r\n | BVHLoader | animation | =\r\n | KeyFrame | animation | =\r\n | NodeAnimation | animation | =\r\n | NodeTransform | animation | =\r\n | Skeleton | animation | =\r\n | SkeletonAnimation | animation | =\r\n | SkeletonNode | animation | =\r\n | Image | image | GUI, Rendering, Physics (heightmap)\r\n | ImageHeightmap | image | =\r\n | SVGLoader | image | =\r\n | HeightmapData | mesh | Rendering, Physics\r\n | ColladaExporter | mesh | =\r\n | ColladaLoader | mesh | =\r\n | Dem | mesh | =\r\n | GTSMeshUtils | mesh | =\r\n | Material | mesh | =\r\n | Mesh | mesh | =\r\n | MeshCSG | mesh | =\r\n | MeshExporter | mesh | =\r\n | MeshLoader | mesh | =\r\n | MeshManager | mesh | =\r\n | OBJLoader | mesh | =\r\n | STLLoader | mesh | =\r\n | SubMesh | mesh | =\r\n\"Util\" | Base64 | \r\n | Console | \r\n | EnumIface | \r\n | SemanticVersion | \r\n | SingletonT | \r\n | StringUtils | \r\n | System | \r\n | SystemPaths | \r\n | Timer | \r\n | URI | \r\n | Util | \r\n | Uuid | \r\n?? | Battery |\r\n | MaterialDensity |", "markup": "markdown", "html": "<p>Ignition-common is currently a collection of several useful pieces which don't really belong in any other existing Ignition project. But many of these pieces don't have much in common among themselves either.</p>\n<p>I suggest before we go too far and start making other libraries depend on Ignition common, we consider breaking this library into a few others, and merge some of <code>gazebo::util</code> with it. One motivation is not to bring lots of dependencies like GTS to everyone who just wants to use the plugin loader, for example.</p>\n<p>This is a quick example of a division we could do:</p>\n<table>\n<thead>\n<tr>\n<th>New library</th>\n<th>Classes / headers</th>\n<th>Note</th>\n<th>Who will use it</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"Events\"</td>\n<td>Event</td>\n<td></td>\n<td>Gazebo</td>\n</tr>\n<tr>\n<td></td>\n<td>MouseEvent</td>\n<td></td>\n<td>Ignition GUI</td>\n</tr>\n<tr>\n<td></td>\n<td>KeyEvent</td>\n<td></td>\n<td>Ignition GUI</td>\n</tr>\n<tr>\n<td>\"Plugins\"</td>\n<td>PluginInfo</td>\n<td></td>\n<td>Gazebo, GUI, Rendering, Physics, Sensors</td>\n</tr>\n<tr>\n<td></td>\n<td>PluginLoader</td>\n<td></td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>PluginMacros</td>\n<td></td>\n<td>=</td>\n</tr>\n<tr>\n<td>\"AudioVideo\"</td>\n<td>AudioDecoder</td>\n<td></td>\n<td>Sensors</td>\n</tr>\n<tr>\n<td></td>\n<td>Video</td>\n<td></td>\n<td>Sensors, GUI?</td>\n</tr>\n<tr>\n<td></td>\n<td>VideoEncoder</td>\n<td></td>\n<td>Sensors, GUI?</td>\n</tr>\n<tr>\n<td></td>\n<td>OpenAL</td>\n<td>from <code>gazebo::util</code></td>\n<td>Sensors</td>\n</tr>\n<tr>\n<td>\"Graphics\"</td>\n<td>Animation</td>\n<td>animation</td>\n<td>Rendering, Physics</td>\n</tr>\n<tr>\n<td></td>\n<td>BVHLoader</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>KeyFrame</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>NodeAnimation</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>NodeTransform</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>Skeleton</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>SkeletonAnimation</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>SkeletonNode</td>\n<td>animation</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>Image</td>\n<td>image</td>\n<td>GUI, Rendering, Physics (heightmap)</td>\n</tr>\n<tr>\n<td></td>\n<td>ImageHeightmap</td>\n<td>image</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>SVGLoader</td>\n<td>image</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>HeightmapData</td>\n<td>mesh</td>\n<td>Rendering, Physics</td>\n</tr>\n<tr>\n<td></td>\n<td>ColladaExporter</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>ColladaLoader</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>Dem</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>GTSMeshUtils</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>Material</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>Mesh</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>MeshCSG</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>MeshExporter</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>MeshLoader</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>MeshManager</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>OBJLoader</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>STLLoader</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td></td>\n<td>SubMesh</td>\n<td>mesh</td>\n<td>=</td>\n</tr>\n<tr>\n<td>\"Util\"</td>\n<td>Base64</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Console</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>EnumIface</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>SemanticVersion</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>SingletonT</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>StringUtils</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>System</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>SystemPaths</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Timer</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>URI</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Util</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Uuid</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>??</td>\n<td>Battery</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>MaterialDensity</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-28T16:00:25.867772+00:00", "milestone": null, "updated_on": "2018-03-28T01:05:04.689622+00:00", "type": "issue", "id": 14}