{"pagelen": 50, "values": [{"update": {"description": "This is the plugin loader from the ecs prototype. It can load any class as a plugin.\r\n\r\n\r\nHere's how to use it to load a plugin\r\n```\r\n#!c++\r\n\r\n// Include this header to load plugins\r\n#include <ignition/common/plugin/PluginLoader.hh>\r\n\r\n// PluginLoader class does all the work\r\nignition::common::plugin::PluginLoader pm;\r\n\r\n// Must be fed paths to search for libraries\r\nconst char *path = std::getenv(\"PLUGIN_PATH\");\r\nif (nullptr != path)\r\n  pm.AddSearchPath(path);\r\n\r\n// Searches for shared library in search paths across platforms\r\npm.LoadLibrary(\"MySharedLibraryName\")\r\n\r\n// Want to show user a gui with available plugins? That info is available\r\nstd::cout << pm.PrettyStr();\r\n/*\r\nPluginLoader State\r\n        Search Paths: 1\r\n                ../util/\r\n        Known Interfaces: 1\r\n                ::test::util::DummyPluginBase\r\n        Known Plugins: 1\r\n                ::test::util::DummyPlugin (::test::util::DummyPluginBase)\r\n*/\r\n\r\n// Load a plugin, expecting it to inherit from a base class\r\n// there are no restrictions on what that base class is!\r\nstd::unique_ptr<any_namespace::AnyBaseClass> pluginInst;\r\npluginInst = pm.Instantiate<any_namespace::AnyBaseClass>(\"::my_namespace::MyPlugin\");\r\n```\r\n\r\nHere's how to create a plugin\r\n```\r\n#!c++\r\n\r\n// Need a base class\r\nclass AnyBaseClass\r\n{\r\n   // ...\r\n};\r\n\r\n// ...\r\n// In a shared library\r\n// ...\r\n// MyPlugin.hh\r\n\r\nclass MyPlugin : public ::any_namespace::AnyBaseClass\r\n{\r\n  // ...\r\n};\r\n\r\n// ...\r\n// MyPlugin.cpp\r\n// ...\r\n\r\n// Need this header for a macro\r\n#include <ignition/common/plugin/RegisterMacros.hh>\r\n\r\nIGNITION_COMMON_REGISTER_SINGLE_PLUGIN(::my_namespace::MyPlugin, ::any_namespace::AnyBaseClass);\r\n\r\n```", "title": "Adds PluginLoader", "destination": {"commit": {"hash": "1d3a7a02dc3d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1d3a7a02dc3d.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1d3a7a02dc3d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ffe06c949c4c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ffe06c949c4c.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ffe06c949c4c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "plugin_loader"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-03-29T23:36:12.057700+00:00"}, "pull_request": {"type": "pullrequest", "id": 27, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/27.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/27"}}, "title": "Adds PluginLoader"}}]}