{"rendered": {"reason": {"raw": "This PR will transition over to the upcoming `ign-plugin` repo.", "markup": "markdown", "html": "<p>This PR will transition over to the upcoming <code>ign-plugin</code> repo.</p>", "type": "rendered"}, "description": {"raw": "This pull request build on pull request #59 by introducing a concrete example of how the plugin framework can be used.\r\n\r\nThe current example accepts two different types of plugins:\r\n\r\n1. A numerical integration plugin\r\n2. A system of differential equations plugin\r\n\r\nThe example will accept a list of libraries that provide one or both of these plugin types, and then test each integrator against each system of differential equations, and provide test results that allow the user to compare the performance of each integration method.\r\n\r\nI'm creating this as a separate pull request to make it easier to provide feedback on this example, and to give us a place to brainstorm ideas for additional examples.\r\n\r\nThis first example uses two different plugin types where each type of plugin provides a single interface. Ideally, I'd like to come up with an example where a single plugin instance may be able to provide multiple interfaces, along with the possibility that some of those interfaces are optional. If anyone has ideas for an example that would illustrate that, I would appreciate any and all input.\r\n\r\n----\r\n\r\nEdit: I've added one more example, which can be found in `robot.cc`. It performs a lightweight 2D \"simulation\" of a robot which is given as a plugin. The environment consists of a set of walls (defined by pairs of points) and is generated by a second plugin.\r\n\r\nThe robot plugin has one mandatory interface (`Drive`) and a set of optional interfaces (`ProximitySensor`, `GPSSensor`, `Compass`, and `MapDatabase`), all defined in `robot.hh`, which is a header shared by all the robot plugins.", "markup": "markdown", "html": "<p>This pull request build on <a href=\"#!/ignitionrobotics/ign-common/pull-requests/59/expanding-the-functionality-of-the-plugin\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #59</a> by introducing a concrete example of how the plugin framework can be used.</p>\n<p>The current example accepts two different types of plugins:</p>\n<ol>\n<li>A numerical integration plugin</li>\n<li>A system of differential equations plugin</li>\n</ol>\n<p>The example will accept a list of libraries that provide one or both of these plugin types, and then test each integrator against each system of differential equations, and provide test results that allow the user to compare the performance of each integration method.</p>\n<p>I'm creating this as a separate pull request to make it easier to provide feedback on this example, and to give us a place to brainstorm ideas for additional examples.</p>\n<p>This first example uses two different plugin types where each type of plugin provides a single interface. Ideally, I'd like to come up with an example where a single plugin instance may be able to provide multiple interfaces, along with the possibility that some of those interfaces are optional. If anyone has ideas for an example that would illustrate that, I would appreciate any and all input.</p>\n<hr />\n<p>Edit: I've added one more example, which can be found in <code>robot.cc</code>. It performs a lightweight 2D \"simulation\" of a robot which is given as a plugin. The environment consists of a set of walls (defined by pairs of points) and is generated by a second plugin.</p>\n<p>The robot plugin has one mandatory interface (<code>Drive</code>) and a set of optional interfaces (<code>ProximitySensor</code>, <code>GPSSensor</code>, <code>Compass</code>, and <code>MapDatabase</code>), all defined in <code>robot.hh</code>, which is a header shared by all the robot plugins.</p>", "type": "rendered"}, "title": {"raw": "Examples for using plugins", "markup": "markdown", "html": "<p>Examples for using plugins</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request build on pull request #59 by introducing a concrete example of how the plugin framework can be used.\r\n\r\nThe current example accepts two different types of plugins:\r\n\r\n1. A numerical integration plugin\r\n2. A system of differential equations plugin\r\n\r\nThe example will accept a list of libraries that provide one or both of these plugin types, and then test each integrator against each system of differential equations, and provide test results that allow the user to compare the performance of each integration method.\r\n\r\nI'm creating this as a separate pull request to make it easier to provide feedback on this example, and to give us a place to brainstorm ideas for additional examples.\r\n\r\nThis first example uses two different plugin types where each type of plugin provides a single interface. Ideally, I'd like to come up with an example where a single plugin instance may be able to provide multiple interfaces, along with the possibility that some of those interfaces are optional. If anyone has ideas for an example that would illustrate that, I would appreciate any and all input.\r\n\r\n----\r\n\r\nEdit: I've added one more example, which can be found in `robot.cc`. It performs a lightweight 2D \"simulation\" of a robot which is given as a plugin. The environment consists of a set of walls (defined by pairs of points) and is generated by a second plugin.\r\n\r\nThe robot plugin has one mandatory interface (`Drive`) and a set of optional interfaces (`ProximitySensor`, `GPSSensor`, `Compass`, and `MapDatabase`), all defined in `robot.hh`, which is a header shared by all the robot plugins.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/pullrequests/95/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/diffstat/ignitionrobotics/ign-common:14b459045668%0Dee16dcc8fc6a?from_pullrequest_id=95"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/95/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/95.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/95/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/pullrequests/95/merge"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/95"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/95/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/diff/ignitionrobotics/ign-common:14b459045668%0Dee16dcc8fc6a?from_pullrequest_id=95"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/pullrequests/95/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/95/statuses_page=1.json"}}, "title": "Examples for using plugins", "close_source_branch": false, "reviewers": [], "id": 95, "destination": {"commit": {"hash": "ee16dcc8fc6a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ee16dcc8fc6a.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ee16dcc8fc6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "created_on": "2018-01-18T02:34:56.076879+00:00", "summary": {"raw": "This pull request build on pull request #59 by introducing a concrete example of how the plugin framework can be used.\r\n\r\nThe current example accepts two different types of plugins:\r\n\r\n1. A numerical integration plugin\r\n2. A system of differential equations plugin\r\n\r\nThe example will accept a list of libraries that provide one or both of these plugin types, and then test each integrator against each system of differential equations, and provide test results that allow the user to compare the performance of each integration method.\r\n\r\nI'm creating this as a separate pull request to make it easier to provide feedback on this example, and to give us a place to brainstorm ideas for additional examples.\r\n\r\nThis first example uses two different plugin types where each type of plugin provides a single interface. Ideally, I'd like to come up with an example where a single plugin instance may be able to provide multiple interfaces, along with the possibility that some of those interfaces are optional. If anyone has ideas for an example that would illustrate that, I would appreciate any and all input.\r\n\r\n----\r\n\r\nEdit: I've added one more example, which can be found in `robot.cc`. It performs a lightweight 2D \"simulation\" of a robot which is given as a plugin. The environment consists of a set of walls (defined by pairs of points) and is generated by a second plugin.\r\n\r\nThe robot plugin has one mandatory interface (`Drive`) and a set of optional interfaces (`ProximitySensor`, `GPSSensor`, `Compass`, and `MapDatabase`), all defined in `robot.hh`, which is a header shared by all the robot plugins.", "markup": "markdown", "html": "<p>This pull request build on <a href=\"#!/ignitionrobotics/ign-common/pull-requests/59/expanding-the-functionality-of-the-plugin\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #59</a> by introducing a concrete example of how the plugin framework can be used.</p>\n<p>The current example accepts two different types of plugins:</p>\n<ol>\n<li>A numerical integration plugin</li>\n<li>A system of differential equations plugin</li>\n</ol>\n<p>The example will accept a list of libraries that provide one or both of these plugin types, and then test each integrator against each system of differential equations, and provide test results that allow the user to compare the performance of each integration method.</p>\n<p>I'm creating this as a separate pull request to make it easier to provide feedback on this example, and to give us a place to brainstorm ideas for additional examples.</p>\n<p>This first example uses two different plugin types where each type of plugin provides a single interface. Ideally, I'd like to come up with an example where a single plugin instance may be able to provide multiple interfaces, along with the possibility that some of those interfaces are optional. If anyone has ideas for an example that would illustrate that, I would appreciate any and all input.</p>\n<hr />\n<p>Edit: I've added one more example, which can be found in <code>robot.cc</code>. It performs a lightweight 2D \"simulation\" of a robot which is given as a plugin. The environment consists of a set of walls (defined by pairs of points) and is generated by a second plugin.</p>\n<p>The robot plugin has one mandatory interface (<code>Drive</code>) and a set of optional interfaces (<code>ProximitySensor</code>, <code>GPSSensor</code>, <code>Compass</code>, and <code>MapDatabase</code>), all defined in <code>robot.hh</code>, which is a header shared by all the robot plugins.</p>", "type": "rendered"}, "source": {"commit": {"hash": "14b459045668", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/14b459045668.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/14b459045668"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics_examples"}}, "comment_count": 4, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-01-30T00:26:52.984971+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2018-01-31T00:13:51.978755+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "This PR will transition over to the upcoming `ign-plugin` repo.", "updated_on": "2018-04-30T22:16:35.025574+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": null, "closed_by": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}