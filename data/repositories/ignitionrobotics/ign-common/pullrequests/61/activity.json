{"pagelen": 50, "values": [{"update": {"description": "~~This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.~~ I was wrong, see [here](#!/ignitionrobotics/ign-common/pull-requests/98/).\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "ee16dcc8fc6a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ee16dcc8fc6a.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ee16dcc8fc6a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "This PR will transition over to the upcoming `ign-plugin` repo.", "source": {"commit": {"hash": "cba7e7790d60", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/cba7e7790d60.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/cba7e7790d60"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "DECLINED", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-04-30T22:16:19.154194+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "~~This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.~~ I was wrong, see [here](#!/ignitionrobotics/ign-common/pull-requests/98/).\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "606f9e667b3e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/606f9e667b3e.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/606f9e667b3e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "cba7e7790d60", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/cba7e7790d60.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/cba7e7790d60"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-01-31T02:27:45.904054+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "606f9e667b3e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/606f9e667b3e.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/606f9e667b3e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "cba7e7790d60", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/cba7e7790d60.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/cba7e7790d60"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-01-31T01:52:06.497148+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "ea559851c43b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ea559851c43b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ea559851c43b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "960f4220939e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/960f4220939e.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/960f4220939e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-01T02:45:34.702258+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50894977.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50894977"}}, "parent": {"id": 50892559, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892559"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Added in 8dbba82", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-common/commits/8dbba82\" rel=\"nofollow\" class=\"ap-connect-link\">8dbba82</a></p>", "type": "rendered"}, "created_on": "2017-12-01T02:32:28.525564+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-01T02:32:28.527926+00:00", "type": "pullrequest_comment", "id": 50894977}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50894967.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50894967"}}, "parent": {"id": 50892527, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892527.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892527"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Added in 8dbba82", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-common/commits/8dbba82\" rel=\"nofollow\" class=\"ap-connect-link\">8dbba82</a></p>", "type": "rendered"}, "created_on": "2017-12-01T02:32:12.732467+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-01T02:32:12.735409+00:00", "type": "pullrequest_comment", "id": 50894967}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50894942.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50894942"}}, "parent": {"id": 50892453, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892453.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892453"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Added in 8dbba82", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-common/commits/8dbba82\" rel=\"nofollow\" class=\"ap-connect-link\">8dbba82</a></p>", "type": "rendered"}, "created_on": "2017-12-01T02:31:19.415116+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-01T02:31:19.417229+00:00", "type": "pullrequest_comment", "id": 50894942}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50894926.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50894926"}}, "parent": {"id": 50892386, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892386.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892386"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Added in 8dbba82", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-common/commits/8dbba82\" rel=\"nofollow\" class=\"ap-connect-link\">8dbba82</a></p>", "type": "rendered"}, "created_on": "2017-12-01T02:30:49.348677+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-01T02:30:49.351125+00:00", "type": "pullrequest_comment", "id": 50894926}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "ea559851c43b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ea559851c43b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ea559851c43b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "8dbba82597d8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/8dbba82597d8.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/8dbba82597d8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-01T02:29:30.044426+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50894364.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50894364"}}, "parent": {"id": 50892304, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892304.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892304"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Conflicts resolved: 4b3877f\n\nJust to clarify, pull request #59 is technically upstream of this one, so it might be easier to review that one first. Then again, the PRs are mostly orthogonal to each other, so it might not matter too much.", "markup": "markdown", "html": "<p>Conflicts resolved: <a href=\"#!/ignitionrobotics/ign-common/commits/4b3877f\" rel=\"nofollow\" class=\"ap-connect-link\">4b3877f</a></p>\n<p>Just to clarify, <a href=\"#!/ignitionrobotics/ign-common/pull-requests/59/expanding-the-functionality-of-the-plugin\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #59</a> is technically upstream of this one, so it might be easier to review that one first. Then again, the PRs are mostly orthogonal to each other, so it might not matter too much.</p>", "type": "rendered"}, "created_on": "2017-12-01T02:12:19.487708+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-12-01T02:12:19.490589+00:00", "type": "pullrequest_comment", "id": 50894364}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "ea559851c43b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/ea559851c43b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/ea559851c43b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "a6160ac7359f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/a6160ac7359f.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/a6160ac7359f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-01T02:09:28.580900+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892559"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Document these parameters.", "markup": "markdown", "html": "<p>Document these parameters.</p>", "type": "rendered"}, "created_on": "2017-12-01T01:13:36.804102+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-12-01T01:13:36.806010+00:00", "type": "pullrequest_comment", "id": 50892559}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892527.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892527"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Document the parameter, and add a `/// \\return blah`", "markup": "markdown", "html": "<p>Document the parameter, and add a <code>/// \\return blah</code></p>", "type": "rendered"}, "created_on": "2017-12-01T01:12:51.540058+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-12-01T01:13:08.014033+00:00", "type": "pullrequest_comment", "id": 50892527}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892453.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892453"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Add a `/// \\sa  bool ForgetLibrary(const std::string &_pathToLibrary)`, which will cause doxygen to create a link to the referenced function. \n\nAlso, document the param, and add a `/// \\return` to line 96.", "markup": "markdown", "html": "<p>Add a <code>/// \\sa  bool ForgetLibrary(const std::string &amp;_pathToLibrary)</code>, which will cause doxygen to create a link to the referenced function. </p>\n<p>Also, document the param, and add a <code>/// \\return</code> to line 96.</p>", "type": "rendered"}, "created_on": "2017-12-01T01:10:57.414478+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-12-01T01:12:21.236907+00:00", "type": "pullrequest_comment", "id": 50892453}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892386.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892386"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Can you add documentation for the two parameters?", "markup": "markdown", "html": "<p>Can you add documentation for the two parameters?</p>", "type": "rendered"}, "created_on": "2017-12-01T01:08:28.873341+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-12-01T01:08:28.876200+00:00", "type": "pullrequest_comment", "id": 50892386}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/50892304.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-50892304"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Can you resolve the conflicts with this PR please?", "markup": "markdown", "html": "<p>Can you resolve the conflicts with this PR please?</p>", "type": "rendered"}, "created_on": "2017-12-01T01:06:08.604840+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-12-01T01:06:08.608974+00:00", "type": "pullrequest_comment", "id": 50892304}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/47165296.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-47165296"}}, "parent": {"id": 46964512, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46964512.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46964512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "I have tested the buggy plugin demo from ODE using the `PluginPtrSemantics` and `DllManagement` branch, they both passed, and I didin't see the `segfault` again.   \nThanks for fixing it! ", "markup": "markdown", "html": "<p>I have tested the buggy plugin demo from ODE using the <code>PluginPtrSemantics</code> and <code>DllManagement</code> branch, they both passed, and I didin't see the <code>segfault</code> again. <br />\nThanks for fixing it! </p>", "type": "rendered"}, "created_on": "2017-10-13T22:07:56.805791+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-10-13T22:07:56.807928+00:00", "type": "pullrequest_comment", "id": 47165296}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "c9a25db05973", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c9a25db05973.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c9a25db05973"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "4e95f5fa86e9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/4e95f5fa86e9.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/4e95f5fa86e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-11T22:21:49.790544+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "c9a25db05973", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c9a25db05973.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c9a25db05973"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "b7a5ce141064", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/b7a5ce141064.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/b7a5ce141064"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-11T22:05:20.630796+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46964512.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46964512"}}, "parent": {"id": 46952838, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46952838.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46952838"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "quick update: I switched to the `PluginPtrSemantics` branch and the `undefined symbol` error still exists (which is expected), but the `segfault` is gone.", "markup": "markdown", "html": "<p>quick update: I switched to the <code>PluginPtrSemantics</code> branch and the <code>undefined symbol</code> error still exists (which is expected), but the <code>segfault</code> is gone.</p>", "type": "rendered"}, "created_on": "2017-10-11T20:29:14.917914+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-10-11T20:30:01.581968+00:00", "type": "pullrequest_comment", "id": 46964512}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46952838.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46952838"}}, "parent": {"id": 46951485, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46951485.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46951485"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Thanks for digging into this. Since this is probably a blocker for you, I would suggest using the `PluginPtrSemantics` branch for now until I can write a test to reproduce the issue you're having.", "markup": "markdown", "html": "<p>Thanks for digging into this. Since this is probably a blocker for you, I would suggest using the <code>PluginPtrSemantics</code> branch for now until I can write a test to reproduce the issue you're having.</p>", "type": "rendered"}, "created_on": "2017-10-11T17:58:28.769638+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-10-11T17:58:28.772278+00:00", "type": "pullrequest_comment", "id": 46952838}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46951842.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46951842"}}, "parent": {"id": 46951631, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46951631.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46951631"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "It's not being called, it's being put into a C++11 lambda. This is essentially creating a \"deleter\" function for the library which will be called by `std::shared_ptr` when the `std::shared_ptr` referring to the library ~~goes out of scope~~ has its reference count drop to zero.", "markup": "markdown", "html": "<p>It's not being called, it's being put into a C++11 lambda. This is essentially creating a \"deleter\" function for the library which will be called by <code>std::shared_ptr</code> when the <code>std::shared_ptr</code> referring to the library <del>goes out of scope</del> has its reference count drop to zero.</p>", "type": "rendered"}, "created_on": "2017-10-11T17:46:16.096382+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-10-11T17:47:47.323443+00:00", "type": "pullrequest_comment", "id": 46951842}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46951631.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46951631"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "Due to my limited experience working with the dl libraries, would you mind explaining why the `dlclose(ptr)` is called here? ", "markup": "markdown", "html": "<p>Due to my limited experience working with the dl libraries, would you mind explaining why the <code>dlclose(ptr)</code> is called here? </p>", "type": "rendered"}, "created_on": "2017-10-11T17:43:22.485888+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-10-11T17:43:22.488551+00:00", "type": "pullrequest_comment", "id": 46951631}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61/comments/46951485.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61/_/diff#comment-46951485"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}, "content": {"raw": "I haven't figured out why yet, but I encountered `nullptr == dlHandlePtr` here at line 355, right before the `dlHandlePtr` is returned.  ", "markup": "markdown", "html": "<p>I haven't figured out why yet, but I encountered <code>nullptr == dlHandlePtr</code> here at line 355, right before the <code>dlHandlePtr</code> is returned.  </p>", "type": "rendered"}, "created_on": "2017-10-11T17:41:33.717915+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-10-11T17:41:33.721474+00:00", "type": "pullrequest_comment", "id": 46951485}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "c9a25db05973", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c9a25db05973.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c9a25db05973"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "1776766e8209", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1776766e8209.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1776766e8209"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-09T21:54:07.376484+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "27228659c240", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/27228659c240.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/27228659c240"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "68cd2575392e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/68cd2575392e.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/68cd2575392e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-09T21:32:24.622048+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "7ebcaa7eaf61", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7ebcaa7eaf61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7ebcaa7eaf61"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "36df1306ba7a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/36df1306ba7a.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/36df1306ba7a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-07T00:27:22.369538+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "62e8a14792b0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/62e8a14792b0.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/62e8a14792b0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "03e938fa9999", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/03e938fa9999.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/03e938fa9999"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-06T19:34:57.576995+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "62e8a14792b0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/62e8a14792b0.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/62e8a14792b0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "474cf3cc6a4d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/474cf3cc6a4d.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/474cf3cc6a4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-06T19:30:40.004002+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "62e8a14792b0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/62e8a14792b0.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/62e8a14792b0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "474cf3cc6a4d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/474cf3cc6a4d.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/474cf3cc6a4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-06T19:30:39.961868+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "2f74d2f0ebe5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/2f74d2f0ebe5.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/2f74d2f0ebe5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "474cf3cc6a4d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/474cf3cc6a4d.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/474cf3cc6a4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-10-06T17:22:35.030956+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "f5c3b3b32f58", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/f5c3b3b32f58.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/f5c3b3b32f58"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "364b708ad8ad", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/364b708ad8ad.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/364b708ad8ad"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-18T23:44:01.274083+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "f5c3b3b32f58", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/f5c3b3b32f58.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/f5c3b3b32f58"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "5f17a4555e08", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/5f17a4555e08.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/5f17a4555e08"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-17T18:36:53.959951+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "f5c3b3b32f58", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/f5c3b3b32f58.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/f5c3b3b32f58"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "b98014762e37", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/b98014762e37.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/b98014762e37"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-17T17:53:06.095262+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "58832ea1ca05", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/58832ea1ca05.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/58832ea1ca05"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T17:32:56.179932+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59 is merged, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "7510fd1cdfd6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7510fd1cdfd6.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7510fd1cdfd6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T17:30:38.020546+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "7510fd1cdfd6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7510fd1cdfd6.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7510fd1cdfd6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T17:24:13.782101+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}, {"update": {"description": "This should be my very last PR related to plugin features. After this change, the plugin framework will have 100% of the features and safeties that I was hoping for.\r\n\r\nNote that this PR is meant to be reviewed after pull request #59 is merged; this is not meant to replace it. If you do review this PR before pull request #59, then I recommend only looking at commit 7510fd1 because that will show the diff between the two.\r\n\r\nThe purpose of this PR is to ensure that dynamically linked libraries are able to unload when they are no longer being used. Without these changes, any library that gets loaded by the `PluginLoader` will remain loaded throughout the remaining lifespan of the executable. I view this is a potential source of \"memory leaking\", because the shared library will take up space in the system memory even if all the plugins which were using it have been deleted. If a user wanted to hotswap between a bunch of different implementations of some interface where each implementation is provided by a different shared library, those shared libraries would begin to pile up for as long as the program is running, even if the library is no longer being used or referenced.\r\n\r\nWith the changes here, we are able to track whether any plugins (or `PluginLoader`s) are referencing the shared libraries which have been loaded. When all references for a library have dropped to zero, the library is instructed to unload using `dlclose`. (Note that instructing the shared library to unload does not guarantee that it will actually unload, because it is up to the operating system to decide if it will actually bother doing so.)\r\n\r\nNote that there is one fragile aspect of this implementation: The ordering of some of the member variables in the class definitions for `PluginWithDlHandle` (which is a new class in this PR) and in `PluginLoaderPrivate` are very important, because they need to be destructed in the correct order. This importance is very strongly noted in the inline documentation for those classes, and I've written a sequence of tests which will fail spectacularly if this ordering is violated, so we shouldn't have to worry much. Just know that if you innocently modify those class definitions and the tests start to fail on you in surprising ways, it's probably because you inadvertently reordered those member variables.", "title": "Automatically unloading libraries when they are no longer being referenced", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "reason": "", "source": {"commit": {"hash": "7510fd1cdfd6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7510fd1cdfd6.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7510fd1cdfd6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "DllManagement"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T17:24:13.733488+00:00"}, "pull_request": {"type": "pullrequest", "id": 61, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/61.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/61"}}, "title": "Automatically unloading libraries when they are no longer being referenced"}}]}