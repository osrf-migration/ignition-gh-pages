{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73/comments/47793200.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/diff/ignitionrobotics/ign-common:a0916355a12b..76d416addd2f?path=include%2Fignition%2Fcommon%2FPlugin.hh"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73/_/diff#comment-47793200"}}, "parent": {"id": 47788401, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73/comments/47788401.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73/_/diff#comment-47788401"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 73, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73"}}, "title": "Slimmed down the Plugin pull request (no more template specializations)"}, "content": {"raw": "Another thing to consider in this specific case is conflict between the template parameter and function name. We can't use `Interface` as the name of the template parameter if it is also the function name. So we'd end up with an API that looks like\n\n    public: template <typename T>\n    T* Interface();\n\nwhich I think is much less clear and expressive than the current proposal\n\n    public: template <typename Interface>\n    Interface* GetInterface();\n\nWhen the name of the template parameter is something unexpressive like `T`, I think it becomes much less clear what kinds of types the function is intended to be used for. We could mangle the template parameter name into something like `IFace`, but in some ways I think that might be even worse than `T`.\n\nIf we're not willing to make an exception to the style for this function, then I'll remove the `Get`, but I believe it will be more harmful than beneficial in the long run.", "markup": "markdown", "html": "<p>Another thing to consider in this specific case is conflict between the template parameter and function name. We can't use <code>Interface</code> as the name of the template parameter if it is also the function name. So we'd end up with an API that looks like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">public</span><span class=\"o\">:</span> <span class=\"n\">template</span> <span class=\"o\">&lt;</span><span class=\"n\">typename</span> <span class=\"n\">T</span><span class=\"o\">&gt;</span>\n<span class=\"n\">T</span><span class=\"o\">*</span> <span class=\"n\">Interface</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>which I think is much less clear and expressive than the current proposal</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">public</span><span class=\"o\">:</span> <span class=\"n\">template</span> <span class=\"o\">&lt;</span><span class=\"n\">typename</span> <span class=\"n\">Interface</span><span class=\"o\">&gt;</span>\n<span class=\"n\">Interface</span><span class=\"o\">*</span> <span class=\"n\">GetInterface</span><span class=\"o\">();</span>\n</pre></div>\n\n\n<p>When the name of the template parameter is something unexpressive like <code>T</code>, I think it becomes much less clear what kinds of types the function is intended to be used for. We could mangle the template parameter name into something like <code>IFace</code>, but in some ways I think that might be even worse than <code>T</code>.</p>\n<p>If we're not willing to make an exception to the style for this function, then I'll remove the <code>Get</code>, but I believe it will be more harmful than beneficial in the long run.</p>", "type": "rendered"}, "created_on": "2017-10-23T17:17:33.073239+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/common/Plugin.hh"}, "updated_on": "2017-10-23T17:24:19.028305+00:00", "type": "pullrequest_comment", "id": 47793200}