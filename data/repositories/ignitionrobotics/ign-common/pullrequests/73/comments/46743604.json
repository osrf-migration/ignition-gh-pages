{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73/comments/46743604.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-common/diff/ignitionrobotics/ign-common:93e3ada17864..2f74d2f0ebe5?path=include%2Fignition%2Fcommon%2FPlugin.hh"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73/_/diff#comment-46743604"}}, "parent": {"id": 46736617, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73/comments/46736617.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73/_/diff#comment-46736617"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 73, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/73.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/73"}}, "title": "Slimmed down the Plugin pull request (no more template specializations)"}, "content": {"raw": "I did some more looking around, and I have to admit that I'm seeing several large popular libraries that are not using the `get` keyword in their immutable getter functions (Qt and Boost being two examples).\n\nI still think it would make much more semantic sense to always use `Get` for immutable getter functions and then only leave it out for mutable getter functions (which are really aliases for member variables), but I have to acknowledge that this is not a universally practiced style among well-established C++ libraries.", "markup": "markdown", "html": "<p>I did some more looking around, and I have to admit that I'm seeing several large popular libraries that are not using the <code>get</code> keyword in their immutable getter functions (Qt and Boost being two examples).</p>\n<p>I still think it would make much more semantic sense to always use <code>Get</code> for immutable getter functions and then only leave it out for mutable getter functions (which are really aliases for member variables), but I have to acknowledge that this is not a universally practiced style among well-established C++ libraries.</p>", "type": "rendered"}, "created_on": "2017-10-09T19:35:46.544061+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/common/Plugin.hh"}, "updated_on": "2017-10-09T19:36:29.314776+00:00", "type": "pullrequest_comment", "id": 46743604}