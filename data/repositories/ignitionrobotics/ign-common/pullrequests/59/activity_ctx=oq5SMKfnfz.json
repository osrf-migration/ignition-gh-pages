{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42695867.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42695867"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Oh, I see. This is what you meant by `ComposePlugin<Base1, Base2>` being used find the right inherited method.  For each specialized interface type there is a `ComponentPlugin<T1, T2>` where `T2` is another layer of `ComposePlugin<...>`.  At each layer the 2-templated-type variant of `ComposePlugin` checks if the specialized template is this one or one of the following ones.\n\nWould you mind adding some comments in front of each of `ComposePlugin` class that describe how they're being used?", "markup": "markdown", "html": "<p>Oh, I see. This is what you meant by <code>ComposePlugin&lt;Base1, Base2&gt;</code> being used find the right inherited method.  For each specialized interface type there is a <code>ComponentPlugin&lt;T1, T2&gt;</code> where <code>T2</code> is another layer of <code>ComposePlugin&lt;...&gt;</code>.  At each layer the 2-templated-type variant of <code>ComposePlugin</code> checks if the specialized template is this one or one of the following ones.</p>\n<p>Would you mind adding some comments in front of each of <code>ComposePlugin</code> class that describe how they're being used?</p>", "type": "rendered"}, "created_on": "2017-08-11T21:22:13.009577+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T21:22:13.013037+00:00", "type": "pullrequest_comment", "id": 42695867}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42694359.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42694359"}}, "parent": {"id": 42681526, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42681526.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42681526"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Oh, if you mean allowing it to implicitly cast the integer to a Boolean, then you're absolutely correct. However, I have never been a fan of implicitly evaluating integers or floating point numbers as truth statements (Why can't zero be true?? It's a perfectly legitimate number!), so I prefer to make explicit logical statements when producing a Boolean. The compiler will wipe away the comparison anyhow.", "markup": "markdown", "html": "<p>Oh, if you mean allowing it to implicitly cast the integer to a Boolean, then you're absolutely correct. However, I have never been a fan of implicitly evaluating integers or floating point numbers as truth statements (Why can't zero be true?? It's a perfectly legitimate number!), so I prefer to make explicit logical statements when producing a Boolean. The compiler will wipe away the comparison anyhow.</p>", "type": "rendered"}, "created_on": "2017-08-11T20:47:50.837666+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T20:48:35.508077+00:00", "type": "pullrequest_comment", "id": 42694359}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42690413.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42690413"}}, "parent": {"id": 42689687, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689687.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689687"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "There needs to be a point in the code where we choose which direction up the inheritance structure we need to go to find the base class that is specialized for the requested interface. You can think of it like going down a binary tree, and `DETAIL_IGN_COMMON_COMPOSEPLUGIN_DISPATCH` is where we make the choice of which branch to take for each different function that we need to implement.", "markup": "markdown", "html": "<p>There needs to be a point in the code where we choose which direction up the inheritance structure we need to go to find the base class that is specialized for the requested interface. You can think of it like going down a binary tree, and <code>DETAIL_IGN_COMMON_COMPOSEPLUGIN_DISPATCH</code> is where we make the choice of which branch to take for each different function that we need to implement.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:39:47.539184+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:53:36.717283+00:00", "type": "pullrequest_comment", "id": 42690413}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42690615.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42690615"}}, "parent": {"id": 42689123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689123.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689123"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Exactly correct.", "markup": "markdown", "html": "<p>Exactly correct.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:43:24.052719+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:43:24.055147+00:00", "type": "pullrequest_comment", "id": 42690615}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42690230.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42690230"}}, "parent": {"id": 42690084, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42690084.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42690084"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "After thinking it over, I'm pretty convinced that the single argument version is never necessary. I though it might come into play if CompositePlugin gets an odd number of arguments, but I don't think that's actually the case. I'll remove it if I determine for sure that it can't ever get used.", "markup": "markdown", "html": "<p>After thinking it over, I'm pretty convinced that the single argument version is never necessary. I though it might come into play if CompositePlugin gets an odd number of arguments, but I don't think that's actually the case. I'll remove it if I determine for sure that it can't ever get used.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:35:29.061315+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:36:13.820849+00:00", "type": "pullrequest_comment", "id": 42690230}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42690084.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42690084"}}, "parent": {"id": 42689515, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689515.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689515"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "From a clueless reviews' perspective, I have to investigate all code that may actually be unused because I'm not sure if it's unused or has a special purpose I don't understand.", "markup": "markdown", "html": "<p>From a clueless reviews' perspective, I have to investigate all code that may actually be unused because I'm not sure if it's unused or has a special purpose I don't understand.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:32:16.892771+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T19:32:16.897132+00:00", "type": "pullrequest_comment", "id": 42690084}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689687.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689687"}}, "parent": {"id": 42689417, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689417.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689417"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Could `DETAIL_IGN_COMMON_COMPOSEPLUGIN_DISPATCH` be deleted if it inherited from ~~the solo base~~ the two single argument `ComposePlugin` instead?", "markup": "markdown", "html": "<p>Could <code>DETAIL_IGN_COMMON_COMPOSEPLUGIN_DISPATCH</code> be deleted if it inherited from <del>the solo base</del> the two single argument <code>ComposePlugin</code> instead?</p>", "type": "rendered"}, "created_on": "2017-08-11T19:24:31.552408+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T19:25:50.868154+00:00", "type": "pullrequest_comment", "id": 42689687}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689515.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689515"}}, "parent": {"id": 42689000, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689000.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689000"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Also, I'm not 100% sure that the single-argument ComposePlugin version is even necessary; I'd have to think about it a bit more and draw out some diagrams to be sure. At the very least, its existence isn't hurting anything.", "markup": "markdown", "html": "<p>Also, I'm not 100% sure that the single-argument ComposePlugin version is even necessary; I'd have to think about it a bit more and draw out some diagrams to be sure. At the very least, its existence isn't hurting anything.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:21:09.975838+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:21:09.978219+00:00", "type": "pullrequest_comment", "id": 42689515}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689123.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689123"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "~~How does this get `IsSpecializedFor<Base1>()`? I only see `IsSpecializedFor` in the `ComposePlugin<Base1, Base2>`. What happens if `SpecializedPlugin` has an even(?) number of template arguments?~~\n\nWait, I think I see. In this case `IsSpecializedFor<T>` was already defined by `SpecializedPlugin<T>` which is `Base1`", "markup": "markdown", "html": "<p><del>How does this get <code>IsSpecializedFor&lt;Base1&gt;()</code>? I only see <code>IsSpecializedFor</code> in the <code>ComposePlugin&lt;Base1, Base2&gt;</code>. What happens if <code>SpecializedPlugin</code> has an even(?) number of template arguments?</del></p>\n<p>Wait, I think I see. In this case <code>IsSpecializedFor&lt;T&gt;</code> was already defined by <code>SpecializedPlugin&lt;T&gt;</code> which is <code>Base1</code></p>", "type": "rendered"}, "created_on": "2017-08-11T19:13:55.227123+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T19:20:49.073002+00:00", "type": "pullrequest_comment", "id": 42689123}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689417.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689417"}}, "parent": {"id": 42689000, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689000.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689000"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "That would work, but it wouldn't accomplish anything except making the inheritance structure more complex than it already is.", "markup": "markdown", "html": "<p>That would work, but it wouldn't accomplish anything except making the inheritance structure more complex than it already is.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:19:18.435029+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:19:18.438135+00:00", "type": "pullrequest_comment", "id": 42689417}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689028.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689028"}}, "parent": {"id": 42688498, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688498.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688498"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "It had been used in the constructor, but I changed the implementation. Sometimes it's still useful to have the base type defined for future template metaprogramming, but I can take it out until it's actually needed.", "markup": "markdown", "html": "<p>It had been used in the constructor, but I changed the implementation. Sometimes it's still useful to have the base type defined for future template metaprogramming, but I can take it out until it's actually needed.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:11:54.365942+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:11:54.369446+00:00", "type": "pullrequest_comment", "id": 42689028}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42689000.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42689000"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "I don't follow this completely yet. Could this instead inherit from `: public virtual ComposePlugin<Base1>, public virtual ComposePlugin<Base2>` instead? ", "markup": "markdown", "html": "<p>I don't follow this completely yet. Could this instead inherit from <code>: public virtual ComposePlugin&lt;Base1&gt;, public virtual ComposePlugin&lt;Base2&gt;</code> instead? </p>", "type": "rendered"}, "created_on": "2017-08-11T19:11:20.804561+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T19:11:20.807735+00:00", "type": "pullrequest_comment", "id": 42689000}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688715.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688715"}}, "parent": {"id": 42678092, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42678092.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42678092"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "I think if we choose to split template implementations from their declarations, we should be completely consistent about it. Also, there may come a day that we add a bunch more template functions to PluginLoader, and now we'll have a file ready to accept their implementations.", "markup": "markdown", "html": "<p>I think if we choose to split template implementations from their declarations, we should be completely consistent about it. Also, there may come a day that we add a bunch more template functions to PluginLoader, and now we'll have a file ready to accept their implementations.</p>", "type": "rendered"}, "created_on": "2017-08-11T19:05:44.435155+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:05:44.437471+00:00", "type": "pullrequest_comment", "id": 42688715}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688498.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688498"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Where is `Base` used?", "markup": "markdown", "html": "<p>Where is <code>Base</code> used?</p>", "type": "rendered"}, "created_on": "2017-08-11T19:02:14.536868+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T19:02:14.539418+00:00", "type": "pullrequest_comment", "id": 42688498}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688379.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688379"}}, "parent": {"id": 42681526, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42681526.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42681526"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Count will always be 0 or 1. We use count here because it's the closest thing the map offers to an existence check (and also the most efficient way of checking for existence).", "markup": "markdown", "html": "<p>Count will always be 0 or 1. We use count here because it's the closest thing the map offers to an existence check (and also the most efficient way of checking for existence).</p>", "type": "rendered"}, "created_on": "2017-08-11T19:00:04.693627+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T19:00:04.708982+00:00", "type": "pullrequest_comment", "id": 42688379}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688302.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688302"}}, "parent": {"id": 42682290, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42682290.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42682290"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Exactly right on all counts, including its relation to the specializations.", "markup": "markdown", "html": "<p>Exactly right on all counts, including its relation to the specializations.</p>", "type": "rendered"}, "created_on": "2017-08-11T18:58:38.841137+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T18:58:38.843906+00:00", "type": "pullrequest_comment", "id": 42688302}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688211.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688211"}}, "parent": {"id": 42683872, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42683872.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42683872"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "It was replaced (and negated) by `IsEmpty` because I though that was a more meaningful function name. This is also why you saw so many cases of `EXPECT_X(!plugin.IsEmpty())` in the tests. I'll fix this when I have computer access.", "markup": "markdown", "html": "<p>It was replaced (and negated) by <code>IsEmpty</code> because I though that was a more meaningful function name. This is also why you saw so many cases of <code>EXPECT_X(!plugin.IsEmpty())</code> in the tests. I'll fix this when I have computer access.</p>", "type": "rendered"}, "created_on": "2017-08-11T18:57:21.419291+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T18:57:21.422617+00:00", "type": "pullrequest_comment", "id": 42688211}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42688004.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42688004"}}, "parent": {"id": 42686454, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42686454.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42686454"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "It gets used by the template specialization of `std::hash<T>` (which I think is probably at the bottom of `detail/PluginPtr`). Making a member function to provide the hash value allows us to make the hashing compatible with our PIMPL design.", "markup": "markdown", "html": "<p>It gets used by the template specialization of <code>std::hash&lt;T&gt;</code> (which I think is probably at the bottom of <code>detail/PluginPtr</code>). Making a member function to provide the hash value allows us to make the hashing compatible with our PIMPL design.</p>", "type": "rendered"}, "created_on": "2017-08-11T18:54:02.113174+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T18:54:02.115417+00:00", "type": "pullrequest_comment", "id": 42688004}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42686454.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42686454"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Where is the hash used?", "markup": "markdown", "html": "<p>Where is the hash used?</p>", "type": "rendered"}, "created_on": "2017-08-11T18:28:27.903161+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T18:28:27.905461+00:00", "type": "pullrequest_comment", "id": 42686454}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42684251.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42684251"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Delete the last sentence? I think it's impossible for `this` to have an instance of another plugin since it hasn't been constructed yet.", "markup": "markdown", "html": "<p>Delete the last sentence? I think it's impossible for <code>this</code> to have an instance of another plugin since it hasn't been constructed yet.</p>", "type": "rendered"}, "created_on": "2017-08-11T17:53:44.641090+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T17:53:44.643453+00:00", "type": "pullrequest_comment", "id": 42684251}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42683872.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42683872"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "I don't see `IsValid()` anywhere. Was it replaced by `operator bool()`?", "markup": "markdown", "html": "<p>I don't see <code>IsValid()</code> anywhere. Was it replaced by <code>operator bool()</code>?</p>", "type": "rendered"}, "created_on": "2017-08-11T17:47:39.217852+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T17:47:39.221677+00:00", "type": "pullrequest_comment", "id": 42683872}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42683439.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42683439"}}, "parent": {"id": 42618174, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42618174.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42618174"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "pull request #62", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-common/pull-requests/62/stringutilshh-move-visibility-macro-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #62</a></p>", "type": "rendered"}, "created_on": "2017-08-11T17:40:17.079127+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T17:40:17.081514+00:00", "type": "pullrequest_comment", "id": 42683439}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42682290.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42682290"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "~~I'm confused, what happens to the current value at that key? Does `this->dataPtr->interfaces[_interfaceName]` return the old value or `nullptr`? ~~\n\nNevermind I think I get it. If the plugin has the interface it returns an iterator to it (because insert returns an iterator to the element that blocked insertion). If the plugin doesn't have that interface it returns an iterator to a `nullptr`. Seems to be related to how `SpecializedPlugin` handles being specialized for an interface that doesn't exist on the plugin.", "markup": "markdown", "html": "<p><del>I'm confused, what happens to the current value at that key? Does <code>this-&gt;dataPtr-&gt;interfaces[_interfaceName]</code> return the old value or <code>nullptr</code>? </del></p>\n<p>Nevermind I think I get it. If the plugin has the interface it returns an iterator to it (because insert returns an iterator to the element that blocked insertion). If the plugin doesn't have that interface it returns an iterator to a <code>nullptr</code>. Seems to be related to how <code>SpecializedPlugin</code> handles being specialized for an interface that doesn't exist on the plugin.</p>", "type": "rendered"}, "created_on": "2017-08-11T17:20:55.734394+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T17:28:49.386402+00:00", "type": "pullrequest_comment", "id": 42682290}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42681526.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42681526"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "nitpick: could return the result of `count()` directly instead of comparing it with zero", "markup": "markdown", "html": "<p>nitpick: could return the result of <code>count()</code> directly instead of comparing it with zero</p>", "type": "rendered"}, "created_on": "2017-08-11T17:08:19.049215+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T17:08:19.051399+00:00", "type": "pullrequest_comment", "id": 42681526}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42680585.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42680585"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "nitpick: `this->Clear();` in a few places", "markup": "markdown", "html": "<p>nitpick: <code>this-&gt;Clear();</code> in a few places</p>", "type": "rendered"}, "created_on": "2017-08-11T16:51:45.205371+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T16:51:45.208375+00:00", "type": "pullrequest_comment", "id": 42680585}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42678501.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42678501"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Add a test?\n\n```\nTEST(TemplateHelpers, ConstCompatible)\n{\n  EXPECT_TRUE((ignition::common::ConstCompatible<const int, const int>::value));\n  EXPECT_FALSE((ignition::common::ConstCompatible<int, const int>::value));\n  EXPECT_TRUE((ignition::common::ConstCompatible<const int, int>::value));\n  EXPECT_TRUE((ignition::common::ConstCompatible<int, int>::value));\n}\n```", "markup": "markdown", "html": "<p>Add a test?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">TEST</span><span class=\"o\">(</span><span class=\"nt\">TemplateHelpers</span><span class=\"o\">,</span> <span class=\"nt\">ConstCompatible</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"err\">EXPECT_TRUE((</span><span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ConstCompatible</span><span class=\"o\">&lt;</span><span class=\"n\">const</span> <span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">const</span> <span class=\"n\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">value</span><span class=\"p\">));</span>\n  <span class=\"err\">EXPECT_FALSE((</span><span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ConstCompatible</span><span class=\"o\">&lt;</span><span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">const</span> <span class=\"n\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">value</span><span class=\"p\">));</span>\n  <span class=\"err\">EXPECT_TRUE((</span><span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ConstCompatible</span><span class=\"o\">&lt;</span><span class=\"n\">const</span> <span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">value</span><span class=\"p\">));</span>\n  <span class=\"err\">EXPECT_TRUE((</span><span class=\"n\">ignition</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">common</span><span class=\"o\">::</span><span class=\"n\">ConstCompatible</span><span class=\"o\">&lt;</span><span class=\"n\">int</span><span class=\"p\">,</span> <span class=\"n\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">value</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-08-11T16:20:49.122818+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T16:20:49.126150+00:00", "type": "pullrequest_comment", "id": 42678501}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42678198.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42678198"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "This is also kind of a small to have a separate file for the template implementation. It would be a little easier to review if it was just one file.", "markup": "markdown", "html": "<p>This is also kind of a small to have a separate file for the template implementation. It would be a little easier to review if it was just one file.</p>", "type": "rendered"}, "created_on": "2017-08-11T16:16:15.756634+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T16:16:15.760128+00:00", "type": "pullrequest_comment", "id": 42678198}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42678092.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42678092"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Having a separate file for a template implementation this small is a little inconvenient", "markup": "markdown", "html": "<p>Having a separate file for a template implementation this small is a little inconvenient</p>", "type": "rendered"}, "created_on": "2017-08-11T16:14:54.603544+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T16:14:54.606384+00:00", "type": "pullrequest_comment", "id": 42678092}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42673036.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42673036"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "`IGNCOMMONInterfaceName` seems like it would be less likely to collide with another symbol  than `InterfaceName`", "markup": "markdown", "html": "<p><code>IGNCOMMONInterfaceName</code> seems like it would be less likely to collide with another symbol  than <code>InterfaceName</code></p>", "type": "rendered"}, "created_on": "2017-08-11T15:18:06.115715+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T15:18:06.117999+00:00", "type": "pullrequest_comment", "id": 42673036}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623905.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623905"}}, "parent": {"id": 42623283, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623283.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623283"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "I hadn't considered those pesky time travelling plugins. Fixed in 19c20a1.", "markup": "markdown", "html": "<p>I hadn't considered those pesky time travelling plugins. Fixed in <a href=\"#!/ignitionrobotics/ign-common/commits/19c20a1\" rel=\"nofollow\" class=\"ap-connect-link\">19c20a1</a>.</p>", "type": "rendered"}, "created_on": "2017-08-11T01:46:39.590422+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T01:46:39.592263+00:00", "type": "pullrequest_comment", "id": 42623905}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "19c20a125fbe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/19c20a125fbe.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/19c20a125fbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-11T01:46:06.150933+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623404.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623404"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "nitpick: `auto Info = reinterpret_cast<PluginLoadFunctionSignature>(multiInfoPtr)` no need to type the type twice.", "markup": "markdown", "html": "<p>nitpick: <code>auto Info = reinterpret_cast&lt;PluginLoadFunctionSignature&gt;(multiInfoPtr)</code> no need to type the type twice.</p>", "type": "rendered"}, "created_on": "2017-08-11T01:20:45.916515+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T01:20:45.919279+00:00", "type": "pullrequest_comment", "id": 42623404}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623283.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623283"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "I think this should check `version == PLUGIN_API_VERSION` as well. It's possible the plugin being loaded is from the future and was compiled with a newer plugin API version.", "markup": "markdown", "html": "<p>I think this should check <code>version == PLUGIN_API_VERSION</code> as well. It's possible the plugin being loaded is from the future and was compiled with a newer plugin API version.</p>", "type": "rendered"}, "created_on": "2017-08-11T01:16:32.682941+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T01:16:32.685450+00:00", "type": "pullrequest_comment", "id": 42623283}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623141.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623141"}}, "parent": {"id": 42623076, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623076.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623076"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Changed in 8818156", "markup": "markdown", "html": "<p>Changed in <a href=\"#!/ignitionrobotics/ign-common/commits/8818156\" rel=\"nofollow\" class=\"ap-connect-link\">8818156</a></p>", "type": "rendered"}, "created_on": "2017-08-11T01:10:39.228754+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T01:10:39.230958+00:00", "type": "pullrequest_comment", "id": 42623141}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "88181568e1be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/88181568e1be.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/88181568e1be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-11T01:10:20.468448+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623100.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623100"}}, "parent": {"id": 42622993, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622993.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622993"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Removed in 8205c3d", "markup": "markdown", "html": "<p>Removed in <a href=\"#!/ignitionrobotics/ign-common/commits/8205c3d\" rel=\"nofollow\" class=\"ap-connect-link\">8205c3d</a></p>", "type": "rendered"}, "created_on": "2017-08-11T01:08:57.834696+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T01:08:57.837057+00:00", "type": "pullrequest_comment", "id": 42623100}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42623076.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42623076"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Nitpick: remove `Single` from variable name match alignment variable name.", "markup": "markdown", "html": "<p>Nitpick: remove <code>Single</code> from variable name match alignment variable name.</p>", "type": "rendered"}, "created_on": "2017-08-11T01:08:16.117742+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T01:08:16.120979+00:00", "type": "pullrequest_comment", "id": 42623076}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8205c3d12938", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/8205c3d12938.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/8205c3d12938"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-11T01:08:16.091465+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622993.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622993"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "This bit appears to be an old unused variable. Mind removing it?", "markup": "markdown", "html": "<p>This bit appears to be an old unused variable. Mind removing it?</p>", "type": "rendered"}, "created_on": "2017-08-11T01:05:05.500865+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T01:05:05.503344+00:00", "type": "pullrequest_comment", "id": 42622993}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622778.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622778"}}, "parent": {"id": 42622328, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622328.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622328"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Added that, plus some more detailed output when plugin loading failures occur: 1465347", "markup": "markdown", "html": "<p>Added that, plus some more detailed output when plugin loading failures occur: <a href=\"#!/ignitionrobotics/ign-common/commits/1465347\" rel=\"nofollow\" class=\"ap-connect-link\">1465347</a></p>", "type": "rendered"}, "created_on": "2017-08-11T00:55:28.406682+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-11T00:55:28.408835+00:00", "type": "pullrequest_comment", "id": 42622778}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622768.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622768"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "This is magic", "markup": "markdown", "html": "<p>This is magic</p>", "type": "rendered"}, "created_on": "2017-08-11T00:54:54.239059+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T00:54:54.241538+00:00", "type": "pullrequest_comment", "id": 42622768}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "14653476e367", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/14653476e367.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/14653476e367"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-11T00:54:48.225090+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42622328.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42622328"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "One additional meta data to check: `alignof(ignition::common::PluginInfo)`. This would catch some cases that sizeof alone wouldn't. However, the sizeof check is already a little paranoid. ", "markup": "markdown", "html": "<p>One additional meta data to check: <code>alignof(ignition::common::PluginInfo)</code>. This would catch some cases that sizeof alone wouldn't. However, the sizeof check is already a little paranoid. </p>", "type": "rendered"}, "created_on": "2017-08-11T00:36:00.160835+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-11T00:36:00.164228+00:00", "type": "pullrequest_comment", "id": 42622328}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42620597.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42620597"}}, "parent": {"id": 42619387, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42619387.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42619387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Fixed in e0ac6b2", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-common/commits/e0ac6b2\" rel=\"nofollow\" class=\"ap-connect-link\">e0ac6b2</a></p>", "type": "rendered"}, "created_on": "2017-08-10T23:41:20.050207+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-10T23:41:20.052730+00:00", "type": "pullrequest_comment", "id": 42620597}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e0ac6b202341", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/e0ac6b202341.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/e0ac6b202341"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T23:40:49.325389+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42620145.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42620145"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "ASSERT_NE(nullptr, **nameBase**)\n\nIt feels like this one test is doing a lot. What do you think about breaking it into a few smaller tests?", "markup": "markdown", "html": "<p>ASSERT_NE(nullptr, <strong>nameBase</strong>)</p>\n<p>It feels like this one test is doing a lot. What do you think about breaking it into a few smaller tests?</p>", "type": "rendered"}, "created_on": "2017-08-10T23:27:13.873519+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-10T23:27:13.875946+00:00", "type": "pullrequest_comment", "id": 42620145}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42620041.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42620041"}}, "parent": {"id": 42619883, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42619883.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42619883"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "You mean I shouldn't be testing to make sure that the `!` operator is correctly flipping booleans?\n\nI've change all the instances of this in a83beff", "markup": "markdown", "html": "<p>You mean I shouldn't be testing to make sure that the <code>!</code> operator is correctly flipping booleans?</p>\n<p>I've change all the instances of this in <a href=\"#!/ignitionrobotics/ign-common/commits/a83beff\" rel=\"nofollow\" class=\"ap-connect-link\">a83beff</a></p>", "type": "rendered"}, "created_on": "2017-08-10T23:24:13.832349+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-10T23:24:13.834678+00:00", "type": "pullrequest_comment", "id": 42620041}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"update": {"description": "I promise this is the last version of this PR that I'm going to open. This plugin framework implementation is finally something that I'm satisfied with. It's a huge PR (and I am really truly sorry for that, but the breadth of the implementation details would make it even worse to break into parts IMO), so I'll try to summarize the key features concisely:\r\n\r\n1. The plugin framework can now support arbitrarily many plugins per library, and arbitrarily many interfaces per plugin\r\n\r\n2. The `PluginLoader` now returns a generic `PluginPtr` object which contains a generic `Plugin` object that provides access to the interfaces provided by the plugin that was loaded.\r\n\r\n3. The `Plugin` object can be specialized at compile time to give direct access to any interfaces that can be anticipated ahead of time.\r\n\r\n4. You can cast between different `Plugin` specializations at a one-time map construction cost.\r\n\r\n5. The `PluginPtr` class behaves like a `std::shared_ptr` where the plugin instance is shared between them.\r\n\r\n6. Interfaces can be retrieved as `std::shared_ptr<T>` objects where `T` is whatever the interface class is. This allows a user to simply query the `Plugin` for the specific interfaces that they want, and then discard the `PluginPtr` that was originally returned by the `PluginLoader`.\r\n\r\nOne thing that may be controversial in this PR:\r\n\r\n* The function that returns interfaces as `std::shared_ptr` objects is called `Plugin::as_shared_ptr`, which violates our style convention. This was an intentional design choice to use the STL style so that it's explicit to the user that the function is converting from an `ignition` data structure to a `std` data structure. If anyone objects to this design choice, we can certainly rename the function to `Plugin::AsSharedPtr`. However, this intentional change in code style is a common pattern that I've seen in other libraries when converting from a custom object type to an STL (or other library) object type.\r\n\r\nOne problem that this PR does not solve:\r\n\r\n* ~~There is potential for abuse in the plugin framework if the user decides to cycle between loading from many different shared libraries. Currently, we have no way of closing shared libraries after the user has loaded them. Whether the library actually gets used after being loaded, or whether anything from the library is still in use, the shared library will remain loaded and active in memory. I have some solid ideas for fixing this, but it can wait for a later PR.~~  This is now addressed in pull request #61\r\n\r\nPlease don't hesitate to ask me questions about the implementation details in this PR. The use of  templates is likely to be very confusing, even for people who are familiar with templates.", "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations", "destination": {"commit": {"hash": "619d95a26559", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/619d95a26559.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/619d95a26559"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a83beff427a9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/a83beff427a9.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/a83beff427a9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "PluginPtrSemantics"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-10T23:22:54.884590+00:00"}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42619883.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42619883"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "nitpick: `EXPECT_FALSE(firstPlugin.IsEmpty());`", "markup": "markdown", "html": "<p>nitpick: <code>EXPECT_FALSE(firstPlugin.IsEmpty());</code></p>", "type": "rendered"}, "created_on": "2017-08-10T23:20:05.731677+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-08-10T23:20:05.733941+00:00", "type": "pullrequest_comment", "id": 42619883}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42619867.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42619867"}}, "parent": {"id": 42619679, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42619679.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42619679"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "Changed in 4b2c975", "markup": "markdown", "html": "<p>Changed in <a href=\"#!/ignitionrobotics/ign-common/commits/4b2c975\" rel=\"nofollow\" class=\"ap-connect-link\">4b2c975</a></p>", "type": "rendered"}, "created_on": "2017-08-10T23:19:31.649005+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-10T23:19:31.652611+00:00", "type": "pullrequest_comment", "id": 42619867}, "pull_request": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}}], "next": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/activity_ctx=rqEfXgujub.json"}