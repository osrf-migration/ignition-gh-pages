{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42618435.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42618435"}}, "parent": {"id": 42617628, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59/comments/42617628.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59/_/diff#comment-42617628"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 59, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/59.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/59"}}, "title": "Expanding the functionality of the plugin framework, and introducing PluginPtr and specializations"}, "content": {"raw": "A \"few\" complaints...\n\nAs of e09ce45 I've fixed all the ones that are fixable. Some of the complaints are factually incorrect or a no-win scenario:\n\n    ./include/ignition/common/detail/TemplateHelpers.hh:38:  You don't need a ; after a }  [readability/braces] [4]\n\nThis is incorrect because that line is defining a struct which requires an ending semicolon (although I've never really understood why this is the case, except for it being an arbitrary requirement made decades ago).\n\n```\n./include/ignition/common/detail/PluginPtr.hh:130:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:131:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:132:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:133:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:134:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:135:  Extra space after ( in function call  [whitespace/parens] [4]\n```\n\nIf I remove those spaces, then it complains about not having any space before and after the operators. There is no way for cpp-check to not complain about those lines of code, except maybe to do something like\n\n```\nDETAIL_IGN_COMMON_PLUGINPTR_IMPLEMENT_OPERATOR(\n  ==\n)\n```\n\nwhich I think would be beyond hideous.\n", "markup": "markdown", "html": "<p>A \"few\" complaints...</p>\n<p>As of <a href=\"#!/ignitionrobotics/ign-common/commits/e09ce45\" rel=\"nofollow\" class=\"ap-connect-link\">e09ce45</a> I've fixed all the ones that are fixable. Some of the complaints are factually incorrect or a no-win scenario:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">./</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">ignition</span><span class=\"o\">/</span><span class=\"nt\">common</span><span class=\"o\">/</span><span class=\"nt\">detail</span><span class=\"o\">/</span><span class=\"nt\">TemplateHelpers</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">38</span><span class=\"o\">:</span>  <span class=\"nt\">You</span> <span class=\"nt\">don</span><span class=\"err\">&#39;</span><span class=\"nt\">t</span> <span class=\"nt\">need</span> <span class=\"nt\">a</span> <span class=\"o\">;</span> <span class=\"nt\">after</span> <span class=\"nt\">a</span> <span class=\"err\">}</span>  <span class=\"cp\">[</span><span class=\"nx\">readability</span><span class=\"p\">/</span><span class=\"nx\">braces</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"mi\">4</span><span class=\"cp\">]</span>\n</pre></div>\n\n\n<p>This is incorrect because that line is defining a struct which requires an ending semicolon (although I've never really understood why this is the case, except for it being an arbitrary requirement made decades ago).</p>\n<div class=\"codehilite\"><pre><span></span>./include/ignition/common/detail/PluginPtr.hh:130:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:131:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:132:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:133:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:134:  Extra space after ( in function call  [whitespace/parens] [4]\n./include/ignition/common/detail/PluginPtr.hh:135:  Extra space after ( in function call  [whitespace/parens] [4]\n</pre></div>\n\n\n<p>If I remove those spaces, then it complains about not having any space before and after the operators. There is no way for cpp-check to not complain about those lines of code, except maybe to do something like</p>\n<div class=\"codehilite\"><pre><span></span>DETAIL_IGN_COMMON_PLUGINPTR_IMPLEMENT_OPERATOR(\n  ==\n)\n</pre></div>\n\n\n<p>which I think would be beyond hideous.</p>", "type": "rendered"}, "created_on": "2017-08-10T22:42:44.417574+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-08-10T22:42:44.419915+00:00", "type": "pullrequest_comment", "id": 42618435}