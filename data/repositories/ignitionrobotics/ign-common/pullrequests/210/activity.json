{"pagelen": 50, "values": [{"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "7be0d20f6d69", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7be0d20f6d69.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7be0d20f6d69"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "MERGED", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-20T01:40:03.877904+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136695228.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136695228"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "It took me a few iterations to make Windows happy but we're good now. Merging!", "markup": "markdown", "html": "<p>It took me a few iterations to make Windows happy but we're good now. Merging!</p>", "type": "rendered"}, "created_on": "2020-02-20T01:39:57.395190+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-02-20T01:39:57.402294+00:00", "type": "pullrequest_comment", "id": 136695228}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "7be0d20f6d69", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/7be0d20f6d69.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/7be0d20f6d69"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-20T00:56:07.792838+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "b738efb858b5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/b738efb858b5.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/b738efb858b5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-19T20:46:51.963019+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "738b13643600", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/738b13643600.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/738b13643600"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-19T20:21:52.395831+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "e576de8e4c1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/e576de8e4c1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/e576de8e4c1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-19T20:16:18.850216+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"approval": {"date": "2020-02-19T18:12:01.682075+00:00", "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"approval": {"date": "2020-02-19T16:48:48.181849+00:00", "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136488797.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136488797"}}, "parent": {"id": 136483428, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136483428.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136483428"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "d36ee9f ", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-common/commits/d36ee9f\" rel=\"nofollow\" class=\"ap-connect-link\">d36ee9f</a> </p>", "type": "rendered"}, "created_on": "2020-02-19T02:02:10.093014+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2020-02-19T02:02:10.100418+00:00", "type": "pullrequest_comment", "id": 136488797}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136488794.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136488794"}}, "parent": {"id": 136483457, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136483457.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136483457"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "d36ee9f ", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-common/commits/d36ee9f\" rel=\"nofollow\" class=\"ap-connect-link\">d36ee9f</a> </p>", "type": "rendered"}, "created_on": "2020-02-19T02:02:07.285936+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-02-19T02:02:07.293606+00:00", "type": "pullrequest_comment", "id": 136488794}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "d36ee9f59a4d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/d36ee9f59a4d.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/d36ee9f59a4d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-19T02:01:46.605767+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136483457.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136483457"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "changelog :pencil: ", "markup": "markdown", "html": "<p>changelog <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f4dd.png\" alt=\"\ud83d\udcdd\" title=\":pencil:\" data-emoji-short-name=\":pencil:\" /> </p>", "type": "rendered"}, "created_on": "2020-02-19T00:33:42.039619+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-02-19T00:33:42.047245+00:00", "type": "pullrequest_comment", "id": 136483457}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136483428.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136483428"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "store `NormalizeDirectoryPath(filePath) + suffix` into a tmp var for it to be used in the next line?", "markup": "markdown", "html": "<p>store <code>NormalizeDirectoryPath(filePath) + suffix</code> into a tmp var for it to be used in the next line?</p>", "type": "rendered"}, "created_on": "2020-02-19T00:33:23.082393+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2020-02-19T00:33:23.087815+00:00", "type": "pullrequest_comment", "id": 136483428}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/136062117.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-136062117"}}, "parent": {"id": 135695900, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/135695900.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-135695900"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "Tests added on 16f3e8d", "markup": "markdown", "html": "<p>Tests added on <a href=\"#!/ignitionrobotics/ign-common/commits/16f3e8d\" rel=\"nofollow\" class=\"ap-connect-link\">16f3e8d</a></p>", "type": "rendered"}, "created_on": "2020-02-14T21:25:54.226452+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-02-14T21:25:54.232615+00:00", "type": "pullrequest_comment", "id": 136062117}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "3e19567ea0d2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/3e19567ea0d2.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/3e19567ea0d2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-14T21:25:41.209649+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "c46657e141ca", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/c46657e141ca.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/c46657e141ca"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "16f3e8d7510a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/16f3e8d7510a.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/16f3e8d7510a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-02-14T21:24:40.330715+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/135695900.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-135695900"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "Okay, I've come around to this idea.\n\nWould you be able to write a test?", "markup": "markdown", "html": "<p>Okay, I've come around to this idea.</p>\n<p>Would you be able to write a test?</p>", "type": "rendered"}, "created_on": "2020-02-12T23:32:56.201981+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2020-02-12T23:32:56.209103+00:00", "type": "pullrequest_comment", "id": 135695900}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/130917942.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-130917942"}}, "parent": {"id": 130752294, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/130752294.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-130752294"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "The use case is to support search paths that are defined by the user at load time. We typically do this with environment variables, which `SystemPaths` already supports. \n\nCustom callbacks are one way of finding files from outside of `ign-common`, but if we want to use that to expose environment variables for a downstream application such as `ign-gazebo`, we'd need to reimplement a lot of the logic already contained inside `common::SystemPaths`.\n\nThe piece currently missing here is that `ign-common`'s handling of URIs is limited to custom callbacks specific to URIs (added through `AddFindFileURICallback`). When it comes to paths added with `AddFilePaths` or coming from an environment variable, `SystemPaths` treats URIs as if they were relative paths. For example:\n\n~~~\n# IGN_FILE_PATH=/abc\nsystemPaths.AddFilePaths(\"/def\");\nsystemPaths.FindFile(\"model://filename\");\n// Searches for:\n// * /abc/model://filename\n// * /def/model://filename\n~~~\n\nWith this PR, the `model://` would be stripped and we'd search for `/abc/filename` and `/def/filename`.\n\nAs I mentioned above, maybe just ignoring the scheme is not great. But that's the least invasive way that I found to get URIs to play well with the rest of the API.\n\n---\n\n## Alternatives considered\n\n* Do something similar to SDF's [g_uriPathMap](https://bitbucket.org/osrf/sdformat/src/28e36804b35a4c3a844d49030e80c8721299c426/src/SDF.cc#lines-45). But I think a clean implementation for that would require the entire `SystemPaths` API to be scheme-aware. That is, every path added with `AddFilePaths` or an environment variable could have an optional scheme associated to them.\n* Implement a custom URI callback that strips the scheme and then calls `SystemPaths::FindFile` again with a relative path. I think it could work, but feels hacky when the path could just be handled from within `ign-common`.\n* Don't use URIs, only use relative paths. I think that's valid, but it would essentially mean that models that work with Gazebo-classic won't work with Ignition. I think that would significantly increase the migration efforts, but what worries me the most is that we wouldn't be able to reuse models across classic and Ignition.", "markup": "markdown", "html": "<p>The use case is to support search paths that are defined by the user at load time. We typically do this with environment variables, which <code>SystemPaths</code> already supports. </p>\n<p>Custom callbacks are one way of finding files from outside of <code>ign-common</code>, but if we want to use that to expose environment variables for a downstream application such as <code>ign-gazebo</code>, we'd need to reimplement a lot of the logic already contained inside <code>common::SystemPaths</code>.</p>\n<p>The piece currently missing here is that <code>ign-common</code>'s handling of URIs is limited to custom callbacks specific to URIs (added through <code>AddFindFileURICallback</code>). When it comes to paths added with <code>AddFilePaths</code> or coming from an environment variable, <code>SystemPaths</code> treats URIs as if they were relative paths. For example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">#</span> <span class=\"nt\">IGN_FILE_PATH</span><span class=\"o\">=/</span><span class=\"nt\">abc</span>\n<span class=\"nt\">systemPaths</span><span class=\"p\">.</span><span class=\"nc\">AddFilePaths</span><span class=\"o\">(</span><span class=\"s2\">&quot;/def&quot;</span><span class=\"o\">);</span>\n<span class=\"nt\">systemPaths</span><span class=\"p\">.</span><span class=\"nc\">FindFile</span><span class=\"o\">(</span><span class=\"s2\">&quot;model://filename&quot;</span><span class=\"o\">);</span>\n<span class=\"o\">//</span> <span class=\"nt\">Searches</span> <span class=\"nt\">for</span><span class=\"o\">:</span>\n<span class=\"o\">//</span> <span class=\"o\">*</span> <span class=\"o\">/</span><span class=\"nt\">abc</span><span class=\"o\">/</span><span class=\"nt\">model</span><span class=\"o\">://</span><span class=\"nt\">filename</span>\n<span class=\"o\">//</span> <span class=\"o\">*</span> <span class=\"o\">/</span><span class=\"nt\">def</span><span class=\"o\">/</span><span class=\"nt\">model</span><span class=\"o\">://</span><span class=\"nt\">filename</span>\n</pre></div>\n\n\n<p>With this PR, the <code>model://</code> would be stripped and we'd search for <code>/abc/filename</code> and <code>/def/filename</code>.</p>\n<p>As I mentioned above, maybe just ignoring the scheme is not great. But that's the least invasive way that I found to get URIs to play well with the rest of the API.</p>\n<hr />\n<h2 id=\"markdown-header-alternatives-considered\">Alternatives considered</h2>\n<ul>\n<li>Do something similar to SDF's <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/src/28e36804b35a4c3a844d49030e80c8721299c426/src/SDF.cc#lines-45\" rel=\"nofollow\">g_uriPathMap</a>. But I think a clean implementation for that would require the entire <code>SystemPaths</code> API to be scheme-aware. That is, every path added with <code>AddFilePaths</code> or an environment variable could have an optional scheme associated to them.</li>\n<li>Implement a custom URI callback that strips the scheme and then calls <code>SystemPaths::FindFile</code> again with a relative path. I think it could work, but feels hacky when the path could just be handled from within <code>ign-common</code>.</li>\n<li>Don't use URIs, only use relative paths. I think that's valid, but it would essentially mean that models that work with Gazebo-classic won't work with Ignition. I think that would significantly increase the migration efforts, but what worries me the most is that we wouldn't be able to reuse models across classic and Ignition.</li>\n</ul>", "type": "rendered"}, "created_on": "2020-01-08T19:43:41.616325+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-01-08T19:43:41.626801+00:00", "type": "pullrequest_comment", "id": 130917942}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210/comments/130752294.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210/_/diff#comment-130752294"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}, "content": {"raw": "I believe handling unique schemes is suppose to be handled by a user via the custom callbacks.\n\nDo you have a concrete use-case in mind for this?", "markup": "markdown", "html": "<p>I believe handling unique schemes is suppose to be handled by a user via the custom callbacks.</p>\n<p>Do you have a concrete use-case in mind for this?</p>", "type": "rendered"}, "created_on": "2020-01-07T19:59:11.922233+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2020-01-07T19:59:11.934271+00:00", "type": "pullrequest_comment", "id": 130752294}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[Proposal] Custom paths for file URIs", "destination": {"commit": {"hash": "1c81f3e6de2b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1c81f3e6de2b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1c81f3e6de2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "d39dc9b48c00", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/d39dc9b48c00.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/d39dc9b48c00"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-18T23:22:40.022259+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[WIP] Custom paths for file URIs", "destination": {"commit": {"hash": "1c81f3e6de2b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1c81f3e6de2b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1c81f3e6de2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "d39dc9b48c00", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/d39dc9b48c00.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/d39dc9b48c00"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-02T21:29:46.956008+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[WIP] Custom paths for file URIs", "destination": {"commit": {"hash": "1c81f3e6de2b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1c81f3e6de2b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1c81f3e6de2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "d39dc9b48c00", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/d39dc9b48c00.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/d39dc9b48c00"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-02T21:25:32.315569+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}, {"update": {"description": "The `SystemPaths` class supports a few ways of specifying different paths, such as adding them through `SystemPaths::AddFilePaths` or by specifying an environment variable with `SetFilePathEnv`. Those paths are then considered when using `SystemPaths::FindFile` to locate a file. But they were not being used with the `SystemPaths::FindFileURI` call.\r\n\r\nThis PR uses the custom paths when finding a URI, by treating them as relative paths and ignoring the URI's scheme. For example, if the user sets `IGN_FILE_PATH=/tmp/files`, then tries to get a URI `custom://mesh.dae`, the user is able to load file `/tmp/files/mesh.dae`.\r\n\r\nI'm not entirely convinced yet that ignoring the scheme like that is a good idea, but I can't think of how it could cause an issue. The worst thing that can happen is that the user finds an existing file that they didn't mean to find?", "title": "[WIP] Custom paths for file URIs", "destination": {"commit": {"hash": "1c81f3e6de2b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/1c81f3e6de2b.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/1c81f3e6de2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "ign-common3"}}, "reason": "", "source": {"commit": {"hash": "d39dc9b48c00", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/commit/d39dc9b48c00.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/commits/d39dc9b48c00"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common.json"}, "html": {"href": "#!/ignitionrobotics/ign-common"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}ts=1533303"}}, "type": "repository", "name": "ign-common", "full_name": "ignitionrobotics/ign-common", "uuid": "{1dfbdd30-34c5-4b09-82ef-9bfe2917877b}"}, "branch": {"name": "custom_paths_uri"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-02T21:25:32.284203+00:00"}, "pull_request": {"type": "pullrequest", "id": 210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/210.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/210"}}, "title": "[Proposal] Custom paths for file URIs"}}]}