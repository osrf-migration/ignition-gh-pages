{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/232/comments/143412188.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/232/_/diff#comment-143412188"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 232, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/232.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/232"}}, "title": "Add interpolateX member to the Animation class"}, "content": {"raw": "I think the API/ABI checker doesn't like adding optional parameters to an existing API because it changes the function signature\n\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_common-abichecker-any_to_any-ubuntu_auto-amd64&build=200)](https://build.osrfoundation.org/job/ignition_common-abichecker-any_to_any-ubuntu_auto-amd64/200/) https://build.osrfoundation.org/job/ignition_common-abichecker-any_to_any-ubuntu_auto-amd64/200/API_5fABI_20report/\n\nit might be safer to add an overload with the new parameter, and change the original API to call the new overload with the default value. We could merge the overloads with a default parameter on the default branch", "markup": "markdown", "html": "<p>I think the API/ABI checker doesn't like adding optional parameters to an existing API because it changes the function signature</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_common-abichecker-any_to_any-ubuntu_auto-amd64/200/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_common-abichecker-any_to_any-ubuntu_auto-amd64&amp;build=200\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_common-abichecker-any_to_any-ubuntu_auto-amd64/200/API_5fABI_20report/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_common-abichecker-any_to_any-ubuntu_auto-amd64/200/API_5fABI_20report/</a></li>\n</ul>\n<p>it might be safer to add an overload with the new parameter, and change the original API to call the new overload with the default value. We could merge the overloads with a default parameter on the default branch</p>", "type": "rendered"}, "created_on": "2020-04-02T18:56:30.069276+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-04-02T18:56:30.072398+00:00", "type": "pullrequest_comment", "id": 143412188}