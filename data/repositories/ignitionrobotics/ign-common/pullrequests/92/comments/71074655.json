{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/92/comments/71074655.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/92/_/diff#comment-71074655"}}, "parent": {"id": 71029172, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/92/comments/71029172.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/92/_/diff#comment-71029172"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 92, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/92.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/92"}}, "title": "Some style and docs"}, "content": {"raw": "It could be good for testing purposes. It would also be valuable to get a user\u2019s perspective before committing to the changes \\(since so far the only user has been myself\\).\n\nThe branch I would recommend testing off of is `NewRegistrationScheme` which is the branch of [Part 3](#!/ignitionrobotics/ign-plugin/pull-requests/2). In my opinion, that offers the best user experience. For example, you can:\n\n1. Register a plugin from anywhere, including [within a namespace](#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPlugins.cc#lines-80)\n2. Register multiple interfaces for a plugin [using a single macro](#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPluginsOtherTranslationUnit.cc#lines-27)\n3. Register plugins from a second \\(or third or Nth\\) translation unit by [including a different header](#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPluginsOtherTranslationUnit.cc#lines-18) \\(`ignition/plugin/RegisterMore.hh` instead of `ignition/plugin/Register.hh`\\)\n\nA few more technical improvements:\n\n1. You never need to use a string to [query an interface](#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/integration/plugin.cc#lines-194).\n2. There\u2019s no more \u201cspecialization\u201d macro. Now all interfaces can be specialized for.\n3. Plugins and interfaces can be class template instances instead of normal plain classes.\n\n", "markup": "markdown", "html": "<p>It could be good for testing purposes. It would also be valuable to get a user\u2019s perspective before committing to the changes (since so far the only user has been myself).</p>\n<p>The branch I would recommend testing off of is <code>NewRegistrationScheme</code> which is the branch of <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-plugin/pull-requests/2\" rel=\"nofollow\">Part 3</a>. In my opinion, that offers the best user experience. For example, you can:</p>\n<ol>\n<li>Register a plugin from anywhere, including <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPlugins.cc#lines-80\" rel=\"nofollow\">within a namespace</a></li>\n<li>Register multiple interfaces for a plugin <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPluginsOtherTranslationUnit.cc#lines-27\" rel=\"nofollow\">using a single macro</a></li>\n<li>Register plugins from a second (or third or Nth) translation unit by <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/plugins/DummyPluginsOtherTranslationUnit.cc#lines-18\" rel=\"nofollow\">including a different header</a> (<code>ignition/plugin/RegisterMore.hh</code> instead of <code>ignition/plugin/Register.hh</code>)</li>\n</ol>\n<p>A few more technical improvements:</p>\n<ol>\n<li>You never need to use a string to <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-plugin/src/0040d054faaac98fd1bf74b87bf9a673f84a4df8/test/integration/plugin.cc#lines-194\" rel=\"nofollow\">query an interface</a>.</li>\n<li>There\u2019s no more \u201cspecialization\u201d macro. Now all interfaces can be specialized for.</li>\n<li>Plugins and interfaces can be class template instances instead of normal plain classes.</li>\n</ol>", "type": "rendered"}, "created_on": "2018-07-26T02:32:15.963836+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-07-26T02:32:15.971770+00:00", "type": "pullrequest_comment", "id": 71074655}