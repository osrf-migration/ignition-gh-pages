{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/176/comments/97719682.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/176/_/diff#comment-97719682"}}, "parent": {"id": 97662081, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/176/comments/97662081.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/176/_/diff#comment-97662081"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 176, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-common/pullrequests/176.json"}, "html": {"href": "#!/ignitionrobotics/ign-common/pull-requests/176"}}, "title": "Fix issue #44"}, "content": {"raw": "That is coherent with the documentation, see [#!/ignitionrobotics/ign-common/pull-requests/176/fix-issue-44/diff#Linclude/ignition/common/Time.hhT105](#!/ignitionrobotics/ign-common/pull-requests/176/fix-issue-44/diff#Linclude/ignition/common/Time.hhT105) , so a possibility is to make the test coherent with the docs. Checking quickly the used Windows API, it does not seems that it there is an easy way of taking into account if the thread was resumed by an interrupt different from the one used for the timer \\(I do not even know if this is possible\\). Perhaps the best modification of the behavior on Windows from the user point of view is to return `common::Time::Zero` if there was any kind of error \\(as the sleep was not executed\\) and return `_time` all the other times, that should fix the test without modifying it. Perhaps@{5bee878f5416561374c46bd9} may have  some valuable input on this.", "markup": "markdown", "html": "<p>That is coherent with the documentation, see <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-common/pull-requests/176/fix-issue-44/diff#Linclude/ignition/common/Time.hhT105\" rel=\"nofollow\">#!/ignitionrobotics/ign-common/pull-requests/176/fix-issue-44/diff#Linclude/ignition/common/Time.hhT105</a> , so a possibility is to make the test coherent with the docs. Checking quickly the used Windows API, it does not seems that it there is an easy way of taking into account if the thread was resumed by an interrupt different from the one used for the timer (I do not even know if this is possible). Perhaps the best modification of the behavior on Windows from the user point of view is to return <code>common::Time::Zero</code> if there was any kind of error (as the sleep was not executed) and return <code>_time</code> all the other times, that should fix the test without modifying it. Perhaps<span class=\"ap-mention\" data-atlassian-id=\"5bee878f5416561374c46bd9\">@Sean Yen</span> may have  some valuable input on this.</p>", "type": "rendered"}, "created_on": "2019-04-05T07:49:45.965432+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2019-04-05T07:50:03.915915+00:00", "type": "pullrequest_comment", "id": 97719682}