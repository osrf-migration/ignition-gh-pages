{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71484f03-645d-4ba1-be9e-2f64dce50289}ts=default"}}, "type": "repository", "name": "ign-sensors", "full_name": "ignitionrobotics/ign-sensors", "uuid": "{71484f03-645d-4ba1-be9e-2f64dce50289}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-sensors/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-sensors/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/issues/2/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-sensors/issues/2/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/issues/2/proposal-use-raii-constructor-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/issues/2/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Proposal: Use RAII/Constructor to initialize sensors instead of Init() pattern", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Functions like `Init()` and `Load()` which have to be called after construction can be confusing for users (and developers), and easily lead to bugs and maintenance issues. As an example, it can be very unclear whether `Init()` should be called before or after `Load()`, or it might not be obvious to a user that these functions even exist, and so they might try to use the constructed object in an uninitialized (or partially initialized) state, leading to crashes or exceptions that are difficult to debug.\r\n\r\nIf it's at all possible, I would strongly encourage us to design sensors so that the arguments that get passed to `Init()` and `Load()` would instead get passed to the constructor of the `Sensor`. Classes that derive from `Sensor` therefore must make constructors which accept those same arguments (plus they have the option of additionally accepting their own custom arguments).\r\n\r\nWe could keep the `Load(sdf)` function in case we want a way to re-initialize a sensor or change its parameters while it's in operation, but calling it would be optional. The `Init()` function would be removed entirely.\r\n\r\nI believe we're going to be aggressively enforcing the RAII pattern in the `ign-physics` design, so it would be especially great if `ign-sensors` were able to match that.", "markup": "markdown", "html": "<p>Functions like <code>Init()</code> and <code>Load()</code> which have to be called after construction can be confusing for users (and developers), and easily lead to bugs and maintenance issues. As an example, it can be very unclear whether <code>Init()</code> should be called before or after <code>Load()</code>, or it might not be obvious to a user that these functions even exist, and so they might try to use the constructed object in an uninitialized (or partially initialized) state, leading to crashes or exceptions that are difficult to debug.</p>\n<p>If it's at all possible, I would strongly encourage us to design sensors so that the arguments that get passed to <code>Init()</code> and <code>Load()</code> would instead get passed to the constructor of the <code>Sensor</code>. Classes that derive from <code>Sensor</code> therefore must make constructors which accept those same arguments (plus they have the option of additionally accepting their own custom arguments).</p>\n<p>We could keep the <code>Load(sdf)</code> function in case we want a way to re-initialize a sensor or change its parameters while it's in operation, but calling it would be optional. The <code>Init()</code> function would be removed entirely.</p>\n<p>I believe we're going to be aggressively enforcing the RAII pattern in the <code>ign-physics</code> design, so it would be especially great if <code>ign-sensors</code> were able to match that.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-09-28T22:08:51.157912+00:00", "milestone": null, "updated_on": "2017-09-28T22:13:16.992899+00:00", "type": "issue", "id": 2}