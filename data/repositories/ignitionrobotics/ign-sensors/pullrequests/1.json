{"rendered": {"description": {"raw": "The manager interface is based on on [this wiki page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/11599873/Ignition+Sensors) and the Gazebo sensors manager.\r\n\r\nThe `Manager` loads `Sensor`s as plugins. Sensors are initialized from a `<sensor>` tag. Anyone can write a custom sensor plugin, but there will also be built-in plugins. The only built-in plugin in this PR is a camera plugin. Lastly there is a `save_image` example which uses a camera sensor and to save a png.\r\n\r\n\r\nTODO for future PRs:\r\n\r\n* Port the Distortion class\r\n* Update SDF to support more camera parameters via SDF (antialiasing, verticalFOV)\r\n* Support removing a camera from the ignition rendering scene\r\n* Where do frames come in?\r\n* What to do with `<always_on>` tag?\r\n* How should `<visualize>` be handled?\r\n* Unit tests for `CameraConfig`\r\n* Find a sensor by name\r\n* `CameraConfig` should have `FromSDF()` and `CameraSensor` should use it.\r\n* `CameraConfig` should include pixel format when writing `ToSDF()`\r\n* Camera should do something with `<noise>` and `<lens>`", "markup": "markdown", "html": "<p>The manager interface is based on on <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/11599873/Ignition+Sensors\" rel=\"nofollow\">this wiki page</a> and the Gazebo sensors manager.</p>\n<p>The <code>Manager</code> loads <code>Sensor</code>s as plugins. Sensors are initialized from a <code>&lt;sensor&gt;</code> tag. Anyone can write a custom sensor plugin, but there will also be built-in plugins. The only built-in plugin in this PR is a camera plugin. Lastly there is a <code>save_image</code> example which uses a camera sensor and to save a png.</p>\n<p>TODO for future PRs:</p>\n<ul>\n<li>Port the Distortion class</li>\n<li>Update SDF to support more camera parameters via SDF (antialiasing, verticalFOV)</li>\n<li>Support removing a camera from the ignition rendering scene</li>\n<li>Where do frames come in?</li>\n<li>What to do with <code>&lt;always_on&gt;</code> tag?</li>\n<li>How should <code>&lt;visualize&gt;</code> be handled?</li>\n<li>Unit tests for <code>CameraConfig</code></li>\n<li>Find a sensor by name</li>\n<li><code>CameraConfig</code> should have <code>FromSDF()</code> and <code>CameraSensor</code> should use it.</li>\n<li><code>CameraConfig</code> should include pixel format when writing <code>ToSDF()</code></li>\n<li>Camera should do something with <code>&lt;noise&gt;</code> and <code>&lt;lens&gt;</code></li>\n</ul>", "type": "rendered"}, "title": {"raw": "Manager with Camera sensor and example", "markup": "markdown", "html": "<p>Manager with Camera sensor and example</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The manager interface is based on on [this wiki page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/11599873/Ignition+Sensors) and the Gazebo sensors manager.\r\n\r\nThe `Manager` loads `Sensor`s as plugins. Sensors are initialized from a `<sensor>` tag. Anyone can write a custom sensor plugin, but there will also be built-in plugins. The only built-in plugin in this PR is a camera plugin. Lastly there is a `save_image` example which uses a camera sensor and to save a png.\r\n\r\n\r\nTODO for future PRs:\r\n\r\n* Port the Distortion class\r\n* Update SDF to support more camera parameters via SDF (antialiasing, verticalFOV)\r\n* Support removing a camera from the ignition rendering scene\r\n* Where do frames come in?\r\n* What to do with `<always_on>` tag?\r\n* How should `<visualize>` be handled?\r\n* Unit tests for `CameraConfig`\r\n* Find a sensor by name\r\n* `CameraConfig` should have `FromSDF()` and `CameraSensor` should use it.\r\n* `CameraConfig` should include pixel format when writing `ToSDF()`\r\n* Camera should do something with `<noise>` and `<lens>`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/diffstat/ignitionrobotics/ign-sensors:ccc59f360709%0D71637c28e2fe?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/1.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/pullrequests/1/merge"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/pull-requests/1"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/diff/ignitionrobotics/ign-sensors:ccc59f360709%0D71637c28e2fe?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-sensors/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/1/statuses_page=1.json"}}, "title": "Manager with Camera sensor and example", "close_source_branch": true, "reviewers": [], "id": 1, "destination": {"commit": {"hash": "71637c28e2fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/commit/71637c28e2fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/commits/71637c28e2fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71484f03-645d-4ba1-be9e-2f64dce50289}ts=default"}}, "type": "repository", "name": "ign-sensors", "full_name": "ignitionrobotics/ign-sensors", "uuid": "{71484f03-645d-4ba1-be9e-2f64dce50289}"}, "branch": {"name": "default"}}, "created_on": "2017-08-14T15:45:36.129736+00:00", "summary": {"raw": "The manager interface is based on on [this wiki page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/11599873/Ignition+Sensors) and the Gazebo sensors manager.\r\n\r\nThe `Manager` loads `Sensor`s as plugins. Sensors are initialized from a `<sensor>` tag. Anyone can write a custom sensor plugin, but there will also be built-in plugins. The only built-in plugin in this PR is a camera plugin. Lastly there is a `save_image` example which uses a camera sensor and to save a png.\r\n\r\n\r\nTODO for future PRs:\r\n\r\n* Port the Distortion class\r\n* Update SDF to support more camera parameters via SDF (antialiasing, verticalFOV)\r\n* Support removing a camera from the ignition rendering scene\r\n* Where do frames come in?\r\n* What to do with `<always_on>` tag?\r\n* How should `<visualize>` be handled?\r\n* Unit tests for `CameraConfig`\r\n* Find a sensor by name\r\n* `CameraConfig` should have `FromSDF()` and `CameraSensor` should use it.\r\n* `CameraConfig` should include pixel format when writing `ToSDF()`\r\n* Camera should do something with `<noise>` and `<lens>`", "markup": "markdown", "html": "<p>The manager interface is based on on <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/11599873/Ignition+Sensors\" rel=\"nofollow\">this wiki page</a> and the Gazebo sensors manager.</p>\n<p>The <code>Manager</code> loads <code>Sensor</code>s as plugins. Sensors are initialized from a <code>&lt;sensor&gt;</code> tag. Anyone can write a custom sensor plugin, but there will also be built-in plugins. The only built-in plugin in this PR is a camera plugin. Lastly there is a <code>save_image</code> example which uses a camera sensor and to save a png.</p>\n<p>TODO for future PRs:</p>\n<ul>\n<li>Port the Distortion class</li>\n<li>Update SDF to support more camera parameters via SDF (antialiasing, verticalFOV)</li>\n<li>Support removing a camera from the ignition rendering scene</li>\n<li>Where do frames come in?</li>\n<li>What to do with <code>&lt;always_on&gt;</code> tag?</li>\n<li>How should <code>&lt;visualize&gt;</code> be handled?</li>\n<li>Unit tests for <code>CameraConfig</code></li>\n<li>Find a sensor by name</li>\n<li><code>CameraConfig</code> should have <code>FromSDF()</code> and <code>CameraSensor</code> should use it.</li>\n<li><code>CameraConfig</code> should include pixel format when writing <code>ToSDF()</code></li>\n<li>Camera should do something with <code>&lt;noise&gt;</code> and <code>&lt;lens&gt;</code></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "30de98643347", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/commit/30de98643347.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/commits/30de98643347"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors"}, "avatar": {"href": "data/bytebucket.org/ravatar/{71484f03-645d-4ba1-be9e-2f64dce50289}ts=default"}}, "type": "repository", "name": "ign-sensors", "full_name": "ignitionrobotics/ign-sensors", "uuid": "{71484f03-645d-4ba1-be9e-2f64dce50289}"}, "branch": {"name": "ign_sensors_boilerplate"}}, "comment_count": 80, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-09-20T16:10:39.289313+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-09-26T15:11:46.953923+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2017-09-06T18:54:42.888651+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2017-09-28T19:35:25.935994+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "ccc59f360709", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/commit/ccc59f360709.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/commits/ccc59f360709"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}