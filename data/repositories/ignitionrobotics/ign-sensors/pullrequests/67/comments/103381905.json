{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/67/comments/103381905.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/pull-requests/67/_/diff#comment-103381905"}}, "parent": {"id": 103380472, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/67/comments/103380472.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/pull-requests/67/_/diff#comment-103380472"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 67, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-sensors/pullrequests/67.json"}, "html": {"href": "#!/ignitionrobotics/ign-sensors/pull-requests/67"}}, "title": "Camera info"}, "content": {"raw": "The reason why the camera appears to be rotated 90 degrees is that Gazebo considers the camera to be looking at +X while ROS considers it to look at +Z. I believe it is the responsibility of whoever is receiving the data on the ROS side to publish the correct transforms to take that into account. It would be convenient if we let users specify a custom camera frame to be published with the message, so it's not hardcoded to the sensor frame.\n\n---\n\n## How to test\n\n1. Use the pull requests mentioned above\n\n1. Load [this world](https://bitbucket.org/snippets/chapulina/XeGArR) with the `-r` option:\n\n        ign gazebo -v 4 -r camera_info.xml\n\n1. Run the bridge like this:\n\n        rosrun ros1_ign_bridge parameter_bridge /camera/image_raw@sensor_msgs/Image@ignition.msgs.Image /camera/camera_info@sensor_msgs/CameraInfo@ignition.msgs.CameraInfo /depth_camera/depth_image@sensor_msgs/Image@ignition.msgs.Image /depth_camera/camera_info@sensor_msgs/CameraInfo@ignition.msgs.CameraInfo\n\n1. Open RViz and insert 2 `Camera` displays, one for `/camera/image_raw`, one for `/depth_camera/depth_image`\n\n1. On RViz, change the fixed frame to `camera_model/camera_link/camera_sensor`\n\n1. Publish a marker in the camera frame which should roughly match the box pose in the world\n\n        rostopic pub /visualization_marker visualization_msgs/Marker '{header: {frame_id: \"camera_model/camera_link/camera_sensor\"}, id: 1, type: 1, action: 0, pose: {position: {z: 2}, orientation: {y: 0.38, w: 0.92}}, scale: {x: 1., y: 1., z: 1.}, color: {r: 1., g: 0., b: 1., a: 1.}, lifetime: 50000000000}'\n\n1. On RViz, insert a `Marker` display for `/visualization_marker`\n\nAs shown below, the marker is more or less correctly projected onto both cameras.\n\nI haven't managed to get the depth camera image itself show on RViz though, I think I need to choose the correct encoding options. But the depth camera info is working :smile:\n\n![ign_camera_info.png](data/bitbucket.org/repo/da5rgr4/images/3547381478-ign_camera_info.png)\n\n![camera_info2.png](data/bitbucket.org/repo/da5rgr4/images/1362432954-camera_info2.png)", "markup": "markdown", "html": "<p>The reason why the camera appears to be rotated 90 degrees is that Gazebo considers the camera to be looking at +X while ROS considers it to look at +Z. I believe it is the responsibility of whoever is receiving the data on the ROS side to publish the correct transforms to take that into account. It would be convenient if we let users specify a custom camera frame to be published with the message, so it's not hardcoded to the sensor frame.</p>\n<hr />\n<h2 id=\"markdown-header-how-to-test\">How to test</h2>\n<ol>\n<li>\n<p>Use the pull requests mentioned above</p>\n</li>\n<li>\n<p>Load <a data-is-external-link=\"true\" href=\"https://bitbucket.org/snippets/chapulina/XeGArR\" rel=\"nofollow\">this world</a> with the <code>-r</code> option:</p>\n<div class=\"codehilite\"><pre><span></span>ign gazebo -v 4 -r camera_info.xml\n</pre></div>\n\n\n</li>\n<li>\n<p>Run the bridge like this:</p>\n<div class=\"codehilite\"><pre><span></span>rosrun ros1_ign_bridge parameter_bridge /camera/image_raw@sensor_msgs/Image@ignition.msgs.Image /camera/camera_info@sensor_msgs/CameraInfo@ignition.msgs.CameraInfo /depth_camera/depth_image@sensor_msgs/Image@ignition.msgs.Image /depth_camera/camera_info@sensor_msgs/CameraInfo@ignition.msgs.CameraInfo\n</pre></div>\n\n\n</li>\n<li>\n<p>Open RViz and insert 2 <code>Camera</code> displays, one for <code>/camera/image_raw</code>, one for <code>/depth_camera/depth_image</code></p>\n</li>\n<li>\n<p>On RViz, change the fixed frame to <code>camera_model/camera_link/camera_sensor</code></p>\n</li>\n<li>\n<p>Publish a marker in the camera frame which should roughly match the box pose in the world</p>\n<div class=\"codehilite\"><pre><span></span>rostopic pub /visualization_marker visualization_msgs/Marker &#39;{header: {frame_id: &quot;camera_model/camera_link/camera_sensor&quot;}, id: 1, type: 1, action: 0, pose: {position: {z: 2}, orientation: {y: 0.38, w: 0.92}}, scale: {x: 1., y: 1., z: 1.}, color: {r: 1., g: 0., b: 1., a: 1.}, lifetime: 50000000000}&#39;\n</pre></div>\n\n\n</li>\n<li>\n<p>On RViz, insert a <code>Marker</code> display for <code>/visualization_marker</code></p>\n</li>\n</ol>\n<p>As shown below, the marker is more or less correctly projected onto both cameras.</p>\n<p>I haven't managed to get the depth camera image itself show on RViz though, I think I need to choose the correct encoding options. But the depth camera info is working <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /></p>\n<p><img alt=\"ign_camera_info.png\" src=\"data/bitbucket.org/repo/da5rgr4/images/3547381478-ign_camera_info.png\" /></p>\n<p><img alt=\"camera_info2.png\" src=\"data/bitbucket.org/repo/da5rgr4/images/1362432954-camera_info2.png\" /></p>", "type": "rendered"}, "created_on": "2019-05-25T02:46:26.963604+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-05-25T02:46:26.975177+00:00", "type": "pullrequest_comment", "id": 103381905}