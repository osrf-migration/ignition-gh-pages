{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/20/comments/52070727.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/20#comment-52070727"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "title": "Speed up compilation"}, "content": {"raw": "I just thought I\u2019d post an update on this:\n\nI've worked out and tested a solution that's allowing `ign-physics` to fully compile on my system \\(including all tests\\) with the following times \\(in minutes\\):\n\n|  | -j16 | -j1 |\n| --- | --- | --- |\n| **clang** | 1:12 | 5:11 |\n| **gcc** | 2:05 | 6:58 |\n\nAll that\u2019s left to do is some cleanup, and I should also test these changes on Windows for good measure. The solution basically involves tricking the compiler into using shorter symbol names for the classes that get instantiated from templates, and since the MSVC ABI is different from Itanium \\(used by gcc and clang\\), there\u2019s no guarantee that the trick will work the same way.\n\nOne important thing to note about the upcoming changes is that it will allow the compile times of `ign-physics` to scale in a more reasonable way as we add more features. Now compile times should scale more linearly with the addition of new features instead of exponentially.", "markup": "markdown", "html": "<p>I just thought I\u2019d post an update on this:</p>\n<p>I've worked out and tested a solution that's allowing <code>ign-physics</code> to fully compile on my system (including all tests) with the following times (in minutes):</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>-j16</th>\n<th>-j1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>clang</strong></td>\n<td>1:12</td>\n<td>5:11</td>\n</tr>\n<tr>\n<td><strong>gcc</strong></td>\n<td>2:05</td>\n<td>6:58</td>\n</tr>\n</tbody>\n</table>\n<p>All that\u2019s left to do is some cleanup, and I should also test these changes on Windows for good measure. The solution basically involves tricking the compiler into using shorter symbol names for the classes that get instantiated from templates, and since the MSVC ABI is different from Itanium (used by gcc and clang), there\u2019s no guarantee that the trick will work the same way.</p>\n<p>One important thing to note about the upcoming changes is that it will allow the compile times of <code>ign-physics</code> to scale in a more reasonable way as we add more features. Now compile times should scale more linearly with the addition of new features instead of exponentially.</p>", "type": "rendered"}, "created_on": "2019-05-10T12:24:02.737347+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 52070727}