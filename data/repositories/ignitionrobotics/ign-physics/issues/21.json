{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/21/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/21/dartsim-freegroupfeatures-should-account"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/21/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Dartsim FreeGroupFeatures should account for model pose", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [X ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nThe dartsim FreeGroupFeatures implementation uses the canonical link of a model to set poses. However, it doesn't take into account that the model can have a pose offset from the canonical link. See related [ign-gazebo discussion](#!/ignitionrobotics/ign-gazebo/pull-requests/334/blueprint-pose-commands/diff#comment-102051667)\r\n\r\n# Steps to Reproduce\r\n\r\n1. The problem manifests when the canonical link has a non-identity pose. For example:\r\n```\r\n<model name=\"test_model\">\r\n  <pose>0 0 0 0 0 0</pose>\r\n  <link name=\"link1\">\r\n    <pose>1 2 3 0 0 0 </pose>\r\n  </link>\r\n</model>\r\n```\r\nSet the world pose of the model via the model's FreeGroup to `0 0 0 0 0 0`.  A failing test can be found [here](#!/ignitionrobotics/ign-physics/commits/3ade0787a4579b02fa46a3d7294c58e913a7b2e7?at=freegroup_tests#Ldartsim/src/FreeGroupFeatures_TEST.ccT154)\r\n\r\n**Expected behavior:**  \r\n\r\nWe expect no change in the pose of the model when setting its pose to `0 0 0 0 0 0` because it's already there.\r\n\r\n**Actual behavior:**\r\n\r\n`link1` moves to `0 0 0 0 0 0` and as a result, `test_model` moves to `-1 -2 -3 0 0 0`.\r\n\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nAll", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>The dartsim FreeGroupFeatures implementation uses the canonical link of a model to set poses. However, it doesn't take into account that the model can have a pose offset from the canonical link. See related <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/334/blueprint-pose-commands/diff#comment-102051667\" rel=\"nofollow\">ign-gazebo discussion</a></p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>The problem manifests when the canonical link has a non-identity pose. For example:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;test_model&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>1 2 3 0 0 0 <span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>Set the world pose of the model via the model's FreeGroup to <code>0 0 0 0 0 0</code>.  A failing test can be found <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/commits/3ade0787a4579b02fa46a3d7294c58e913a7b2e7?at=freegroup_tests#Ldartsim/src/FreeGroupFeatures_TEST.ccT154\" rel=\"nofollow\">here</a></p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>We expect no change in the pose of the model when setting its pose to <code>0 0 0 0 0 0</code> because it's already there.</p>\n<p><strong>Actual behavior:</strong></p>\n<p><code>link1</code> moves to <code>0 0 0 0 0 0</code> and as a result, <code>test_model</code> moves to <code>-1 -2 -3 0 0 0</code>.</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>All</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-15T17:29:32.594907+00:00", "milestone": null, "updated_on": "2019-05-15T17:29:32.594907+00:00", "type": "issue", "id": 21}