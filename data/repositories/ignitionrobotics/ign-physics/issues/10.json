{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/10/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/10/nested-model-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/10/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Nested model support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThere's currently no API to construct nested models, which are supported on SDF.\r\n\r\n# Motivation\r\n\r\nSDF supports an arbitrary number of `<model>` tags nested inside each other. This is helpful to compose models out of several parts.\r\n\r\nI'm not sure how the physics engines will handle it internally, but it would be convenient if at least the `sdf` component would offer a `Model::ConstructModel` function. As a reference, there are currently functions like [World::ConstructModel(sdf::Model)](#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructModel.hh?fileviewer=file-view-default#ConstructModel.hh-36) and [Model::ConstructLink(sdf::Link)](#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructLink.hh?at=default&fileviewer=file-view-default#ConstructLink.hh-36).\r\n\r\n# Describe alternatives you've considered\r\n\r\nIf `ign-physics` doesn't offer nested model support, downstream libraries like `ign-gazebo` will have to find a way to work around this.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>There's currently no API to construct nested models, which are supported on SDF.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>SDF supports an arbitrary number of <code>&lt;model&gt;</code> tags nested inside each other. This is helpful to compose models out of several parts.</p>\n<p>I'm not sure how the physics engines will handle it internally, but it would be convenient if at least the <code>sdf</code> component would offer a <code>Model::ConstructModel</code> function. As a reference, there are currently functions like <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructModel.hh?fileviewer=file-view-default#ConstructModel.hh-36\" rel=\"nofollow\">World::ConstructModel(sdf::Model)</a> and <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructLink.hh?at=default&amp;fileviewer=file-view-default#ConstructLink.hh-36\" rel=\"nofollow\">Model::ConstructLink(sdf::Link)</a>.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>If <code>ign-physics</code> doesn't offer nested model support, downstream libraries like <code>ign-gazebo</code> will have to find a way to work around this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-25T22:01:09.591017+00:00", "milestone": null, "updated_on": "2019-01-25T22:01:09.591017+00:00", "type": "issue", "id": 10}