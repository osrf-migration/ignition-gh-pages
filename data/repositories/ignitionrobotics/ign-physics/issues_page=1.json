{"pagelen": 100, "values": [{"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/1/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/1/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/1/comparison-with-pal"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/1/vote"}}, "reporter": {"display_name": "Anthony Clark", "uuid": "{9adbb19d-7f74-45cc-8768-1ab1d5845c29}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9adbb19d-7f74-45cc-8768-1ab1d5845c29%7D"}, "html": {"href": "https://bitbucket.org/%7B9adbb19d-7f74-45cc-8768-1ab1d5845c29%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ef2997d11cdeb57ed797404a9cb71839d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-0.png"}}, "nickname": "anthonyjclark", "type": "user", "account_id": "557058:adf031c2-b0fb-4f52-b6c6-5b2a54db3ecc"}, "title": "Comparison with PAL?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hello,\n\nI would like to know how this effort compares to existing software. For example, how does it compare to how Gazebo currently handles physics engines? And how does it compare to [PAL](http://www.adrianboeing.com/pal/index.html)? [This document](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) only partially explains how this will be different than Gazebo's current approach.\n\nPlease let me know if there is a better forum for this sort of discussion.", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I would like to know how this effort compares to existing software. For example, how does it compare to how Gazebo currently handles physics engines? And how does it compare to <a data-is-external-link=\"true\" href=\"http://www.adrianboeing.com/pal/index.html\" rel=\"nofollow\">PAL</a>? <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics\" rel=\"nofollow\">This document</a> only partially explains how this will be different than Gazebo's current approach.</p>\n<p>Please let me know if there is a better forum for this sort of discussion.</p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2017-11-28T23:46:26.080727+00:00", "milestone": null, "updated_on": "2018-12-04T18:53:30.678495+00:00", "type": "issue", "id": 1}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/2/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/2/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/2/pipelines-disabled-for-now"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/2/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Pipelines disabled for now", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There is an issue with the dart6-data debian which is causing our pipelines to fail. I'm disabling them for now until that is resolved.", "markup": "markdown", "html": "<p>There is an issue with the dart6-data debian which is causing our pipelines to fail. I'm disabling them for now until that is resolved.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-12-14T18:35:14.532902+00:00", "milestone": null, "updated_on": "2018-07-23T05:10:09.179351+00:00", "type": "issue", "id": 2}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/3/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/3/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/3/any-plan-for-a-python-interface"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/3/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "Any plan for a Python interface?", "component": null, "votes": 2, "watches": 3, "content": {"raw": "Python-based interfaces to physics engines  (such as [PyBullet](https://docs.google.com/document/d/10sXEhzFRSnvFcl3XxNGhnD4N2SedqwdAvK3dsihxVUA/edit#heading=h.2ye70wns7io3) for Bullet and [mujoco-py](https://github.com/openai/mujoco-py) and [dm_control](https://github.com/deepmind/dm_control) for MuJoCo ) are quite fashionable in this days for reinforcement learning applications. \n\nThere are any plans for a Python interface to the newly designed ign-physics library?", "markup": "markdown", "html": "<p>Python-based interfaces to physics engines  (such as <a data-is-external-link=\"true\" href=\"https://docs.google.com/document/d/10sXEhzFRSnvFcl3XxNGhnD4N2SedqwdAvK3dsihxVUA/edit#heading=h.2ye70wns7io3\" rel=\"nofollow\">PyBullet</a> for Bullet and <a data-is-external-link=\"true\" href=\"https://github.com/openai/mujoco-py\" rel=\"nofollow\">mujoco-py</a> and <a data-is-external-link=\"true\" href=\"https://github.com/deepmind/dm_control\" rel=\"nofollow\">dm_control</a> for MuJoCo ) are quite fashionable in this days for reinforcement learning applications. </p>\n<p>There are any plans for a Python interface to the newly designed ign-physics library?</p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2018-01-11T22:21:36.531847+00:00", "milestone": null, "updated_on": "2018-12-04T18:53:54.590411+00:00", "type": "issue", "id": 3}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/4/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/4/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/4/compare-performance-between-cloneable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/4/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Compare performance between Cloneable+MakeCloneable and the upcoming std::any", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The C++17 class `std::any` is able to perform the same role as the `Cloneable` + `MakeCloneable` classes in `ign-physics`. However, `std::any` has some type safety overhead which is not needed in `ign-physics` because type safety is already ensured by our implementation design.\n\nWhen `std::any` is widely available, we should profile the performance difference between `std::any` and our own `Cloneable` + `MakeCloneable` to decide whether we should switch to `std::any` or stick to our own solution.", "markup": "markdown", "html": "<p>The C++17 class <code>std::any</code> is able to perform the same role as the <code>Cloneable</code> + <code>MakeCloneable</code> classes in <code>ign-physics</code>. However, <code>std::any</code> has some type safety overhead which is not needed in <code>ign-physics</code> because type safety is already ensured by our implementation design.</p>\n<p>When <code>std::any</code> is widely available, we should profile the performance difference between <code>std::any</code> and our own <code>Cloneable</code> + <code>MakeCloneable</code> to decide whether we should switch to <code>std::any</code> or stick to our own solution.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "on hold", "version": null, "edited_on": null, "created_on": "2018-03-20T18:21:31.515983+00:00", "milestone": null, "updated_on": "2018-12-04T18:53:12.147089+00:00", "type": "issue", "id": 4}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/5/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/5/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/5/support-primitive-datatypes-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/5/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Support primitive datatypes in CompositeData", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Supporting primitive datatypes in CompositeData (ie. `data.Get<double>()`) was discussed in the following comment thread of pull request #5 but is somewhat controversial:\n\n* #!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62868652\n\nThe controversial part is that it's not a recommended practice to use primitive datatypes in that way. You get more semantic information by wrapping primitive datatypes in named classes.\n\nStill, people may want to be able to do it. If there is enough demand for this feature, we will consider implementing it.", "markup": "markdown", "html": "<p>Supporting primitive datatypes in CompositeData (ie. <code>data.Get&lt;double&gt;()</code>) was discussed in the following comment thread of <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #5</a> but is somewhat controversial:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62868652\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62868652</a></li>\n</ul>\n<p>The controversial part is that it's not a recommended practice to use primitive datatypes in that way. You get more semantic information by wrapping primitive datatypes in named classes.</p>\n<p>Still, people may want to be able to do it. If there is enough demand for this feature, we will consider implementing it.</p>", "type": "rendered"}, "assignee": null, "state": "on hold", "version": null, "edited_on": null, "created_on": "2018-04-27T21:37:24.593673+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:59.951091+00:00", "type": "issue", "id": 5}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/6/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/6/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/6/consider-making-the-compositedata-query"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/6/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Consider making the CompositeData query-tracking optional and configurable at compile-time", "component": null, "votes": 0, "watches": 1, "content": {"raw": "[See here for more context.](#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62887315)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62887315\" rel=\"nofollow\">See here for more context.</a></p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "on hold", "version": null, "edited_on": null, "created_on": "2018-04-30T17:00:23.477405+00:00", "milestone": null, "updated_on": "2018-12-04T18:52:50.431612+00:00", "type": "issue", "id": 6}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/7/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/7/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/7/ball-rolling-down-an-incline-achieves-warp"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/7/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Ball rolling down an incline achieves warp speed", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As seen in the gif, the ball starts rolling on an incline (a large box inclined ~30 degrees) and after a few seconds, it shoots off in the process crashing ign-gazebo.\r\n\r\n![ign-physics-warp-speed.gif](data/bitbucket.org/repo/5q9rMzd/images/897293863-ign-physics-warp-speed.gif)", "markup": "markdown", "html": "<p>As seen in the gif, the ball starts rolling on an incline (a large box inclined ~30 degrees) and after a few seconds, it shoots off in the process crashing ign-gazebo.</p>\n<p><img alt=\"ign-physics-warp-speed.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/897293863-ign-physics-warp-speed.gif\" /></p>", "type": "rendered"}, "assignee": null, "state": "open", "version": null, "edited_on": null, "created_on": "2018-10-19T23:06:16.023759+00:00", "milestone": null, "updated_on": "2020-02-15T19:49:10.002855+00:00", "type": "issue", "id": 7}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/8/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/8/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/8/collision-between-mesh-and-plane"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/8/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Collision between mesh and plane", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\n\n* [ X ] Put an X between the brackets on this line if you have done all of the following:\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\n    * Checked that your issue isn't already filed.\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\n\n# Description \n\nContacts don't seem to be generated between planes and meshes.\n\n# Steps to Reproduce\n\nOn [this ign-gazebo PR](#!/ignitionrobotics/ign-gazebo/pull-requests/109/wip-mesh-support/diff), uncomment the `<plane>` and comment `<box>` for `ground_plane` and see how the ducks fall through the ground.\n\n<plane> ground | <box> ground\n-- | --\n![ducks.gif](data/bitbucket.org/repo/5q9rMzd/images/1407917843-ducks.gif) | ![ducksbox.gif](data/bitbucket.org/repo/5q9rMzd/images/504946682-ducksbox.gif)\n\nI don't know how to reproduce this just with ign-physics, an example quick-start program with the minimum code needed to load a couple of models and print out contacts would be helpful, maybe this can be extracted from some of the test cases.\n\n**Expected behavior:**  \n\nI'd expect the ducks not to fall through the plane.\n\n**Actual behavior:**\n\nDucks fall to infinity.\n\n**Reproduces how often:** \n\nEvery time ducks fall.\n\n# Versions\n\nDefault branch (7bcbbb0a5a54)", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Contacts don't seem to be generated between planes and meshes.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>On <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/109/wip-mesh-support/diff\" rel=\"nofollow\">this ign-gazebo PR</a>, uncomment the <code>&lt;plane&gt;</code> and comment <code>&lt;box&gt;</code> for <code>ground_plane</code> and see how the ducks fall through the ground.</p>\n<table>\n<thead>\n<tr>\n<th>&lt;plane&gt; ground</th>\n<th>&lt;box&gt; ground</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"ducks.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/1407917843-ducks.gif\" /></td>\n<td><img alt=\"ducksbox.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/504946682-ducksbox.gif\" /></td>\n</tr>\n</tbody>\n</table>\n<p>I don't know how to reproduce this just with ign-physics, an example quick-start program with the minimum code needed to load a couple of models and print out contacts would be helpful, maybe this can be extracted from some of the test cases.</p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>I'd expect the ducks not to fall through the plane.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Ducks fall to infinity.</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>Every time ducks fall.</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>Default branch (<a href=\"#!/ignitionrobotics/ign-physics/commits/7bcbbb0a5a54\" rel=\"nofollow\" class=\"ap-connect-link\">7bcbbb0a5a54</a>)</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-12-21T20:06:29.360548+00:00", "milestone": null, "updated_on": "2019-03-04T05:28:18.628986+00:00", "type": "issue", "id": 8}, {"priority": "blocker", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/9/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/9/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/9/api-documentation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/9/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "API documentation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nA lot of the API (most of it?) is not documented, so downstream developers need to come dig through the code to find out what functions are supposed to be doing.\r\n\r\nFor example,  what does [ConstructCollision](#!/ignitionrobotics/ign-physics/src/7bcbbb0a5a5440e86960742c5e3fbb56a0d6786c/sdf/include/ignition/physics/sdf/ConstructCollision.hh?fileviewer=file-view-default#ConstructCollision.hh-36) do? Does it create **and** attach a collision to a link? How is that different from [AttachMeshShape](#!/ignitionrobotics/ign-physics/src/7bcbbb0a5a5440e86960742c5e3fbb56a0d6786c/mesh/include/ignition/physics/mesh/MeshShape.hh?fileviewer=file-view-default#MeshShape.hh-106)? If they do similar things, why are their names so different?\r\n\r\n# Motivation\r\n\r\nIt's difficult for downstream developers to use the API if it's not clear what it does.\r\n\r\n# Describe alternatives you've considered\r\n\r\nForcing everyone to dig through the code or test the API by trial and error? :grimacing:\r\n\r\n# Additional context\r\n\r\nDocumentation is love :heart_decoration:", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>A lot of the API (most of it?) is not documented, so downstream developers need to come dig through the code to find out what functions are supposed to be doing.</p>\n<p>For example,  what does <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/7bcbbb0a5a5440e86960742c5e3fbb56a0d6786c/sdf/include/ignition/physics/sdf/ConstructCollision.hh?fileviewer=file-view-default#ConstructCollision.hh-36\" rel=\"nofollow\">ConstructCollision</a> do? Does it create <strong>and</strong> attach a collision to a link? How is that different from <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/7bcbbb0a5a5440e86960742c5e3fbb56a0d6786c/mesh/include/ignition/physics/mesh/MeshShape.hh?fileviewer=file-view-default#MeshShape.hh-106\" rel=\"nofollow\">AttachMeshShape</a>? If they do similar things, why are their names so different?</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>It's difficult for downstream developers to use the API if it's not clear what it does.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Forcing everyone to dig through the code or test the API by trial and error? <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f62c.png\" alt=\"\ud83d\ude2c\" title=\":grimacing:\" data-emoji-short-name=\":grimacing:\" /></p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>\n<p>Documentation is love <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f49f.png\" alt=\"\ud83d\udc9f\" title=\":heart_decoration:\" data-emoji-short-name=\":heart_decoration:\" /></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-21T20:14:51.722280+00:00", "milestone": null, "updated_on": "2019-09-12T21:53:36.457272+00:00", "type": "issue", "id": 9}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/10/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/10/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/10/nested-model-support"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/10/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Nested model support", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThere's currently no API to construct nested models, which are supported on SDF.\r\n\r\n# Motivation\r\n\r\nSDF supports an arbitrary number of `<model>` tags nested inside each other. This is helpful to compose models out of several parts.\r\n\r\nI'm not sure how the physics engines will handle it internally, but it would be convenient if at least the `sdf` component would offer a `Model::ConstructModel` function. As a reference, there are currently functions like [World::ConstructModel(sdf::Model)](#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructModel.hh?fileviewer=file-view-default#ConstructModel.hh-36) and [Model::ConstructLink(sdf::Link)](#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructLink.hh?at=default&fileviewer=file-view-default#ConstructLink.hh-36).\r\n\r\n# Describe alternatives you've considered\r\n\r\nIf `ign-physics` doesn't offer nested model support, downstream libraries like `ign-gazebo` will have to find a way to work around this.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>There's currently no API to construct nested models, which are supported on SDF.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>SDF supports an arbitrary number of <code>&lt;model&gt;</code> tags nested inside each other. This is helpful to compose models out of several parts.</p>\n<p>I'm not sure how the physics engines will handle it internally, but it would be convenient if at least the <code>sdf</code> component would offer a <code>Model::ConstructModel</code> function. As a reference, there are currently functions like <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructModel.hh?fileviewer=file-view-default#ConstructModel.hh-36\" rel=\"nofollow\">World::ConstructModel(sdf::Model)</a> and <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/588b98c2d68eb260dec8988eb250bf1c1c1d6e7c/sdf/include/ignition/physics/sdf/ConstructLink.hh?at=default&amp;fileviewer=file-view-default#ConstructLink.hh-36\" rel=\"nofollow\">Model::ConstructLink(sdf::Link)</a>.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>If <code>ign-physics</code> doesn't offer nested model support, downstream libraries like <code>ign-gazebo</code> will have to find a way to work around this.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-25T22:01:09.591017+00:00", "milestone": null, "updated_on": "2019-01-25T22:01:09.591017+00:00", "type": "issue", "id": 10}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/11/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/11/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/11/collisions-fail-depending-on-the-number-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/11/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Collisions fail depending on the number of entities in a world", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [ ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nCollision between certain objects seems to fail depending on the number of entities in the world. Running the `benchmark2x2.sdf` in `ign-gazebo` behaves as expected.\r\n\r\n![ign_gazebo_falling_through_2x2.gif](data/bitbucket.org/repo/5q9rMzd/images/1776157648-ign_gazebo_falling_through_2x2.gif)\r\n\r\n However,  `benchmark4x4.sdf` has more collision objects in the world and running that in `ign-gazebo` shows one of the cars falling through the ground. \r\n\r\n![ign_gazebo_falling_through_4x4.gif](data/bitbucket.org/repo/5q9rMzd/images/2843398244-ign_gazebo_falling_through_4x4.gif)\r\n\r\nI used a box instead of a plane for the ground.\r\n\r\nThe same problem exists in classic Gazebo with DART engine but with bullet set as the collision detector. \r\n\r\n![ign_gazebo_falling_through_4x4_classic.gif](data/bitbucket.org/repo/5q9rMzd/images/2208204670-ign_gazebo_falling_through_4x4_classic.gif)\r\n\r\n# Steps to Reproduce\r\n\r\n1. Run `ign-gazebo -f benchmark2x2.sdf` and `ign-gazebo -f benchmark4x4.sdf`\r\n2. For classic gazebo `gazebo -e dart benchmark4x4_classic.sdf`\r\n\r\n**Expected behavior:**  \r\n\r\nObjects stay above the ground\r\n\r\n**Actual behavior:**\r\n\r\nObjects fall through\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\n* ign-gazebo: default branch\r\n* ign-physics: default branch", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[ ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Collision between certain objects seems to fail depending on the number of entities in the world. Running the <code>benchmark2x2.sdf</code> in <code>ign-gazebo</code> behaves as expected.</p>\n<p><img alt=\"ign_gazebo_falling_through_2x2.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/1776157648-ign_gazebo_falling_through_2x2.gif\" /></p>\n<p>However,  <code>benchmark4x4.sdf</code> has more collision objects in the world and running that in <code>ign-gazebo</code> shows one of the cars falling through the ground. </p>\n<p><img alt=\"ign_gazebo_falling_through_4x4.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/2843398244-ign_gazebo_falling_through_4x4.gif\" /></p>\n<p>I used a box instead of a plane for the ground.</p>\n<p>The same problem exists in classic Gazebo with DART engine but with bullet set as the collision detector. </p>\n<p><img alt=\"ign_gazebo_falling_through_4x4_classic.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/2208204670-ign_gazebo_falling_through_4x4_classic.gif\" /></p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Run <code>ign-gazebo -f benchmark2x2.sdf</code> and <code>ign-gazebo -f benchmark4x4.sdf</code></li>\n<li>For classic gazebo <code>gazebo -e dart benchmark4x4_classic.sdf</code></li>\n</ol>\n<p><strong>Expected behavior:</strong>  </p>\n<p>Objects stay above the ground</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Objects fall through</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<ul>\n<li>ign-gazebo: default branch</li>\n<li>ign-physics: default branch</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-01-26T02:50:39.159945+00:00", "milestone": null, "updated_on": "2019-02-22T17:31:02.990801+00:00", "type": "issue", "id": 11}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/12/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/12/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/12/consider-thread-safety-of-removemodel"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/12/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Consider thread safety of RemoveModel feature", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nAs noted in pull request #61, the implementation of the RemoveModel feature in the dartsim plugin is not thread-safe. It will lead to bugs that are difficult to debug if used in multiple threads.\r\n\r\n* #!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89566743\r\n* #!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89567597\r\n\r\n# Motivation\r\n\r\nMultithreaded programs may be used to call the ignition physics API, so we should consider making this feature more thread-safe\r\n\r\n# Describe alternatives you've considered\r\n\r\nDon't try to make it thread-safe, but give loud warnings in the documentation about it.\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>As noted in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #61</a>, the implementation of the RemoveModel feature in the dartsim plugin is not thread-safe. It will lead to bugs that are difficult to debug if used in multiple threads.</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89566743\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89566743</a></li>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89567597\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models/activity#comment-89567597</a></li>\n</ul>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>Multithreaded programs may be used to call the ignition physics API, so we should consider making this feature more thread-safe</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Don't try to make it thread-safe, but give loud warnings in the documentation about it.</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-28T22:56:14.195984+00:00", "milestone": null, "updated_on": "2019-01-28T22:56:14.195984+00:00", "type": "issue", "id": 12}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/13/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/13/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/13/clarify-relationship-between"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/13/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Clarify relationship between RemoveModelFromWorld and GetEntities features", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nAs mentioned in pull request #61, the `RemoveModelFromWorld` feature doesn't reference `GetEntities`, but `RemoveModelByIndex` implies a dependence on the `GetEntities` feature, since that is the only thing that provides a model index. Should the `RemoveModelFromWorld` feature be included in `GetEntities.hh`?\r\n\r\n# Motivation\r\n\r\nIt is helpful to clarify the relationship between features.\r\n\r\n# Describe alternatives you've considered\r\n\r\nDoing nothing; maybe it's fine as is.\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>As mentioned in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/61/a-1-add-feature-to-remove-models\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #61</a>, the <code>RemoveModelFromWorld</code> feature doesn't reference <code>GetEntities</code>, but <code>RemoveModelByIndex</code> implies a dependence on the <code>GetEntities</code> feature, since that is the only thing that provides a model index. Should the <code>RemoveModelFromWorld</code> feature be included in <code>GetEntities.hh</code>?</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>It is helpful to clarify the relationship between features.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Doing nothing; maybe it's fine as is.</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-01-28T23:00:18.413501+00:00", "milestone": null, "updated_on": "2019-01-30T05:47:33.319902+00:00", "type": "issue", "id": 13}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/14/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/14/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/14/joint-position-and-effort-limits"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/14/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Joint position and effort limits", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nWe should add a feature for Joint limits (position, velocity, acceleration, effort). I would make them separate features in case a physics engine doesn't implement them all.\r\n\r\n# Motivation\r\n\r\nThis is needed for the MotionTimerLockJoints plugin.\r\n\r\n# Describe alternatives you've considered\r\n\r\nnone\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>We should add a feature for Joint limits (position, velocity, acceleration, effort). I would make them separate features in case a physics engine doesn't implement them all.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>This is needed for the MotionTimerLockJoints plugin.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>none</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-02-11T22:27:53.161019+00:00", "milestone": null, "updated_on": "2019-02-11T22:27:53.161019+00:00", "type": "issue", "id": 14}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/15/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/15/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/15/friction-model-feature-friction-pyramid"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/15/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Friction model feature / friction pyramid parameters", "component": null, "votes": 0, "watches": 2, "content": {"raw": "# Summary\r\n\r\nExpose an interface for setting a physics plugin's friction model (friction pyramid / [friction cone](https://bitbucket.org/osrf/gazebo/pull-requests/1522/cone-friction-model/diff)) and add features for setting relevant  friction model parameters as a physics feature:\r\n\r\n## Friction pyramid parameters\r\n\r\n* mu1/mu2\r\n* body-fixed friction direction fdir1\r\n* slip1/slip2\r\n\r\n# Motivation\r\n\r\nSome skid-steer robots require tuning of friction parameters to drive smoothly in simulation, such as the X1 robot from SubT:\r\n\r\n* https://bitbucket.org/osrf/subt/pull-requests/70/improve-x1-turning-dynamics/diff\r\n\r\nIt would be convenient to expose some of these pyramid friction model parameters as a physics feature.\r\n\r\n# Describe alternatives you've considered\r\n\r\n\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>Expose an interface for setting a physics plugin's friction model (friction pyramid / <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/1522/cone-friction-model/diff\" rel=\"nofollow\">friction cone</a>) and add features for setting relevant  friction model parameters as a physics feature:</p>\n<h2 id=\"markdown-header-friction-pyramid-parameters\">Friction pyramid parameters</h2>\n<ul>\n<li>mu1/mu2</li>\n<li>body-fixed friction direction fdir1</li>\n<li>slip1/slip2</li>\n</ul>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>Some skid-steer robots require tuning of friction parameters to drive smoothly in simulation, such as the X1 robot from SubT:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/osrf/subt/pull-requests/70/improve-x1-turning-dynamics/diff\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/subt/pull-requests/70/improve-x1-turning-dynamics/diff</a></li>\n</ul>\n<p>It would be convenient to expose some of these pyramid friction model parameters as a physics feature.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-14T00:05:08.175286+00:00", "milestone": null, "updated_on": "2019-03-28T21:20:31.225740+00:00", "type": "issue", "id": 15}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/16/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/16/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/16/add-data-structures-for-wrench-twist"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/16/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Add data structures for wrench, twist", "component": null, "votes": 0, "watches": 1, "content": {"raw": "To support getting the force/torque wrench applied at a joint, it would be convenient to return a wrench as a unified data structure. It could also be helpful to report linear and angular velocity as twist.\r\n\r\nIn dart these are expressed by a `Vector6d`. An alternative is a struct with two named `Vector3d` values, which is more obvious to interpret but perhaps less efficient for screw algebra.\r\n\r\ncc @mxgrey @azeey", "markup": "markdown", "html": "<p>To support getting the force/torque wrench applied at a joint, it would be convenient to return a wrench as a unified data structure. It could also be helpful to report linear and angular velocity as twist.</p>\n<p>In dart these are expressed by a <code>Vector6d</code>. An alternative is a struct with two named <code>Vector3d</code> values, which is more obvious to interpret but perhaps less efficient for screw algebra.</p>\n<p>cc @mxgrey @azeey</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-04-02T19:48:51.630921+00:00", "milestone": null, "updated_on": "2019-04-02T19:48:51.630921+00:00", "type": "issue", "id": 16}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/17/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/17/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/17/feature-request-getfreegroupentities"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/17/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Feature request: GetFreeGroupEntities", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe concept of a `FreeGroup` was added in pull request #85 with API's for getting a FreeGroup from a Model or a Link. I would propose some additional API's for `FreeGroup`s similar to the `GetEntities` feature:\r\n\r\n~~~\r\nstd::size_t GetFreeGroupCount() const // get number of links with FreeJoints in this FreeGroup\r\nFreeGroupPtrType GetFreeGroup(std::size_t) // get one of the embedded singular FreeGroups\r\n// likewise with ConstFreeGroupPtrType\r\nstd::size_t GetLinkCount() const // get number of links in this FreeGroup\r\nLinkPtrType GetLink(std::size_t) // get link by index\r\n// likewise with ConstLinkPtrType\r\n~~~\r\n\r\n# Motivation\r\n\r\nIf you want to introspect an existing FreeGroup, all you can do is get the `CanonicalLink`, but it won't tell you how many other `FreeGroup`s or links are contained within. This would provide that functionality.\r\n\r\n# Describe alternatives you've considered\r\n\r\nNone\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The concept of a <code>FreeGroup</code> was added in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/85/add-prototype-of-freegroup-features\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #85</a> with API's for getting a FreeGroup from a Model or a Link. I would propose some additional API's for <code>FreeGroup</code>s similar to the <code>GetEntities</code> feature:</p>\n<div class=\"codehilite\"><pre><span></span>std::size_t GetFreeGroupCount() const // get number of links with FreeJoints in this FreeGroup\nFreeGroupPtrType GetFreeGroup(std::size_t) // get one of the embedded singular FreeGroups\n// likewise with ConstFreeGroupPtrType\nstd::size_t GetLinkCount() const // get number of links in this FreeGroup\nLinkPtrType GetLink(std::size_t) // get link by index\n// likewise with ConstLinkPtrType\n</pre></div>\n\n\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>If you want to introspect an existing FreeGroup, all you can do is get the <code>CanonicalLink</code>, but it won't tell you how many other <code>FreeGroup</code>s or links are contained within. This would provide that functionality.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>None</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-04T01:40:44.736547+00:00", "milestone": null, "updated_on": "2019-05-04T01:40:44.736547+00:00", "type": "issue", "id": 17}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/18/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/18/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/18/feature-request-set-pose-and-velocity-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/18/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Feature request: set pose and velocity in FreeGroupFrameSemantics feature", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe `FreeGroupFrameSemantics` feature was added in pull request #85, but it doesn't have any functions for getting or setting pose. It would be nice to have the following:\r\n\r\n~~~\r\n    FreeGroup::SetPose(RelativePose)\r\n    FreeGroup::SetLinearVelocity(RelativeLinearVector)\r\n    FreeGroup::SetAngularVelocity(RelativeAngularVector)\r\n~~~\r\n\r\n# Motivation\r\n\r\nThe features `SetFreeGroupWorldPose` and `SetFreeGroupWorldVelocity` allow setting velocity in the world frame, but it would be nice to be able to use other frames too.\r\n\r\n# Describe alternatives you've considered\r\n\r\nJust use the world frame features\r\n\r\n# Additional context", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The <code>FreeGroupFrameSemantics</code> feature was added in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/85/add-prototype-of-freegroup-features\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #85</a>, but it doesn't have any functions for getting or setting pose. It would be nice to have the following:</p>\n<div class=\"codehilite\"><pre><span></span>    FreeGroup::SetPose(RelativePose)\n    FreeGroup::SetLinearVelocity(RelativeLinearVector)\n    FreeGroup::SetAngularVelocity(RelativeAngularVector)\n</pre></div>\n\n\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>The features <code>SetFreeGroupWorldPose</code> and <code>SetFreeGroupWorldVelocity</code> allow setting velocity in the world frame, but it would be nice to be able to use other frames too.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Just use the world frame features</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-04T01:44:32.470077+00:00", "milestone": null, "updated_on": "2019-05-04T01:44:32.470077+00:00", "type": "issue", "id": 18}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/19/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/19.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/19/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/19/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/19/add-tests-for-freegroup-features"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/19/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Add tests for FreeGroup features", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Several FreeGroup features were added in pull request #85 without test coverage; tests should be added.", "markup": "markdown", "html": "<p>Several FreeGroup features were added in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/85/add-prototype-of-freegroup-features\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #85</a> without test coverage; tests should be added.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-04T01:46:07.197976+00:00", "milestone": null, "updated_on": "2019-05-04T02:04:49.109127+00:00", "type": "issue", "id": 19}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/20/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/20/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/20/speed-up-compilation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/20/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Speed up compilation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nIt takes a long time to compile the code.\r\n\r\n# Motivation\r\n\r\nSpeed up development by reducing compile time.\r\n\r\n# Describe alternatives you've considered\r\n\r\nDeal with it (what we are currently doing).\r\n\r\n# Additional context\r\n\r\nI think @mxgrey has some additional context.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>It takes a long time to compile the code.</p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>Speed up development by reducing compile time.</p>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you've considered</h1>\n<p>Deal with it (what we are currently doing).</p>\n<h1 id=\"markdown-header-additional-context\">Additional context</h1>\n<p>I think @mxgrey has some additional context.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-07T17:22:38.418768+00:00", "milestone": null, "updated_on": "2019-05-10T17:28:04.824087+00:00", "type": "issue", "id": 20}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/21/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/21/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/21/dartsim-freegroupfeatures-should-account"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/21/vote"}}, "reporter": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "title": "Dartsim FreeGroupFeatures should account for model pose", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* [X ] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nThe dartsim FreeGroupFeatures implementation uses the canonical link of a model to set poses. However, it doesn't take into account that the model can have a pose offset from the canonical link. See related [ign-gazebo discussion](#!/ignitionrobotics/ign-gazebo/pull-requests/334/blueprint-pose-commands/diff#comment-102051667)\r\n\r\n# Steps to Reproduce\r\n\r\n1. The problem manifests when the canonical link has a non-identity pose. For example:\r\n```\r\n<model name=\"test_model\">\r\n  <pose>0 0 0 0 0 0</pose>\r\n  <link name=\"link1\">\r\n    <pose>1 2 3 0 0 0 </pose>\r\n  </link>\r\n</model>\r\n```\r\nSet the world pose of the model via the model's FreeGroup to `0 0 0 0 0 0`.  A failing test can be found [here](#!/ignitionrobotics/ign-physics/commits/3ade0787a4579b02fa46a3d7294c58e913a7b2e7?at=freegroup_tests#Ldartsim/src/FreeGroupFeatures_TEST.ccT154)\r\n\r\n**Expected behavior:**  \r\n\r\nWe expect no change in the pose of the model when setting its pose to `0 0 0 0 0 0` because it's already there.\r\n\r\n**Actual behavior:**\r\n\r\n`link1` moves to `0 0 0 0 0 0` and as a result, `test_model` moves to `-1 -2 -3 0 0 0`.\r\n\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nAll", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>[X ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Checked the Q&amp;A board for common solutions: <a href=\"http://answers.gazebosim.org\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\" class=\"ap-connect-link\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>The dartsim FreeGroupFeatures implementation uses the canonical link of a model to set poses. However, it doesn't take into account that the model can have a pose offset from the canonical link. See related <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/334/blueprint-pose-commands/diff#comment-102051667\" rel=\"nofollow\">ign-gazebo discussion</a></p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>The problem manifests when the canonical link has a non-identity pose. For example:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;test_model&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;link1&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>1 2 3 0 0 0 <span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>Set the world pose of the model via the model's FreeGroup to <code>0 0 0 0 0 0</code>.  A failing test can be found <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/commits/3ade0787a4579b02fa46a3d7294c58e913a7b2e7?at=freegroup_tests#Ldartsim/src/FreeGroupFeatures_TEST.ccT154\" rel=\"nofollow\">here</a></p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>We expect no change in the pose of the model when setting its pose to <code>0 0 0 0 0 0</code> because it's already there.</p>\n<p><strong>Actual behavior:</strong></p>\n<p><code>link1</code> moves to <code>0 0 0 0 0 0</code> and as a result, <code>test_model</code> moves to <code>-1 -2 -3 0 0 0</code>.</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>All</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-15T17:29:32.594907+00:00", "milestone": null, "updated_on": "2019-05-15T17:29:32.594907+00:00", "type": "issue", "id": 21}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/22/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/22/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/22/segmentation-fault-ode-internal-error"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/22/vote"}}, "reporter": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "title": "Segmentation Fault (ODE Internal Error)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Segmentation Fault \\(ODE Internal Error\\)\r\n\r\nWhen trying to perform some benchmark work, I discovered a segmentation fault in ign-physics:\r\n\r\n```\r\nODE INTERNAL ERROR 1: assertion &#34;bNormalizationResult&#34; failed in _dNormalize4() [odemath.h:42]\r\n```\r\n\r\n# Steps to Reproduce\r\n\r\n1. Create a world with a 5 x 5 x 5 cube of unit spheres, randomly perturbed slightly in the x and y axis.\r\n\r\n    1. \\(Or use this one: [https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-spheres\\_5\\_5-sdf](https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-spheres_5_5-sdf)\\)\r\n    \r\n2. Execute with `ign gazebo`\r\n\r\n**Expected behavior:** It shouldn\u2019t crash.\r\n\r\n**Actual behavior:** It does\r\n\r\n**Reproduces how often:** 100%\r\n\r\n# Versions\r\n\r\nign-gazebo2 \\(blueprint\\) source build\r\n\r\n**Additional Information**\r\n\r\nI have a more complete backtrace here, snipped to the relevant bits: [https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-backtrace](https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-backtrace)", "markup": "markdown", "html": "<h1 id=\"markdown-header-segmentation-fault-40ode-internal-error41\">Segmentation Fault (ODE Internal Error)</h1>\n<p>When trying to perform some benchmark work, I discovered a segmentation fault in ign-physics:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">ODE</span> <span class=\"nt\">INTERNAL</span> <span class=\"nt\">ERROR</span> <span class=\"nt\">1</span><span class=\"o\">:</span> <span class=\"nt\">assertion</span> <span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">bNormalizationResult</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"nt\">failed</span> <span class=\"nt\">in</span> <span class=\"nt\">_dNormalize4</span><span class=\"o\">()</span> <span class=\"cp\">[</span><span class=\"nx\">odemath.h</span><span class=\"p\">:</span><span class=\"mi\">42</span><span class=\"cp\">]</span>\n</pre></div>\n\n\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>\n<p>Create a world with a 5 x 5 x 5 cube of unit spheres, randomly perturbed slightly in the x and y axis.</p>\n<ol>\n<li>(Or use this one: <a data-is-external-link=\"true\" href=\"https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-spheres_5_5-sdf\" rel=\"nofollow\">https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-spheres_5_5-sdf</a>)</li>\n</ol>\n</li>\n<li>\n<p>Execute with <code>ign gazebo</code></p>\n</li>\n</ol>\n<p><strong>Expected behavior:</strong> It shouldn\u2019t crash.</p>\n<p><strong>Actual behavior:</strong> It does</p>\n<p><strong>Reproduces how often:</strong> 100%</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>ign-gazebo2 (blueprint) source build</p>\n<p><strong>Additional Information</strong></p>\n<p>I have a more complete backtrace here, snipped to the relevant bits: <a data-is-external-link=\"true\" href=\"https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-backtrace\" rel=\"nofollow\">https://gist.github.com/mjcarroll/fab4c63ed3231c170ffdb549ff605770#file-backtrace</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-05-22T16:43:11.696926+00:00", "milestone": null, "updated_on": "2019-05-22T16:44:33.121143+00:00", "type": "issue", "id": 22}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/23/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/23.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/23/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/23/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/23/fedora-compilation-failed"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/23/vote"}}, "reporter": {"display_name": "Til Hoff", "uuid": "{5b5196a3-571e-4e4c-bed3-6f72e4dabba8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5b5196a3-571e-4e4c-bed3-6f72e4dabba8%7D"}, "html": {"href": "https://bitbucket.org/%7B5b5196a3-571e-4e4c-bed3-6f72e4dabba8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1835281ac000de88eb0ed5f38cd82eaed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTH-5.png"}}, "nickname": "turakar", "type": "user", "account_id": "557058:0928ff78-c705-4502-bf3b-52e34e5508f2"}, "title": "[Fedora] Compilation failed: Incompatibilities with DART", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Description\r\n\r\nIgnition cannot be compiled because ign-physics fails.\r\n\r\n# Steps to reproduce\r\n\r\n* set up Fedora 29 system\r\n* install dependencies\r\n\r\n```\r\nsudo dnf install cmake freeglut-devel ffmpeg-devel freeimage-devel gflags-devel glew-devel gts-devel ogre-devel protobuf-devel protobuf-c-devel qt5 tinyxml2-devel tinyxml-devel pkg-config protobuf-compiler python qt5-qtquickcontrols qt5-qtquickcontrols2 qt5-devel qt5-qtdeclarative-devel qt5-qtquickcontrols2-devel ruby rubygem-ronn uuid-devel libzip-devel jsoncpp-devel libcurl-devel libyaml-devel czmq-devel cppzmq-devel sqlite-devel libwebsockets-devel eigen3-devel\r\n```\r\n\r\n* compile [DART from source](http://dartsim.github.io/install_dart_on_ubuntu.html)\r\n* compile [ignition from source](https://www.ignitionrobotics.org/docs/latest/install)\r\n\r\n**Expected behaviour**\r\n\r\nign-physics compiles successfully.\r\n\r\n**Actual behaviour**\r\n\r\nCompilation gives errors:\r\n\r\n```\r\n--- stderr: ignition-physics1                                                                                        \r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc: In constructor &#39;ignition::physics::dartsim::CustomMeshShape::CustomMeshShape(const ignition::common::Mesh&amp;, const Vector3d&amp;)&#39;:\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc:207:45: error: &#39;ai_real&#39; does not name a type\r\n         mesh-&gt;mVertices[j][k] = static_cast&lt;ai_real&gt;(v[k]);\r\n                                             ^~~~~~~\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc:211:44: error: &#39;ai_real&#39; does not name a type\r\n         mesh-&gt;mNormals[j][k] = static_cast&lt;ai_real&gt;(n[k]);\r\n                                            ^~~~~~~\r\ngmake[2]: *** [dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/build.make:76: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/src/CustomMeshShape.cc.o] Error 1\r\ngmake[2]: *** Waiting for unfinished jobs....\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc: In member function &#39;virtual ignition::physics::Identity ignition::physics::dartsim::SDFFeatures::ConstructSdfCollision(const ignition::physics::Identity&amp;, const sdf::v8::Collision&amp;)&#39;:\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:495:15: error: &#39;class dart::dynamics::DynamicsAspect&#39; has no member named &#39;setSecondaryFrictionCoeff&#39;; did you mean &#39;setFrictionCoeff&#39;?\r\n       aspect-&gt;setSecondaryFrictionCoeff(odeFriction-&gt;Get&lt;double&gt;(&#34;mu2&#34;));\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n               setFrictionCoeff\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:499:15: error: &#39;class dart::dynamics::DynamicsAspect&#39; has no member named &#39;setSlipCompliance&#39;\r\n       aspect-&gt;setSlipCompliance(odeFriction-&gt;Get&lt;double&gt;(&#34;slip1&#34;));\r\n               ^~~~~~~~~~~~~~~~~\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:503:15: error: &#39;class dart::dynamics::DynamicsAspect&#39; has no member named &#39;setSecondarySlipCompliance&#39;\r\n       aspect-&gt;setSecondarySlipCompliance(odeFriction-&gt;Get&lt;double&gt;(&#34;slip2&#34;));\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:508:15: error: &#39;class dart::dynamics::DynamicsAspect&#39; has no member named &#39;setFirstFrictionDirection&#39;\r\n       aspect-&gt;setFirstFrictionDirection(math::eigen3::convert(fdir1));\r\n               ^~~~~~~~~~~~~~~~~~~~~~~~~\r\ngmake[2]: *** [dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/build.make:154: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/src/SDFFeatures.cc.o] Error 1\r\ngmake[1]: *** [CMakeFiles/Makefile2:2245: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/all] Error 2\r\ngmake: *** [Makefile:141: all] Error 2\r\n---\r\nFailed   &lt;&lt;&lt; ignition-physics1  [ Exited with code 2 ]\r\nAborted  &lt;&lt;&lt; ignition-rendering2\r\n```\r\n\r\n# Versions\r\n\r\n* Fedora 29\r\n* tested DART versions: 6.9.2 \\(latest tag, not accepted by ign-physics\\), master, commit 45f8e776b7bbcd6b4e4b3ac91bfa45b2a9dfc861 \\(bump version to 6.10.0\\)\r\n* ign-physics 1.4.0", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>Ignition cannot be compiled because ign-physics fails.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to reproduce</h1>\n<ul>\n<li>set up Fedora 29 system</li>\n<li>install dependencies</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>sudo dnf install cmake freeglut-devel ffmpeg-devel freeimage-devel gflags-devel glew-devel gts-devel ogre-devel protobuf-devel protobuf-c-devel qt5 tinyxml2-devel tinyxml-devel pkg-config protobuf-compiler python qt5-qtquickcontrols qt5-qtquickcontrols2 qt5-devel qt5-qtdeclarative-devel qt5-qtquickcontrols2-devel ruby rubygem-ronn uuid-devel libzip-devel jsoncpp-devel libcurl-devel libyaml-devel czmq-devel cppzmq-devel sqlite-devel libwebsockets-devel eigen3-devel\n</pre></div>\n\n\n<ul>\n<li>compile <a data-is-external-link=\"true\" href=\"http://dartsim.github.io/install_dart_on_ubuntu.html\" rel=\"nofollow\">DART from source</a></li>\n<li>compile <a data-is-external-link=\"true\" href=\"https://www.ignitionrobotics.org/docs/latest/install\" rel=\"nofollow\">ignition from source</a></li>\n</ul>\n<p><strong>Expected behaviour</strong></p>\n<p>ign-physics compiles successfully.</p>\n<p><strong>Actual behaviour</strong></p>\n<p>Compilation gives errors:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- stderr: ignition-physics1                                                                                        </span>\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc: In constructor &amp;#39;ignition::physics::dartsim::CustomMeshShape::CustomMeshShape(const ignition::common::Mesh&amp;amp;, const Vector3d&amp;amp;)&amp;#39;:\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc:207:45: error: &amp;#39;ai_real&amp;#39; does not name a type\n         mesh-&amp;gt;mVertices[j][k] = static_cast&amp;lt;ai_real&amp;gt;(v[k]);\n                                             ^~~~~~~\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/CustomMeshShape.cc:211:44: error: &amp;#39;ai_real&amp;#39; does not name a type\n         mesh-&amp;gt;mNormals[j][k] = static_cast&amp;lt;ai_real&amp;gt;(n[k]);\n                                            ^~~~~~~\ngmake[2]: *** [dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/build.make:76: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/src/CustomMeshShape.cc.o] Error 1\ngmake[2]: *** Waiting for unfinished jobs....\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc: In member function &amp;#39;virtual ignition::physics::Identity ignition::physics::dartsim::SDFFeatures::ConstructSdfCollision(const ignition::physics::Identity&amp;amp;, const sdf::v8::Collision&amp;amp;)&amp;#39;:\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:495:15: error: &amp;#39;class dart::dynamics::DynamicsAspect&amp;#39; has no member named &amp;#39;setSecondaryFrictionCoeff&amp;#39;; did you mean &amp;#39;setFrictionCoeff&amp;#39;?\n       aspect-&amp;gt;setSecondaryFrictionCoeff(odeFriction-&amp;gt;Get&amp;lt;double&amp;gt;(&amp;#34;mu2&amp;#34;));\n               ^~~~~~~~~~~~~~~~~~~~~~~~~\n               setFrictionCoeff\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:499:15: error: &amp;#39;class dart::dynamics::DynamicsAspect&amp;#39; has no member named &amp;#39;setSlipCompliance&amp;#39;\n       aspect-&amp;gt;setSlipCompliance(odeFriction-&amp;gt;Get&amp;lt;double&amp;gt;(&amp;#34;slip1&amp;#34;));\n               ^~~~~~~~~~~~~~~~~\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:503:15: error: &amp;#39;class dart::dynamics::DynamicsAspect&amp;#39; has no member named &amp;#39;setSecondarySlipCompliance&amp;#39;\n       aspect-&amp;gt;setSecondarySlipCompliance(odeFriction-&amp;gt;Get&amp;lt;double&amp;gt;(&amp;#34;slip2&amp;#34;));\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/workspacepath/ignitionrobotics/ign-physics/dartsim/src/SDFFeatures.cc:508:15: error: &amp;#39;class dart::dynamics::DynamicsAspect&amp;#39; has no member named &amp;#39;setFirstFrictionDirection&amp;#39;\n       aspect-&amp;gt;setFirstFrictionDirection(math::eigen3::convert(fdir1));\n               ^~~~~~~~~~~~~~~~~~~~~~~~~\ngmake[2]: *** [dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/build.make:154: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/src/SDFFeatures.cc.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:2245: dartsim/CMakeFiles/ignition-physics1-dartsim-plugin.dir/all] Error 2\ngmake: *** [Makefile:141: all] Error 2\n<span class=\"gd\">---</span>\nFailed   &amp;lt;&amp;lt;&amp;lt; ignition-physics1  [ Exited with code 2 ]\nAborted  &amp;lt;&amp;lt;&amp;lt; ignition-rendering2\n</pre></div>\n\n\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<ul>\n<li>Fedora 29</li>\n<li>tested DART versions: 6.9.2 (latest tag, not accepted by ign-physics), master, commit <a href=\"#!/ignitionrobotics/ign-physics/commits/45f8e776b7bbcd6b4e4b3ac91bfa45b2a9dfc861\" rel=\"nofollow\" class=\"ap-connect-link\">45f8e776b7bbcd6b4e4b3ac91bfa45b2a9dfc861</a> (bump version to 6.10.0)</li>\n<li>ign-physics 1.4.0</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-08T19:11:39.097747+00:00", "milestone": null, "updated_on": "2019-09-10T09:12:54.185303+00:00", "type": "issue", "id": 23}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/24/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/24/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/24/extend-contact-data"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/24/vote"}}, "reporter": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "title": "Extend contact data", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The [GetContacts.hh](#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/include/ignition/physics/GetContacts.hh) features allows to extract some basic information from contacts, such as bodyA bodyB and contact point in world frame.\r\n\r\nIs there any update to what discussed in [PR67](#!/ignitionrobotics/ign-physics/pull-requests/67/acropolis-getcontactsfromlaststep-feature/diff)? The structure [GetContacts.hh#74](#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/include/ignition/physics/GetContacts.hh#lines-74) seems the place where to possibly add normal and magnitude. @{557058:90bc87b0-2886-4377-a17c-3a6629a697ff}  @{557058:5de38267-b118-494c-aa76-4fab35448816} \r\n\r\n\u200c", "markup": "markdown", "html": "<p>The <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/include/ignition/physics/GetContacts.hh\" rel=\"nofollow\">GetContacts.hh</a> features allows to extract some basic information from contacts, such as bodyA bodyB and contact point in world frame.</p>\n<p>Is there any update to what discussed in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/67/acropolis-getcontactsfromlaststep-feature/diff\" rel=\"nofollow\">PR67</a>? The structure <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/include/ignition/physics/GetContacts.hh#lines-74\" rel=\"nofollow\">GetContacts.hh#74</a> seems the place where to possibly add normal and magnitude. <span class=\"ap-mention\" data-atlassian-id=\"557058:90bc87b0-2886-4377-a17c-3a6629a697ff\">@Addisu Z. Taddese</span>  <span class=\"ap-mention\" data-atlassian-id=\"557058:5de38267-b118-494c-aa76-4fab35448816\">@Steve Peters</span> </p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-12T10:29:27.888484+00:00", "milestone": null, "updated_on": "2019-12-18T17:24:14.295606+00:00", "type": "issue", "id": 24}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/25/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/25.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/25/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/25/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/25/support-of-closed-kinematic-chains"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/25/vote"}}, "reporter": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "title": "Support of closed kinematic chains", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Doing some experiments with the SDF of Minitaur quadruped \\(taken from [KodlabPenn/kodlab\\_gazebo](https://github.com/KodlabPenn/kodlab_gazebo)\\), I noticed that the current state of the dart physics plugin does not yet support closed kinematic chains \\(parallel robot\\).\r\n\r\nThe four legs on Minitaur are composed of a [five-bar linkage](https://repository.upenn.edu/cgi/viewcontent.cgi?article=1766&context=ese_papers). The SDFs hosted in the GitHub repo work well in Gazebo 10 Classic. However, the simulation of the model in Ignition Gazebo does not apply the constraint to keep the linkage closed, and the links forming the legs fall apart as soon as they touch the ground.\r\n\r\nI found [this TODO](#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/dartsim/src/FreeGroupFeatures.cc#lines-50:52) in the code, therefore I open this issue to track the status of the missing support.", "markup": "markdown", "html": "<p>Doing some experiments with the SDF of Minitaur quadruped (taken from <a data-is-external-link=\"true\" href=\"https://github.com/KodlabPenn/kodlab_gazebo\" rel=\"nofollow\">KodlabPenn/kodlab_gazebo</a>), I noticed that the current state of the dart physics plugin does not yet support closed kinematic chains (parallel robot).</p>\n<p>The four legs on Minitaur are composed of a <a data-is-external-link=\"true\" href=\"https://repository.upenn.edu/cgi/viewcontent.cgi?article=1766&amp;context=ese_papers\" rel=\"nofollow\">five-bar linkage</a>. The SDFs hosted in the GitHub repo work well in Gazebo 10 Classic. However, the simulation of the model in Ignition Gazebo does not apply the constraint to keep the linkage closed, and the links forming the legs fall apart as soon as they touch the ground.</p>\n<p>I found <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/d3fd7dd3131792933a67124982776f7e500485bc/dartsim/src/FreeGroupFeatures.cc#lines-50:52\" rel=\"nofollow\">this TODO</a> in the code, therefore I open this issue to track the status of the missing support.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-18T19:22:14.825372+00:00", "milestone": null, "updated_on": "2019-10-18T19:22:14.825372+00:00", "type": "issue", "id": 25}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/26/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/26.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/26/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/26/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/26/features-that-use-other-features-without-a"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/26/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Features that use other Features without a pure virtual implementation?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I was just discussing with @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} about how to provide an API for a `Link` that computes an aggregate axis-aligned bounding box for all the shapes attached to that Link. This could surely be done in the typical way by creating a new feature with a new pure virtual Implementation function, but I believe this could be done using the API's from the `GetShapeBoundingBox` and `GetShapeFromLink` features without needing another pure virtual implementation function to be added to a plugin. I made an outline of what the API could look like in the following branch:\r\n\r\n* #!/ignitionrobotics/ign-physics/branch/link_bounding_box?dest=ign-physics1#diff\r\n\r\nThis type of feature would add useful API's without increasing the work required of those writing physics Implementation plugins, so I think it would be valuable, but I don't know if it is possible. @{557058:67759e29-d1df-465f-868d-047738e36fc9}, @{557058:90bc87b0-2886-4377-a17c-3a6629a697ff}: what do you think?", "markup": "markdown", "html": "<p>I was just discussing with <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> about how to provide an API for a <code>Link</code> that computes an aggregate axis-aligned bounding box for all the shapes attached to that Link. This could surely be done in the typical way by creating a new feature with a new pure virtual Implementation function, but I believe this could be done using the API's from the <code>GetShapeBoundingBox</code> and <code>GetShapeFromLink</code> features without needing another pure virtual implementation function to be added to a plugin. I made an outline of what the API could look like in the following branch:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/branch/link_bounding_box?dest=ign-physics1#diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/branch/link_bounding_box?dest=ign-physics1#diff</a></li>\n</ul>\n<p>This type of feature would add useful API's without increasing the work required of those writing physics Implementation plugins, so I think it would be valuable, but I don't know if it is possible. <span class=\"ap-mention\" data-atlassian-id=\"557058:67759e29-d1df-465f-868d-047738e36fc9\">@Michael Grey</span>, <span class=\"ap-mention\" data-atlassian-id=\"557058:90bc87b0-2886-4377-a17c-3a6629a697ff\">@Addisu Z. Taddese</span>: what do you think?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2020-02-29T01:30:19.688336+00:00", "milestone": null, "updated_on": "2020-03-03T19:52:21.175484+00:00", "type": "issue", "id": 26}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/27/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/27.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/27/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/27/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/27/engine-plugins-folder-needs-to-be-added-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/27/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "engine-plugins folder needs to be added to debian metadata", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Unversioned plugins are now installed to the `engine-plugins` folder as of pull request #121, but they haven't yet been added to the debian metadata, so the nightly builds are unstable.\r\n\r\n* #!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files/diff#comment-139121305\r\n\r\n* [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ign-physics-debbuilder&build=471)](https://build.osrfoundation.org/job/ign-physics-debbuilder/471/) https://build.osrfoundation.org/job/ign-physics-debbuilder/471/console\r\n\r\n~~~\r\ndh_missing --list-missing\r\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics-dartsim-plugin.so exists in debian/tmp but is not installed to anywhere\r\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so.1 exists in debian/tmp but is not installed to anywhere\r\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so.1.5.0 exists in debian/tmp but is not installed to anywhere\r\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so exists in debian/tmp but is not installed to anywhere\r\n~~~", "markup": "markdown", "html": "<p>Unversioned plugins are now installed to the <code>engine-plugins</code> folder as of <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #121</a>, but they haven't yet been added to the debian metadata, so the nightly builds are unstable.</p>\n<ul>\n<li>\n<p><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files/diff#comment-139121305\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files/diff#comment-139121305</a></p>\n</li>\n<li>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ign-physics-debbuilder/471/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ign-physics-debbuilder&amp;build=471\" /></a> <a href=\"https://build.osrfoundation.org/job/ign-physics-debbuilder/471/console\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ign-physics-debbuilder/471/console</a></p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>dh_missing --list-missing\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics-dartsim-plugin.so exists in debian/tmp but is not installed to anywhere\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so.1 exists in debian/tmp but is not installed to anywhere\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so.1.5.0 exists in debian/tmp but is not installed to anywhere\ndh_missing: usr/lib/x86_64-linux-gnu/ign-physics-1/engine-plugins/libignition-physics1-dartsim-plugin.so exists in debian/tmp but is not installed to anywhere\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2020-03-07T18:46:47.013452+00:00", "milestone": null, "updated_on": "2020-03-11T19:18:44.487862+00:00", "type": "issue", "id": 27}, {"priority": "critical", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/28/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/28/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/28/reopen-pull-request-to-reduce-symbol-load"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/28/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Reopen pull request to reduce symbol load", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Reopen pull request #136 once we're migrated to GitHub.", "markup": "markdown", "html": "<p>Reopen <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/136/reduce-the-symbol-load-caused-by-feature\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #136</a> once we're migrated to GitHub.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-13T20:07:17.358119+00:00", "milestone": null, "updated_on": "2020-04-13T20:07:17.358119+00:00", "type": "issue", "id": 28}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/29/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/29.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/29/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/issues/29/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/issues/29/reopen-pull-request-to-restore-detached"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/issues/29/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Reopen pull request to restore detached BodyNodes to original skeleton", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We didn't finish revising pull request #104 before the GitHub migration freeze date, so this issue is to remind to reopen a pull request from branch `detach_joint_feature_detach_to_skeleton`. There are still some outstanding comments related to the naming scheme for detached joints and how to handle links with `/` characters in their names. Perhaps the original skeleton name could be stored in the [dartsim JointInfo struct in Base.hh](#!/ignitionrobotics/ign-physics/src/b5540de53faf792d5cda2087b3b7c91008e38a82/dartsim/src/Base.hh#lines-62) and the original name stored in a similar manner to the [ShapeInfo class](#!/ignitionrobotics/ign-physics/src/b5540de53faf792d5cda2087b3b7c91008e38a82/dartsim/src/Base.hh#lines-71:73).\r\n\r\nUnresolved comments:\r\n\r\n* #!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144557904\r\n* #!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144559098", "markup": "markdown", "html": "<p>We didn't finish revising <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #104</a> before the GitHub migration freeze date, so this issue is to remind to reopen a pull request from branch <code>detach_joint_feature_detach_to_skeleton</code>. There are still some outstanding comments related to the naming scheme for detached joints and how to handle links with <code>/</code> characters in their names. Perhaps the original skeleton name could be stored in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/b5540de53faf792d5cda2087b3b7c91008e38a82/dartsim/src/Base.hh#lines-62\" rel=\"nofollow\">dartsim JointInfo struct in Base.hh</a> and the original name stored in a similar manner to the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/b5540de53faf792d5cda2087b3b7c91008e38a82/dartsim/src/Base.hh#lines-71:73\" rel=\"nofollow\">ShapeInfo class</a>.</p>\n<p>Unresolved comments:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144557904\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144557904</a></li>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144559098\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/104/detachjoint-try-to-restore-bodynodes-to/activity#comment-144559098</a></li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-14T00:06:45.083693+00:00", "milestone": null, "updated_on": "2020-04-14T00:06:45.083693+00:00", "type": "issue", "id": 29}], "page": 1, "size": 29}