{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43940166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43940166"}}, "parent": {"id": 43848325, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43848325.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43848325"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "Fixed via merge a67d980", "markup": "markdown", "html": "<p>Fixed via merge <a href=\"#!/ignitionrobotics/ign-physics/commits/a67d980\" rel=\"nofollow\" class=\"ap-connect-link\">a67d980</a></p>", "type": "rendered"}, "created_on": "2017-08-30T23:17:01.903953+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-08-30T23:17:01.907677+00:00", "type": "pullrequest_comment", "id": 43940166}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"update": {"description": "This pull request implements and tests a DART-based forward simulation plugin. I'm aiming the pull request at the branch that introduces the `CompositeData` prototype in order to minimize the diff and focus it on the plugin implementation and the test demo.\r\n\r\nThis demo utilizes the Plugin framework from `ignition::common`, specialized plugins, `CompositeData`, `SpecifyData`, and the pure abstract physics interfaces. This is basically an integration demo of all the design elements that we've been discussing for the last couple weeks.\r\n\r\nThe purpose of the plugin is to simulate an operational space controller. The role of an operational space controller is to determine joint forces that achieve a workspace (or operational space) objective, usually reaching or maintaining a given end effector pose. In the [test here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController_TEST.cc?at=experimental%2Fdart&fileviewer=file-view-default) you can see us load the dart-based plugin, find its end effector location, and move its input target twice while the simulation plugin (which has the feedback/feedforward controller embedded in it) makes the end effector converge to the target location.\r\n\r\nPrior to moving the target the second time, we bookmark the state that is being output by the plugin. After the second time that the end effector has converged, we use the `ignition::physics::SetState` interface to reset the state to what it was just after the first convergence, and we watch the simulation re-simulate the second convergence from there. We test that the errors which are output by the system perfectly match the previous run (And they do! All the way down to the bit!).\r\n\r\nYou can see the implementation of the dart plugin [here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController.cc?at=experimental%2Fdart&fileviewer=file-view-default). Most of it is copy-pasted from a [dart example program](https://github.com/dartsim/dart/blob/master/examples/osgExamples/osgOperationalSpaceControl/osgOperationalSpaceControl.cpp). Note that this plugin is compiled to its own library, separate from `ignition-physics`, and the test program does **not** link to this library until it gets loaded at run time. The test program has no knowledge of the library or the plugin at compile-time (except that I hard code some strings so the program can find plugin at run time, but that doesn't count), and it never includes any of the plugin library's headers (everything is done using `ignition-physics` and `ignition-common` headers).", "title": "Created OperationalSpaceController plugin example that uses DART", "destination": {"commit": {"hash": "f4a850262d87", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f4a850262d87.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f4a850262d87"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a67d98080199", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/a67d98080199.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/a67d98080199"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/dart"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-30T23:05:59.736796+00:00"}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43848325.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43848325"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "conflicts here and the next following file ", "markup": "markdown", "html": "<p>conflicts here and the next following file </p>", "type": "rendered"}, "created_on": "2017-08-30T04:15:40.137408+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {}, "updated_on": "2017-08-30T04:15:40.139575+00:00", "type": "pullrequest_comment", "id": 43848325}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43743392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43743392"}}, "parent": {"id": 43742919, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43742919.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43742919"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "Lines 75-109 and 197-219 are almost a direct copy/paste. I had to tweak a few things on those lines so that the namespaces could be resolved and so that it would match our style guidelines. Everything else was written in order to wrap up the example to fit into the `ignition-physics` interfaces.\n\nThere was also a lot of code that did not get copied over from the example program because it only pertained to embedding the program in a GUI. In total, that DART example was 317 lines of code while this plugin is 290 lines of code. If we had a GUI front-end, we could achieve the same level of functionality as the DART example with effectively the same number of lines of code.", "markup": "markdown", "html": "<p>Lines 75-109 and 197-219 are almost a direct copy/paste. I had to tweak a few things on those lines so that the namespaces could be resolved and so that it would match our style guidelines. Everything else was written in order to wrap up the example to fit into the <code>ignition-physics</code> interfaces.</p>\n<p>There was also a lot of code that did not get copied over from the example program because it only pertained to embedding the program in a GUI. In total, that DART example was 317 lines of code while this plugin is 290 lines of code. If we had a GUI front-end, we could achieve the same level of functionality as the DART example with effectively the same number of lines of code.</p>", "type": "rendered"}, "created_on": "2017-08-29T01:08:16.182718+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-08-29T01:08:16.185369+00:00", "type": "pullrequest_comment", "id": 43743392}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43742919.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43742919"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "How much did you have to modify the original example in order to make this work? I think it's most compelling if the changes are minimal.", "markup": "markdown", "html": "<p>How much did you have to modify the original example in order to make this work? I think it's most compelling if the changes are minimal.</p>", "type": "rendered"}, "created_on": "2017-08-29T00:50:43.584196+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-08-29T00:50:43.588174+00:00", "type": "pullrequest_comment", "id": 43742919}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43742758.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43742758"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "The `MathConversions.hh` file is part of what I was thinking of for the `ign-math-eigen` package.", "markup": "markdown", "html": "<p>The <code>MathConversions.hh</code> file is part of what I was thinking of for the <code>ign-math-eigen</code> package.</p>", "type": "rendered"}, "created_on": "2017-08-29T00:44:08.782055+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-08-29T00:44:08.784381+00:00", "type": "pullrequest_comment", "id": 43742758}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"update": {"description": "This pull request implements and tests a DART-based forward simulation plugin. I'm aiming the pull request at the branch that introduces the `CompositeData` prototype in order to minimize the diff and focus it on the plugin implementation and the test demo.\r\n\r\nThis demo utilizes the Plugin framework from `ignition::common`, specialized plugins, `CompositeData`, `SpecifyData`, and the pure abstract physics interfaces. This is basically an integration demo of all the design elements that we've been discussing for the last couple weeks.\r\n\r\nThe purpose of the plugin is to simulate an operational space controller. The role of an operational space controller is to determine joint forces that achieve a workspace (or operational space) objective, usually reaching or maintaining a given end effector pose. In the [test here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController_TEST.cc?at=experimental%2Fdart&fileviewer=file-view-default) you can see us load the dart-based plugin, find its end effector location, and move its input target twice while the simulation plugin (which has the feedback/feedforward controller embedded in it) makes the end effector converge to the target location.\r\n\r\nPrior to moving the target the second time, we bookmark the state that is being output by the plugin. After the second time that the end effector has converged, we use the `ignition::physics::SetState` interface to reset the state to what it was just after the first convergence, and we watch the simulation re-simulate the second convergence from there. We test that the errors which are output by the system perfectly match the previous run (And they do! All the way down to the bit!).\r\n\r\nYou can see the implementation of the dart plugin [here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController.cc?at=experimental%2Fdart&fileviewer=file-view-default). Most of it is copy-pasted from a [dart example program](https://github.com/dartsim/dart/blob/master/examples/osgExamples/osgOperationalSpaceControl/osgOperationalSpaceControl.cpp). Note that this plugin is compiled to its own library, separate from `ignition-physics`, and the test program does **not** link to this library until it gets loaded at run time. The test program has no knowledge of the library or the plugin at compile-time (except that I hard code some strings so the program can find plugin at run time, but that doesn't count), and it never includes any of the plugin library's headers (everything is done using `ignition-physics` and `ignition-common` headers).", "title": "Created OperationalSpaceController plugin example that uses DART", "destination": {"commit": {"hash": "d247881974b7", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d247881974b7.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d247881974b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01adf009910a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/01adf009910a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/01adf009910a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/dart"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-29T00:07:14.665507+00:00"}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"update": {"description": "This pull request implements and tests a DART-based forward simulation plugin. I'm aiming the pull request at the branch that introduces the `CompositeData` prototype in order to minimize the diff and focus it on the plugin implementation and the test demo.\r\n\r\nThis demo utilizes the Plugin framework from `ignition::common`, specialized plugins, `CompositeData`, `SpecifyData`, and the pure abstract physics interfaces. This is basically an integration demo of all the design elements that we've been discussing for the last couple weeks.\r\n\r\nThe purpose of the plugin is to simulate an operational space controller. The role of an operational space controller is to determine joint forces that achieve a workspace (or operational space) objective, usually reaching or maintaining a given end effector pose. In the [test here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController_TEST.cc?at=experimental%2Fdart&fileviewer=file-view-default) you can see us load the dart-based plugin, find its end effector location, and move its input target twice while the simulation plugin (which has the feedback/feedforward controller embedded in it) makes the end effector converge to the target location.\r\n\r\nPrior to moving the target the second time, we bookmark the state that is being output by the plugin. After the second time that the end effector has converged, we use the `ignition::physics::SetState` interface to reset the state to what it was just after the first convergence, and we watch the simulation re-simulate the second convergence from there. We test that the errors which are output by the system perfectly match the previous run (And they do! All the way down to the bit!).\r\n\r\nYou can see the implementation of the dart plugin [here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController.cc?at=experimental%2Fdart&fileviewer=file-view-default). Most of it is copy-pasted from a [dart example program](https://github.com/dartsim/dart/blob/master/examples/osgExamples/osgOperationalSpaceControl/osgOperationalSpaceControl.cpp). Note that this plugin is compiled to its own library, separate from `ignition-physics`, and the test program does **not** link to this library until it gets loaded at run time. The test program has no knowledge of the library or the plugin at compile-time (except that I hard code some strings so the program can find plugin at run time, but that doesn't count), and it never includes any of the plugin library's headers (everything is done using `ignition-physics` and `ignition-common` headers).", "title": "Created OperationalSpaceController plugin example that uses DART", "destination": {"commit": {"hash": "d247881974b7", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d247881974b7.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d247881974b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b7b362446f4b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/b7b362446f4b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/b7b362446f4b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/dart"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-28T23:57:04.951073+00:00"}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2/comments/43639276.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2/_/diff#comment-43639276"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}, "content": {"raw": "For the record, this is not meant to be a final product by any stretch of the imagination; it's just a prototype, and there's a lot of cleanup that I intend to do. I'm creating the PR so everyone can see the concept in action before we take it too much further.", "markup": "markdown", "html": "<p>For the record, this is not meant to be a final product by any stretch of the imagination; it's just a prototype, and there's a lot of cleanup that I intend to do. I'm creating the PR so everyone can see the concept in action before we take it too much further.</p>", "type": "rendered"}, "created_on": "2017-08-26T00:29:27.693553+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-08-26T00:29:27.696110+00:00", "type": "pullrequest_comment", "id": 43639276}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"update": {"description": "This pull request implements and tests a DART-based forward simulation plugin. I'm aiming the pull request at the branch that introduces the `CompositeData` prototype in order to minimize the diff and focus it on the plugin implementation and the test demo.\r\n\r\nThis demo utilizes the Plugin framework from `ignition::common`, specialized plugins, `CompositeData`, `SpecifyData`, and the pure abstract physics interfaces. This is basically an integration demo of all the design elements that we've been discussing for the last couple weeks.\r\n\r\nThe purpose of the plugin is to simulate an operational space controller. The role of an operational space controller is to determine joint forces that achieve a workspace (or operational space) objective, usually reaching or maintaining a given end effector pose. In the [test here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController_TEST.cc?at=experimental%2Fdart&fileviewer=file-view-default) you can see us load the dart-based plugin, find its end effector location, and move its input target twice while the simulation plugin (which has the feedback/feedforward controller embedded in it) makes the end effector converge to the target location.\r\n\r\nPrior to moving the target the second time, we bookmark the state that is being output by the plugin. After the second time that the end effector has converged, we use the `ignition::physics::SetState` interface to reset the state to what it was just after the first convergence, and we watch the simulation re-simulate the second convergence from there. We test that the errors which are output by the system perfectly match the previous run (And they do! All the way down to the bit!).\r\n\r\nYou can see the implementation of the dart plugin [here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController.cc?at=experimental%2Fdart&fileviewer=file-view-default). Most of it is copy-pasted from a [dart example program](https://github.com/dartsim/dart/blob/master/examples/osgExamples/osgOperationalSpaceControl/osgOperationalSpaceControl.cpp). Note that this plugin is compiled to its own library, separate from `ignition-physics`, and the test program does **not** link to this library until it gets loaded at run time. The test program has no knowledge of the library or the plugin at compile-time (except that I hard code some strings so the program can find plugin at run time, but that doesn't count), and it never includes any of the plugin library's headers (everything is done using `ignition-physics` and `ignition-common` headers).", "title": "Created OperationalSpaceController plugin example that uses DART", "destination": {"commit": {"hash": "5ab9af8902ef", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5ab9af8902ef.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5ab9af8902ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "452154407396", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/452154407396.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/452154407396"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/dart"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-26T00:28:02.500515+00:00"}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}, {"update": {"description": "This pull request implements and tests a DART-based forward simulation plugin. I'm aiming the pull request at the branch that introduces the `CompositeData` prototype in order to minimize the diff and focus it on the plugin implementation and the test demo.\r\n\r\nThis demo utilizes the Plugin framework from `ignition::common`, specialized plugins, `CompositeData`, `SpecifyData`, and the pure abstract physics interfaces. This is basically an integration demo of all the design elements that we've been discussing for the last couple weeks.\r\n\r\nThe purpose of the plugin is to simulate an operational space controller. The role of an operational space controller is to determine joint forces that achieve a workspace (or operational space) objective, usually reaching or maintaining a given end effector pose. In the [test here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController_TEST.cc?at=experimental%2Fdart&fileviewer=file-view-default) you can see us load the dart-based plugin, find its end effector location, and move its input target twice while the simulation plugin (which has the feedback/feedforward controller embedded in it) makes the end effector converge to the target location.\r\n\r\nPrior to moving the target the second time, we bookmark the state that is being output by the plugin. After the second time that the end effector has converged, we use the `ignition::physics::SetState` interface to reset the state to what it was just after the first convergence, and we watch the simulation re-simulate the second convergence from there. We test that the errors which are output by the system perfectly match the previous run (And they do! All the way down to the bit!).\r\n\r\nYou can see the implementation of the dart plugin [here](#!/ignitionrobotics/ign-physics/src/45215440739699360ac668a35e1f0cf777f67503/ignition-physics-dart/OperationalSpaceController.cc?at=experimental%2Fdart&fileviewer=file-view-default). Most of it is copy-pasted from a [dart example program](https://github.com/dartsim/dart/blob/master/examples/osgExamples/osgOperationalSpaceControl/osgOperationalSpaceControl.cpp). Note that this plugin is compiled to its own library, separate from `ignition-physics`, and the test program does **not** link to this library until it gets loaded at run time. The test program has no knowledge of the library or the plugin at compile-time (except that I hard code some strings so the program can find plugin at run time, but that doesn't count), and it never includes any of the plugin library's headers (everything is done using `ignition-physics` and `ignition-common` headers).", "title": "Created OperationalSpaceController plugin example that uses DART", "destination": {"commit": {"hash": "5ab9af8902ef", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5ab9af8902ef.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5ab9af8902ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "452154407396", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/452154407396.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/452154407396"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/dart"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-08-26T00:28:02.414798+00:00"}, "pull_request": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/2"}}, "title": "Created OperationalSpaceController plugin example that uses DART"}}]}