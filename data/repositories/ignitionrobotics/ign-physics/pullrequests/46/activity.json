{"pagelen": 50, "values": [{"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "[WIP] Add Link features", "destination": {"commit": {"hash": "b5540de53faf", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/b5540de53faf.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/b5540de53faf"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "69e3dde74222", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/69e3dde74222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/69e3dde74222"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "DECLINED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-04-06T19:04:52.131811+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/143891601.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-143891601"}}, "parent": {"id": 99054226, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99054226.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99054226"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I'm inclined to decline the rest of this. If it's needed functionality, we can work out a proper API design and resubmit", "markup": "markdown", "html": "<p>I'm inclined to decline the rest of this. If it's needed functionality, we can work out a proper API design and resubmit</p>", "type": "rendered"}, "created_on": "2020-04-06T19:04:33.870709+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-04-06T19:04:33.874934+00:00", "type": "pullrequest_comment", "id": 143891601}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99586835.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99586835"}}, "parent": {"id": 99585653, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99585653.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99585653"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Right, I had this concern in mind when proposing `FreeGroup`. The aim is to unify the concept for both generalized and maximal coordinate representations in a way that behaves intuitively.\n\nThe key problem that resulted in [issue 2111](https://bitbucket.org/osrf/gazebo/pull-requests/2598/fix2111/diff#comment-49451934) was that it allowed a single body to be moved irrespective of its constraints, potentially making its velocity \\(and the velocities of the bodies attached to it\\) physically invalid. To cope with this, some velocities were set to zero, since zero relative velocity is always physically valid.\n\nIf a `FreeGroup` exists within a model, then the pose of that collection of links can always be modified \\(uniformly across all links in the group\\) without having a detrimental impact on the velocities of any of the bodies. Similarly, the velocity of the group as a whole can be changed without invalidating any poses.\n\nEssentially `FreeGroup` is a blackbox for an unconstrained envelope of links. Those links may have constraints inside of the envelope, but from an outside perspective the group as a whole is unconstrained. So the `FreeGroup` is free to have an intuitive API without unexpected side effects.", "markup": "markdown", "html": "<p>Right, I had this concern in mind when proposing <code>FreeGroup</code>. The aim is to unify the concept for both generalized and maximal coordinate representations in a way that behaves intuitively.</p>\n<p>The key problem that resulted in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2598/fix2111/diff#comment-49451934\" rel=\"nofollow\">issue 2111</a> was that it allowed a single body to be moved irrespective of its constraints, potentially making its velocity (and the velocities of the bodies attached to it) physically invalid. To cope with this, some velocities were set to zero, since zero relative velocity is always physically valid.</p>\n<p>If a <code>FreeGroup</code> exists within a model, then the pose of that collection of links can always be modified (uniformly across all links in the group) without having a detrimental impact on the velocities of any of the bodies. Similarly, the velocity of the group as a whole can be changed without invalidating any poses.</p>\n<p>Essentially <code>FreeGroup</code> is a blackbox for an unconstrained envelope of links. Those links may have constraints inside of the envelope, but from an outside perspective the group as a whole is unconstrained. So the <code>FreeGroup</code> is free to have an intuitive API without unexpected side effects.</p>", "type": "rendered"}, "created_on": "2019-04-23T05:17:04.417571+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-04-23T05:17:04.433961+00:00", "type": "pullrequest_comment", "id": 99586835}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99585653.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99585653"}}, "parent": {"id": 99575686, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99575686.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99575686"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "now that I think about this, I'm reminded of [gazebo issue 2111](https://bitbucket.org/osrf/gazebo/issues/2111) (and associated [PR 2598](https://bitbucket.org/osrf/gazebo/pull-requests/2598/fix2111/diff#comment-49451934) and [PR 2814](https://bitbucket.org/osrf/gazebo/pull-requests/2814/fix-issue-2111-by-providing-options-to/diff)), and the issue that it's easier with generalized coordinates than with maximal coordinates to preserve joint velocities when changing the linear/angular velocity of the free joint of a skeleton / articulated model. In that issue, I believe we provided different behavior modes. It would probably be best to clearly specify the behavior type when creating this type of feature. The users could choose which feature they want to use, and it will be up to each physics plugin to try to implement them.", "markup": "markdown", "html": "<p>now that I think about this, I'm reminded of <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/2111\" rel=\"nofollow\">gazebo issue 2111</a> (and associated <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2598/fix2111/diff#comment-49451934\" rel=\"nofollow\">PR 2598</a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2814/fix-issue-2111-by-providing-options-to/diff\" rel=\"nofollow\">PR 2814</a>), and the issue that it's easier with generalized coordinates than with maximal coordinates to preserve joint velocities when changing the linear/angular velocity of the free joint of a skeleton / articulated model. In that issue, I believe we provided different behavior modes. It would probably be best to clearly specify the behavior type when creating this type of feature. The users could choose which feature they want to use, and it will be up to each physics plugin to try to implement them.</p>", "type": "rendered"}, "created_on": "2019-04-23T04:55:43.376446+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-23T04:55:43.385523+00:00", "type": "pullrequest_comment", "id": 99585653}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99584927.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99584927"}}, "parent": {"id": 99581355, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99581355.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99581355"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "that makes sense", "markup": "markdown", "html": "<p>that makes sense</p>", "type": "rendered"}, "created_on": "2019-04-23T04:40:40.996420+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-23T04:40:41.007920+00:00", "type": "pullrequest_comment", "id": 99584927}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99582673.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99582673"}}, "parent": {"id": 99581355, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99581355.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99581355"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Also, from a performance standpoint, an advantage of the `FreeGroup` concept is that if the user has multiple FreeGroup-related operations that they want to perform \\(e.g. set pose, set velocity\\), then the work of identifying the relevant set of joints/links doesn\u2019t need to be repeated for each operation.", "markup": "markdown", "html": "<p>Also, from a performance standpoint, an advantage of the <code>FreeGroup</code> concept is that if the user has multiple FreeGroup-related operations that they want to perform (e.g. set pose, set velocity), then the work of identifying the relevant set of joints/links doesn\u2019t need to be repeated for each operation.</p>", "type": "rendered"}, "created_on": "2019-04-23T03:52:10.073032+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-04-23T03:52:10.081819+00:00", "type": "pullrequest_comment", "id": 99582673}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99581355.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99581355"}}, "parent": {"id": 99575686, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99575686.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99575686"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "\\(Duplicating content from my comment on Asana\\):\n\nThe advantage of a `FreeGroup` API is that the user can know for certain that the operation is permissible before requesting it.\n\nWe could have model-level functions like that which only work conditionally, and we could have those functions provide a boolean return value to indicate if they succeeded, but I would personally prefer if the API expressed its capabilities a priori instead of a posteriori. I think that gives users greater ability to structure their code to handle the different capabilities of different kinds of models.", "markup": "markdown", "html": "<p>(Duplicating content from my comment on Asana):</p>\n<p>The advantage of a <code>FreeGroup</code> API is that the user can know for certain that the operation is permissible before requesting it.</p>\n<p>We could have model-level functions like that which only work conditionally, and we could have those functions provide a boolean return value to indicate if they succeeded, but I would personally prefer if the API expressed its capabilities a priori instead of a posteriori. I think that gives users greater ability to structure their code to handle the different capabilities of different kinds of models.</p>", "type": "rendered"}, "created_on": "2019-04-23T03:18:17.776694+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-04-23T03:18:17.786288+00:00", "type": "pullrequest_comment", "id": 99581355}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99575686.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99575686"}}, "parent": {"id": 88194800, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/88194800.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-88194800"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "@mxgrey what if instead of `Link::SetLinearVelocity`, we added `Model::SetLinearVelocity`, which should do the same thing in many cases, but allows to avoid new terminology (like `FreeGroup`).\n\nAlso, what if we provided `Model::ApplyRelativePose(Pose3)`, which would apply a pose transformation to all links in a model, without needing a concept of \"canonical link\"?\n\nI think these model-level functions would work as long as all the links in the model are part of a free group", "markup": "markdown", "html": "<p>@mxgrey what if instead of <code>Link::SetLinearVelocity</code>, we added <code>Model::SetLinearVelocity</code>, which should do the same thing in many cases, but allows to avoid new terminology (like <code>FreeGroup</code>).</p>\n<p>Also, what if we provided <code>Model::ApplyRelativePose(Pose3)</code>, which would apply a pose transformation to all links in a model, without needing a concept of \"canonical link\"?</p>\n<p>I think these model-level functions would work as long as all the links in the model are part of a free group</p>", "type": "rendered"}, "created_on": "2019-04-23T01:06:38.020316+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-23T01:06:38.040639+00:00", "type": "pullrequest_comment", "id": 99575686}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99390502.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99390502"}}, "parent": {"id": 88194800, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/88194800.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-88194800"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I think `FreeGroup` makes sense and sounds good to me.\n\nWe'd like to implement features for setting pose and linear/angular velocity on a free group sometime soon to support ign-gui tools for manipulating models.", "markup": "markdown", "html": "<p>I think <code>FreeGroup</code> makes sense and sounds good to me.</p>\n<p>We'd like to implement features for setting pose and linear/angular velocity on a free group sometime soon to support ign-gui tools for manipulating models.</p>", "type": "rendered"}, "created_on": "2019-04-19T08:07:51.521658+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-19T08:07:51.535514+00:00", "type": "pullrequest_comment", "id": 99390502}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "[WIP] Add Link features", "destination": {"commit": {"hash": "142a740dfd59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/142a740dfd59.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/142a740dfd59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "69e3dde74222", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/69e3dde74222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/69e3dde74222"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2019-04-18T16:02:06.727877+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/99054226.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-99054226"}}, "parent": {"id": 88030756, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/88030756.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-88030756"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "the `AddLinkExternalForceTorque` feature was added in pull request #79", "markup": "markdown", "html": "<p>the <code>AddLinkExternalForceTorque</code> feature was added in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/79/feature-for-adding-external-forces-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #79</a></p>", "type": "rendered"}, "created_on": "2019-04-17T00:18:03.333299+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-17T00:18:03.345631+00:00", "type": "pullrequest_comment", "id": 99054226}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "[WIP] Add Link features", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "69e3dde74222", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/69e3dde74222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/69e3dde74222"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-01-24T19:49:27.589630+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/88194800.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-88194800"}}, "parent": {"id": 87852101, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87852101.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87852101"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I think the trouble with \u201cUnconstrained Link\u201d is that it implies the link has no joints whatsoever, which would eliminate any articulated model, even though the functionality might still be useful for articulated models \\(e.g. if I want to add some velocity to the root link of a humanoid robot because I\u2019m launching it out of a canon\\).\n\nI would tweak your proposal with this: `FreeGroupPtr group = link->GetFreeGroup();`\n\nThe `FreeGroup` entity type refers to a subset of a model whose constraints are entirely self-contained. You could then call `group->SetComLinearVelocity(v);` to set the velocity of the group's center of mass or `group->SetRootLinearVelocity(v)` to set the velocity of the group\u2019s root link \\(a.k.a. \u201ccanonical\u201d link\\).\n\nI think this would solve most of the conceptual hangups with setting velocity, and it would apply equally well to generalized coordinates and maximal coordinates.\n\nIf the `link` from `link->GetFreeGroup()` belongs to a model subset that is constrained to the world, then the return value will be an invalid entity.\n\n\\(Note that I'm totally open to name suggestions besides `FreeGroup`\\).", "markup": "markdown", "html": "<p>I think the trouble with \u201cUnconstrained Link\u201d is that it implies the link has no joints whatsoever, which would eliminate any articulated model, even though the functionality might still be useful for articulated models (e.g. if I want to add some velocity to the root link of a humanoid robot because I\u2019m launching it out of a canon).</p>\n<p>I would tweak your proposal with this: <code>FreeGroupPtr group = link-&gt;GetFreeGroup();</code></p>\n<p>The <code>FreeGroup</code> entity type refers to a subset of a model whose constraints are entirely self-contained. You could then call <code>group-&gt;SetComLinearVelocity(v);</code> to set the velocity of the group's center of mass or <code>group-&gt;SetRootLinearVelocity(v)</code> to set the velocity of the group\u2019s root link (a.k.a. \u201ccanonical\u201d link).</p>\n<p>I think this would solve most of the conceptual hangups with setting velocity, and it would apply equally well to generalized coordinates and maximal coordinates.</p>\n<p>If the <code>link</code> from <code>link-&gt;GetFreeGroup()</code> belongs to a model subset that is constrained to the world, then the return value will be an invalid entity.</p>\n<p>(Note that I'm totally open to name suggestions besides <code>FreeGroup</code>).</p>", "type": "rendered"}, "created_on": "2019-01-16T06:22:39.348273+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-16T06:22:39.356632+00:00", "type": "pullrequest_comment", "id": 88194800}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/88030756.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-88030756"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Just an update from today's meeting. `SetVelocity` is a nice to have but not a blocker, we're using it on a system to do manual testing. On the other hand, something like `AddExternalForce` is currently blocking the implementation of a `LiftDrag` plugin.", "markup": "markdown", "html": "<p>Just an update from today's meeting. <code>SetVelocity</code> is a nice to have but not a blocker, we're using it on a system to do manual testing. On the other hand, something like <code>AddExternalForce</code> is currently blocking the implementation of a <code>LiftDrag</code> plugin.</p>", "type": "rendered"}, "created_on": "2019-01-15T02:19:00.614562+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-15T02:19:00.625138+00:00", "type": "pullrequest_comment", "id": 88030756}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "[WIP] Add Link features", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "585ce71313ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/585ce71313ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/585ce71313ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-12T01:11:11.588883+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87852101.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87852101"}}, "parent": {"id": 87841187, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87841187.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87841187"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I do agree with @mxgrey's concerns and recommendations. It might be a little confusing for people who are unfamiliar with a free joint (6 DOF joint) to use it to set velocities. How about an `UnconstrainedLink` entity and then we could have `link->CastToUnconstrainedLink()`? This could also be used to the the the velocity of a model. The model would have 'GetUnconstrainedLink` and it would return an `UnconstrainedLink` if the model's canonical link is unconstrained.", "markup": "markdown", "html": "<p>I do agree with @mxgrey's concerns and recommendations. It might be a little confusing for people who are unfamiliar with a free joint (6 DOF joint) to use it to set velocities. How about an <code>UnconstrainedLink</code> entity and then we could have <code>link-&gt;CastToUnconstrainedLink()</code>? This could also be used to the the the velocity of a model. The model would have 'GetUnconstrainedLink<code>and it would return an</code>UnconstrainedLink` if the model's canonical link is unconstrained.</p>", "type": "rendered"}, "created_on": "2019-01-11T22:00:04.379428+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-01-11T22:00:04.412361+00:00", "type": "pullrequest_comment", "id": 87852101}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87841187.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87841187"}}, "parent": {"id": 87592809, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87592809.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87592809"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "@scpeters @azeey , any opinions? It would be good to move forward with this PR to unblock some PRs on ign-gazebo that are using `SetLinearVelocity`", "markup": "markdown", "html": "<p>@scpeters @azeey , any opinions? It would be good to move forward with this PR to unblock some PRs on ign-gazebo that are using <code>SetLinearVelocity</code></p>", "type": "rendered"}, "created_on": "2019-01-11T19:39:25.817687+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-11T19:39:25.839259+00:00", "type": "pullrequest_comment", "id": 87841187}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87734328.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87734328"}}, "parent": {"id": 87718077, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87718077.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87718077"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Yeah, we break apart the implementation of the physics engine class based on features so that we can avoid having one insanely big source file that implements all the feature wrapping. But ultimately it all needs to be funneled down into one class that can be loaded by the plugin loader.", "markup": "markdown", "html": "<p>Yeah, we break apart the implementation of the physics engine class based on features so that we can avoid having one insanely big source file that implements all the feature wrapping. But ultimately it all needs to be funneled down into one class that can be loaded by the plugin loader.</p>", "type": "rendered"}, "created_on": "2019-01-11T02:32:54.914275+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2019-01-11T02:32:54.922551+00:00", "type": "pullrequest_comment", "id": 87734328}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87734054.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87734054"}}, "parent": {"id": 87718769, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87718769.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87718769"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "> I usually think of 2\\(b\\) as an external force, but I guess it depends on whether the physics engine has some internal support for actuators.\n\nThis is certainly a tricky one, and I'd say it boils down to how you choose to express your dynamic model. But at the very least, it's important to distinguish the actuator force \\(which is usually manipulated with a function like `Joint::SetForce(~)`\\) from any of the forces under Category 1.\n\n> I also think that it can be difficult at times to tell 1\\(3\\) from 1\\(4\\). For example, magnetic forces may be implemented by an external plugin which calls the\u00a0`SetAppliedForce`\u00a0API.\n\nI completely agree! I imagine a lot of plugin systems will use the API of 1\\(4\\) to actualize 1\\(3\\). It would be great if we could make an API to distinguish these somehow, but I don't have any great ideas off the top of my head. One thing that could help is to provide a function like `AddExternal[Force|Torque](~)` to avoid unintentionally overwriting the forces that another system has been applying. But this means we need to reset the external force/torque state with each simulation step, and we need to make it clear to users that we will do so.\n\n> It may also be useful to think about an \"Add\" API.\n\nI wrote out that last suggestion before reading this bullet point. I completely agree :grin: ", "markup": "markdown", "html": "<blockquote>\n<p>I usually think of 2(b) as an external force, but I guess it depends on whether the physics engine has some internal support for actuators.</p>\n</blockquote>\n<p>This is certainly a tricky one, and I'd say it boils down to how you choose to express your dynamic model. But at the very least, it's important to distinguish the actuator force (which is usually manipulated with a function like <code>Joint::SetForce(~)</code>) from any of the forces under Category 1.</p>\n<blockquote>\n<p>I also think that it can be difficult at times to tell 1(3) from 1(4). For example, magnetic forces may be implemented by an external plugin which calls the\u00a0<code>SetAppliedForce</code>\u00a0API.</p>\n</blockquote>\n<p>I completely agree! I imagine a lot of plugin systems will use the API of 1(4) to actualize 1(3). It would be great if we could make an API to distinguish these somehow, but I don't have any great ideas off the top of my head. One thing that could help is to provide a function like <code>AddExternal[Force|Torque](~)</code> to avoid unintentionally overwriting the forces that another system has been applying. But this means we need to reset the external force/torque state with each simulation step, and we need to make it clear to users that we will do so.</p>\n<blockquote>\n<p>It may also be useful to think about an \"Add\" API.</p>\n</blockquote>\n<p>I wrote out that last suggestion before reading this bullet point. I completely agree <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f601.png\" alt=\"\ud83d\ude01\" title=\":grin:\" data-emoji-short-name=\":grin:\" /> </p>", "type": "rendered"}, "created_on": "2019-01-11T02:25:56.861091+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-11T02:25:56.870178+00:00", "type": "pullrequest_comment", "id": 87734054}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87718769.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87718769"}}, "parent": {"id": 87593245, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87593245.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87593245"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I generally like the proposal, just a couple of comments:\n\n* I usually think of 2(b) as an external force, but I guess it depends on whether the physics engine has some internal support for actuators.\n\n* I also think that it can be difficult at times to tell 1(3) from 1(4). For example, magnetic forces may be implemented by an external plugin which calls the `SetAppliedForce` API.\n\n* It may also be useful to think about an \"Add\" API. Consider the case you have several plugins acting in parallel on a link, one implements wind, another buoyancy, another is a command from the user. The resulting behaviour should be the sum of all these external forces.", "markup": "markdown", "html": "<p>I generally like the proposal, just a couple of comments:</p>\n<ul>\n<li>\n<p>I usually think of 2(b) as an external force, but I guess it depends on whether the physics engine has some internal support for actuators.</p>\n</li>\n<li>\n<p>I also think that it can be difficult at times to tell 1(3) from 1(4). For example, magnetic forces may be implemented by an external plugin which calls the <code>SetAppliedForce</code> API.</p>\n</li>\n<li>\n<p>It may also be useful to think about an \"Add\" API. Consider the case you have several plugins acting in parallel on a link, one implements wind, another buoyancy, another is a command from the user. The resulting behaviour should be the sum of all these external forces.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2019-01-10T21:54:32.701355+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-10T21:54:32.715836+00:00", "type": "pullrequest_comment", "id": 87718769}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87718077.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87718077"}}, "parent": {"id": 87594428, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87594428.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87594428"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Thanks for the clarifications, I hadn't realized that all features ended up under the physics engine class.", "markup": "markdown", "html": "<p>Thanks for the clarifications, I hadn't realized that all features ended up under the physics engine class.</p>", "type": "rendered"}, "created_on": "2019-01-10T21:46:25.692136+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-01-10T21:46:25.703927+00:00", "type": "pullrequest_comment", "id": 87718077}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87594428.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87594428"}}, "parent": {"id": 87418062, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87418062.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87418062"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Yes, exactly this.\n\nTo elaborate on why this is: It's an unfortunate requirement of function resolution. All implementation functions for features need to ultimately be held by the same class \\(the physics engine plugin class\\), so each function needs a unique name. If we used the name `SetVelocity()` for setting the link velocity, then it might collide with a `SetVelocity()` for setting a joint velocity. The physics plugins may have to implement \\(i.e. override\\) an arbitrary collection of virtual functions from features, so it\u2019s important that we give them very explicit names to avoid ambiguity. If two features ever have implementation functions that share the same name, then those two features cannot be used together in the same physics engine plugin.", "markup": "markdown", "html": "<p>Yes, exactly this.</p>\n<p>To elaborate on why this is: It's an unfortunate requirement of function resolution. All implementation functions for features need to ultimately be held by the same class (the physics engine plugin class), so each function needs a unique name. If we used the name <code>SetVelocity()</code> for setting the link velocity, then it might collide with a <code>SetVelocity()</code> for setting a joint velocity. The physics plugins may have to implement (i.e. override) an arbitrary collection of virtual functions from features, so it\u2019s important that we give them very explicit names to avoid ambiguity. If two features ever have implementation functions that share the same name, then those two features cannot be used together in the same physics engine plugin.</p>", "type": "rendered"}, "created_on": "2019-01-10T06:13:10.437084+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2019-01-10T06:13:10.447985+00:00", "type": "pullrequest_comment", "id": 87594428}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87593245.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87593245"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I'm a little worried about the naming of the `[Set|Get][Force|Torque]()` functions. There are many different categories of force that act on a body:\n\n1. External forces applied by:\n\n    1. Collision\n    2. Friction\n    3. Other physical systems \\(e.g. magnetic\\)\n    4. The \u201cHand of God\u201d \\(i.e. the user applying a force for experimental purposes\\)\n    \n2. Internal forces applied by:\n\n    1. Joint constraints\n    2. Actuator force\n    \n\nHaving a function that's just called `SetForce(~)` leaves it ambiguous which of the above categories of force are being set. I would assume it means 1\\(d\\), but I can't rule out the possibility that it might also overwrite the values of 1\\(a-c\\). Having a function called `GetForce(~)` might imply that it's the sum of all the forces 1\\(a-d\\) \\+ 2\\(a-b\\), but then it wouldn\u2019t be symmetrical with the `SetForce(~)` function.\n\nI would recommend that we make these function names more specific. Some possible names to consider:\n\n    [Set|Get]AppliedForce() // refers to 1(d)\n    GetExternalForce() // refers to the sum of 1(a-d)\n    GetInternalForce() // refers to the sum of 2(a-b)\n    GetNetForce() // refers to the sum of all forces", "markup": "markdown", "html": "<p>I'm a little worried about the naming of the <code>[Set|Get][Force|Torque]()</code> functions. There are many different categories of force that act on a body:</p>\n<ol>\n<li>\n<p>External forces applied by:</p>\n<ol>\n<li>Collision</li>\n<li>Friction</li>\n<li>Other physical systems (e.g. magnetic)</li>\n<li>The \u201cHand of God\u201d (i.e. the user applying a force for experimental purposes)</li>\n</ol>\n</li>\n<li>\n<p>Internal forces applied by:</p>\n<ol>\n<li>Joint constraints</li>\n<li>Actuator force</li>\n</ol>\n</li>\n</ol>\n<p>Having a function that's just called <code>SetForce(~)</code> leaves it ambiguous which of the above categories of force are being set. I would assume it means 1(d), but I can't rule out the possibility that it might also overwrite the values of 1(a-c). Having a function called <code>GetForce(~)</code> might imply that it's the sum of all the forces 1(a-d) + 2(a-b), but then it wouldn\u2019t be symmetrical with the <code>SetForce(~)</code> function.</p>\n<p>I would recommend that we make these function names more specific. Some possible names to consider:</p>\n<div class=\"codehilite\"><pre><span></span>[Set|Get]AppliedForce() // refers to 1(d)\nGetExternalForce() // refers to the sum of 1(a-d)\nGetInternalForce() // refers to the sum of 2(a-b)\nGetNetForce() // refers to the sum of all forces\n</pre></div>", "type": "rendered"}, "created_on": "2019-01-10T05:52:59.993894+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-10T05:54:05.376096+00:00", "type": "pullrequest_comment", "id": 87593245}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87592809.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87592809"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Sorry for being late to this, but I'm very worried about the `SetLinearVelocity(~)` and `SetAngularVelocity(~)` functions. I think the ability to \u201cset\u201d the \u201cvelocity\u201d of a link in Gazebo was a recurring source of problems, because it doesn\u2019t make a lot of sense in the context of an articulated body. It can make perfect sense for an unarticulated rigid body, but once it has any joints there are many questions about what it actually means to \u201cset\u201d the \u201cvelocity\u201d. For example, should the parent and child joint velocities be adjusted? What if the body is rigidly anchored to the world by its joints?\n\nThat being said, it's certainly valuable to be able to directly set the velocity on an unarticulated rigid body, or set the base velocity of an articulated model. To do that, I might recommend some kind of proxy entity that you can only obtain when the link you're referring to has an unconstrained base. This would be similar to the \"FreeJoint\" of dartsim, which is a joint type that represents the absence of any joint constraints. Here's an example of this concept that uses the name `FreeJoint`, but we could use some other name if someone has a recommendation:\n\n    FreeJointPtr free = link->GetParentFreeJoint();\n    if(free)\n    {\n      free->SetLinearVelocity(linearVelocity);\n      free->SetAngularVelocity(angularVelocity);\n    }\n\nThe `Link` class itself would not have any `SetLinearVelocity(~)` or `SetAngularVelocity(~)` functions.\n\nThis would allow the same API to be used by physics engines that use either generalized coordinates or maximal coordinates, and it would avoid nonsensical physics input where someone is trying to set a physically impossible velocity on a body.", "markup": "markdown", "html": "<p>Sorry for being late to this, but I'm very worried about the <code>SetLinearVelocity(~)</code> and <code>SetAngularVelocity(~)</code> functions. I think the ability to \u201cset\u201d the \u201cvelocity\u201d of a link in Gazebo was a recurring source of problems, because it doesn\u2019t make a lot of sense in the context of an articulated body. It can make perfect sense for an unarticulated rigid body, but once it has any joints there are many questions about what it actually means to \u201cset\u201d the \u201cvelocity\u201d. For example, should the parent and child joint velocities be adjusted? What if the body is rigidly anchored to the world by its joints?</p>\n<p>That being said, it's certainly valuable to be able to directly set the velocity on an unarticulated rigid body, or set the base velocity of an articulated model. To do that, I might recommend some kind of proxy entity that you can only obtain when the link you're referring to has an unconstrained base. This would be similar to the \"FreeJoint\" of dartsim, which is a joint type that represents the absence of any joint constraints. Here's an example of this concept that uses the name <code>FreeJoint</code>, but we could use some other name if someone has a recommendation:</p>\n<div class=\"codehilite\"><pre><span></span>FreeJointPtr free = link-&gt;GetParentFreeJoint();\nif(free)\n{\n  free-&gt;SetLinearVelocity(linearVelocity);\n  free-&gt;SetAngularVelocity(angularVelocity);\n}\n</pre></div>\n\n\n<p>The <code>Link</code> class itself would not have any <code>SetLinearVelocity(~)</code> or <code>SetAngularVelocity(~)</code> functions.</p>\n<p>This would allow the same API to be used by physics engines that use either generalized coordinates or maximal coordinates, and it would avoid nonsensical physics input where someone is trying to set a physically impossible velocity on a body.</p>", "type": "rendered"}, "created_on": "2019-01-10T05:45:12.792709+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-10T05:45:12.799032+00:00", "type": "pullrequest_comment", "id": 87592809}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87571330.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87571330"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I'm looking into how we can incorporate frame semantics for setting link states", "markup": "markdown", "html": "<p>I'm looking into how we can incorporate frame semantics for setting link states</p>", "type": "rendered"}, "created_on": "2019-01-09T22:34:20.070975+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-01-09T22:34:20.078300+00:00", "type": "pullrequest_comment", "id": 87571330}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "[WIP] Add Link features", "destination": {"commit": {"hash": "83b15f89d1de", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/83b15f89d1de.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/83b15f89d1de"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3ad751997e5a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/3ad751997e5a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/3ad751997e5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-09T22:32:05.850736+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87418062.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87418062"}}, "parent": {"id": 87416338, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87416338.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87416338"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I believe the naming is intentional. If you look at the `SetLinkState` feature in `include/ignition/physics/Link.hh`, you'll see that it has a `SetTorque` function in the `Link` class and a `SetLinkTorque` function in the `Implementation` class. This file is part of the implementation, so it uses the `SetLinkTorque` function name, but the user side code will call something like `link->SetTorque(...)`", "markup": "markdown", "html": "<p>I believe the naming is intentional. If you look at the <code>SetLinkState</code> feature in <code>include/ignition/physics/Link.hh</code>, you'll see that it has a <code>SetTorque</code> function in the <code>Link</code> class and a <code>SetLinkTorque</code> function in the <code>Implementation</code> class. This file is part of the implementation, so it uses the <code>SetLinkTorque</code> function name, but the user side code will call something like <code>link-&gt;SetTorque(...)</code></p>", "type": "rendered"}, "created_on": "2019-01-08T21:12:37.146309+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-01-08T21:12:37.156962+00:00", "type": "pullrequest_comment", "id": 87418062}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417835.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417835"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "For what it's worth, the velocity API works for me on [this ign-gazebo PR](#!/ignitionrobotics/ign-gazebo/pull-requests/117/move3d-system/diff).", "markup": "markdown", "html": "<p>For what it's worth, the velocity API works for me on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/117/move3d-system/diff\" rel=\"nofollow\">this ign-gazebo PR</a>.</p>", "type": "rendered"}, "created_on": "2019-01-08T21:09:55.422699+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-08T21:09:55.431999+00:00", "type": "pullrequest_comment", "id": 87417835}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417753.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417753"}}, "parent": {"id": 87417435, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417435.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417435"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "[Here](https://bitbucket.org/osrf/gazebo/issues/354/setforce-settorque-in-class-odelink-point)'s an issue which could help understanding the kind of questions people using the API may have down the road.", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/354/setforce-settorque-in-class-odelink-point\" rel=\"nofollow\">Here</a>'s an issue which could help understanding the kind of questions people using the API may have down the road.</p>", "type": "rendered"}, "created_on": "2019-01-08T21:08:40.079098+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-01-08T21:08:40.088967+00:00", "type": "pullrequest_comment", "id": 87417753}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417733.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417733"}}, "parent": {"id": 87417435, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417435.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417435"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "@azeey and I were just discussing reference frames and frame semantics and are scheduling a discussion with @mxgrey about it\n\nthe persistence of these function calls is a good point", "markup": "markdown", "html": "<p>@azeey and I were just discussing reference frames and frame semantics and are scheduling a discussion with @mxgrey about it</p>\n<p>the persistence of these function calls is a good point</p>", "type": "rendered"}, "created_on": "2019-01-08T21:08:25.980753+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-01-08T21:08:26.018037+00:00", "type": "pullrequest_comment", "id": 87417733}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87417435.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87417435"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "It would be nice to document the reference frame and what's the end result: does setting force / velocity have a permanent effect or does it last one iteration and then physics takes on?", "markup": "markdown", "html": "<p>It would be nice to document the reference frame and what's the end result: does setting force / velocity have a permanent effect or does it last one iteration and then physics takes on?</p>", "type": "rendered"}, "created_on": "2019-01-08T21:05:12.840337+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-01-08T21:05:12.848968+00:00", "type": "pullrequest_comment", "id": 87417435}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87416338.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87416338"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "It feels a bit redundant to have the `Link` word in every function within the `LinkFeatures` class.", "markup": "markdown", "html": "<p>It feels a bit redundant to have the <code>Link</code> word in every function within the <code>LinkFeatures</code> class.</p>", "type": "rendered"}, "created_on": "2019-01-08T20:54:33.140255+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-01-08T20:54:33.148562+00:00", "type": "pullrequest_comment", "id": 87416338}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/87416174.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-87416174"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "\"getting basic joint state\" -> \"setting basic link state\"?", "markup": "markdown", "html": "<p>\"getting basic joint state\" -&gt; \"setting basic link state\"?</p>", "type": "rendered"}, "created_on": "2019-01-08T20:52:58.640421+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-01-08T20:52:58.647471+00:00", "type": "pullrequest_comment", "id": 87416174}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86928139.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86928139"}}, "parent": {"id": 86099693, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86099693.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86099693"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": ">  I don\u2019t know why this issue is not detected by the test in https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145\n\nThe test you linked to doesn't check the position after setting the angular velocity so it can't detect this issue. It also seems like the problem only occurs when the angular velocity vector is not aligned with one of the principal axes of the link. In the test you linked, the angular velocity is set to `(0, 2.0, 0)`. Setting it to something like `(0.1, 2.0, 0)` might expose the problem.\n\n> but perhaps the appropriate methods to call is FreeJoint::setAngularVelocity ( https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205 )\n\nThanks for pointing this out. I had simply copied the implementation from [DARTLink::SetAngularVel](https://bitbucket.org/osrf/gazebo/src/582827025ea59c832cc50e33d64a07ae13cad76a/gazebo/physics/dart/DARTLink.cc?at=default&fileviewer=file-view-default#DARTLink.cc-417). `FreeJoint::setAngularVelocity` was added in DART 6 and seems to do what we need, so I don't see why we can't use it. See 3ad7519. However, the issue of unexpected translation still remains with this change.", "markup": "markdown", "html": "<blockquote>\n<p>I don\u2019t know why this issue is not detected by the test in <a href=\"https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145</a></p>\n</blockquote>\n<p>The test you linked to doesn't check the position after setting the angular velocity so it can't detect this issue. It also seems like the problem only occurs when the angular velocity vector is not aligned with one of the principal axes of the link. In the test you linked, the angular velocity is set to <code>(0, 2.0, 0)</code>. Setting it to something like <code>(0.1, 2.0, 0)</code> might expose the problem.</p>\n<blockquote>\n<p>but perhaps the appropriate methods to call is FreeJoint::setAngularVelocity ( <a href=\"https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205</a> )</p>\n</blockquote>\n<p>Thanks for pointing this out. I had simply copied the implementation from <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/582827025ea59c832cc50e33d64a07ae13cad76a/gazebo/physics/dart/DARTLink.cc?at=default&amp;fileviewer=file-view-default#DARTLink.cc-417\" rel=\"nofollow\">DARTLink::SetAngularVel</a>. <code>FreeJoint::setAngularVelocity</code> was added in DART 6 and seems to do what we need, so I don't see why we can't use it. See <a href=\"#!/ignitionrobotics/ign-physics/commits/3ad7519\" rel=\"nofollow\" class=\"ap-connect-link\">3ad7519</a>. However, the issue of unexpected translation still remains with this change.</p>", "type": "rendered"}, "created_on": "2019-01-03T00:40:52.080711+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-01-03T00:40:52.090662+00:00", "type": "pullrequest_comment", "id": 86928139}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "Add Link features", "destination": {"commit": {"hash": "77f9c258e46f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/77f9c258e46f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/77f9c258e46f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3ad751997e5a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/3ad751997e5a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/3ad751997e5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-02T23:45:45.665193+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "Add Link features", "destination": {"commit": {"hash": "77f9c258e46f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/77f9c258e46f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/77f9c258e46f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "25a7b7585aaf", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/25a7b7585aaf.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/25a7b7585aaf"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-28T23:02:43.141531+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86486568.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86486568"}}, "parent": {"id": 86482624, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86482624.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86482624"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "yeah I\u2019ve seen the windows CI builds stuck a few times and recently the machine also started becoming unresponsive from time to time.", "markup": "markdown", "html": "<p>yeah I\u2019ve seen the windows CI builds stuck a few times and recently the machine also started becoming unresponsive from time to time.</p>", "type": "rendered"}, "created_on": "2018-12-21T21:34:58.985013+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-12-21T21:34:58.994167+00:00", "type": "pullrequest_comment", "id": 86486568}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86484691.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86484691"}}, "parent": {"id": 86482624, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86482624.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86482624"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "[This](https://bitbucket.org/osrf/release-tools/pull-requests/707/use-console_direct-instead-of/diff) may help pinpoint the place where it is stuck in the future.\n\nAnd for what it's worth, `EntityManagement_TEST.cc` takes so long to compile for me locally on Bionic that I've been disabling test compilation for all branches of `ign-physics`.", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/release-tools/pull-requests/707/use-console_direct-instead-of/diff\" rel=\"nofollow\">This</a> may help pinpoint the place where it is stuck in the future.</p>\n<p>And for what it's worth, <code>EntityManagement_TEST.cc</code> takes so long to compile for me locally on Bionic that I've been disabling test compilation for all branches of <code>ign-physics</code>.</p>", "type": "rendered"}, "created_on": "2018-12-21T20:57:52.164344+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-12-21T20:57:52.173071+00:00", "type": "pullrequest_comment", "id": 86484691}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86482624.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86482624"}}, "parent": {"id": 86482350, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86482350.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86482350"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Is it me or does it keep getting stuck?", "markup": "markdown", "html": "<p>Is it me or does it keep getting stuck?</p>", "type": "rendered"}, "created_on": "2018-12-21T20:20:31.620020+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-12-21T20:20:31.629640+00:00", "type": "pullrequest_comment", "id": 86482624}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86482350.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86482350"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I stopped the [ign-physics-win build](https://build.osrfoundation.org/job/ign_physics-pr-win/152/) for this PR as it seems to be stuck. I [queued](build) another one.", "markup": "markdown", "html": "<p>I stopped the <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ign_physics-pr-win/152/\" rel=\"nofollow\">ign-physics-win build</a> for this PR as it seems to be stuck. I <a data-is-external-link=\"true\" href=\"/ignitionrobotics/ign-physics/src/b5540de53faf792d5cda2087b3b7c91008e38a82/build\" rel=\"nofollow\">queued</a> another one.</p>", "type": "rendered"}, "created_on": "2018-12-21T20:15:30.092584+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2018-12-21T20:15:30.100025+00:00", "type": "pullrequest_comment", "id": 86482350}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "Add Link features", "destination": {"commit": {"hash": "7bcbbb0a5a54", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7bcbbb0a5a54.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7bcbbb0a5a54"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6dfc28c275f2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/6dfc28c275f2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/6dfc28c275f2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2018-12-21T16:08:59.280601+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86099693.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86099693"}}, "parent": {"id": 86093437, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86093437.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86093437"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Sorry, I misinterpreted your comment.  In that case  I am not a big  expert of DART API/conventions, and I don\u2019t know why this issue is not detected by the test in [https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics\\_link.cc#lines-145](https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145) , but perhaps the appropriate methods to call is `FreeJoint::setAngularVelocity` \\( [https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/Fre\\(eJoint.hpp#L205](https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205) \\). Clearly that depends on the specific semantics of the `SetLinearVelocity` and `SetAngularVelocity` methods, I assuming they were consistent with the old Gazebo API that used  to be \\(if I am not wrong\\): \n\n* `SetLinearVelocity` : if \u1d42p \u2208 \u211d\u00b3 is the position of the origin of the link in world frame, then the `SetLinearVelocity`  method sets \u1d42p\u0307 \u2208 \u211d\u00b3\n* `SetAngularVelocity` :  \u1d42R\u1d66 \u2208 SO\\(3\\) is the rotation matrix that multiplied by a vector oriented in the body frame \u03b2 rotates it in the world frame W, then `SetAngularVelocity`  set the angular velocity \u1d42\u03c9 \u2208 \u211d\u00b3 s.t. \u1d42R\u0307\u1d66 = S\\(\u1d42\u03c9\\) \u1d42R\u1d66 , where S : \u211d\u00b3 \u2192  so\\(3\\) is the skew-symmetric matrix operator.\n\nI have  the impression that assuming this semantics, the method implementation are already strange, as in [#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97](#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97) `genVel` should be already expressed with the orientation of the world, and instead is rotated again to express it in the world frame \\(unless the comment is misleading\\).", "markup": "markdown", "html": "<p>Sorry, I misinterpreted your comment.  In that case  I am not a big  expert of DART API/conventions, and I don\u2019t know why this issue is not detected by the test in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145</a> , but perhaps the appropriate methods to call is <code>FreeJoint::setAngularVelocity</code> ( <a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205\" rel=\"nofollow\">https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/Fre(eJoint.hpp#L205</a> ). Clearly that depends on the specific semantics of the <code>SetLinearVelocity</code> and <code>SetAngularVelocity</code> methods, I assuming they were consistent with the old Gazebo API that used  to be (if I am not wrong): </p>\n<ul>\n<li><code>SetLinearVelocity</code> : if \u1d42p \u2208 \u211d\u00b3 is the position of the origin of the link in world frame, then the <code>SetLinearVelocity</code>  method sets \u1d42p\u0307 \u2208 \u211d\u00b3</li>\n<li><code>SetAngularVelocity</code> :  \u1d42R\u1d66 \u2208 SO(3) is the rotation matrix that multiplied by a vector oriented in the body frame \u03b2 rotates it in the world frame W, then <code>SetAngularVelocity</code>  set the angular velocity \u1d42\u03c9 \u2208 \u211d\u00b3 s.t. \u1d42R\u0307\u1d66 = S(\u1d42\u03c9) \u1d42R\u1d66 , where S : \u211d\u00b3 \u2192  so(3) is the skew-symmetric matrix operator.</li>\n</ul>\n<p>I have  the impression that assuming this semantics, the method implementation are already strange, as in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97\" rel=\"nofollow\">#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97</a> <code>genVel</code> should be already expressed with the orientation of the world, and instead is rotated again to express it in the world frame (unless the comment is misleading).</p>", "type": "rendered"}, "created_on": "2018-12-18T22:47:19.923037+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "inline": {}, "updated_on": "2018-12-18T22:47:20.218013+00:00", "type": "pullrequest_comment", "id": 86099693}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86093437.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86093437"}}, "parent": {"id": 86092343, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86092343.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86092343"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Just to be clear, I meant that the link translates in the x or y direction. I think the phenomena you mentioned speak to the complex rotations of the body. I couldn't find anything about it's translation, although, the video in the Tennis racket theorem shows the object translating. Also, I tried doing this in Gazebo with ODE and Bullet and the link does not translate in any other direction than the force I applied.", "markup": "markdown", "html": "<p>Just to be clear, I meant that the link translates in the x or y direction. I think the phenomena you mentioned speak to the complex rotations of the body. I couldn't find anything about it's translation, although, the video in the Tennis racket theorem shows the object translating. Also, I tried doing this in Gazebo with ODE and Bullet and the link does not translate in any other direction than the force I applied.</p>", "type": "rendered"}, "created_on": "2018-12-18T21:37:45.757129+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-12-18T21:37:45.770540+00:00", "type": "pullrequest_comment", "id": 86093437}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86092343.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86092343"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I guess this is normal. For initial angular velocities that are not aligned with one of the principal axis of link, with zero external torque you get quite complex motions, see [https://en.wikipedia.org/wiki/Poinsot's\\_ellipsoid#Special\\_case](https://en.wikipedia.org/wiki/Poinsot%27s_ellipsoid#Special_case) . Furthermore, even if the  angular velocity is aligned with the second principal axis, the motion is unstable due to the Tennis racket theorem [https://en.wikipedia.org/wiki/Tennis\\_racket\\_theorem](https://en.wikipedia.org/wiki/Tennis_racket_theorem) .", "markup": "markdown", "html": "<p>I guess this is normal. For initial angular velocities that are not aligned with one of the principal axis of link, with zero external torque you get quite complex motions, see <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Poinsot%27s_ellipsoid#Special_case\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Poinsot's_ellipsoid#Special_case</a> . Furthermore, even if the  angular velocity is aligned with the second principal axis, the motion is unstable due to the Tennis racket theorem <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Tennis_racket_theorem\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Tennis_racket_theorem</a> .</p>", "type": "rendered"}, "created_on": "2018-12-18T21:24:56.345235+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "inline": {}, "updated_on": "2018-12-18T21:24:56.424208+00:00", "type": "pullrequest_comment", "id": 86092343}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/85319400.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-85319400"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "I should mention that most of the code that interacts with DART was taken from the original Gazebo [DARTLink.cc](https://bitbucket.org/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/gazebo/physics/dart/DARTLink.cc?at=default&fileviewer=file-view-default)", "markup": "markdown", "html": "<p>I should mention that most of the code that interacts with DART was taken from the original Gazebo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/0110572a49ba08936c9ac1972771db391b5ab721/gazebo/physics/dart/DARTLink.cc?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">DARTLink.cc</a></p>", "type": "rendered"}, "created_on": "2018-12-11T18:47:50.798150+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-12-11T18:47:50.805710+00:00", "type": "pullrequest_comment", "id": 85319400}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "Add Link features", "destination": {"commit": {"hash": "4732aad04aa5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4732aad04aa5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4732aad04aa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4a52190bc132", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4a52190bc132.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4a52190bc132"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-10T23:03:50.821886+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}, {"update": {"description": "In particular, this pull request adds the `GetLinkForceTorque` and `SetLinkState` features. The `SetLinkState` feature can be used to set a link's linear/angular velocity as well as the applied force/torque on the link. I opted for not creating a `GetLinkState` feature that has velocity getters because that link velocities can be obtained through the FrameSemantics feature.", "title": "Add Link features", "destination": {"commit": {"hash": "4732aad04aa5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4732aad04aa5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4732aad04aa5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4a52190bc132", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4a52190bc132.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4a52190bc132"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "link_features"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-10T23:03:50.780188+00:00"}, "pull_request": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}}]}