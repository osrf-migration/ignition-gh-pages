{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86099693.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:4a52190bc132..7bcbbb0a5a54?path=dartsim%2Fsrc%2FLinkFeatures_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86099693"}}, "parent": {"id": 86093437, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46/comments/86093437.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46/_/diff#comment-86093437"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 46, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/46.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/46"}}, "title": "[WIP] Add Link features"}, "content": {"raw": "Sorry, I misinterpreted your comment.  In that case  I am not a big  expert of DART API/conventions, and I don\u2019t know why this issue is not detected by the test in [https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics\\_link.cc#lines-145](https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145) , but perhaps the appropriate methods to call is `FreeJoint::setAngularVelocity` \\( [https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/Fre\\(eJoint.hpp#L205](https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205) \\). Clearly that depends on the specific semantics of the `SetLinearVelocity` and `SetAngularVelocity` methods, I assuming they were consistent with the old Gazebo API that used  to be \\(if I am not wrong\\): \n\n* `SetLinearVelocity` : if \u1d42p \u2208 \u211d\u00b3 is the position of the origin of the link in world frame, then the `SetLinearVelocity`  method sets \u1d42p\u0307 \u2208 \u211d\u00b3\n* `SetAngularVelocity` :  \u1d42R\u1d66 \u2208 SO\\(3\\) is the rotation matrix that multiplied by a vector oriented in the body frame \u03b2 rotates it in the world frame W, then `SetAngularVelocity`  set the angular velocity \u1d42\u03c9 \u2208 \u211d\u00b3 s.t. \u1d42R\u0307\u1d66 = S\\(\u1d42\u03c9\\) \u1d42R\u1d66 , where S : \u211d\u00b3 \u2192  so\\(3\\) is the skew-symmetric matrix operator.\n\nI have  the impression that assuming this semantics, the method implementation are already strange, as in [#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97](#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97) `genVel` should be already expressed with the orientation of the world, and instead is rotated again to express it in the world frame \\(unless the comment is misleading\\).", "markup": "markdown", "html": "<p>Sorry, I misinterpreted your comment.  In that case  I am not a big  expert of DART API/conventions, and I don\u2019t know why this issue is not detected by the test in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/42e1138a7af08d199df7e78ece2a5ae573f52c35/test/integration/physics_link.cc#lines-145</a> , but perhaps the appropriate methods to call is <code>FreeJoint::setAngularVelocity</code> ( <a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/FreeJoint.hpp#L205\" rel=\"nofollow\">https://github.com/dartsim/dart/blob/a206b1995a4c4ee96de691351cb109b808d0a347/dart/dynamics/Fre(eJoint.hpp#L205</a> ). Clearly that depends on the specific semantics of the <code>SetLinearVelocity</code> and <code>SetAngularVelocity</code> methods, I assuming they were consistent with the old Gazebo API that used  to be (if I am not wrong): </p>\n<ul>\n<li><code>SetLinearVelocity</code> : if \u1d42p \u2208 \u211d\u00b3 is the position of the origin of the link in world frame, then the <code>SetLinearVelocity</code>  method sets \u1d42p\u0307 \u2208 \u211d\u00b3</li>\n<li><code>SetAngularVelocity</code> :  \u1d42R\u1d66 \u2208 SO(3) is the rotation matrix that multiplied by a vector oriented in the body frame \u03b2 rotates it in the world frame W, then <code>SetAngularVelocity</code>  set the angular velocity \u1d42\u03c9 \u2208 \u211d\u00b3 s.t. \u1d42R\u0307\u1d66 = S(\u1d42\u03c9) \u1d42R\u1d66 , where S : \u211d\u00b3 \u2192  so(3) is the skew-symmetric matrix operator.</li>\n</ul>\n<p>I have  the impression that assuming this semantics, the method implementation are already strange, as in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97\" rel=\"nofollow\">#!/ignitionrobotics/ign-physics/pull-requests/46/add-link-features/diff#Ldartsim/src/LinkFeatures.ccT97</a> <code>genVel</code> should be already expressed with the orientation of the world, and instead is rotated again to express it in the world frame (unless the comment is misleading).</p>", "type": "rendered"}, "created_on": "2018-12-18T22:47:19.923037+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "inline": {"to": 134, "from": null, "outdated": true, "path": "dartsim/src/LinkFeatures_TEST.cc"}, "updated_on": "2018-12-18T22:47:20.218013+00:00", "type": "pullrequest_comment", "id": 86099693}