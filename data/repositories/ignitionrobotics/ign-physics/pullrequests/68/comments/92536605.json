{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/68/comments/92536605.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:66103d089ef4..77c2e440a210?path=include%2Fignition%2Fphysics%2FShape.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/68/_/diff#comment-92536605"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 68, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/68.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/68"}}, "title": "[Acropolis] Adding a bound box feature"}, "content": {"raw": "Returning a `math::AxisAlignedBox` assumes that all bounding boxes are 3D. What we've been doing so far for Features is define a type based on Eigen in [Geometry.hh](#!/ignitionrobotics/ign-physics/src/77c2e440a2105427bc3261946f8c7983c06c4bd3/include/ignition/physics/Geometry.hh?at=default&fileviewer=file-view-default) that can take a Policy as a template parameter. We then create an alias for policy-specific type in the Feature definition, eg.\n\n```\nusing PoseType = typename FromPolicy<PolicyT>::template Use<Pose>;\n```\nThen in the dartsim plugin implementation we use the 3D version for everything.", "markup": "markdown", "html": "<p>Returning a <code>math::AxisAlignedBox</code> assumes that all bounding boxes are 3D. What we've been doing so far for Features is define a type based on Eigen in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/src/77c2e440a2105427bc3261946f8c7983c06c4bd3/include/ignition/physics/Geometry.hh?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">Geometry.hh</a> that can take a Policy as a template parameter. We then create an alias for policy-specific type in the Feature definition, eg.</p>\n<div class=\"codehilite\"><pre><span></span>using PoseType = typename FromPolicy&lt;PolicyT&gt;::template Use&lt;Pose&gt;;\n</pre></div>\n\n\n<p>Then in the dartsim plugin implementation we use the 3D version for everything.</p>", "type": "rendered"}, "created_on": "2019-02-21T22:40:50.848074+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 116, "from": null, "outdated": true, "path": "include/ignition/physics/Shape.hh"}, "updated_on": "2019-02-21T22:40:50.859151+00:00", "type": "pullrequest_comment", "id": 92536605}