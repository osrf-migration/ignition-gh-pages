{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/27/comments/74174556.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:dcd956d88d56..6cb137ea8718?path=include%2Fignition%2Fphysics%2FJoint.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/27/_/diff#comment-74174556"}}, "parent": {"id": 74169599, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/27/comments/74169599.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/27/_/diff#comment-74169599"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 27, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/27.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/27"}}, "title": "Feature System Part 3: Revolute Joint (plus framework for other joint types)"}, "content": {"raw": "Would an engine-specific wrapper be able to compute and return the joint acceleration for each engine? If so, we wouldn\u2019t need to partition the feature.\n\nThat said, I\u2019m not against further granularity. We just need to consider the trade-offs between high granularity and the complexity of keeping track of lots of partitioned features. \\(Edit: This also adds to complexity for users, as they try to figure out whether they need to be adding more features on top of whatever we determine the \u201cstandard\u201d set should be.\\)\n\nSince we\u2019re still in early alpha, I might recommend relatively modest granularity, with the option of decomposing features further as the need arises. Partitioning a feature in the future should have no impact on plugins that are already implementing the feature, as long as we replace the feature with a FeatureList that has the same name and the same virtual functions.", "markup": "markdown", "html": "<p>Would an engine-specific wrapper be able to compute and return the joint acceleration for each engine? If so, we wouldn\u2019t need to partition the feature.</p>\n<p>That said, I\u2019m not against further granularity. We just need to consider the trade-offs between high granularity and the complexity of keeping track of lots of partitioned features. (Edit: This also adds to complexity for users, as they try to figure out whether they need to be adding more features on top of whatever we determine the \u201cstandard\u201d set should be.)</p>\n<p>Since we\u2019re still in early alpha, I might recommend relatively modest granularity, with the option of decomposing features further as the need arises. Partitioning a feature in the future should have no impact on plugins that are already implementing the feature, as long as we replace the feature with a FeatureList that has the same name and the same virtual functions.</p>", "type": "rendered"}, "created_on": "2018-08-28T02:18:50.792166+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/Joint.hh"}, "updated_on": "2018-08-28T02:36:51.587642+00:00", "type": "pullrequest_comment", "id": 74174556}