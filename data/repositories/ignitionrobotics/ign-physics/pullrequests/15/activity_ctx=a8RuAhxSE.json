{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/15/comments/59764128.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/15/_/diff#comment-59764128"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/15.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/15"}}, "title": "Part 4: DARTDoublePendulum, PID control using dart (rebranched)"}, "content": {"raw": "comment from @JChoclin:\n\nLooks great. Everything is ok and works as expected. Here is the evolution of the error in the test.\n\n![plot](https://bitbucket-assetroot.s3.amazonaws.com/repository/5q9rMzd/303082070-image.png?Signature=R4c8%2FXsiHAh8lfqHr%2F%2FzaVsYEfw%3D&Expires=1521829473&AWSAccessKeyId=AKIAIQWXW6WLXMB5QZAQ&versionId=4tTRy_0XWBCgKbEt_h2DXpvx_SwtXMmk)\n\nCan I recommend to add some comments to explain what is going on with the abstract interface that is being implemented? I think that some comments highlighting the usage of Composite and Specify data would be nice. Maybe add some comments in ForwardStep.hh or maybe add the comments in the test when input and output classes are used.\n\nI would add some explanation to DARTDoublePendulum.cc or DARTDoublePendulum.hh explaining why we decided to include these files too, adding some class comments. Maybe we should add a readme explaining the different examples. Something to document this example.\n\nAlso, code-check shows many warnings, but those are not related to this PR.", "markup": "markdown", "html": "<p>comment from @JChoclin:</p>\n<p>Looks great. Everything is ok and works as expected. Here is the evolution of the error in the test.</p>\n<p><img alt=\"plot\" src=\"https://bitbucket-assetroot.s3.amazonaws.com/repository/5q9rMzd/303082070-image.png?Signature=R4c8%2FXsiHAh8lfqHr%2F%2FzaVsYEfw%3D&amp;Expires=1521829473&amp;AWSAccessKeyId=AKIAIQWXW6WLXMB5QZAQ&amp;versionId=4tTRy_0XWBCgKbEt_h2DXpvx_SwtXMmk\" /></p>\n<p>Can I recommend to add some comments to explain what is going on with the abstract interface that is being implemented? I think that some comments highlighting the usage of Composite and Specify data would be nice. Maybe add some comments in ForwardStep.hh or maybe add the comments in the test when input and output classes are used.</p>\n<p>I would add some explanation to DARTDoublePendulum.cc or DARTDoublePendulum.hh explaining why we decided to include these files too, adding some class comments. Maybe we should add a readme explaining the different examples. Something to document this example.</p>\n<p>Also, code-check shows many warnings, but those are not related to this PR.</p>", "type": "rendered"}, "created_on": "2018-03-23T20:02:22.684402+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-23T20:02:22.755420+00:00", "type": "pullrequest_comment", "id": 59764128}, "pull_request": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/15.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/15"}}, "title": "Part 4: DARTDoublePendulum, PID control using dart (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #12. Original description:\r\n\r\nThis is a simplified version of the Operational Space controller in pull request #2 that uses DART to simulate a double pendulum (borrowed from [gazebo_ros_demos/rrbot_description](https://github.com/ros-simulation/gazebo_ros_demos/blob/kinetic-devel/rrbot_description/urdf/rrbot.xml)), but a PID controller is implemented outside the plugin in `DoublePendulum_TEST.cc`, with the plugin interface providing effort inputs and joint position outputs. A follow-up pull request will re-implement the physics backend with another physics engine and use the same PID controller in the test. This goal is to demonstrate an abstract interface in which multiple physics engines can be plugged in and out.", "title": "Example: double pendulum with PID control using dart (rebranched)", "destination": {"commit": {"hash": "13ad5b5e76e7", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/13ad5b5e76e7.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/13ad5b5e76e7"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T18:00:10.599282+00:00"}, "pull_request": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/15.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/15"}}, "title": "Part 4: DARTDoublePendulum, PID control using dart (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #12. Original description:\r\n\r\nThis is a simplified version of the Operational Space controller in pull request #2 that uses DART to simulate a double pendulum (borrowed from [gazebo_ros_demos/rrbot_description](https://github.com/ros-simulation/gazebo_ros_demos/blob/kinetic-devel/rrbot_description/urdf/rrbot.xml)), but a PID controller is implemented outside the plugin in `DoublePendulum_TEST.cc`, with the plugin interface providing effort inputs and joint position outputs. A follow-up pull request will re-implement the physics backend with another physics engine and use the same PID controller in the test. This goal is to demonstrate an abstract interface in which multiple physics engines can be plugged in and out.", "title": "Example: double pendulum with PID control using dart (rebranched)", "destination": {"commit": {"hash": "13ad5b5e76e7", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/13ad5b5e76e7.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/13ad5b5e76e7"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T18:00:10.564816+00:00"}, "pull_request": {"type": "pullrequest", "id": 15, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/15.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/15"}}, "title": "Part 4: DARTDoublePendulum, PID control using dart (rebranched)"}}]}