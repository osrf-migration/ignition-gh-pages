{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/71/comments/93516359.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:1a8881ff29cb..193af0ae366b?path=dartsim%2Fsrc%2FSimulationFeatures_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/71/_/diff#comment-93516359"}}, "parent": {"id": 93513204, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/71/comments/93513204.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/71/_/diff#comment-93513204"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/71.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/71"}}, "title": "Correct the calculation of AABB transformations and give frame semantics to AABB types"}, "content": {"raw": "What it boils down to is the axis aligned bounding box is agnostic to the underlying shape. As far as the physics engine is concerned, this sphere may as well be a cube. When the shape is rotated, it acts as though the cube is rotated, because otherwise \\(as Nate points out [here](#!/ignitionrobotics/ign-physics/pull-requests/71/correct-the-calculation-of-aabb/diff#comment-93514430)\\), the physics engine would need to recalculate the bounding box from scratch for the new orientation \\(which can be very expensive\\).\n\nThe purpose of an AABB is just to provide a first-order approximation for quickly culling pairs of objects that are obviously not in contact. The inflation that we see from these transformations may result in false positives for that first-order test, but being able to perform that first-order test as quickly as possible will still pay off handsomely in large environments with many objects.\n\nIn the special case of a sphere we could theoretically eliminate that inflation without loss of precision, but the amount of machinery we would need to handle that one special case isn\u2019t worth it \\(at least in my opinion\\) when the maximum inflation is only ~41% of the radius anyway, and the second-order test for spheres is usually super duper fast anyway.", "markup": "markdown", "html": "<p>What it boils down to is the axis aligned bounding box is agnostic to the underlying shape. As far as the physics engine is concerned, this sphere may as well be a cube. When the shape is rotated, it acts as though the cube is rotated, because otherwise (as Nate points out <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/71/correct-the-calculation-of-aabb/diff#comment-93514430\" rel=\"nofollow\">here</a>), the physics engine would need to recalculate the bounding box from scratch for the new orientation (which can be very expensive).</p>\n<p>The purpose of an AABB is just to provide a first-order approximation for quickly culling pairs of objects that are obviously not in contact. The inflation that we see from these transformations may result in false positives for that first-order test, but being able to perform that first-order test as quickly as possible will still pay off handsomely in large environments with many objects.</p>\n<p>In the special case of a sphere we could theoretically eliminate that inflation without loss of precision, but the amount of machinery we would need to handle that one special case isn\u2019t worth it (at least in my opinion) when the maximum inflation is only ~41% of the radius anyway, and the second-order test for spheres is usually super duper fast anyway.</p>", "type": "rendered"}, "created_on": "2019-03-01T16:39:14.959151+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 162, "from": null, "outdated": false, "path": "dartsim/src/SimulationFeatures_TEST.cc"}, "updated_on": "2019-03-01T16:39:14.976149+00:00", "type": "pullrequest_comment", "id": 93516359}