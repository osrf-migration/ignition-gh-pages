{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85/comments/100931252.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85/_/diff#comment-100931252"}}, "parent": {"id": 100904751, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85/comments/100904751.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85/_/diff#comment-100904751"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 85, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85"}}, "title": "Add prototype of FreeGroup features"}, "content": {"raw": "I have the complete opposite view. I think if someone wants to represent many unconstrained objects as being part of a single \u201cmodel\u201d instead of many individual models, then that strongly implies that they want those objects to act as a cohesive unit in some way. Otherwise why wouldn\u2019t they just create many models and set the velocities individually?\n\nFor example, someone might want to represent a swarm of objects in one model and set the velocity of the overall swarm coherently so that everything remains in sync.\n\nAnd even in your example, a user can still accomplish what they want with the current behavior; they just need to loop through the links, get a FreeGroup for each link, and set the velocity of each link\u2019s FreeGroup. The cost of obtaining a FreeGroup for an unconstrained root link is hardly anything \\(it\u2019s effectively just one string comparison to identify that the parent joint is a FreeJoint\\), so performance isn\u2019t really a concern.", "markup": "markdown", "html": "<p>I have the complete opposite view. I think if someone wants to represent many unconstrained objects as being part of a single \u201cmodel\u201d instead of many individual models, then that strongly implies that they want those objects to act as a cohesive unit in some way. Otherwise why wouldn\u2019t they just create many models and set the velocities individually?</p>\n<p>For example, someone might want to represent a swarm of objects in one model and set the velocity of the overall swarm coherently so that everything remains in sync.</p>\n<p>And even in your example, a user can still accomplish what they want with the current behavior; they just need to loop through the links, get a FreeGroup for each link, and set the velocity of each link\u2019s FreeGroup. The cost of obtaining a FreeGroup for an unconstrained root link is hardly anything (it\u2019s effectively just one string comparison to identify that the parent joint is a FreeJoint), so performance isn\u2019t really a concern.</p>", "type": "rendered"}, "created_on": "2019-05-06T03:14:53.658282+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-05-06T03:14:53.670918+00:00", "type": "pullrequest_comment", "id": 100931252}