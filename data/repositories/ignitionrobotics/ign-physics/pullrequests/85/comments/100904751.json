{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85/comments/100904751.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85/_/diff#comment-100904751"}}, "parent": {"id": 100886237, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85/comments/100886237.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85/_/diff#comment-100886237"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 85, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/85.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/85"}}, "title": "Add prototype of FreeGroup features"}, "content": {"raw": "I'll clarify; I don't think it's a matter of right and wrong, it's more a matter of utility. I can't imagine ever wanting to use the behavior shown in the bottom animation, which would cause the model to fly apart, while I could imagine having a model with a bunch of spheres on a table (no joints) and warning to make them all spin in place (like the top animation). I think the following would give this behavior:\n\n~~~\ndiff -r f2a83cc66c18 dartsim/src/FreeGroupFeatures.cc\n--- a/dartsim/src/FreeGroupFeatures.cc  Thu May 02 13:25:05 2019 -0700\n+++ b/dartsim/src/FreeGroupFeatures.cc  Fri May 03 18:59:40 2019 -0700\n@@ -169,20 +169,14 @@\n \n   const Eigen::Vector3d delta_w =\n       _angularVelocity - info.link->getAngularVelocity();\n-  const Eigen::Vector3d origin = info.link->getTransform().translation();\n \n   for (std::size_t i = 0; i < info.model->getNumTrees(); ++i)\n   {\n     auto *bn = info.model->getRootBodyNode(i);\n-    const Eigen::Vector3d r = bn->getTransform().translation() - origin;\n-    const Eigen::Vector3d v = bn->getLinearVelocity();\n-    const Eigen::Vector3d w = bn->getAngularVelocity();\n+    const Eigen::Vector3d new_w = bn->getAngularVelocity() + delta_w;\n \n-    dart::dynamics::FreeJoint *fj =\n-        static_cast<dart::dynamics::FreeJoint*>(bn->getParentJoint());\n-\n-    fj->setLinearVelocity(v + delta_w.cross(r));\n-    fj->setAngularVelocity(w + delta_w);\n+    static_cast<dart::dynamics::FreeJoint*>(bn->getParentJoint())\n+        ->setAngularVelocity(new_w);\n   }\n }\n \n~~~", "markup": "markdown", "html": "<p>I'll clarify; I don't think it's a matter of right and wrong, it's more a matter of utility. I can't imagine ever wanting to use the behavior shown in the bottom animation, which would cause the model to fly apart, while I could imagine having a model with a bunch of spheres on a table (no joints) and warning to make them all spin in place (like the top animation). I think the following would give this behavior:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r f2a83cc66c18 dartsim/src/FreeGroupFeatures.cc</span>\n<span class=\"gd\">--- a/dartsim/src/FreeGroupFeatures.cc  Thu May 02 13:25:05 2019 -0700</span>\n<span class=\"gi\">+++ b/dartsim/src/FreeGroupFeatures.cc  Fri May 03 18:59:40 2019 -0700</span>\n<span class=\"gu\">@@ -169,20 +169,14 @@</span>\n\n   const Eigen::Vector3d delta_w =\n       _angularVelocity - info.link-&gt;getAngularVelocity();\n<span class=\"gd\">-  const Eigen::Vector3d origin = info.link-&gt;getTransform().translation();</span>\n\n   for (std::size_t i = 0; i &lt; info.model-&gt;getNumTrees(); ++i)\n   {\n     auto *bn = info.model-&gt;getRootBodyNode(i);\n<span class=\"gd\">-    const Eigen::Vector3d r = bn-&gt;getTransform().translation() - origin;</span>\n<span class=\"gd\">-    const Eigen::Vector3d v = bn-&gt;getLinearVelocity();</span>\n<span class=\"gd\">-    const Eigen::Vector3d w = bn-&gt;getAngularVelocity();</span>\n<span class=\"gi\">+    const Eigen::Vector3d new_w = bn-&gt;getAngularVelocity() + delta_w;</span>\n\n<span class=\"gd\">-    dart::dynamics::FreeJoint *fj =</span>\n<span class=\"gd\">-        static_cast&lt;dart::dynamics::FreeJoint*&gt;(bn-&gt;getParentJoint());</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-    fj-&gt;setLinearVelocity(v + delta_w.cross(r));</span>\n<span class=\"gd\">-    fj-&gt;setAngularVelocity(w + delta_w);</span>\n<span class=\"gi\">+    static_cast&lt;dart::dynamics::FreeJoint*&gt;(bn-&gt;getParentJoint())</span>\n<span class=\"gi\">+        -&gt;setAngularVelocity(new_w);</span>\n   }\n }\n</pre></div>", "type": "rendered"}, "created_on": "2019-05-04T02:02:03.276248+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-05-04T02:02:03.287114+00:00", "type": "pullrequest_comment", "id": 100904751}