{"rendered": {"reason": {"raw": "revive after github migration", "markup": "markdown", "html": "<p>revive after github migration</p>", "type": "rendered"}, "description": {"raw": "The original plugin relied on a few undesired points:\r\n\r\n* Dummy implementation of unsupported features, like `ShapeFeature`\r\n* Several changes to `ignition::gazebo::system::Physics` to work around the need for `Construct*` features. But those features are needed by other plugins, and I believe they should be the way we construct links, joints and collisions.\r\n\r\nIn this PR:\r\n\r\n* Install unversioned lib (like pull request #121)\r\n* Remove `ShapeFeatures` since the feature was not implemented\r\n* Change `Build*` to `Construct*` so the features are actually implemented\r\n\r\n~~I left `BuildSdfLink` because that requires a `const int _linkIndex`. I tried substituting that with a unique integer generated on the fly, but then the plugin was crashing at runtime. I'm not sure if the crash was because of the changes from `Build` to `Construct`, or the random IDs.~~\r\n\r\n**Update**: I fixed `ConstructSdfLink` on ce60570, so now this branch is usable in `ign-gazebo` with [this PR](#!/ignitionrobotics/ign-gazebo/pull-requests/573/). It doesn't work well though:\r\n\r\n* If there's just a single model in the world, it falls due to gravity like it should\r\n* If there's more than one model in the world, they seem to interfere with each other at startup, but then behave properly. For example, on `shapes.sdf` the shapes initially all gather at the origin, bounce back, and then seem to behave naturally. I think there's something being wrongly initialized.\r\n    ![bullet_implosion.gif](data/bitbucket.org/repo/5q9rMzd/images/657227557-bullet_implosion.gif)\r\n* If there's a joint in the world, the simulator crashes.\r\n\r\n---\r\n\r\nI also noticed several other problems that could be solved before we merge Bullet in. For example, elements like `<inertial><pose>` and `<collision><pose>` are being ignored when they could be used.", "markup": "markdown", "html": "<p>The original plugin relied on a few undesired points:</p>\n<ul>\n<li>Dummy implementation of unsupported features, like <code>ShapeFeature</code></li>\n<li>Several changes to <code>ignition::gazebo::system::Physics</code> to work around the need for <code>Construct*</code> features. But those features are needed by other plugins, and I believe they should be the way we construct links, joints and collisions.</li>\n</ul>\n<p>In this PR:</p>\n<ul>\n<li>Install unversioned lib (like <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #121</a>)</li>\n<li>Remove <code>ShapeFeatures</code> since the feature was not implemented</li>\n<li>Change <code>Build*</code> to <code>Construct*</code> so the features are actually implemented</li>\n</ul>\n<p><del>I left <code>BuildSdfLink</code> because that requires a <code>const int _linkIndex</code>. I tried substituting that with a unique integer generated on the fly, but then the plugin was crashing at runtime. I'm not sure if the crash was because of the changes from <code>Build</code> to <code>Construct</code>, or the random IDs.</del></p>\n<p><strong>Update</strong>: I fixed <code>ConstructSdfLink</code> on <a href=\"#!/ignitionrobotics/ign-physics/commits/ce60570\" rel=\"nofollow\" class=\"ap-connect-link\">ce60570</a>, so now this branch is usable in <code>ign-gazebo</code> with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/573/\" rel=\"nofollow\">this PR</a>. It doesn't work well though:</p>\n<ul>\n<li>If there's just a single model in the world, it falls due to gravity like it should</li>\n<li>If there's more than one model in the world, they seem to interfere with each other at startup, but then behave properly. For example, on <code>shapes.sdf</code> the shapes initially all gather at the origin, bounce back, and then seem to behave naturally. I think there's something being wrongly initialized.\n    <img alt=\"bullet_implosion.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/657227557-bullet_implosion.gif\" /></li>\n<li>If there's a joint in the world, the simulator crashes.</li>\n</ul>\n<hr />\n<p>I also noticed several other problems that could be solved before we merge Bullet in. For example, elements like <code>&lt;inertial&gt;&lt;pose&gt;</code> and <code>&lt;collision&gt;&lt;pose&gt;</code> are being ignored when they could be used.</p>", "type": "rendered"}, "title": {"raw": "[WIP] Bullet updates", "markup": "markdown", "html": "<p>[WIP] Bullet updates</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The original plugin relied on a few undesired points:\r\n\r\n* Dummy implementation of unsupported features, like `ShapeFeature`\r\n* Several changes to `ignition::gazebo::system::Physics` to work around the need for `Construct*` features. But those features are needed by other plugins, and I believe they should be the way we construct links, joints and collisions.\r\n\r\nIn this PR:\r\n\r\n* Install unversioned lib (like pull request #121)\r\n* Remove `ShapeFeatures` since the feature was not implemented\r\n* Change `Build*` to `Construct*` so the features are actually implemented\r\n\r\n~~I left `BuildSdfLink` because that requires a `const int _linkIndex`. I tried substituting that with a unique integer generated on the fly, but then the plugin was crashing at runtime. I'm not sure if the crash was because of the changes from `Build` to `Construct`, or the random IDs.~~\r\n\r\n**Update**: I fixed `ConstructSdfLink` on ce60570, so now this branch is usable in `ign-gazebo` with [this PR](#!/ignitionrobotics/ign-gazebo/pull-requests/573/). It doesn't work well though:\r\n\r\n* If there's just a single model in the world, it falls due to gravity like it should\r\n* If there's more than one model in the world, they seem to interfere with each other at startup, but then behave properly. For example, on `shapes.sdf` the shapes initially all gather at the origin, bounce back, and then seem to behave naturally. I think there's something being wrongly initialized.\r\n    ![bullet_implosion.gif](data/bitbucket.org/repo/5q9rMzd/images/657227557-bullet_implosion.gif)\r\n* If there's a joint in the world, the simulator crashes.\r\n\r\n---\r\n\r\nI also noticed several other problems that could be solved before we merge Bullet in. For example, elements like `<inertial><pose>` and `<collision><pose>` are being ignored when they could be used.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/134/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diffstat/ignitionrobotics/ign-physics:ce605707ec7d%0Da8dc9db3d0f6?from_pullrequest_id=134"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/134/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/134.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/134/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/134/merge"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/134"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/134/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ce605707ec7d%0Da8dc9db3d0f6?from_pullrequest_id=134"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/134/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/134/statuses_page=1.json"}}, "title": "[WIP] Bullet updates", "close_source_branch": false, "reviewers": [{"display_name": "Claire Wang", "uuid": "{4b4ab2f2-8148-463e-a671-2eed1e6ccd42}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D"}, "html": {"href": "https://bitbucket.org/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d3f35705e485d0dab01c896/a44642e6-28d8-4727-b9cc-b4c18e91d167/128"}}, "nickname": "Claire Wang", "type": "user", "account_id": "5d3f35705e485d0dab01c896"}], "id": 134, "destination": {"commit": {"hash": "a8dc9db3d0f6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/a8dc9db3d0f6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/a8dc9db3d0f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "bullet"}}, "created_on": "2020-03-27T00:25:35.202812+00:00", "summary": {"raw": "The original plugin relied on a few undesired points:\r\n\r\n* Dummy implementation of unsupported features, like `ShapeFeature`\r\n* Several changes to `ignition::gazebo::system::Physics` to work around the need for `Construct*` features. But those features are needed by other plugins, and I believe they should be the way we construct links, joints and collisions.\r\n\r\nIn this PR:\r\n\r\n* Install unversioned lib (like pull request #121)\r\n* Remove `ShapeFeatures` since the feature was not implemented\r\n* Change `Build*` to `Construct*` so the features are actually implemented\r\n\r\n~~I left `BuildSdfLink` because that requires a `const int _linkIndex`. I tried substituting that with a unique integer generated on the fly, but then the plugin was crashing at runtime. I'm not sure if the crash was because of the changes from `Build` to `Construct`, or the random IDs.~~\r\n\r\n**Update**: I fixed `ConstructSdfLink` on ce60570, so now this branch is usable in `ign-gazebo` with [this PR](#!/ignitionrobotics/ign-gazebo/pull-requests/573/). It doesn't work well though:\r\n\r\n* If there's just a single model in the world, it falls due to gravity like it should\r\n* If there's more than one model in the world, they seem to interfere with each other at startup, but then behave properly. For example, on `shapes.sdf` the shapes initially all gather at the origin, bounce back, and then seem to behave naturally. I think there's something being wrongly initialized.\r\n    ![bullet_implosion.gif](data/bitbucket.org/repo/5q9rMzd/images/657227557-bullet_implosion.gif)\r\n* If there's a joint in the world, the simulator crashes.\r\n\r\n---\r\n\r\nI also noticed several other problems that could be solved before we merge Bullet in. For example, elements like `<inertial><pose>` and `<collision><pose>` are being ignored when they could be used.", "markup": "markdown", "html": "<p>The original plugin relied on a few undesired points:</p>\n<ul>\n<li>Dummy implementation of unsupported features, like <code>ShapeFeature</code></li>\n<li>Several changes to <code>ignition::gazebo::system::Physics</code> to work around the need for <code>Construct*</code> features. But those features are needed by other plugins, and I believe they should be the way we construct links, joints and collisions.</li>\n</ul>\n<p>In this PR:</p>\n<ul>\n<li>Install unversioned lib (like <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/121/install-plugins-to-unversioned-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #121</a>)</li>\n<li>Remove <code>ShapeFeatures</code> since the feature was not implemented</li>\n<li>Change <code>Build*</code> to <code>Construct*</code> so the features are actually implemented</li>\n</ul>\n<p><del>I left <code>BuildSdfLink</code> because that requires a <code>const int _linkIndex</code>. I tried substituting that with a unique integer generated on the fly, but then the plugin was crashing at runtime. I'm not sure if the crash was because of the changes from <code>Build</code> to <code>Construct</code>, or the random IDs.</del></p>\n<p><strong>Update</strong>: I fixed <code>ConstructSdfLink</code> on <a href=\"#!/ignitionrobotics/ign-physics/commits/ce60570\" rel=\"nofollow\" class=\"ap-connect-link\">ce60570</a>, so now this branch is usable in <code>ign-gazebo</code> with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/573/\" rel=\"nofollow\">this PR</a>. It doesn't work well though:</p>\n<ul>\n<li>If there's just a single model in the world, it falls due to gravity like it should</li>\n<li>If there's more than one model in the world, they seem to interfere with each other at startup, but then behave properly. For example, on <code>shapes.sdf</code> the shapes initially all gather at the origin, bounce back, and then seem to behave naturally. I think there's something being wrongly initialized.\n    <img alt=\"bullet_implosion.gif\" src=\"data/bitbucket.org/repo/5q9rMzd/images/657227557-bullet_implosion.gif\" /></li>\n<li>If there's a joint in the world, the simulator crashes.</li>\n</ul>\n<hr />\n<p>I also noticed several other problems that could be solved before we merge Bullet in. For example, elements like <code>&lt;inertial&gt;&lt;pose&gt;</code> and <code>&lt;collision&gt;&lt;pose&gt;</code> are being ignored when they could be used.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ce605707ec7d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ce605707ec7d.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ce605707ec7d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "bullet_chapulina"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Claire Wang", "uuid": "{4b4ab2f2-8148-463e-a671-2eed1e6ccd42}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D"}, "html": {"href": "https://bitbucket.org/%7B4b4ab2f2-8148-463e-a671-2eed1e6ccd42%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5d3f35705e485d0dab01c896/a44642e6-28d8-4727-b9cc-b4c18e91d167/128"}}, "nickname": "Claire Wang", "type": "user", "account_id": "5d3f35705e485d0dab01c896"}}], "reason": "revive after github migration", "updated_on": "2020-04-11T02:14:45.230203+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}