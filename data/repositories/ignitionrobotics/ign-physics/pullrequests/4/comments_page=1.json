{"pagelen": 100, "size": 114, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/43848268.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:942f94662fd0..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-43848268"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Might consider nest DataEntry into another header file and include it here, but this is just a coding style issue. My preference is to maker header files concise, which requires redirecting if people would like to see the definition of this struct ", "markup": "markdown", "html": "<p>Might consider nest DataEntry into another header file and include it here, but this is just a coding style issue. My preference is to maker header files concise, which requires redirecting if people would like to see the definition of this struct </p>", "type": "rendered"}, "created_on": "2017-08-30T04:13:32.811568+00:00", "user": {"display_name": "Ying Lu", "uuid": "{11ec131e-4af6-4228-beaf-167b1c8d1c2c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D"}, "html": {"href": "https://bitbucket.org/%7B11ec131e-4af6-4228-beaf-167b1c8d1c2c%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:659bfe31-d941-44f5-aa6d-00058b070ea8/c88d5925-8a09-40c7-8684-c02aeafe0f59/128"}}, "nickname": "rosebudflyaway", "type": "user", "account_id": "557058:659bfe31-d941-44f5-aa6d-00058b070ea8"}, "inline": {"to": 293, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2017-08-30T04:13:32.814249+00:00", "type": "pullrequest_comment", "id": 43848268}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/43851727.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:942f94662fd0..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-43851727"}}, "parent": {"id": 43848268, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/43848268.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-43848268"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I 200% agree with you. It slipped my mind that definitions of nested classes can be specified outside of the parent class definition. I'll move this definition into `detail/CompositeData.hh`.", "markup": "markdown", "html": "<p>I 200% agree with you. It slipped my mind that definitions of nested classes can be specified outside of the parent class definition. I'll move this definition into <code>detail/CompositeData.hh</code>.</p>", "type": "rendered"}, "created_on": "2017-08-30T05:56:31.758057+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2017-08-30T05:56:31.761421+00:00", "type": "pullrequest_comment", "id": 43851727}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/45024450.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:2469027d11ad..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-45024450"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "What's the difference between `Get<T>()` and `GetOrCreate<T>()`? From this paragraph it sounds like `Get<T>()` does what I would expect `GetOrCreate<T>()` to do.", "markup": "markdown", "html": "<p>What's the difference between <code>Get&lt;T&gt;()</code> and <code>GetOrCreate&lt;T&gt;()</code>? From this paragraph it sounds like <code>Get&lt;T&gt;()</code> does what I would expect <code>GetOrCreate&lt;T&gt;()</code> to do.</p>", "type": "rendered"}, "created_on": "2017-09-14T23:01:05.470320+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 402, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2017-09-14T23:01:05.472870+00:00", "type": "pullrequest_comment", "id": 45024450}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/45024597.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:2469027d11ad..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-45024597"}}, "parent": {"id": 45024450, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/45024450.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-45024450"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I'll defer you to the write-up I did in the [original pull request](#!/ignitionrobotics/ign-physics/pull-requests/1/compositedata-prototype-wip).  Specifically, I recommend looking at the bullet points for `Get`, `Create`, and `GetOrCreate`. If I wrote out an explanation here, it would end up being effectively a copy/paste of the explanation that's already there.", "markup": "markdown", "html": "<p>I'll defer you to the write-up I did in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/1/compositedata-prototype-wip\" rel=\"nofollow\">original pull request</a>.  Specifically, I recommend looking at the bullet points for <code>Get</code>, <code>Create</code>, and <code>GetOrCreate</code>. If I wrote out an explanation here, it would end up being effectively a copy/paste of the explanation that's already there.</p>", "type": "rendered"}, "created_on": "2017-09-14T23:05:46.155250+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2017-09-14T23:05:46.157653+00:00", "type": "pullrequest_comment", "id": 45024597}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/46256283.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:2469027d11ad..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-46256283"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Why is the `Cloneable` class necessary?", "markup": "markdown", "html": "<p>Why is the <code>Cloneable</code> class necessary?</p>", "type": "rendered"}, "created_on": "2017-10-02T21:12:24.884443+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 27, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2017-10-02T21:12:24.887788+00:00", "type": "pullrequest_comment", "id": 46256283}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49136237.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:506d9849374e..4ac9620f89b3?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49136237"}}, "parent": {"id": 46256283, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/46256283.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-46256283"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "@mxgrey", "markup": "markdown", "html": "<p>@mxgrey</p>", "type": "rendered"}, "created_on": "2017-11-09T01:26:06.638325+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2017-11-09T01:26:06.649517+00:00", "type": "pullrequest_comment", "id": 49136237}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49136426.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:506d9849374e..4ac9620f89b3?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49136426"}}, "parent": {"id": 46256283, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/46256283.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-46256283"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "It allows us to do copyable type erasure. The `CompositeData` class will hold onto a map of `Cloneable` objects, and since the objects are cloneable, it can make copies of them without knowing their fully derived type. This allows a `CompositeData` object to trivially take a deep copy of the data from another `CompositeData` object.", "markup": "markdown", "html": "<p>It allows us to do copyable type erasure. The <code>CompositeData</code> class will hold onto a map of <code>Cloneable</code> objects, and since the objects are cloneable, it can make copies of them without knowing their fully derived type. This allows a <code>CompositeData</code> object to trivially take a deep copy of the data from another <code>CompositeData</code> object.</p>", "type": "rendered"}, "created_on": "2017-11-09T01:31:08.382750+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2017-11-09T01:37:20.069576+00:00", "type": "pullrequest_comment", "id": 49136426}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/46256840.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:2469027d11ad..4493a3ce62f1?path=include%2Fignition%2Fphysics%2FCompositeDataMacros.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-46256840"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "If I understand correctly this and `IGN_COMMON_SPECIALIZE_INTERFACE` serve similar purposes: this allows identifying a class by string name at compile time, while the other identifies a class by string name at run time. Maybe combine these two into a common macro?", "markup": "markdown", "html": "<p>If I understand correctly this and <code>IGN_COMMON_SPECIALIZE_INTERFACE</code> serve similar purposes: this allows identifying a class by string name at compile time, while the other identifies a class by string name at run time. Maybe combine these two into a common macro?</p>", "type": "rendered"}, "created_on": "2017-10-02T21:21:57.345701+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 39, "from": null, "path": "include/ignition/physics/CompositeDataMacros.hh"}, "updated_on": "2017-10-02T21:21:57.348178+00:00", "type": "pullrequest_comment", "id": 46256840}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/46257944.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:2469027d11ad..4493a3ce62f1?path=include%2Fignition%2Fphysics%2Fdetail%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-46257944"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "It looks like `GetOrCreate()` couls be called without arguments to do the same thing. Remove `Get()`?", "markup": "markdown", "html": "<p>It looks like <code>GetOrCreate()</code> couls be called without arguments to do the same thing. Remove <code>Get()</code>?</p>", "type": "rendered"}, "created_on": "2017-10-02T21:44:36.138005+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 78, "from": null, "path": "include/ignition/physics/detail/CompositeData.hh"}, "updated_on": "2017-10-02T21:44:36.141652+00:00", "type": "pullrequest_comment", "id": 46257944}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49018042.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49018042"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I enabled pipelines for this repo and updated the metadata for this branch. The test is failing, maybe because the ign-math and common debs are out of date?", "markup": "markdown", "html": "<p>I enabled pipelines for this repo and updated the metadata for this branch. The test is failing, maybe because the ign-math and common debs are out of date?</p>", "type": "rendered"}, "created_on": "2017-11-08T02:23:57.338516+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-08T02:23:57.340789+00:00", "type": "pullrequest_comment", "id": 49018042}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49026345.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49026345"}}, "parent": {"id": 49018042, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49018042.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49018042"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I got a backtrace in a debug branch (3372e78):\n\n~~~\n[ RUN      ] CompositeData_TEST.CopyMoveData\nProgram received signal SIGABRT, Aborted.\n0x00007ffff705c428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n54\t../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n#0  0x00007ffff705c428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n#1  0x00007ffff705e02a in __GI_abort () at abort.c:89\n#2  0x00007ffff7054bd7 in __assert_fail_base (fmt=<optimized out>, assertion=assertion@entry=0x7ffff7bc8730 \"(\\\"The recorded number of entries is greater than the size of \\\" \\\"the dataMap, but that should be impossible!\\\", numEntries <= dataMap.size())\", file=file@entry=0x7ffff7bc86f0 \"/opt/atlassian/pipelines/agent/build/src/CompositeData.cc\", line=line@entry=349, function=function@entry=0x7ffff7bc8a80 <ignition::physics::CompositeData::NumEntries() const::__PRETTY_FUNCTION__> \"std::size_t ignition::physics::CompositeData::NumEntries() const\") at assert.c:92\n#3  0x00007ffff7054c82 in __GI___assert_fail (assertion=0x7ffff7bc8730 \"(\\\"The recorded number of entries is greater than the size of \\\" \\\"the dataMap, but that should be impossible!\\\", numEntries <= dataMap.size())\", file=0x7ffff7bc86f0 \"/opt/atlassian/pipelines/agent/build/src/CompositeData.cc\", line=349, function=0x7ffff7bc8a80 <ignition::physics::CompositeData::NumEntries() const::__PRETTY_FUNCTION__> \"std::size_t ignition::physics::CompositeData::NumEntries() const\") at assert.c:101\n#4  0x00007ffff7bbc959 in ignition::physics::CompositeData::NumEntries (this=0x7fffffffe390) at /opt/atlassian/pipelines/agent/build/src/CompositeData.cc:347\n#5  0x0000000000410abb in CompositeData_TEST_CopyMoveData_Test::TestBody (this=0x73d3a0) at /opt/atlassian/pipelines/agent/build/src/CompositeData_TEST.cc:54\n#6  0x0000000000497a56 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (object=0x73d3a0, method=&virtual testing::Test::TestBody(), location=0x4b2cdb \"the test body\") at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2079\n#7  0x000000000048b84f in testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=0x73d3a0, method=&virtual testing::Test::TestBody(), location=0x4b2cdb \"the test body\") at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2115\n#8  0x00000000004487f0 in testing::Test::Run (this=0x73d3a0) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2152\n#9  0x0000000000449c94 in testing::TestInfo::Run (this=0x73d290) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2327\n#10 0x000000000044aaea in testing::TestCase::Run (this=0x73d190) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2445\n#11 0x000000000045c9c8 in testing::internal::UnitTestImpl::RunAllTests (this=0x73cd70) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:4316\n#12 0x000000000049a3e4 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x73cd70, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x45c41e <testing::internal::UnitTestImpl::RunAllTests()>, location=0x4b3570 \"auxiliary test code (environments or event listeners)\") at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2079\n#13 0x000000000048dbf7 in testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x73cd70, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x45c41e <testing::internal::UnitTestImpl::RunAllTests()>, location=0x4b3570 \"auxiliary test code (environments or event listeners)\") at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2115\n#14 0x000000000045985a in testing::UnitTest::Run (this=0x70c120 <testing::UnitTest::GetInstance()::instance>) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:3927\n#15 0x000000000041fa84 in RUN_ALL_TESTS () at /opt/atlassian/pipelines/agent/build/test/gtest/include/gtest/gtest.h:2288\n#16 0x000000000041ee76 in main (argc=1, argv=0x7fffffffe9d8) at /opt/atlassian/pipelines/agent/build/src/CompositeData_TEST.cc:201\nA debugging session is active.\n~~~", "markup": "markdown", "html": "<p>I got a backtrace in a debug branch (<a href=\"#!/ignitionrobotics/ign-physics/commits/3372e78\" rel=\"nofollow\" class=\"ap-connect-link\">3372e78</a>):</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] CompositeData_TEST.CopyMoveData\nProgram received signal SIGABRT, Aborted.\n0x00007ffff705c428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n54  ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n#0  0x00007ffff705c428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n#1  0x00007ffff705e02a in __GI_abort () at abort.c:89\n#2  0x00007ffff7054bd7 in __assert_fail_base (fmt=&lt;optimized out&gt;, assertion=assertion@entry=0x7ffff7bc8730 &quot;(\\&quot;The recorded number of entries is greater than the size of \\&quot; \\&quot;the dataMap, but that should be impossible!\\&quot;, numEntries &lt;= dataMap.size())&quot;, file=file@entry=0x7ffff7bc86f0 &quot;/opt/atlassian/pipelines/agent/build/src/CompositeData.cc&quot;, line=line@entry=349, function=function@entry=0x7ffff7bc8a80 &lt;ignition::physics::CompositeData::NumEntries() const::__PRETTY_FUNCTION__&gt; &quot;std::size_t ignition::physics::CompositeData::NumEntries() const&quot;) at assert.c:92\n#3  0x00007ffff7054c82 in __GI___assert_fail (assertion=0x7ffff7bc8730 &quot;(\\&quot;The recorded number of entries is greater than the size of \\&quot; \\&quot;the dataMap, but that should be impossible!\\&quot;, numEntries &lt;= dataMap.size())&quot;, file=0x7ffff7bc86f0 &quot;/opt/atlassian/pipelines/agent/build/src/CompositeData.cc&quot;, line=349, function=0x7ffff7bc8a80 &lt;ignition::physics::CompositeData::NumEntries() const::__PRETTY_FUNCTION__&gt; &quot;std::size_t ignition::physics::CompositeData::NumEntries() const&quot;) at assert.c:101\n#4  0x00007ffff7bbc959 in ignition::physics::CompositeData::NumEntries (this=0x7fffffffe390) at /opt/atlassian/pipelines/agent/build/src/CompositeData.cc:347\n#5  0x0000000000410abb in CompositeData_TEST_CopyMoveData_Test::TestBody (this=0x73d3a0) at /opt/atlassian/pipelines/agent/build/src/CompositeData_TEST.cc:54\n#6  0x0000000000497a56 in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (object=0x73d3a0, method=&amp;virtual testing::Test::TestBody(), location=0x4b2cdb &quot;the test body&quot;) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2079\n#7  0x000000000048b84f in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (object=0x73d3a0, method=&amp;virtual testing::Test::TestBody(), location=0x4b2cdb &quot;the test body&quot;) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2115\n#8  0x00000000004487f0 in testing::Test::Run (this=0x73d3a0) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2152\n#9  0x0000000000449c94 in testing::TestInfo::Run (this=0x73d290) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2327\n#10 0x000000000044aaea in testing::TestCase::Run (this=0x73d190) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2445\n#11 0x000000000045c9c8 in testing::internal::UnitTestImpl::RunAllTests (this=0x73cd70) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:4316\n#12 0x000000000049a3e4 in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x73cd70, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x45c41e &lt;testing::internal::UnitTestImpl::RunAllTests()&gt;, location=0x4b3570 &quot;auxiliary test code (environments or event listeners)&quot;) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2079\n#13 0x000000000048dbf7 in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x73cd70, method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x45c41e &lt;testing::internal::UnitTestImpl::RunAllTests()&gt;, location=0x4b3570 &quot;auxiliary test code (environments or event listeners)&quot;) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:2115\n#14 0x000000000045985a in testing::UnitTest::Run (this=0x70c120 &lt;testing::UnitTest::GetInstance()::instance&gt;) at /opt/atlassian/pipelines/agent/build/test/gtest/src/gtest.cc:3927\n#15 0x000000000041fa84 in RUN_ALL_TESTS () at /opt/atlassian/pipelines/agent/build/test/gtest/include/gtest/gtest.h:2288\n#16 0x000000000041ee76 in main (argc=1, argv=0x7fffffffe9d8) at /opt/atlassian/pipelines/agent/build/src/CompositeData_TEST.cc:201\nA debugging session is active.\n</pre></div>", "type": "rendered"}, "created_on": "2017-11-08T06:20:01.319402+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-08T06:20:01.322387+00:00", "type": "pullrequest_comment", "id": 49026345}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49109250.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49109250"}}, "parent": {"id": 49026345, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49026345.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49026345"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "That's both very helpful and also leaves me entirely clueless. I've added more information to the assertion output. Maybe that will give a little more insight.\n\nIt cannot be overstated how perplexing it is that this would be an issue on pipelines but hasn't been triggered anywhere else.", "markup": "markdown", "html": "<p>That's both very helpful and also leaves me entirely clueless. I've added more information to the assertion output. Maybe that will give a little more insight.</p>\n<p>It cannot be overstated how perplexing it is that this would be an issue on pipelines but hasn't been triggered anywhere else.</p>", "type": "rendered"}, "created_on": "2017-11-08T18:25:10.590376+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-08T18:25:10.593763+00:00", "type": "pullrequest_comment", "id": 49109250}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49109394.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49109394"}}, "parent": {"id": 49109250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49109250.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49109250"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "...Never mind... the assertion macro is, in fact, a macro, so it cannot print out any additional information...", "markup": "markdown", "html": "<p>...Never mind... the assertion macro is, in fact, a macro, so it cannot print out any additional information...</p>", "type": "rendered"}, "created_on": "2017-11-08T18:26:43.210225+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-08T18:26:43.213284+00:00", "type": "pullrequest_comment", "id": 49109394}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49110792.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49110792"}}, "parent": {"id": 49109250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49109250.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49109250"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "> It cannot be overstated how perplexing it is that this would be an issue on pipelines but hasn't been triggered anywhere else.\n\nNaturally, this was a consequence of just a small dash of undefined behavior. Fixed now.", "markup": "markdown", "html": "<blockquote>\n<p>It cannot be overstated how perplexing it is that this would be an issue on pipelines but hasn't been triggered anywhere else.</p>\n</blockquote>\n<p>Naturally, this was a consequence of just a small dash of undefined behavior. Fixed now.</p>", "type": "rendered"}, "created_on": "2017-11-08T18:43:25.426071+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-08T18:43:39.993084+00:00", "type": "pullrequest_comment", "id": 49110792}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/49463133.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-49463133"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I tried to improve the linking to ignition-common in de7ccc2, but that pipeline failed due to using an old version of ignition-common, so I made a branch in `ign-common` that merged `CMakeRefactor` with `PluginPtrSemantics` to be used in the pipelines CI\n\n* #!/ignitionrobotics/ign-common/branch/tmp_ign_physics\n\nI'm going to try merging this forward to other branches, and hopefully the CI keeps working for all of them", "markup": "markdown", "html": "<p>I tried to improve the linking to ignition-common in <a href=\"#!/ignitionrobotics/ign-physics/commits/de7ccc2\" rel=\"nofollow\" class=\"ap-connect-link\">de7ccc2</a>, but that pipeline failed due to using an old version of ignition-common, so I made a branch in <code>ign-common</code> that merged <code>CMakeRefactor</code> with <code>PluginPtrSemantics</code> to be used in the pipelines CI</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-common/branch/tmp_ign_physics\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-common/branch/tmp_ign_physics</a></li>\n</ul>\n<p>I'm going to try merging this forward to other branches, and hopefully the CI keeps working for all of them</p>", "type": "rendered"}, "created_on": "2017-11-13T21:42:21.297466+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-13T21:42:21.300062+00:00", "type": "pullrequest_comment", "id": 49463133}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50536097.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50536097"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "@chapulina just got code coverage working for this repo, with this branch as the first report:\n\n* https://codecov.io/bb/ignitionrobotics/ign-physics/branch/JustCompositeData", "markup": "markdown", "html": "<p>@chapulina just got code coverage working for this repo, with this branch as the first report:</p>\n<ul>\n<li><a href=\"https://codecov.io/bb/ignitionrobotics/ign-physics/branch/JustCompositeData\" rel=\"nofollow\" class=\"ap-connect-link\">https://codecov.io/bb/ignitionrobotics/ign-physics/branch/JustCompositeData</a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-11-27T21:05:38.757612+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-27T21:05:38.765383+00:00", "type": "pullrequest_comment", "id": 50536097}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50537008.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50537008"}}, "parent": {"id": 50536097, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50536097.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50536097"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "the [detail/Cloneable.hh](https://codecov.io/bb/ignitionrobotics/ign-physics/src/JustCompositeData/include/ignition/physics/detail/Cloneable.hh) header file is listed as having only 25% coverage. @mxgrey any ideas for improving that?", "markup": "markdown", "html": "<p>the <a data-is-external-link=\"true\" href=\"https://codecov.io/bb/ignitionrobotics/ign-physics/src/JustCompositeData/include/ignition/physics/detail/Cloneable.hh\" rel=\"nofollow\">detail/Cloneable.hh</a> header file is listed as having only 25% coverage. @mxgrey any ideas for improving that?</p>", "type": "rendered"}, "created_on": "2017-11-27T21:17:27.197503+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-27T21:17:27.207490+00:00", "type": "pullrequest_comment", "id": 50537008}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50537270.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50537270"}}, "parent": {"id": 50537008, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50537008.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50537008"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Those functions are definitely getting used and implicitly tested by `CompositeData`, but we should be able to add some explicit unit tests for them, I suppose.", "markup": "markdown", "html": "<p>Those functions are definitely getting used and implicitly tested by <code>CompositeData</code>, but we should be able to add some explicit unit tests for them, I suppose.</p>", "type": "rendered"}, "created_on": "2017-11-27T21:20:56.922985+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-27T21:20:56.925627+00:00", "type": "pullrequest_comment", "id": 50537270}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50662761.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:506d9849374e..4ac9620f89b3?path=src%2FCompositeData.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50662761"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "decerement", "markup": "markdown", "html": "<p>decerement</p>", "type": "rendered"}, "created_on": "2017-11-28T23:39:34.479542+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 28, "from": null, "path": "src/CompositeData.cc"}, "updated_on": "2017-11-28T23:39:34.482199+00:00", "type": "pullrequest_comment", "id": 50662761}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50664808.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:73a9635121e8..efbccce50bc9?path=src%2FCompositeData.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50664808"}}, "parent": {"id": 50662761, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50662761.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50662761"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": " e854c5f", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/e854c5f\" rel=\"nofollow\" class=\"ap-connect-link\">e854c5f</a></p>", "type": "rendered"}, "created_on": "2017-11-29T00:22:30.304843+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/CompositeData.cc"}, "updated_on": "2017-11-29T00:22:30.308107+00:00", "type": "pullrequest_comment", "id": 50664808}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50664742.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50664742"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I like the CompositeData class, but the Query and Merge features seem complicated.", "markup": "markdown", "html": "<p>I like the CompositeData class, but the Query and Merge features seem complicated.</p>", "type": "rendered"}, "created_on": "2017-11-29T00:21:02.890582+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-29T00:21:02.893177+00:00", "type": "pullrequest_comment", "id": 50664742}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50665859.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50665859"}}, "parent": {"id": 50664742, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50664742.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50664742"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "`Query` is just a non-intrusive version of `Get`. It's going to be very important in cases where someone wants to inspect the contents of a `CompositeData` object without unintentionally modifying it. If anything, `Get` is the more complicated function, since it has potential side-effects.\n\nI had a few discussions with Ying about `Merge`, and I believe we both felt that it could use some simplification. I think to start, I would propose that we just throw away the \"options\" for `Merge` and always do a `HARD_MERGE`. We can always reintroduce the options later if we find cases where they're actually helpful.", "markup": "markdown", "html": "<p><code>Query</code> is just a non-intrusive version of <code>Get</code>. It's going to be very important in cases where someone wants to inspect the contents of a <code>CompositeData</code> object without unintentionally modifying it. If anything, <code>Get</code> is the more complicated function, since it has potential side-effects.</p>\n<p>I had a few discussions with Ying about <code>Merge</code>, and I believe we both felt that it could use some simplification. I think to start, I would propose that we just throw away the \"options\" for <code>Merge</code> and always do a <code>HARD_MERGE</code>. We can always reintroduce the options later if we find cases where they're actually helpful.</p>", "type": "rendered"}, "created_on": "2017-11-29T00:45:02.102987+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-29T00:45:02.105529+00:00", "type": "pullrequest_comment", "id": 50665859}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50666037.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50666037"}}, "parent": {"id": 50665859, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50665859.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50665859"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Thanks for clarifying. The part of `Query` that seemed complicated to me was tracking which things have been queried or not. I think it is nice to have a `const` alternative to `Get`.\n\nYeah, I just saw some of those discussions about merge options. I think your proposal makes sense for now.", "markup": "markdown", "html": "<p>Thanks for clarifying. The part of <code>Query</code> that seemed complicated to me was tracking which things have been queried or not. I think it is nice to have a <code>const</code> alternative to <code>Get</code>.</p>\n<p>Yeah, I just saw some of those discussions about merge options. I think your proposal makes sense for now.</p>", "type": "rendered"}, "created_on": "2017-11-29T00:48:50.603694+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-29T00:48:50.606979+00:00", "type": "pullrequest_comment", "id": 50666037}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50666195.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50666195"}}, "parent": {"id": 50666037, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50666037.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50666037"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I forgot about the `QUERY_MODE`. That does add some complexity. The `Get` function just always behaves like `QUERY_NORMAL`, so the caller has no reason to think about it.\n\nIdeally, users shouldn't have any reason to think about the query mode and should just use the default `QUERY_NORMAL`. The silent mode should generally just be for our own internal use. We might want to think about ways to make this clear for users.", "markup": "markdown", "html": "<p>I forgot about the <code>QUERY_MODE</code>. That does add some complexity. The <code>Get</code> function just always behaves like <code>QUERY_NORMAL</code>, so the caller has no reason to think about it.</p>\n<p>Ideally, users shouldn't have any reason to think about the query mode and should just use the default <code>QUERY_NORMAL</code>. The silent mode should generally just be for our own internal use. We might want to think about ways to make this clear for users.</p>", "type": "rendered"}, "created_on": "2017-11-29T00:53:23.479644+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-29T00:53:23.482002+00:00", "type": "pullrequest_comment", "id": 50666195}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50757377.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50757377"}}, "parent": {"id": 50666037, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/50666037.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-50666037"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Also, regarding a const-qualified `Get`, I'm maybe a little too proud of this, but I figured out a way to use template specialization to provide a const-qualified version of `Get` for any data types that are known to be `Required` at compile-time. Since the data is required, we can trust that it exists, and therefore we can provide a const-reference to it without any risk of needing to create it first. (This is already implemented and being tested, by the way.)", "markup": "markdown", "html": "<p>Also, regarding a const-qualified <code>Get</code>, I'm maybe a little too proud of this, but I figured out a way to use template specialization to provide a const-qualified version of <code>Get</code> for any data types that are known to be <code>Required</code> at compile-time. Since the data is required, we can trust that it exists, and therefore we can provide a const-reference to it without any risk of needing to create it first. (This is already implemented and being tested, by the way.)</p>", "type": "rendered"}, "created_on": "2017-11-29T18:18:19.748263+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-29T18:18:46.255313+00:00", "type": "pullrequest_comment", "id": 50757377}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58853244.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58853244"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Is this the first PR we should review?", "markup": "markdown", "html": "<p>Is this the first PR we should review?</p>", "type": "rendered"}, "created_on": "2018-03-14T18:59:04.639565+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-14T18:59:04.642462+00:00", "type": "pullrequest_comment", "id": 58853244}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58853359.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58853359"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Header copyright info can be updated to 2018.", "markup": "markdown", "html": "<p>Header copyright info can be updated to 2018.</p>", "type": "rendered"}, "created_on": "2018-03-14T19:00:18.341292+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-14T19:00:18.344276+00:00", "type": "pullrequest_comment", "id": 58853359}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250542.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250542"}}, "parent": {"id": 58853359, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58853359.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58853359"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "0444e97", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/0444e97\" rel=\"nofollow\" class=\"ap-connect-link\">0444e97</a></p>", "type": "rendered"}, "created_on": "2018-03-19T20:17:02.026844+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-19T20:17:02.030460+00:00", "type": "pullrequest_comment", "id": 59250542}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58853396.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:73a9635121e8..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58853396"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Can you add documentation to this class?", "markup": "markdown", "html": "<p>Can you add documentation to this class?</p>", "type": "rendered"}, "created_on": "2018-03-14T19:00:40.563389+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 27, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-03-14T19:00:40.570351+00:00", "type": "pullrequest_comment", "id": 58853396}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073171.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073171"}}, "parent": {"id": 58853396, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58853396.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58853396"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added: a36dcfb", "markup": "markdown", "html": "<p>Added: <a href=\"#!/ignitionrobotics/ign-physics/commits/a36dcfb\" rel=\"nofollow\" class=\"ap-connect-link\">a36dcfb</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:51:34.939879+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-04-10T00:51:34.944286+00:00", "type": "pullrequest_comment", "id": 61073171}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58859886.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:73a9635121e8..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58859886"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Can you add a link to this: http://en.cppreference.com/w/cpp/language/rule_of_three", "markup": "markdown", "html": "<p>Can you add a link to this: <a href=\"http://en.cppreference.com/w/cpp/language/rule_of_three\" rel=\"nofollow\" class=\"ap-connect-link\">http://en.cppreference.com/w/cpp/language/rule_of_three</a></p>", "type": "rendered"}, "created_on": "2018-03-14T20:18:59.759401+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 57, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-03-14T20:18:59.762372+00:00", "type": "pullrequest_comment", "id": 58859886}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073181.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073181"}}, "parent": {"id": 58859886, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58859886.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58859886"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added: 8826511", "markup": "markdown", "html": "<p>Added: <a href=\"#!/ignitionrobotics/ign-physics/commits/8826511\" rel=\"nofollow\" class=\"ap-connect-link\">8826511</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:51:49.266071+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-04-10T00:51:49.269861+00:00", "type": "pullrequest_comment", "id": 61073181}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58865917.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58865917"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Test coverage could be improved. For example, I see 72.3% line coverage on `CompositeData.cc`, and 25% on `Cloneable.hh`.", "markup": "markdown", "html": "<p>Test coverage could be improved. For example, I see 72.3% line coverage on <code>CompositeData.cc</code>, and 25% on <code>Cloneable.hh</code>.</p>", "type": "rendered"}, "created_on": "2018-03-14T21:32:15.379043+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-14T21:32:15.382656+00:00", "type": "pullrequest_comment", "id": 58865917}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870160.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870160"}}, "parent": {"id": 58865917, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58865917.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58865917"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I checked, and these coverages are not any better on downstream branches `JustSpecifyData` or `experimental/input`, so I support improving them.", "markup": "markdown", "html": "<p>I checked, and these coverages are not any better on downstream branches <code>JustSpecifyData</code> or <code>experimental/input</code>, so I support improving them.</p>", "type": "rendered"}, "created_on": "2018-03-14T22:39:32.226498+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-14T22:39:32.230443+00:00", "type": "pullrequest_comment", "id": 58870160}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870653.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870653"}}, "parent": {"id": 58870160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870160.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870160"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "All of the functions get used extensively within the `CompositeData` tests, but that gets overlooked by the coverage report, probably because of a combination of template usage and upcasting in the code.\n\nBut it certainly makes sense to add unit tests to test these types directly, even if they're secretly being covered already.", "markup": "markdown", "html": "<p>All of the functions get used extensively within the <code>CompositeData</code> tests, but that gets overlooked by the coverage report, probably because of a combination of template usage and upcasting in the code.</p>\n<p>But it certainly makes sense to add unit tests to test these types directly, even if they're secretly being covered already.</p>", "type": "rendered"}, "created_on": "2018-03-14T22:46:16.485426+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-14T22:46:16.488249+00:00", "type": "pullrequest_comment", "id": 58870653}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201121.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201121"}}, "parent": {"id": 58870653, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870653.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870653"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "It's worth noting that the coverage checker is only highlighting three lines:\n\n1. The constructor of `Cloneable`\n2. The destructor of `Cloneable`\n3. The class name of `MakeCloneable`.\n\nI'm pretty clueless about what exactly the coverage checker thinks it's reporting.", "markup": "markdown", "html": "<p>It's worth noting that the coverage checker is only highlighting three lines:</p>\n<ol>\n<li>The constructor of <code>Cloneable</code></li>\n<li>The destructor of <code>Cloneable</code></li>\n<li>The class name of <code>MakeCloneable</code>.</li>\n</ol>\n<p>I'm pretty clueless about what exactly the coverage checker thinks it's reporting.</p>", "type": "rendered"}, "created_on": "2018-04-10T22:37:53.639277+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-10T22:38:58.001122+00:00", "type": "pullrequest_comment", "id": 61201121}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201432.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201432"}}, "parent": {"id": 61201121, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201121.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201121"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I think I have a better idea of what's being reported.\n\ncodecov seems to be splitting its reporting between the header files. `Cloneable.hh` is being reported at 33%, but [`detail/Cloneable.hh` is reporting 92.31%](https://codecov.io/bb/ignitionrobotics/ign-physics/src/d5ed8493562a3b02c6fbab077c92abb538d876d1/include/ignition/physics/detail/Cloneable.hh).\n\nI still kind of think this is silly, because I guarantee that 100% of both headers are being covered by tests, but I guess we can only expect the tool to be an estimate.", "markup": "markdown", "html": "<p>I think I have a better idea of what's being reported.</p>\n<p>codecov seems to be splitting its reporting between the header files. <code>Cloneable.hh</code> is being reported at 33%, but <a data-is-external-link=\"true\" href=\"https://codecov.io/bb/ignitionrobotics/ign-physics/src/d5ed8493562a3b02c6fbab077c92abb538d876d1/include/ignition/physics/detail/Cloneable.hh\" rel=\"nofollow\"><code>detail/Cloneable.hh</code> is reporting 92.31%</a>.</p>\n<p>I still kind of think this is silly, because I guarantee that 100% of both headers are being covered by tests, but I guess we can only expect the tool to be an estimate.</p>", "type": "rendered"}, "created_on": "2018-04-10T22:43:26.150962+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-10T22:43:26.153872+00:00", "type": "pullrequest_comment", "id": 61201432}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61237762.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61237762"}}, "parent": {"id": 61201432, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201432.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201432"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I think the functions may be covered, but there might not be 100% line or branch coverage", "markup": "markdown", "html": "<p>I think the functions may be covered, but there might not be 100% line or branch coverage</p>", "type": "rendered"}, "created_on": "2018-04-11T08:59:20.694655+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-11T08:59:20.713878+00:00", "type": "pullrequest_comment", "id": 61237762}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61451852.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61451852"}}, "parent": {"id": 61237762, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61237762.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61237762"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "The thing is, there isn't any branching in the `Cloneable` or `MakeCloneable` classes, and there's very little branching in `CompositeData`, besides the `Copy` function. There are a lot of yellow-colored lines in `CompositeData` which don't involve any branching, so I don't understand what it would be complaining about.", "markup": "markdown", "html": "<p>The thing is, there isn't any branching in the <code>Cloneable</code> or <code>MakeCloneable</code> classes, and there's very little branching in <code>CompositeData</code>, besides the <code>Copy</code> function. There are a lot of yellow-colored lines in <code>CompositeData</code> which don't involve any branching, so I don't understand what it would be complaining about.</p>", "type": "rendered"}, "created_on": "2018-04-12T20:37:40.509603+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-12T20:37:40.516462+00:00", "type": "pullrequest_comment", "id": 61451852}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61471932.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61471932"}}, "parent": {"id": 61451852, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61451852.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61451852"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "yeah, it's confusing to me too:\n\n* #!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret", "markup": "markdown", "html": "<p>yeah, it's confusing to me too:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-04-13T04:22:41.744971+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-13T04:22:41.750880+00:00", "type": "pullrequest_comment", "id": 61471932}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201042.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201042"}}, "parent": {"id": 58865917, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58865917.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58865917"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I added a comprehensive set of unit tests for `Cloneable` and `MakeCloneable` here: d5ed849\n\nBut [line coverage for Cloneable.hh](https://codecov.io/bb/ignitionrobotics/ign-physics/src/d5ed8493562a3b02c6fbab077c92abb538d876d1/include/ignition/physics/Cloneable.hh) is still being reported as only 33%.\n\nI'm not sure what it would take to satisfy the coverage checker at this point.", "markup": "markdown", "html": "<p>I added a comprehensive set of unit tests for <code>Cloneable</code> and <code>MakeCloneable</code> here: <a href=\"#!/ignitionrobotics/ign-physics/commits/d5ed849\" rel=\"nofollow\" class=\"ap-connect-link\">d5ed849</a></p>\n<p>But <a data-is-external-link=\"true\" href=\"https://codecov.io/bb/ignitionrobotics/ign-physics/src/d5ed8493562a3b02c6fbab077c92abb538d876d1/include/ignition/physics/Cloneable.hh\" rel=\"nofollow\">line coverage for Cloneable.hh</a> is still being reported as only 33%.</p>\n<p>I'm not sure what it would take to satisfy the coverage checker at this point.</p>", "type": "rendered"}, "created_on": "2018-04-10T22:36:19.789215+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-10T22:36:19.792280+00:00", "type": "pullrequest_comment", "id": 61201042}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61546163.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61546163"}}, "parent": {"id": 61201042, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61201042.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61201042"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I've stopped looking at the `codecov` app. The results from codecov seem to consistently fail, regardless of whether coverage has increased or not. Instead, I run code coverage locally.\n\n1. `cmake -DCMAKE_BUILD_TYPE=Coverage; make -j8`\n2. `make test`\n3. `make coverage`\n4. `firefox coverage/index.html`\n\nA specific target coverage percentage is difficult to prescribe. Line coverage over 80% is good, over 90% is fantastic, and 100% can be achievable for some files and very difficult for others. In general, it depends on the file.\n\nI use the code coverage to identify where tests are needed.", "markup": "markdown", "html": "<p>I've stopped looking at the <code>codecov</code> app. The results from codecov seem to consistently fail, regardless of whether coverage has increased or not. Instead, I run code coverage locally.</p>\n<ol>\n<li><code>cmake -DCMAKE_BUILD_TYPE=Coverage; make -j8</code></li>\n<li><code>make test</code></li>\n<li><code>make coverage</code></li>\n<li><code>firefox coverage/index.html</code></li>\n</ol>\n<p>A specific target coverage percentage is difficult to prescribe. Line coverage over 80% is good, over 90% is fantastic, and 100% can be achievable for some files and very difficult for others. In general, it depends on the file.</p>\n<p>I use the code coverage to identify where tests are needed.</p>", "type": "rendered"}, "created_on": "2018-04-13T16:00:30.341861+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-04-13T16:00:30.350038+00:00", "type": "pullrequest_comment", "id": 61546163}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61552493.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61552493"}}, "parent": {"id": 61546163, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61546163.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61546163"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I thought codecov was useful until we added support for branch coverage:\n\n* #!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret\n\nI'll make a pull request to revert it so we can discuss further", "markup": "markdown", "html": "<p>I thought codecov was useful until we added support for branch coverage:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-cmake/issues/28/branch-coverage-results-hard-to-interpret</a></li>\n</ul>\n<p>I'll make a pull request to revert it so we can discuss further</p>", "type": "rendered"}, "created_on": "2018-04-13T17:11:09.987101+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-13T17:11:09.995755+00:00", "type": "pullrequest_comment", "id": 61552493}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61574096.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61574096"}}, "parent": {"id": 61552493, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61552493.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61552493"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "see #!/ignitionrobotics/ign-cmake/pull-requests/66/revert-branch-coverage-added-in-pull/diff", "markup": "markdown", "html": "<p>see <a href=\"#!/ignitionrobotics/ign-cmake/pull-requests/66/revert-branch-coverage-added-in-pull/diff\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-cmake/pull-requests/66/revert-branch-coverage-added-in-pull/diff</a></p>", "type": "rendered"}, "created_on": "2018-04-13T23:27:02.790242+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-13T23:27:02.797098+00:00", "type": "pullrequest_comment", "id": 61574096}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870625.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870625"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "In epic fashion, this branch makes cpplint crash!", "markup": "markdown", "html": "<p>In epic fashion, this branch makes cpplint crash!</p>", "type": "rendered"}, "created_on": "2018-03-14T22:45:55.938242+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-14T22:45:55.942086+00:00", "type": "pullrequest_comment", "id": 58870625}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870685.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870685"}}, "parent": {"id": 58870625, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870625.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870625"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "https://gist.github.com/scpeters/a5f0e18638cfb2efde7c98e6bbc3ea79", "markup": "markdown", "html": "<p><a href=\"https://gist.github.com/scpeters/a5f0e18638cfb2efde7c98e6bbc3ea79\" rel=\"nofollow\" class=\"ap-connect-link\">https://gist.github.com/scpeters/a5f0e18638cfb2efde7c98e6bbc3ea79</a></p>", "type": "rendered"}, "created_on": "2018-03-14T22:46:42.813806+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-14T22:46:42.816911+00:00", "type": "pullrequest_comment", "id": 58870685}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/60017397.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-60017397"}}, "parent": {"id": 58870625, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870625.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870625"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Updated linter, with reasonable output, in pull request #17.", "markup": "markdown", "html": "<p>Updated linter, with reasonable output, in <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/17/update-cpplint-to-latest\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #17</a>.</p>", "type": "rendered"}, "created_on": "2018-03-27T15:58:03.080476+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-27T15:58:03.083743+00:00", "type": "pullrequest_comment", "id": 60017397}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/60022217.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-60022217"}}, "parent": {"id": 60017397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/60017397.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-60017397"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Now pull request #18", "markup": "markdown", "html": "<p>Now <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/18/updated-cpplint\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #18</a></p>", "type": "rendered"}, "created_on": "2018-03-27T16:42:40.422699+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-27T16:42:40.427287+00:00", "type": "pullrequest_comment", "id": 60022217}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/60027188.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-60027188"}}, "parent": {"id": 60022217, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/60022217.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-60022217"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "merged into this branch in c8c480b", "markup": "markdown", "html": "<p>merged into this branch in <a href=\"#!/ignitionrobotics/ign-physics/commits/c8c480b\" rel=\"nofollow\" class=\"ap-connect-link\">c8c480b</a></p>", "type": "rendered"}, "created_on": "2018-03-27T17:35:02.217257+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-27T17:35:02.220356+00:00", "type": "pullrequest_comment", "id": 60027188}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870769.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:73a9635121e8..efbccce50bc9?path=src%2FCompositeData.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870769"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "cppcheck complains about this assignment operator implementation:\n\n~~~\n[src/CompositeData.cc:439]: (style) 'operator=' should return reference to 'this' instance.\n~~~\n\nI often see `return *this;`, is that what it wants to see?", "markup": "markdown", "html": "<p>cppcheck complains about this assignment operator implementation:</p>\n<div class=\"codehilite\"><pre><span></span>[src/CompositeData.cc:439]: (style) &#39;operator=&#39; should return reference to &#39;this&#39; instance.\n</pre></div>\n\n\n<p>I often see <code>return *this;</code>, is that what it wants to see?</p>", "type": "rendered"}, "created_on": "2018-03-14T22:48:26.698737+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 441, "from": null, "path": "src/CompositeData.cc"}, "updated_on": "2018-03-14T22:48:26.702920+00:00", "type": "pullrequest_comment", "id": 58870769}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58871368.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=src%2FCompositeData.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58871368"}}, "parent": {"id": 58870769, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58870769.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58870769"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Ah yeah, I think at some point I had `Copy(~)` return a reference to itself, just like the assignment operator does, but then I decided that might be too confusing because people might think it's returning a new copy instead of returning itself. I'm very surprised this hasn't come up as a compiler warning (unless I've just been overlooking it).", "markup": "markdown", "html": "<p>Ah yeah, I think at some point I had <code>Copy(~)</code> return a reference to itself, just like the assignment operator does, but then I decided that might be too confusing because people might think it's returning a new copy instead of returning itself. I'm very surprised this hasn't come up as a compiler warning (unless I've just been overlooking it).</p>", "type": "rendered"}, "created_on": "2018-03-14T22:57:42.432250+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/CompositeData.cc"}, "updated_on": "2018-03-14T22:57:42.435598+00:00", "type": "pullrequest_comment", "id": 58871368}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58871417.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=src%2FCompositeData.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58871417"}}, "parent": {"id": 58871368, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/58871368.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-58871368"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Oh wait, no, `CompositeData::Copy(~)` does return a reference to itself, so this is totally valid and correct code.", "markup": "markdown", "html": "<p>Oh wait, no, <code>CompositeData::Copy(~)</code> does return a reference to itself, so this is totally valid and correct code.</p>", "type": "rendered"}, "created_on": "2018-03-14T22:58:32.068690+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/CompositeData.cc"}, "updated_on": "2018-03-14T22:58:48.294739+00:00", "type": "pullrequest_comment", "id": 58871417}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250885.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250885"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `_args` documentation.", "markup": "markdown", "html": "<p>Missing <code>_args</code> documentation.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:20:50.320756+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 64, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-03-19T20:20:50.325824+00:00", "type": "pullrequest_comment", "id": 59250885}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073227.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073227"}}, "parent": {"id": 59250885, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250885.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250885"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added: a36dcfb", "markup": "markdown", "html": "<p>Added: <a href=\"#!/ignitionrobotics/ign-physics/commits/a36dcfb\" rel=\"nofollow\" class=\"ap-connect-link\">a36dcfb</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:52:38.600576+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-04-10T00:52:38.603740+00:00", "type": "pullrequest_comment", "id": 61073227}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250903.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250903"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `_other` documentation.", "markup": "markdown", "html": "<p>Missing <code>_other</code> documentation.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:21:00.349826+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 67, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-03-19T20:21:00.353352+00:00", "type": "pullrequest_comment", "id": 59250903}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073261.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073261"}}, "parent": {"id": 59250903, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250903.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250903"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added:  a36dcfb", "markup": "markdown", "html": "<p>Added:  <a href=\"#!/ignitionrobotics/ign-physics/commits/a36dcfb\" rel=\"nofollow\" class=\"ap-connect-link\">a36dcfb</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:53:27.183191+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-04-10T00:53:27.186583+00:00", "type": "pullrequest_comment", "id": 61073261}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250933.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250933"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `_other` documentation, and also on the next function.", "markup": "markdown", "html": "<p>Missing <code>_other</code> documentation, and also on the next function.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:21:21.998409+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 70, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-03-19T20:21:22.002174+00:00", "type": "pullrequest_comment", "id": 59250933}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073304.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCloneable.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073304"}}, "parent": {"id": 59250933, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59250933.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59250933"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added:  a36dcfb", "markup": "markdown", "html": "<p>Added:  <a href=\"#!/ignitionrobotics/ign-physics/commits/a36dcfb\" rel=\"nofollow\" class=\"ap-connect-link\">a36dcfb</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:54:17.654971+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/Cloneable.hh"}, "updated_on": "2018-04-10T00:54:17.658388+00:00", "type": "pullrequest_comment", "id": 61073304}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59251691.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59251691"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `\\return` documentation.", "markup": "markdown", "html": "<p>Missing <code>\\return</code> documentation.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:29:24.601511+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 93, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:29:24.605984+00:00", "type": "pullrequest_comment", "id": 59251691}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073318.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073318"}}, "parent": {"id": 59251691, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59251691.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59251691"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Added: 43f42f5", "markup": "markdown", "html": "<p>Added: <a href=\"#!/ignitionrobotics/ign-physics/commits/43f42f5\" rel=\"nofollow\" class=\"ap-connect-link\">43f42f5</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:54:39.614072+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-10T00:54:39.618038+00:00", "type": "pullrequest_comment", "id": 61073318}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59252630.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59252630"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `\\return`", "markup": "markdown", "html": "<p>Missing <code>\\return</code></p>", "type": "rendered"}, "created_on": "2018-03-19T20:40:18.943901+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 157, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:40:18.946778+00:00", "type": "pullrequest_comment", "id": 59252630}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073353.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073353"}}, "parent": {"id": 59252630, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59252630.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59252630"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "This function has been replaced by `InsertOrAssign(~)` which has its `\\return` documented: bc4ada0", "markup": "markdown", "html": "<p>This function has been replaced by <code>InsertOrAssign(~)</code> which has its <code>\\return</code> documented: <a href=\"#!/ignitionrobotics/ign-physics/commits/bc4ada0\" rel=\"nofollow\" class=\"ap-connect-link\">bc4ada0</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:55:43.180657+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-10T00:55:43.184742+00:00", "type": "pullrequest_comment", "id": 61073353}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253166.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253166"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Can this be an `enum class`?", "markup": "markdown", "html": "<p>Can this be an <code>enum class</code>?</p>", "type": "rendered"}, "created_on": "2018-03-19T20:46:19.999643+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 280, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:46:20.004141+00:00", "type": "pullrequest_comment", "id": 59253166}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254282.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254282"}}, "parent": {"id": 59253166, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253166"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "We can, although this enum is already nested within the `CompositeData` class, so that might be a bit excessive. As far as I'm aware, there are three benefits to enum class:\n\n1. The enumerations are scoped within the enum class name\n2. The enumerations cannot be implicitly cast from an integer value\n3. The memory footprint of the enumeration type is better defined\n\n(1) isn't important in this case because the enumerations are already nested. If we made it an enum class, then we'd need to say `CompositeData::QueryMode::QUERY_[NORMAL|SILENT]` every time we want to specify the mode, instead of `CompositeData::QUERY_[NORMAL|SILENT]`. The enumerations are already protected by the `CompositeData` scope, so this isn't an advantage here, and just creates more typing.\n\n(2) is probably the most compelling reason to use an enum class in this case, but I think the benefit is relatively small.\n\n(3) is a non-issue since it's extremely unlikely that we'd ever need more than 1 byte worth of enumerations here.\n\nIf you still think it's worthwhile, I can certainly make the change; I just wanted to point out the trade offs before making the switch.", "markup": "markdown", "html": "<p>We can, although this enum is already nested within the <code>CompositeData</code> class, so that might be a bit excessive. As far as I'm aware, there are three benefits to enum class:</p>\n<ol>\n<li>The enumerations are scoped within the enum class name</li>\n<li>The enumerations cannot be implicitly cast from an integer value</li>\n<li>The memory footprint of the enumeration type is better defined</li>\n</ol>\n<p>(1) isn't important in this case because the enumerations are already nested. If we made it an enum class, then we'd need to say <code>CompositeData::QueryMode::QUERY_[NORMAL|SILENT]</code> every time we want to specify the mode, instead of <code>CompositeData::QUERY_[NORMAL|SILENT]</code>. The enumerations are already protected by the <code>CompositeData</code> scope, so this isn't an advantage here, and just creates more typing.</p>\n<p>(2) is probably the most compelling reason to use an enum class in this case, but I think the benefit is relatively small.</p>\n<p>(3) is a non-issue since it's extremely unlikely that we'd ever need more than 1 byte worth of enumerations here.</p>\n<p>If you still think it's worthwhile, I can certainly make the change; I just wanted to point out the trade offs before making the switch.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:59:05.004409+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:59:05.007877+00:00", "type": "pullrequest_comment", "id": 59254282}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59256177.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59256177"}}, "parent": {"id": 59254282, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254282.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254282"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "(2) is the main reason. It prevents users from using integers, which can easily go stale.\n\nMight not be immediately important right now, but conversions to/from messages (protobufs for example) to C-style structs/classes benefit from `enum class` for reason 2. The following example is brittle, and should be avoided:\n\n```\nmessage MyMsg\n{\n    enum Type\n    {\n        A = 1;\n    }\n\n    required Type type = 1;\n}\n\n// Somewhere is C code...\n\nclass ConvertedMsg\n{\n  enum Type\n  {\n     A = 1;\n   }\n   Type type;\n}\n\nMyMsg msg;\nConvertedMsg cmsg;\n\ncmsg.type = msg.type();\n}\n```\n\n\n", "markup": "markdown", "html": "<p>(2) is the main reason. It prevents users from using integers, which can easily go stale.</p>\n<p>Might not be immediately important right now, but conversions to/from messages (protobufs for example) to C-style structs/classes benefit from <code>enum class</code> for reason 2. The following example is brittle, and should be avoided:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">message</span> <span class=\"nx\">MyMsg</span>\n<span class=\"p\">{</span>\n    <span class=\"kr\">enum</span> <span class=\"nx\">Type</span>\n    <span class=\"p\">{</span>\n        <span class=\"nx\">A</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">required</span> <span class=\"nx\">Type</span> <span class=\"nx\">type</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Somewhere is C code...</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">ConvertedMsg</span>\n<span class=\"p\">{</span>\n  <span class=\"kr\">enum</span> <span class=\"nx\">Type</span>\n  <span class=\"p\">{</span>\n     <span class=\"nx\">A</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n   <span class=\"p\">}</span>\n   <span class=\"nx\">Type</span> <span class=\"nx\">type</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">MyMsg</span> <span class=\"nx\">msg</span><span class=\"p\">;</span>\n<span class=\"nx\">ConvertedMsg</span> <span class=\"nx\">cmsg</span><span class=\"p\">;</span>\n\n<span class=\"nx\">cmsg</span><span class=\"p\">.</span><span class=\"nx\">type</span> <span class=\"o\">=</span> <span class=\"nx\">msg</span><span class=\"p\">.</span><span class=\"nx\">type</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-19T21:22:53.994134+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T21:22:53.997785+00:00", "type": "pullrequest_comment", "id": 59256177}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61984508.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:fab914be2048..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61984508"}}, "parent": {"id": 59253166, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253166"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "`QueryMode` has been changed to an enum class: f386d01\n\nI also renamed `QUERY_NORMAL` to `NORMAL` and `QUERY_SILENT` to `SILENT` since those now always have to be prefixed by `QueryMode::`, and needing to always have \"Query\" in there twice seemed redundant. I can change those names back if you prefer.", "markup": "markdown", "html": "<p><code>QueryMode</code> has been changed to an enum class: <a href=\"#!/ignitionrobotics/ign-physics/commits/f386d01\" rel=\"nofollow\" class=\"ap-connect-link\">f386d01</a></p>\n<p>I also renamed <code>QUERY_NORMAL</code> to <code>NORMAL</code> and <code>QUERY_SILENT</code> to <code>SILENT</code> since those now always have to be prefixed by <code>QueryMode::</code>, and needing to always have \"Query\" in there twice seemed redundant. I can change those names back if you prefer.</p>", "type": "rendered"}, "created_on": "2018-04-18T20:58:11.067914+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-18T20:58:11.074616+00:00", "type": "pullrequest_comment", "id": 61984508}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61985754.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:fab914be2048..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61985754"}}, "parent": {"id": 61984508, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61984508.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61984508"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Thanks. I missed this one. Looks good to me.", "markup": "markdown", "html": "<p>Thanks. I missed this one. Looks good to me.</p>", "type": "rendered"}, "created_on": "2018-04-18T21:15:32.477984+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-18T21:15:32.485711+00:00", "type": "pullrequest_comment", "id": 61985754}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253578.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253578"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Missing `\\param[in] _mode` documentation. Same for the following function.", "markup": "markdown", "html": "<p>Missing <code>\\param[in] _mode</code> documentation. Same for the following function.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:51:15.872880+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 370, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:51:37.645566+00:00", "type": "pullrequest_comment", "id": 59253578}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073381.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073381"}}, "parent": {"id": 59253578, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253578.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253578"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "[Added](#!/ignitionrobotics/ign-physics/commits/43f42f5ea773d397c661c4e91435a64d3bdb3cbf?at=default#Linclude/ignition/physics/CompositeData.hhT456)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/commits/43f42f5ea773d397c661c4e91435a64d3bdb3cbf?at=default#Linclude/ignition/physics/CompositeData.hhT456\" rel=\"nofollow\">Added</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:56:26.495831+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-10T00:56:26.498454+00:00", "type": "pullrequest_comment", "id": 61073381}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254207.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254207"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Can you rename this to `EntryCount`. This is the style other gazebo/ignition libraries use. The rationale is that a `Num` prefix requires a plural noun, which can be awkward because [English can be silly](https://www.grammarly.com/blog/plural-nouns/). ", "markup": "markdown", "html": "<p>Can you rename this to <code>EntryCount</code>. This is the style other gazebo/ignition libraries use. The rationale is that a <code>Num</code> prefix requires a plural noun, which can be awkward because <a data-is-external-link=\"true\" href=\"https://www.grammarly.com/blog/plural-nouns/\" rel=\"nofollow\">English can be silly</a>. </p>", "type": "rendered"}, "created_on": "2018-03-19T20:58:16.365442+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 630, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:58:16.368141+00:00", "type": "pullrequest_comment", "id": 59254207}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59399639.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ff7ffe3f27f2..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59399639"}}, "parent": {"id": 59254207, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254207.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254207"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "4b96aba", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/4b96aba\" rel=\"nofollow\" class=\"ap-connect-link\">4b96aba</a></p>", "type": "rendered"}, "created_on": "2018-03-20T23:53:43.983378+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-20T23:53:43.986231+00:00", "type": "pullrequest_comment", "id": 59399639}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254238.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254238"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Same about `Count` vs `Num`.", "markup": "markdown", "html": "<p>Same about <code>Count</code> vs <code>Num</code>.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:58:35.356814+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 635, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:58:35.360434+00:00", "type": "pullrequest_comment", "id": 59254238}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59399649.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ff7ffe3f27f2..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59399649"}}, "parent": {"id": 59254238, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254238.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254238"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "ff7ffe3", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/ff7ffe3\" rel=\"nofollow\" class=\"ap-connect-link\">ff7ffe3</a></p>", "type": "rendered"}, "created_on": "2018-03-20T23:54:02.326783+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-20T23:54:02.329931+00:00", "type": "pullrequest_comment", "id": 59399649}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254264.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254264"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "`enum class`?", "markup": "markdown", "html": "<p><code>enum class</code>?</p>", "type": "rendered"}, "created_on": "2018-03-19T20:58:52.560530+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 724, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:58:52.564848+00:00", "type": "pullrequest_comment", "id": 59254264}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073437.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073437"}}, "parent": {"id": 59254264, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254264.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254264"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "This enum has been removed entirely: 0bdb89c", "markup": "markdown", "html": "<p>This enum has been removed entirely: <a href=\"#!/ignitionrobotics/ign-physics/commits/0bdb89c\" rel=\"nofollow\" class=\"ap-connect-link\">0bdb89c</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:58:13.166742+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-10T00:58:13.170664+00:00", "type": "pullrequest_comment", "id": 61073437}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254659.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=src%2Futils%2FTestDataTypes.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254659"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Why have these classes. Is it not possible to use `std::string` and POD types in the tests?", "markup": "markdown", "html": "<p>Why have these classes. Is it not possible to use <code>std::string</code> and POD types in the tests?</p>", "type": "rendered"}, "created_on": "2018-03-19T21:03:51.510864+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 26, "from": null, "path": "src/utils/TestDataTypes.hh"}, "updated_on": "2018-03-19T21:03:51.513729+00:00", "type": "pullrequest_comment", "id": 59254659}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59255130.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=src%2Futils%2FTestDataTypes.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59255130"}}, "parent": {"id": 59254659, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254659.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254659"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "It's possible now, but it wasn't possible in the original implementation of CompositeData, which required each data class to contain a macro.\n\nWe can throw away these data types and just use the plain STL types now. I'll make that change in my next pass-through.", "markup": "markdown", "html": "<p>It's possible now, but it wasn't possible in the original implementation of CompositeData, which required each data class to contain a macro.</p>\n<p>We can throw away these data types and just use the plain STL types now. I'll make that change in my next pass-through.</p>", "type": "rendered"}, "created_on": "2018-03-19T21:09:08.706106+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/utils/TestDataTypes.hh"}, "updated_on": "2018-03-19T21:09:26.059752+00:00", "type": "pullrequest_comment", "id": 59255130}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59255396.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=src%2Futils%2FTestDataTypes.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59255396"}}, "parent": {"id": 59255130, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59255130.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59255130"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Great, thanks.", "markup": "markdown", "html": "<p>Great, thanks.</p>", "type": "rendered"}, "created_on": "2018-03-19T21:12:31.012983+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "src/utils/TestDataTypes.hh"}, "updated_on": "2018-03-19T21:12:31.016697+00:00", "type": "pullrequest_comment", "id": 59255396}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254902.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:62194496ea06..efbccce50bc9?path=src%2FCompositeData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254902"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Nitpick. Can you place `&` and `*` next to the variable instead of next to the data type? The former is more explicit than the latter. ", "markup": "markdown", "html": "<p>Nitpick. Can you place <code>&amp;</code> and <code>*</code> next to the variable instead of next to the data type? The former is more explicit than the latter. </p>", "type": "rendered"}, "created_on": "2018-03-19T21:06:37.558136+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 29, "from": null, "path": "src/CompositeData_TEST.cc"}, "updated_on": "2018-03-19T21:06:37.561013+00:00", "type": "pullrequest_comment", "id": 59254902}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61073415.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=src%2FCompositeData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61073415"}}, "parent": {"id": 59254902, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254902.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254902"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Changed here: 91d37d8", "markup": "markdown", "html": "<p>Changed here: <a href=\"#!/ignitionrobotics/ign-physics/commits/91d37d8\" rel=\"nofollow\" class=\"ap-connect-link\">91d37d8</a></p>", "type": "rendered"}, "created_on": "2018-04-10T00:57:33.052676+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/CompositeData_TEST.cc"}, "updated_on": "2018-04-10T00:57:33.055966+00:00", "type": "pullrequest_comment", "id": 61073415}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254998.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254998"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "One thing I'd appreciate for reviewers to give some thought to is whether `CopyOption` should be kept, modified, or removed.\n\nWe could simplify the API so that we just have a `Copy()` function that follows the `IDENTICAL` behavior and a `Merge()` function that follows the `HARD_MERGE` behavior. That might be more intuitive to users and cut down on some of the API noise that we currently have here.\n\nI'm pretty torn on what the right API should be for copy semantics. I'm tempted to on doing something STL-style with a predicate that decides which copy to use, but that's probably outside the scope of this PR.", "markup": "markdown", "html": "<p>One thing I'd appreciate for reviewers to give some thought to is whether <code>CopyOption</code> should be kept, modified, or removed.</p>\n<p>We could simplify the API so that we just have a <code>Copy()</code> function that follows the <code>IDENTICAL</code> behavior and a <code>Merge()</code> function that follows the <code>HARD_MERGE</code> behavior. That might be more intuitive to users and cut down on some of the API noise that we currently have here.</p>\n<p>I'm pretty torn on what the right API should be for copy semantics. I'm tempted to on doing something STL-style with a predicate that decides which copy to use, but that's probably outside the scope of this PR.</p>", "type": "rendered"}, "created_on": "2018-03-19T21:07:34.912471+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-19T21:07:34.916648+00:00", "type": "pullrequest_comment", "id": 59254998}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59393851.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59393851"}}, "parent": {"id": 59254998, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254998.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254998"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I'm in favor of removing `CopyOption`. I see the potential value, it looks like feature creep without a concrete need. A more complex API can always be added later, while simplifying a complex API almost never happens.\n\nA `Copy()` function that equal `IDENTICAL`, and a `Merge()` that equals `HARD_MERGE` looks good.", "markup": "markdown", "html": "<p>I'm in favor of removing <code>CopyOption</code>. I see the potential value, it looks like feature creep without a concrete need. A more complex API can always be added later, while simplifying a complex API almost never happens.</p>\n<p>A <code>Copy()</code> function that equal <code>IDENTICAL</code>, and a <code>Merge()</code> that equals <code>HARD_MERGE</code> looks good.</p>", "type": "rendered"}, "created_on": "2018-03-20T22:09:49.110490+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-20T22:09:49.115663+00:00", "type": "pullrequest_comment", "id": 59393851}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59770173.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59770173"}}, "parent": {"id": 59393851, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59393851.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59393851"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I agree, `Copy()` with `IDENTICAL` and `Merge()` with `HARD_MERGE`", "markup": "markdown", "html": "<p>I agree, <code>Copy()</code> with <code>IDENTICAL</code> and <code>Merge()</code> with <code>HARD_MERGE</code></p>", "type": "rendered"}, "created_on": "2018-03-23T21:43:02.917238+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-23T21:43:02.920907+00:00", "type": "pullrequest_comment", "id": 59770173}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59928138.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59928138"}}, "parent": {"id": 59770173, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59770173.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59770173"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "`CopyOptions` has been removed and replaced with a `Copy()` and `Merge()` combo: d0dba45", "markup": "markdown", "html": "<p><code>CopyOptions</code> has been removed and replaced with a <code>Copy()</code> and <code>Merge()</code> combo: <a href=\"#!/ignitionrobotics/ign-physics/commits/d0dba45\" rel=\"nofollow\" class=\"ap-connect-link\">d0dba45</a></p>", "type": "rendered"}, "created_on": "2018-03-27T01:17:35.203767+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-27T01:17:35.206565+00:00", "type": "pullrequest_comment", "id": 59928138}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59261972.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59261972"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "`Cloneable` and `MakeCloneable` seem to fill the same role as `std::any`, as far as I can tell. SFormat has need for `std::any`, and there are likely other instances. There are reference implementation of c++17's `std::any`. We could put one of those reference implementations into `ign-common`, and use it here and in sdformat. Once c++17 is available, we can switch.\n\nThen `CompositeData` will be some sugar on top of `std::any` and `std::map`.", "markup": "markdown", "html": "<p><code>Cloneable</code> and <code>MakeCloneable</code> seem to fill the same role as <code>std::any</code>, as far as I can tell. SFormat has need for <code>std::any</code>, and there are likely other instances. There are reference implementation of c++17's <code>std::any</code>. We could put one of those reference implementations into <code>ign-common</code>, and use it here and in sdformat. Once c++17 is available, we can switch.</p>\n<p>Then <code>CompositeData</code> will be some sugar on top of <code>std::any</code> and <code>std::map</code>.</p>", "type": "rendered"}, "created_on": "2018-03-19T22:51:30.270362+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-19T22:51:30.274716+00:00", "type": "pullrequest_comment", "id": 59261972}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59266844.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59266844"}}, "parent": {"id": 59261972, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59261972.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59261972"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "There are definitely strong conceptual parallels between the two, and `std::any` could serve the same purpose as `Cloneable` + `MakeCloneable` here.\n\nThe key difference is that `std::any` is intended for broader use cases, and as a result it has some overhead for ensuring type safety. The way we use `Cloneable` + `MakeCloneable` has no type safety overhead, which is fine in this context because our type safety is ensured very efficiently by the `CompositeData` class.\n\nSince `CompositeData` is likely to be a very significant hotspot in the physics engine pipelines, I would recommend that we do some very careful full-stack profiling before making the decision to switch to `std::any`. If the overhead turns out to be imperceptible, then it definitely makes sense to switch to `std::any`. Otherwise, we wouldn't lose much (in terms of maintenance) by hanging onto `Cloneable` + `MakeCloneable`, since their duties are very simple, straightforward, and stable.", "markup": "markdown", "html": "<p>There are definitely strong conceptual parallels between the two, and <code>std::any</code> could serve the same purpose as <code>Cloneable</code> + <code>MakeCloneable</code> here.</p>\n<p>The key difference is that <code>std::any</code> is intended for broader use cases, and as a result it has some overhead for ensuring type safety. The way we use <code>Cloneable</code> + <code>MakeCloneable</code> has no type safety overhead, which is fine in this context because our type safety is ensured very efficiently by the <code>CompositeData</code> class.</p>\n<p>Since <code>CompositeData</code> is likely to be a very significant hotspot in the physics engine pipelines, I would recommend that we do some very careful full-stack profiling before making the decision to switch to <code>std::any</code>. If the overhead turns out to be imperceptible, then it definitely makes sense to switch to <code>std::any</code>. Otherwise, we wouldn't lose much (in terms of maintenance) by hanging onto <code>Cloneable</code> + <code>MakeCloneable</code>, since their duties are very simple, straightforward, and stable.</p>", "type": "rendered"}, "created_on": "2018-03-20T00:28:51.184162+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-20T00:28:51.187326+00:00", "type": "pullrequest_comment", "id": 59266844}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59372394.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59372394"}}, "parent": {"id": 59266844, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59266844.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59266844"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Type safety in `CompositeData` is achieved through the use of `typeid(some_type).name()` in he map?\n\nCan you create an issue to capture the idea of comparing `std::any` to `Cloneable`+`MakeCloneable`?", "markup": "markdown", "html": "<p>Type safety in <code>CompositeData</code> is achieved through the use of <code>typeid(some_type).name()</code> in he map?</p>\n<p>Can you create an issue to capture the idea of comparing <code>std::any</code> to <code>Cloneable</code>+<code>MakeCloneable</code>?</p>", "type": "rendered"}, "created_on": "2018-03-20T18:08:08.032982+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-20T18:08:08.036943+00:00", "type": "pullrequest_comment", "id": 59372394}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59373747.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59373747"}}, "parent": {"id": 59372394, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59372394.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59372394"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Exactly right. The fact that the data is stored in the map based on its type information, and access to that map is rigidly protected by the `CompositeData` class ensures that we will never mistake the data types. There is one potential pitfall if there is a class name collision between libraries, but that's an ODR violation, and `std::any` would have similar issues in that kind of scenario.\n\nI've [opened an issue](#!/ignitionrobotics/ign-physics/issues/4/compare-performance-between-cloneable) for this.", "markup": "markdown", "html": "<p>Exactly right. The fact that the data is stored in the map based on its type information, and access to that map is rigidly protected by the <code>CompositeData</code> class ensures that we will never mistake the data types. There is one potential pitfall if there is a class name collision between libraries, but that's an ODR violation, and <code>std::any</code> would have similar issues in that kind of scenario.</p>\n<p>I've <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/issues/4/compare-performance-between-cloneable\" rel=\"nofollow\">opened an issue</a> for this.</p>", "type": "rendered"}, "created_on": "2018-03-20T18:21:54.801179+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-20T18:21:54.806365+00:00", "type": "pullrequest_comment", "id": 59373747}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59390265.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59390265"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "This is starting to look good to me. I'd like to branch out just a bit on [this topic](#!/ignitionrobotics/ign-physics/pull-requests/14).", "markup": "markdown", "html": "<p>This is starting to look good to me. I'd like to branch out just a bit on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/14\" rel=\"nofollow\">this topic</a>.</p>", "type": "rendered"}, "created_on": "2018-03-20T21:18:10.712532+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-20T21:18:10.715762+00:00", "type": "pullrequest_comment", "id": 59390265}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59395257.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59395257"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I'm having a hard time with these functions: `Get`, `GetOrCreate`, `Create`, Query`, and `Unquery`. Correct me if I'm wrong, but I believe this is a mapping of these functions to versions provided by `std::map`:\n\n* `Get()` == `std::map::operator[]`\n* `GetOrCreate() == no mapping to `std::map`\n* `Create()` == `std::map::emplace`\n* `Query()` == `std::map::find`, sort of.\n* `Unquery()` == no mapping to `std::map`.\n\nComposite data has many characteristics to `std::map`. Adoption would be streamlined if an API similar to their is used here. \n\nIs it possible to eliminate `GetOrCreate` right now? We can always add back in later if the need arises.\n\nThe `QueryMode` with `Unquery` also seems like a feature we can add later. ", "markup": "markdown", "html": "<p>I'm having a hard time with these functions: <code>Get</code>, <code>GetOrCreate</code>, <code>Create</code>, Query<code>, and</code>Unquery<code>. Correct me if I'm wrong, but I believe this is a mapping of these functions to versions provided by</code>std::map`:</p>\n<ul>\n<li><code>Get()</code> == <code>std::map::operator[]</code></li>\n<li><code>GetOrCreate() == no mapping to</code>std::map`</li>\n<li><code>Create()</code> == <code>std::map::emplace</code></li>\n<li><code>Query()</code> == <code>std::map::find</code>, sort of.</li>\n<li><code>Unquery()</code> == no mapping to <code>std::map</code>.</li>\n</ul>\n<p>Composite data has many characteristics to <code>std::map</code>. Adoption would be streamlined if an API similar to their is used here. </p>\n<p>Is it possible to eliminate <code>GetOrCreate</code> right now? We can always add back in later if the need arises.</p>\n<p>The <code>QueryMode</code> with <code>Unquery</code> also seems like a feature we can add later. </p>", "type": "rendered"}, "created_on": "2018-03-20T22:33:28.832237+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-03-20T22:33:28.836124+00:00", "type": "pullrequest_comment", "id": 59395257}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59399063.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59399063"}}, "parent": {"id": 59395257, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59395257.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59395257"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "> I'm having a hard time with these functions:\n\n`GetOrCreate()` would essentially map to `std::map::insert(~)`, which will return an iterator to an entry if one already existed, or else create an entry based on the input arguments (it also returns a boolean to indicate whether the entry was actually inserted). Other than that, the summary is correct. `std::map` doesn't keep track of when an entry gets queried, so the idea of \"unquerying\" an entry is meaningless to it.\n\nI'm definitely open to API changes, as long as we maintain these features, which are all currently being used in the prototype examples.\n\n> The QueryMode with Unquery also seems like a feature we can add later.\n\nProbably the most controversial feature will be the concept of keeping track of queries. This concept arose during the early design discussions between Steve, Ying, and I. The concern was that it would be easy for a plugin to either (1) be unable to handle some of the data types that it's given or (2) give data types that we can't do anything with, because compile-time knowledge of the data types is required in order to access them. This could result in silent issues that are difficult to debug where plugins aren't communicating with each other properly because they're handling different types of data. This motivates us to have a mechanism for identifying which data types each plugin is actually touching on versus which data types are being ignored. With that information, we can provide valuable sanity checks to make sure that these data structures are being handled properly and that plugins are actually utilizing the data that they're supposed to. This feature is already being used by the DART and ODE example plugins, and in fact it helped me immediately identify a mistake in my initial implementation of the DART plugin (there was a required data type that I was forgetting to handle).\n\n> Is it possible to eliminate GetOrCreate right now? We can always add back in later if the need arises.\n\nWe could merge together `Get()` and `GetOrCreate(~)` into one function that has the behavior of `GetOrCreate(~)`. I resisted doing this because I was afraid of cases like `data.Get<T>(5)` or `data.Get<T>(\"some string\")`. At first glance, this looks like you're asking for an object of type `T` at some integer or string key within a map. In actuality, what you're saying is \"get an object of type `T`, but if one doesn't already exist then create it with the constructor `T(5)` or `T(\"some string\")`\". So instead, I made it so that `Get<T>()` never accepts an argument, and a user needs to explicitly call `GetOrCreate<T>(...args...)` if they want to specify arguments to potentially construct the data type with when an entry for that type does not already exist. If that doesn't seem like a compelling rationale, I'm certainly open to merging the functions, but I would urge us to give it due consideration.\n\nNote that the behavior of `GetOrCreate(...)` is needed in order to support data types that don't have a default constructor. Otherwise, every time a user wants to \"get\" that data type, they would need to do something like \n\n```\nT* thing = data.Query<T>();\nif(!thing)\n  thing = &data.Create<T>(args);\n```\n\nwhich I think is way too much code for doing such a basic operation.\n\n> Adoption would be streamlined if an API similar to their is used here.\n\nUnfortunately, `operator[]` cannot accept template arguments, so we can't use that to streamline our API at all. We could rename some of the functions to be vaguely similar, like `GetOrCreate(...)` could be renamed `Insert(...)`, but that's the only obvious change that I can think of. I wouldn't suggest renaming `Query()` to `Find()` because it's not returning an iterator, and I wouldn't rename `Create()` to `Emplace()` since I think `Create()` is a much less intimidating function name.\n\nGiven that our overall API for CompositeData is drastically simpler than the overall `std::map` API, I'm skeptical that there will be much we can realistically do to streamline it further without crippling ourselves. I suspect the biggest barrier is that this API doesn't feel as familiar because it's not able to use the usual STL container idioms.\n\nIn most cases, plugin developers will be able to get away with just using `Get()` and `Has()`, while the rest of these functions are simply available for advanced and internal use. But again, I'm absolutely on board with streamlining the API if we can come up with a concrete way to do so without eliminating important features.", "markup": "markdown", "html": "<blockquote>\n<p>I'm having a hard time with these functions:</p>\n</blockquote>\n<p><code>GetOrCreate()</code> would essentially map to <code>std::map::insert(~)</code>, which will return an iterator to an entry if one already existed, or else create an entry based on the input arguments (it also returns a boolean to indicate whether the entry was actually inserted). Other than that, the summary is correct. <code>std::map</code> doesn't keep track of when an entry gets queried, so the idea of \"unquerying\" an entry is meaningless to it.</p>\n<p>I'm definitely open to API changes, as long as we maintain these features, which are all currently being used in the prototype examples.</p>\n<blockquote>\n<p>The QueryMode with Unquery also seems like a feature we can add later.</p>\n</blockquote>\n<p>Probably the most controversial feature will be the concept of keeping track of queries. This concept arose during the early design discussions between Steve, Ying, and I. The concern was that it would be easy for a plugin to either (1) be unable to handle some of the data types that it's given or (2) give data types that we can't do anything with, because compile-time knowledge of the data types is required in order to access them. This could result in silent issues that are difficult to debug where plugins aren't communicating with each other properly because they're handling different types of data. This motivates us to have a mechanism for identifying which data types each plugin is actually touching on versus which data types are being ignored. With that information, we can provide valuable sanity checks to make sure that these data structures are being handled properly and that plugins are actually utilizing the data that they're supposed to. This feature is already being used by the DART and ODE example plugins, and in fact it helped me immediately identify a mistake in my initial implementation of the DART plugin (there was a required data type that I was forgetting to handle).</p>\n<blockquote>\n<p>Is it possible to eliminate GetOrCreate right now? We can always add back in later if the need arises.</p>\n</blockquote>\n<p>We could merge together <code>Get()</code> and <code>GetOrCreate(~)</code> into one function that has the behavior of <code>GetOrCreate(~)</code>. I resisted doing this because I was afraid of cases like <code>data.Get&lt;T&gt;(5)</code> or <code>data.Get&lt;T&gt;(\"some string\")</code>. At first glance, this looks like you're asking for an object of type <code>T</code> at some integer or string key within a map. In actuality, what you're saying is \"get an object of type <code>T</code>, but if one doesn't already exist then create it with the constructor <code>T(5)</code> or <code>T(\"some string\")</code>\". So instead, I made it so that <code>Get&lt;T&gt;()</code> never accepts an argument, and a user needs to explicitly call <code>GetOrCreate&lt;T&gt;(...args...)</code> if they want to specify arguments to potentially construct the data type with when an entry for that type does not already exist. If that doesn't seem like a compelling rationale, I'm certainly open to merging the functions, but I would urge us to give it due consideration.</p>\n<p>Note that the behavior of <code>GetOrCreate(...)</code> is needed in order to support data types that don't have a default constructor. Otherwise, every time a user wants to \"get\" that data type, they would need to do something like </p>\n<div class=\"codehilite\"><pre><span></span>T* thing = data.Query&lt;T&gt;();\nif(!thing)\n  thing = &amp;data.Create&lt;T&gt;(args);\n</pre></div>\n\n\n<p>which I think is way too much code for doing such a basic operation.</p>\n<blockquote>\n<p>Adoption would be streamlined if an API similar to their is used here.</p>\n</blockquote>\n<p>Unfortunately, <code>operator[]</code> cannot accept template arguments, so we can't use that to streamline our API at all. We could rename some of the functions to be vaguely similar, like <code>GetOrCreate(...)</code> could be renamed <code>Insert(...)</code>, but that's the only obvious change that I can think of. I wouldn't suggest renaming <code>Query()</code> to <code>Find()</code> because it's not returning an iterator, and I wouldn't rename <code>Create()</code> to <code>Emplace()</code> since I think <code>Create()</code> is a much less intimidating function name.</p>\n<p>Given that our overall API for CompositeData is drastically simpler than the overall <code>std::map</code> API, I'm skeptical that there will be much we can realistically do to streamline it further without crippling ourselves. I suspect the biggest barrier is that this API doesn't feel as familiar because it's not able to use the usual STL container idioms.</p>\n<p>In most cases, plugin developers will be able to get away with just using <code>Get()</code> and <code>Has()</code>, while the rest of these functions are simply available for advanced and internal use. But again, I'm absolutely on board with streamlining the API if we can come up with a concrete way to do so without eliminating important features.</p>", "type": "rendered"}, "created_on": "2018-03-20T23:40:15.348145+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-20T23:47:42.360981+00:00", "type": "pullrequest_comment", "id": 59399063}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59915424.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59915424"}}, "parent": {"id": 59399063, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59399063.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59399063"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "What if we replace `GetOrCreate<T>(args...)` with a function `Insert<T>(args...)` that returns a `std::pair<T&, bool>` where the `T&` is a reference to either (1) the newly created data entry or (2) the already existing data entry which prevented an insertion. Then the `bool` would be true if a new data entry was inserted or false if an existing data entry blocked the insertion. This would better parallel the well-established `std::map::insert` function.", "markup": "markdown", "html": "<p>What if we replace <code>GetOrCreate&lt;T&gt;(args...)</code> with a function <code>Insert&lt;T&gt;(args...)</code> that returns a <code>std::pair&lt;T&amp;, bool&gt;</code> where the <code>T&amp;</code> is a reference to either (1) the newly created data entry or (2) the already existing data entry which prevented an insertion. Then the <code>bool</code> would be true if a new data entry was inserted or false if an existing data entry blocked the insertion. This would better parallel the well-established <code>std::map::insert</code> function.</p>", "type": "rendered"}, "created_on": "2018-03-26T21:10:55.523873+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-03-26T21:11:29.659239+00:00", "type": "pullrequest_comment", "id": 59915424}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59916232.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59916232"}}, "parent": {"id": 59915424, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59915424.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59915424"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "+1", "markup": "markdown", "html": "<p>+1</p>", "type": "rendered"}, "created_on": "2018-03-26T21:21:22.164751+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-26T21:21:22.169101+00:00", "type": "pullrequest_comment", "id": 59916232}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61071340.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61071340"}}, "parent": {"id": 59395257, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59395257.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59395257"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Per our meeting, the API has been streamlined by bc4ada0 and b26a67f.\n\nThe essential changes are that `GetOrCreate<T>(~)` has been replaced by `Insert<T>(~)`, and `Create<T>(~)` has been replaced by `InsertOrAssign<T>(~)`. Both `Insert<Data>(~)` and `InsertOrAssign<Data>(~)` return an `InsertResult<Data>` which contains two fields: (1) a reference to the data entry in the `CompositeData`, and (2) a `bool` which is true if an entry was inserted (meaning the entry did not exist before the function call) or false if an entry already existed.\n\nAdditionally, `Has<T>()` and `StatusOf<T>()` do not accept a `QueryMode` option; they will simply never affect the query flag.\n\nNext I'll be going through and cleaning up the documentation throughout the source code.", "markup": "markdown", "html": "<p>Per our meeting, the API has been streamlined by <a href=\"#!/ignitionrobotics/ign-physics/commits/bc4ada0\" rel=\"nofollow\" class=\"ap-connect-link\">bc4ada0</a> and <a href=\"#!/ignitionrobotics/ign-physics/commits/b26a67f\" rel=\"nofollow\" class=\"ap-connect-link\">b26a67f</a>.</p>\n<p>The essential changes are that <code>GetOrCreate&lt;T&gt;(~)</code> has been replaced by <code>Insert&lt;T&gt;(~)</code>, and <code>Create&lt;T&gt;(~)</code> has been replaced by <code>InsertOrAssign&lt;T&gt;(~)</code>. Both <code>Insert&lt;Data&gt;(~)</code> and <code>InsertOrAssign&lt;Data&gt;(~)</code> return an <code>InsertResult&lt;Data&gt;</code> which contains two fields: (1) a reference to the data entry in the <code>CompositeData</code>, and (2) a <code>bool</code> which is true if an entry was inserted (meaning the entry did not exist before the function call) or false if an entry already existed.</p>\n<p>Additionally, <code>Has&lt;T&gt;()</code> and <code>StatusOf&lt;T&gt;()</code> do not accept a <code>QueryMode</code> option; they will simply never affect the query flag.</p>\n<p>Next I'll be going through and cleaning up the documentation throughout the source code.</p>", "type": "rendered"}, "created_on": "2018-04-10T00:01:31.718405+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-10T00:01:58.903550+00:00", "type": "pullrequest_comment", "id": 61071340}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59395947.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59395947"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "some of the comments are still have data labels that should be removed", "markup": "markdown", "html": "<p>some of the comments are still have data labels that should be removed</p>", "type": "rendered"}, "created_on": "2018-03-20T22:46:34.446249+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 67, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-20T22:46:34.450051+00:00", "type": "pullrequest_comment", "id": 59395947}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59396089.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ff7ffe3f27f2..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59396089"}}, "parent": {"id": 59395947, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59395947.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59395947"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "0da5d346b047", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/0da5d346b047\" rel=\"nofollow\" class=\"ap-connect-link\">0da5d346b047</a></p>", "type": "rendered"}, "created_on": "2018-03-20T22:49:23.376509+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-20T22:49:23.380690+00:00", "type": "pullrequest_comment", "id": 59396089}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59770099.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ff7ffe3f27f2..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59770099"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "I think it's also nice to see what all the entries are in a given object: `std::set<std::string> AllEntries() const`", "markup": "markdown", "html": "<p>I think it's also nice to see what all the entries are in a given object: <code>std::set&lt;std::string&gt; AllEntries() const</code></p>", "type": "rendered"}, "created_on": "2018-03-23T21:41:12.501068+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 715, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-23T21:41:12.504851+00:00", "type": "pullrequest_comment", "id": 59770099}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59917599.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:64c3f7b12760..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59917599"}}, "parent": {"id": 59770099, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59770099.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59770099"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "added in 64c3f7b", "markup": "markdown", "html": "<p>added in <a href=\"#!/ignitionrobotics/ign-physics/commits/64c3f7b\" rel=\"nofollow\" class=\"ap-connect-link\">64c3f7b</a></p>", "type": "rendered"}, "created_on": "2018-03-26T21:40:12.392710+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-26T21:40:12.396313+00:00", "type": "pullrequest_comment", "id": 59917599}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59921804.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:64c3f7b12760..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59921804"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "this is like the `[]` operator of `std::map`", "markup": "markdown", "html": "<p>this is like the <code>[]</code> operator of <code>std::map</code></p>", "type": "rendered"}, "created_on": "2018-03-26T22:50:37.164158+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 91, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-26T22:50:37.167573+00:00", "type": "pullrequest_comment", "id": 59921804}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59921858.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:64c3f7b12760..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59921858"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "Call `InsertOrAssign` like [std::map::insert_or_assign](http://en.cppreference.com/w/cpp/container/map/insert_or_assign)? not sure", "markup": "markdown", "html": "<p>Call <code>InsertOrAssign</code> like <a data-is-external-link=\"true\" href=\"http://en.cppreference.com/w/cpp/container/map/insert_or_assign\" rel=\"nofollow\">std::map::insert_or_assign</a>? not sure</p>", "type": "rendered"}, "created_on": "2018-03-26T22:51:51.394108+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 153, "from": null, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-26T22:51:51.397891+00:00", "type": "pullrequest_comment", "id": 59921858}], "page": 1, "next": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments_page=2.json"}