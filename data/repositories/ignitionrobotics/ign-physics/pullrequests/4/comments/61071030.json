{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61071030.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61071030"}}, "parent": {"id": 61049498, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61049498.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61049498"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "After implementing `InsertOrAssign(~)`, I realized that there's no real advantage to also having `InsertOrReplace(~)`. We already require that all `Data` types in the `CompositeData` are copyable, so we can always use the assignment operator on them. `InsertOrReplace(~)` doesn't generally accomplish anything that can't be done more efficiently and more safely by `InsertOrAssign(~)`, and if someone *really* wants to delete and replace an existing data entry, they can always call `composite.Remove<Data>()` followed by `composite.Insert<Data>(~)`.", "markup": "markdown", "html": "<p>After implementing <code>InsertOrAssign(~)</code>, I realized that there's no real advantage to also having <code>InsertOrReplace(~)</code>. We already require that all <code>Data</code> types in the <code>CompositeData</code> are copyable, so we can always use the assignment operator on them. <code>InsertOrReplace(~)</code> doesn't generally accomplish anything that can't be done more efficiently and more safely by <code>InsertOrAssign(~)</code>, and if someone <em>really</em> wants to delete and replace an existing data entry, they can always call <code>composite.Remove&lt;Data&gt;()</code> followed by <code>composite.Insert&lt;Data&gt;(~)</code>.</p>", "type": "rendered"}, "created_on": "2018-04-09T23:55:07.590953+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-10T00:03:30.421853+00:00", "type": "pullrequest_comment", "id": 61071030}