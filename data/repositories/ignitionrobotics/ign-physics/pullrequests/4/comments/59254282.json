{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59254282.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:91d37d897018..efbccce50bc9?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59254282"}}, "parent": {"id": 59253166, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59253166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59253166"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "We can, although this enum is already nested within the `CompositeData` class, so that might be a bit excessive. As far as I'm aware, there are three benefits to enum class:\n\n1. The enumerations are scoped within the enum class name\n2. The enumerations cannot be implicitly cast from an integer value\n3. The memory footprint of the enumeration type is better defined\n\n(1) isn't important in this case because the enumerations are already nested. If we made it an enum class, then we'd need to say `CompositeData::QueryMode::QUERY_[NORMAL|SILENT]` every time we want to specify the mode, instead of `CompositeData::QUERY_[NORMAL|SILENT]`. The enumerations are already protected by the `CompositeData` scope, so this isn't an advantage here, and just creates more typing.\n\n(2) is probably the most compelling reason to use an enum class in this case, but I think the benefit is relatively small.\n\n(3) is a non-issue since it's extremely unlikely that we'd ever need more than 1 byte worth of enumerations here.\n\nIf you still think it's worthwhile, I can certainly make the change; I just wanted to point out the trade offs before making the switch.", "markup": "markdown", "html": "<p>We can, although this enum is already nested within the <code>CompositeData</code> class, so that might be a bit excessive. As far as I'm aware, there are three benefits to enum class:</p>\n<ol>\n<li>The enumerations are scoped within the enum class name</li>\n<li>The enumerations cannot be implicitly cast from an integer value</li>\n<li>The memory footprint of the enumeration type is better defined</li>\n</ol>\n<p>(1) isn't important in this case because the enumerations are already nested. If we made it an enum class, then we'd need to say <code>CompositeData::QueryMode::QUERY_[NORMAL|SILENT]</code> every time we want to specify the mode, instead of <code>CompositeData::QUERY_[NORMAL|SILENT]</code>. The enumerations are already protected by the <code>CompositeData</code> scope, so this isn't an advantage here, and just creates more typing.</p>\n<p>(2) is probably the most compelling reason to use an enum class in this case, but I think the benefit is relatively small.</p>\n<p>(3) is a non-issue since it's extremely unlikely that we'd ever need more than 1 byte worth of enumerations here.</p>\n<p>If you still think it's worthwhile, I can certainly make the change; I just wanted to point out the trade offs before making the switch.</p>", "type": "rendered"}, "created_on": "2018-03-19T20:59:05.004409+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-03-19T20:59:05.007877+00:00", "type": "pullrequest_comment", "id": 59254282}