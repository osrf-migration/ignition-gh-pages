{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/61045131.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:600342683c18..27507b93b292?path=include%2Fignition%2Fphysics%2FCompositeData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-61045131"}}, "parent": {"id": 59921858, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4/comments/59921858.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4/_/diff#comment-59921858"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/4"}}, "title": "Part 1: CompositeData implementation and tests"}, "content": {"raw": "In the current implementation of this function, it always uses the type's constructor, never the assignment operator.\n\nWe could name this function something like `InsertOrReplace<T>(Args&&...)` and then add a function called `InsertOrAssign<T>(const T&)` where the latter can *only* be given a const-reference to an existing object of type `T`, and then it will use the assignment operator (which might be more efficient than constructing a new object in some cases).", "markup": "markdown", "html": "<p>In the current implementation of this function, it always uses the type's constructor, never the assignment operator.</p>\n<p>We could name this function something like <code>InsertOrReplace&lt;T&gt;(Args&amp;&amp;...)</code> and then add a function called <code>InsertOrAssign&lt;T&gt;(const T&amp;)</code> where the latter can <em>only</em> be given a const-reference to an existing object of type <code>T</code>, and then it will use the assignment operator (which might be more efficient than constructing a new object in some cases).</p>", "type": "rendered"}, "created_on": "2018-04-09T17:55:28.207980+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/CompositeData.hh"}, "updated_on": "2018-04-09T17:55:28.211237+00:00", "type": "pullrequest_comment", "id": 61045131}