{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45022763.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45022763"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Follow up to earlier chat, Change `expect` to `optional` and `require` to `required`?\n\n```\n>>> len('optional') == len('required')\nTrue\n>>> len('expect') == len('require')\nFalse\n```", "markup": "markdown", "html": "<p>Follow up to earlier chat, Change <code>expect</code> to <code>optional</code> and <code>require</code> to <code>required</code>?</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; len(&#39;optional&#39;) == len(&#39;required&#39;)\nTrue\n&gt;&gt;&gt; len(&#39;expect&#39;) == len(&#39;require&#39;)\nFalse\n</pre></div>", "type": "rendered"}, "created_on": "2017-09-14T22:19:59.597055+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 37, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:19:59.599351+00:00", "type": "pullrequest_comment", "id": 45022763}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023197.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023197"}}, "parent": {"id": 45022763, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45022763.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45022763"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I both love this and resent this. I love it because I think it expresses the concept better, and the characters line up fantastically. I resent it because I had already put a lot of thought into working out the verb/adjective semantics between Expect/Expected and Require/Required (which shows up elsewhere in the code), but now I'll have to rethink that. Overall, I'm completely on board with this suggestion; I'll just need to rethink a few of the deeper semantic details.", "markup": "markdown", "html": "<p>I both love this and resent this. I love it because I think it expresses the concept better, and the characters line up fantastically. I resent it because I had already put a lot of thought into working out the verb/adjective semantics between Expect/Expected and Require/Required (which shows up elsewhere in the code), but now I'll have to rethink that. Overall, I'm completely on board with this suggestion; I'll just need to rethink a few of the deeper semantic details.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:31:18.477511+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:31:18.480082+00:00", "type": "pullrequest_comment", "id": 45023197}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45022987.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45022987"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I think this would be a good place to say what a data specification is, or at least point the reader to where they can find a definition.", "markup": "markdown", "html": "<p>I think this would be a good place to say what a data specification is, or at least point the reader to where they can find a definition.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:25:42.979590+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 29, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:25:42.982138+00:00", "type": "pullrequest_comment", "id": 45022987}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023154.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023154"}}, "parent": {"id": 45022987, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45022987.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45022987"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I'd also move the `low-cost access line up here`. Speaking for myself, when something starts by explaining why I'd want to use it I'm more likely to continue reading and actually use it.", "markup": "markdown", "html": "<p>I'd also move the <code>low-cost access line up here</code>. Speaking for myself, when something starts by explaining why I'd want to use it I'm more likely to continue reading and actually use it.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:30:03.392858+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:30:03.395441+00:00", "type": "pullrequest_comment", "id": 45023154}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023346.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023346"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Is there an example of something enabled by composed specifications? I'm not sure where I would use it.", "markup": "markdown", "html": "<p>Is there an example of something enabled by composed specifications? I'm not sure where I would use it.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:34:57.362802+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 51, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:34:57.365474+00:00", "type": "pullrequest_comment", "id": 45023346}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023632.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023632"}}, "parent": {"id": 45023346, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023346.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023346"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "There are some hypothetical examples following this line in the documentation.\n\nIf you're asking for a concrete implemented example, we haven't gotten that far in the design process yet. But suppose we specified a set of inputs that a physics engine plugin should be able to handle, and then independently specified a set of inputs that a feedback controller plugin should be able to handle. If you want to ensure that your plugin is suitable as both a physics engine plugin and a feedback controller plugin, then you can compose those specifications into `CombinedSpecs` and then inherit `class MyPlugin : public CanReadRequiredData<MyPlugin, CombinedSpecs>`.", "markup": "markdown", "html": "<p>There are some hypothetical examples following this line in the documentation.</p>\n<p>If you're asking for a concrete implemented example, we haven't gotten that far in the design process yet. But suppose we specified a set of inputs that a physics engine plugin should be able to handle, and then independently specified a set of inputs that a feedback controller plugin should be able to handle. If you want to ensure that your plugin is suitable as both a physics engine plugin and a feedback controller plugin, then you can compose those specifications into <code>CombinedSpecs</code> and then inherit <code>class MyPlugin : public CanReadRequiredData&lt;MyPlugin, CombinedSpecs&gt;</code>.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:41:36.613324+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:41:36.616422+00:00", "type": "pullrequest_comment", "id": 45023632}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023974.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023974"}}, "parent": {"id": 45023632, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023632.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023632"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Maybe leave it out for now, and add the ability to combine specifications when it's needed? Suggesting just to reduce the complexity of the PR.", "markup": "markdown", "html": "<p>Maybe leave it out for now, and add the ability to combine specifications when it's needed? Suggesting just to reduce the complexity of the PR.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:49:25.856995+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:49:25.859170+00:00", "type": "pullrequest_comment", "id": 45023974}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45024059.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45024059"}}, "parent": {"id": 45023974, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023974.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023974"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "It's already a byproduct of the ability to specify a combination of expected and required data. There's nothing special being done to enable the ability to compose two independent specifications.", "markup": "markdown", "html": "<p>It's already a byproduct of the ability to specify a combination of expected and required data. There's nothing special being done to enable the ability to compose two independent specifications.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:51:25.623151+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:51:25.625797+00:00", "type": "pullrequest_comment", "id": 45024059}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023501.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023501"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "What does querying do?", "markup": "markdown", "html": "<p>What does querying do?</p>", "type": "rendered"}, "created_on": "2017-09-14T22:38:35.860952+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 145, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:38:35.863298+00:00", "type": "pullrequest_comment", "id": 45023501}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023705.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023705"}}, "parent": {"id": 45023501, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023501.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023501"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "The full description is with `CompositeData::Query`. Perhaps each of these functions should have a line saying to look at the definition of `CompositeData` for more information.", "markup": "markdown", "html": "<p>The full description is with <code>CompositeData::Query</code>. Perhaps each of these functions should have a line saying to look at the definition of <code>CompositeData</code> for more information.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:43:43.352659+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:43:43.355844+00:00", "type": "pullrequest_comment", "id": 45023705}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023770.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023770"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "How does this work? The class is called `RequiredData`, and the only place I see it used is the constructor/destructor.", "markup": "markdown", "html": "<p>How does this work? The class is called <code>RequiredData</code>, and the only place I see it used is the constructor/destructor.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:45:33.426065+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {"to": 202, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:45:33.429688+00:00", "type": "pullrequest_comment", "id": 45023770}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023941.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9c45fc04fb35..2469027d11ad?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023941"}}, "parent": {"id": 45023770, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/45023770.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-45023770"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "The class is called `RequireData` and this type is named `Require-d-Data`. This is the verb/adjective relationship I mentioned earlier.\n\nTemplate metaprograms can use this type definition to identify what types of data are being required by the specification.", "markup": "markdown", "html": "<p>The class is called <code>RequireData</code> and this type is named <code>Require-d-Data</code>. This is the verb/adjective relationship I mentioned earlier.</p>\n<p>Template metaprograms can use this type definition to identify what types of data are being required by the specification.</p>", "type": "rendered"}, "created_on": "2017-09-14T22:49:13.653658+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-09-14T22:49:13.656307+00:00", "type": "pullrequest_comment", "id": 45023941}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/50664767.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:0199e60ea2fd..e854c5fd5f61?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-50664767"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "invokations", "markup": "markdown", "html": "<p>invokations</p>", "type": "rendered"}, "created_on": "2017-11-29T00:21:38.595354+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 28, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-11-29T00:21:38.597935+00:00", "type": "pullrequest_comment", "id": 50664767}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/50668147.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-50668147"}}, "parent": {"id": 50664767, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/50664767.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-50664767"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": " 1708244", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/1708244\" rel=\"nofollow\" class=\"ap-connect-link\">1708244</a></p>", "type": "rendered"}, "created_on": "2017-11-29T01:43:53.523430+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2017-11-29T01:43:53.527124+00:00", "type": "pullrequest_comment", "id": 50668147}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62237730.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62237730"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "@mxgrey the windows build is failing to link\n\nI tried adding `/permissive-` in 30c2e60, but either I did it wrong or it didn't help\n\nhttps://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/10/console", "markup": "markdown", "html": "<p>@mxgrey the windows build is failing to link</p>\n<p>I tried adding <code>/permissive-</code> in <a href=\"#!/ignitionrobotics/ign-physics/commits/30c2e60\" rel=\"nofollow\" class=\"ap-connect-link\">30c2e60</a>, but either I did it wrong or it didn't help</p>\n<p><a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/10/console\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/10/console</a></p>", "type": "rendered"}, "created_on": "2018-04-21T01:28:25.367707+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-21T01:28:25.379431+00:00", "type": "pullrequest_comment", "id": 62237730}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62383176.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62383176"}}, "parent": {"id": 62237730, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62237730.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62237730"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I've removed the `template` keyword: e383ec8 \n\nI originally put it in because it's usually necessary for dependent name lookup, which is explained pretty exhaustively [here](https://stackoverflow.com/a/613132). I guess in this particular case it's not needed, maybe because the dependent name is a class instead of a function? Or maybe because it's not actually a \"dependent name\" since it only depends on the template parameter, and not on the templated class that it's being called inside of?\n\nWhatever the reason, gcc, clang, and MSVC all seem happy to compile the code without the `template` keyword. I still suspect that MSVC should've accepted it, but if the code is valid without using the keyword, I won't complain.", "markup": "markdown", "html": "<p>I've removed the <code>template</code> keyword: <a href=\"#!/ignitionrobotics/ign-physics/commits/e383ec8\" rel=\"nofollow\" class=\"ap-connect-link\">e383ec8</a> </p>\n<p>I originally put it in because it's usually necessary for dependent name lookup, which is explained pretty exhaustively <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/613132\" rel=\"nofollow\">here</a>. I guess in this particular case it's not needed, maybe because the dependent name is a class instead of a function? Or maybe because it's not actually a \"dependent name\" since it only depends on the template parameter, and not on the templated class that it's being called inside of?</p>\n<p>Whatever the reason, gcc, clang, and MSVC all seem happy to compile the code without the <code>template</code> keyword. I still suspect that MSVC should've accepted it, but if the code is valid without using the keyword, I won't complain.</p>", "type": "rendered"}, "created_on": "2018-04-23T22:54:31.790942+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-23T22:54:31.798139+00:00", "type": "pullrequest_comment", "id": 62383176}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62889410.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62889410"}}, "parent": {"id": 62237730, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62237730.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62237730"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I reverted the `/permissive-` in 37e890e4b89 and confirmed that the windows build still works\n\n[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-windows7-amd64&build=13)](https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/13/) https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/13/", "markup": "markdown", "html": "<p>I reverted the <code>/permissive-</code> in <a href=\"#!/ignitionrobotics/ign-physics/commits/37e890e4b89\" rel=\"nofollow\" class=\"ap-connect-link\">37e890e4b89</a> and confirmed that the windows build still works</p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/13/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-windows7-amd64&amp;build=13\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/13/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-windows7-amd64/13/</a></p>", "type": "rendered"}, "created_on": "2018-04-28T05:37:25.158441+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T05:37:25.165372+00:00", "type": "pullrequest_comment", "id": 62889410}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62392706.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62392706"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "brew is fixed:\n\n[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-homebrew-amd64&build=13)](https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-homebrew-amd64/13/) https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-homebrew-amd64/13/", "markup": "markdown", "html": "<p>brew is fixed:</p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-homebrew-amd64/13/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-homebrew-amd64&amp;build=13\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-homebrew-amd64/13/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-homebrew-amd64/13/</a></p>", "type": "rendered"}, "created_on": "2018-04-24T03:09:08.825640+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-24T03:09:08.833246+00:00", "type": "pullrequest_comment", "id": 62392706}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62512488.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=bitbucket-pipelines.yml"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62512488"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Why install and remove this?", "markup": "markdown", "html": "<p>Why install and remove this?</p>", "type": "rendered"}, "created_on": "2018-04-24T20:59:35.344216+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 23, "from": null, "path": "bitbucket-pipelines.yml"}, "updated_on": "2018-04-24T20:59:35.350744+00:00", "type": "pullrequest_comment", "id": 62512488}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515916.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=bitbucket-pipelines.yml"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515916"}}, "parent": {"id": 62512488, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62512488.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62512488"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "we are building it from source for now until a prerelease is available. installing and removing the deb gets the dependencies needed to build from source", "markup": "markdown", "html": "<p>we are building it from source for now until a prerelease is available. installing and removing the deb gets the dependencies needed to build from source</p>", "type": "rendered"}, "created_on": "2018-04-24T21:53:14.514970+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "bitbucket-pipelines.yml"}, "updated_on": "2018-04-24T21:53:14.522382+00:00", "type": "pullrequest_comment", "id": 62515916}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515948.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=bitbucket-pipelines.yml"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515948"}}, "parent": {"id": 62515916, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515916.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515916"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Ahh, I see. Thanks.", "markup": "markdown", "html": "<p>Ahh, I see. Thanks.</p>", "type": "rendered"}, "created_on": "2018-04-24T21:53:51.811566+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "bitbucket-pipelines.yml"}, "updated_on": "2018-04-24T21:53:51.818640+00:00", "type": "pullrequest_comment", "id": 62515948}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515686.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515686"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Place the ampersand/asterisk next to the function/variable name. There are a number of occurrences in this PR.", "markup": "markdown", "html": "<p>Place the ampersand/asterisk next to the function/variable name. There are a number of occurrences in this PR.</p>", "type": "rendered"}, "created_on": "2018-04-24T21:49:28.140525+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 125, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T21:49:28.148127+00:00", "type": "pullrequest_comment", "id": 62515686}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62526610.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62526610"}}, "parent": {"id": 62515686, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515686.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515686"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "ab7c936", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/ab7c936\" rel=\"nofollow\" class=\"ap-connect-link\">ab7c936</a></p>", "type": "rendered"}, "created_on": "2018-04-25T04:01:15.827590+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T04:01:15.833738+00:00", "type": "pullrequest_comment", "id": 62526610}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515763.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515763"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Add documentation about `args`.", "markup": "markdown", "html": "<p>Add documentation about <code>args</code>.</p>", "type": "rendered"}, "created_on": "2018-04-24T21:50:33.199113+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 128, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T21:50:33.205967+00:00", "type": "pullrequest_comment", "id": 62515763}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62867138.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62867138"}}, "parent": {"id": 62515763, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515763.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515763"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Same as [this comment](#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62867122).", "markup": "markdown", "html": "<p>Same as <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-62867122\" rel=\"nofollow\">this comment</a>.</p>", "type": "rendered"}, "created_on": "2018-04-27T17:54:09.321061+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-27T17:54:09.328095+00:00", "type": "pullrequest_comment", "id": 62867138}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515808.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515808"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Document args and the return type. I'll assume you'll find and document any more occurrences.", "markup": "markdown", "html": "<p>Document args and the return type. I'll assume you'll find and document any more occurrences.</p>", "type": "rendered"}, "created_on": "2018-04-24T21:51:29.794893+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 133, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T21:51:29.803902+00:00", "type": "pullrequest_comment", "id": 62515808}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62867122.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62867122"}}, "parent": {"id": 62515808, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515808.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515808"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Since these functions are already documented in the base `CompositeData` class, I've added references to those functions instead of duplicating the documentation: 5082717", "markup": "markdown", "html": "<p>Since these functions are already documented in the base <code>CompositeData</code> class, I've added references to those functions instead of duplicating the documentation: <a href=\"#!/ignitionrobotics/ign-physics/commits/5082717\" rel=\"nofollow\" class=\"ap-connect-link\">5082717</a></p>", "type": "rendered"}, "created_on": "2018-04-27T17:53:57.391369+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-27T17:53:57.399097+00:00", "type": "pullrequest_comment", "id": 62867122}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515924.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515924"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "In many of these function you refer to \"low-cost access\" and \"normal access\". Can you add documentation at the class level that defines these concepts and why it is important?", "markup": "markdown", "html": "<p>In many of these function you refer to \"low-cost access\" and \"normal access\". Can you add documentation at the class level that defines these concepts and why it is important?</p>", "type": "rendered"}, "created_on": "2018-04-24T21:53:23.267316+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 143, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T21:53:23.276040+00:00", "type": "pullrequest_comment", "id": 62515924}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62526665.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62526665"}}, "parent": {"id": 62515924, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62515924.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62515924"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Here I replace \"low-cost\" with \"high-speed\" since it's a more accurate description: f898099\n\nHere I've added tweaked the class descriptions to mention the high-speed access: f32cce0", "markup": "markdown", "html": "<p>Here I replace \"low-cost\" with \"high-speed\" since it's a more accurate description: <a href=\"#!/ignitionrobotics/ign-physics/commits/f898099\" rel=\"nofollow\" class=\"ap-connect-link\">f898099</a></p>\n<p>Here I've added tweaked the class descriptions to mention the high-speed access: <a href=\"#!/ignitionrobotics/ign-physics/commits/f32cce0\" rel=\"nofollow\" class=\"ap-connect-link\">f32cce0</a></p>", "type": "rendered"}, "created_on": "2018-04-25T04:02:55.680768+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T04:02:55.687496+00:00", "type": "pullrequest_comment", "id": 62526665}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516329.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516329"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Should this function be part of the `RequiredData` class. Seems odd to create Required data from an Expected instance.", "markup": "markdown", "html": "<p>Should this function be part of the <code>RequiredData</code> class. Seems odd to create Required data from an Expected instance.</p>", "type": "rendered"}, "created_on": "2018-04-24T22:01:41.978502+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 169, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T22:01:41.987229+00:00", "type": "pullrequest_comment", "id": 62516329}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516551.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516551"}}, "parent": {"id": 62516329, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516329.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516329"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "This function is part of the API for users to call so that they can make a certain data type required at runtime.\n\nAny data type `T` that's embedded in a `RequiredData<T>` is guaranteed to be marked as required from compilation time, so having a function `RequiredData<T>::MakeRequired(...)` wouldn't accomplish anything.", "markup": "markdown", "html": "<p>This function is part of the API for users to call so that they can make a certain data type required at runtime.</p>\n<p>Any data type <code>T</code> that's embedded in a <code>RequiredData&lt;T&gt;</code> is guaranteed to be marked as required from compilation time, so having a function <code>RequiredData&lt;T&gt;::MakeRequired(...)</code> wouldn't accomplish anything.</p>", "type": "rendered"}, "created_on": "2018-04-24T22:05:04.257760+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T22:05:04.273246+00:00", "type": "pullrequest_comment", "id": 62516551}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521762.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521762"}}, "parent": {"id": 62516551, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516551.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516551"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Can you provide an example? By reading the documentation I would assume that I would create an `ExpectedData` in order to make a `RequiredData`.\n", "markup": "markdown", "html": "<p>Can you provide an example? By reading the documentation I would assume that I would create an <code>ExpectedData</code> in order to make a <code>RequiredData</code>.</p>", "type": "rendered"}, "created_on": "2018-04-25T00:30:58.755856+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:30:58.762818+00:00", "type": "pullrequest_comment", "id": 62521762}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521928.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521928"}}, "parent": {"id": 62521762, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521762.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521762"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "This function is merely shadowing the `CompositeData::MakeRequired<T>(~)` function. There is no difference between the following two code snippets:\n\n```\nCompositeData data;\ndata.MakeRequired<Foo>();\ndata.MakeRequired<Bar>();\n```\nand\n\n```\nExpectData<Foo> data;\ndata.MakeRequired<Foo>();\ndata.MakeRequired<Bar>();\n```\n\nexcept that in the second one, line 2 will take something like a nanosecond (or less) instead of something on the order of microseconds. The speed of line 3 will be the same, because `Bar` wasn't expected.\n\n`ExpectData<T>` doesn't add any functionality over the generic `CompositeData` class except that when you perform operations involving the expected types, the performance is a few orders of magnitude faster. This is beneficial if you know what types you care about at compile time (which is usually the case).", "markup": "markdown", "html": "<p>This function is merely shadowing the <code>CompositeData::MakeRequired&lt;T&gt;(~)</code> function. There is no difference between the following two code snippets:</p>\n<div class=\"codehilite\"><pre><span></span>CompositeData data;\ndata.MakeRequired&lt;Foo&gt;();\ndata.MakeRequired&lt;Bar&gt;();\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span>ExpectData&lt;Foo&gt; data;\ndata.MakeRequired&lt;Foo&gt;();\ndata.MakeRequired&lt;Bar&gt;();\n</pre></div>\n\n\n<p>except that in the second one, line 2 will take something like a nanosecond (or less) instead of something on the order of microseconds. The speed of line 3 will be the same, because <code>Bar</code> wasn't expected.</p>\n<p><code>ExpectData&lt;T&gt;</code> doesn't add any functionality over the generic <code>CompositeData</code> class except that when you perform operations involving the expected types, the performance is a few orders of magnitude faster. This is beneficial if you know what types you care about at compile time (which is usually the case).</p>", "type": "rendered"}, "created_on": "2018-04-25T00:39:23.091409+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:40:12.532609+00:00", "type": "pullrequest_comment", "id": 62521928}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522002.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522002"}}, "parent": {"id": 62521928, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521928.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521928"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Thanks. Can you capture that into the beginnings of a tutorial? I think one (or more) tutorials on how to use this will be very beneficial. ", "markup": "markdown", "html": "<p>Thanks. Can you capture that into the beginnings of a tutorial? I think one (or more) tutorials on how to use this will be very beneficial. </p>", "type": "rendered"}, "created_on": "2018-04-25T00:42:13.278102+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:42:13.285479+00:00", "type": "pullrequest_comment", "id": 62522002}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516398.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516398"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "The phrase \"expected data type are required\" is confusing to me. I though expected data is optional?", "markup": "markdown", "html": "<p>The phrase \"expected data type are required\" is confusing to me. I though expected data is optional?</p>", "type": "rendered"}, "created_on": "2018-04-24T22:02:47.781546+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 172, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T22:02:47.789139+00:00", "type": "pullrequest_comment", "id": 62516398}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516660.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516660"}}, "parent": {"id": 62516398, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62516398.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62516398"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Recall that a user can decide, at runtime, to make any type of data required. So a data type `T` that's given to `ExpectedData<T>` is optional by default, but `T` can be made required at runtime. The difference with `RequiredData<T>` is that it's guaranteed to be required from the beginning.", "markup": "markdown", "html": "<p>Recall that a user can decide, at runtime, to make any type of data required. So a data type <code>T</code> that's given to <code>ExpectedData&lt;T&gt;</code> is optional by default, but <code>T</code> can be made required at runtime. The difference with <code>RequiredData&lt;T&gt;</code> is that it's guaranteed to be required from the beginning.</p>", "type": "rendered"}, "created_on": "2018-04-24T22:06:51.097888+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-24T22:06:51.103438+00:00", "type": "pullrequest_comment", "id": 62516660}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521944.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521944"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "What is the difference between required and always required?", "markup": "markdown", "html": "<p>What is the difference between required and always required?</p>", "type": "rendered"}, "created_on": "2018-04-25T00:39:52.734539+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 225, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:39:52.742023+00:00", "type": "pullrequest_comment", "id": 62521944}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522066.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522066"}}, "parent": {"id": 62521944, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521944.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521944"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "An example will probably explain it better than a description:\n\n```\nusing FooData = RequireData<Foo>\n\n// AlwaysRequires() can NOT be called on an instance, because it is a static function\nEXPECT_TRUE(FooData::AlwaysRequires<Foo>());\nEXPECT_FALSE(FooData::AlwaysRequires<Bar>());\n\n// Requires() can ONLY be called on an instance\nFooData data;\nEXPECT_TRUE(data.Requires<Foo>());\nEXPECT_FALSE(data.Requires<Bar>());\n\n// Requires() return value can change during runtime\ndata.MakeRequired<Bar>();\nEXPECT_TRUE(data.Requires<Bar>());\n\n// AlwaysRequires() is determined from type information at compile time, so it can never change\nEXPECT_FALSE(FooData::AlwaysRequires<Bar>());\n```", "markup": "markdown", "html": "<p>An example will probably explain it better than a description:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">using</span> <span class=\"nt\">FooData</span> <span class=\"o\">=</span> <span class=\"nt\">RequireData</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span><span class=\"o\">()</span> <span class=\"nt\">can</span> <span class=\"nt\">NOT</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span><span class=\"o\">,</span> <span class=\"nt\">because</span> <span class=\"nt\">it</span> <span class=\"nt\">is</span> <span class=\"nt\">a</span> <span class=\"nt\">static</span> <span class=\"nt\">function</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span><span class=\"o\">()</span> <span class=\"nt\">can</span> <span class=\"nt\">ONLY</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span>\n<span class=\"nt\">FooData</span> <span class=\"nt\">data</span><span class=\"o\">;</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span><span class=\"o\">()</span> <span class=\"nt\">return</span> <span class=\"nt\">value</span> <span class=\"nt\">can</span> <span class=\"nt\">change</span> <span class=\"nt\">during</span> <span class=\"nt\">runtime</span>\n<span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">MakeRequired</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;();</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span><span class=\"o\">()</span> <span class=\"nt\">is</span> <span class=\"nt\">determined</span> <span class=\"nt\">from</span> <span class=\"nt\">type</span> <span class=\"nt\">information</span> <span class=\"nt\">at</span> <span class=\"nt\">compile</span> <span class=\"nt\">time</span><span class=\"o\">,</span> <span class=\"nt\">so</span> <span class=\"nt\">it</span> <span class=\"nt\">can</span> <span class=\"nt\">never</span> <span class=\"nt\">change</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-25T00:45:55.422295+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:46:58.429819+00:00", "type": "pullrequest_comment", "id": 62522066}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522196.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522196"}}, "parent": {"id": 62522066, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522066.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522066"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "So `AlwaysRequires<T>()` answers the question of whether a particular **type** of CompositeData will always require a `T` entry.\n\nWhereas `Requires<T>()` answers the question of whether a specific **instance** of a CompositeData currently requires a `T` entry.\n\n`AlwaysRequires<T>()` will never change and can be evaluated at compile-time to perform template metaprogramming. `Requires<T>()` can only be evaluated at runtime, and it's possible for unrequired data types to be promoted to required (but it is not possible to demote data types from required to unrequired).", "markup": "markdown", "html": "<p>So <code>AlwaysRequires&lt;T&gt;()</code> answers the question of whether a particular <strong>type</strong> of CompositeData will always require a <code>T</code> entry.</p>\n<p>Whereas <code>Requires&lt;T&gt;()</code> answers the question of whether a specific <strong>instance</strong> of a CompositeData currently requires a <code>T</code> entry.</p>\n<p><code>AlwaysRequires&lt;T&gt;()</code> will never change and can be evaluated at compile-time to perform template metaprogramming. <code>Requires&lt;T&gt;()</code> can only be evaluated at runtime, and it's possible for unrequired data types to be promoted to required (but it is not possible to demote data types from required to unrequired).</p>", "type": "rendered"}, "created_on": "2018-04-25T00:52:18.728243+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:52:18.734948+00:00", "type": "pullrequest_comment", "id": 62522196}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522243.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522243"}}, "parent": {"id": 62522196, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522196.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522196"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Can you add this to the documentation? The part on \"answering the question\" is helpful.", "markup": "markdown", "html": "<p>Can you add this to the documentation? The part on \"answering the question\" is helpful.</p>", "type": "rendered"}, "created_on": "2018-04-25T00:54:56.320833+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:54:56.327289+00:00", "type": "pullrequest_comment", "id": 62522243}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522209.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522209"}}, "parent": {"id": 62522066, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522066.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522066"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Thanks (tutorial fodder). And, did you mix up the placement of `EXPECT_FALSE(FooData::AlwaysRequires<Bar>());` and `EXPECT_FALSE(data.Requires<Bar>());` with respect to the comments? For example, should your example be:\n\n```\nusing FooData = RequireData<Foo>\nFooData data;\n\n// AlwaysRequires can NOT be called on an instance (Can this be reworded as AlwaysRequird will return false on an instance?)\nEXPECT_TRUE(FooData::AlwaysRequires<Foo>());\nEXPECT_FALSE(data.AlwaysRequires<Bar>());\n\n// Requires can ONLY be called on an instance\nEXPECT_TRUE(data.Requires<Foo>());\nEXPECT_FALSE(FooData::Requires<Bar>());\n\n// Requires() return value can change during runtime\ndata.MakeRequired<Bar>();\nEXPECT_TRUE(data.Requires<Bar>());\n\n// AlwaysRequires is determined from type information at compile time, so it can never change\nEXPECT_FALSE(FooData::AlwaysRequires<Bar>());\n```", "markup": "markdown", "html": "<p>Thanks (tutorial fodder). And, did you mix up the placement of <code>EXPECT_FALSE(FooData::AlwaysRequires&lt;Bar&gt;());</code> and <code>EXPECT_FALSE(data.Requires&lt;Bar&gt;());</code> with respect to the comments? For example, should your example be:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">using</span> <span class=\"nt\">FooData</span> <span class=\"o\">=</span> <span class=\"nt\">RequireData</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">FooData</span> <span class=\"nt\">data</span><span class=\"o\">;</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span> <span class=\"nt\">can</span> <span class=\"nt\">NOT</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span> <span class=\"o\">(</span><span class=\"nt\">Can</span> <span class=\"nt\">this</span> <span class=\"nt\">be</span> <span class=\"nt\">reworded</span> <span class=\"nt\">as</span> <span class=\"nt\">AlwaysRequird</span> <span class=\"nt\">will</span> <span class=\"nt\">return</span> <span class=\"nt\">false</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span><span class=\"o\">?)</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span> <span class=\"nt\">can</span> <span class=\"nt\">ONLY</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span><span class=\"o\">()</span> <span class=\"nt\">return</span> <span class=\"nt\">value</span> <span class=\"nt\">can</span> <span class=\"nt\">change</span> <span class=\"nt\">during</span> <span class=\"nt\">runtime</span>\n<span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">MakeRequired</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;();</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span> <span class=\"nt\">is</span> <span class=\"nt\">determined</span> <span class=\"nt\">from</span> <span class=\"nt\">type</span> <span class=\"nt\">information</span> <span class=\"nt\">at</span> <span class=\"nt\">compile</span> <span class=\"nt\">time</span><span class=\"o\">,</span> <span class=\"nt\">so</span> <span class=\"nt\">it</span> <span class=\"nt\">can</span> <span class=\"nt\">never</span> <span class=\"nt\">change</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-25T00:52:58.576001+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:52:58.582488+00:00", "type": "pullrequest_comment", "id": 62522209}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522317.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522317"}}, "parent": {"id": 62522209, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522209.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522209"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I guess the error in what I wrote is:\n\n```\n// AlwaysRequires can NOT be called on an instance\n```\n\nshould be changed to\n\n```\n// AlwaysRequires does not need to be called on an instance\n```\n\nsince technically C++ does allow you to call static functions on an instance, although I think most compilers emit a warning about it (which I'm accustomed to treating as errors).\n\nThis line in your revision would produce a compilation error: `EXPECT_FALSE(FooData::Requires<Bar>());` The `Requires<T>()` function truly can only be called on instances, since it's a normal non-static member function.", "markup": "markdown", "html": "<p>I guess the error in what I wrote is:</p>\n<div class=\"codehilite\"><pre><span></span>// AlwaysRequires can NOT be called on an instance\n</pre></div>\n\n\n<p>should be changed to</p>\n<div class=\"codehilite\"><pre><span></span>// AlwaysRequires does not need to be called on an instance\n</pre></div>\n\n\n<p>since technically C++ does allow you to call static functions on an instance, although I think most compilers emit a warning about it (which I'm accustomed to treating as errors).</p>\n<p>This line in your revision would produce a compilation error: <code>EXPECT_FALSE(FooData::Requires&lt;Bar&gt;());</code> The <code>Requires&lt;T&gt;()</code> function truly can only be called on instances, since it's a normal non-static member function.</p>", "type": "rendered"}, "created_on": "2018-04-25T00:58:22.972204+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:58:22.978835+00:00", "type": "pullrequest_comment", "id": 62522317}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522341.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522341"}}, "parent": {"id": 62522317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522317.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522317"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Got it, thanks.", "markup": "markdown", "html": "<p>Got it, thanks.</p>", "type": "rendered"}, "created_on": "2018-04-25T00:59:27.833718+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:59:27.840528+00:00", "type": "pullrequest_comment", "id": 62522341}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522394.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522394"}}, "parent": {"id": 62522209, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522209.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522209"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "The most important takeaway from the example code is that `Foo` is specified as required at compile-time, whereas `Bar` is initially not required, but becomes required during run-time.\n\n`AlwaysRequires<T>()` can report compile-time requirements (and can even be used during compile-time), whereas `Requires<T>()` needs to be evaluated at run-time, and can recognize requirements which were added during run-time.", "markup": "markdown", "html": "<p>The most important takeaway from the example code is that <code>Foo</code> is specified as required at compile-time, whereas <code>Bar</code> is initially not required, but becomes required during run-time.</p>\n<p><code>AlwaysRequires&lt;T&gt;()</code> can report compile-time requirements (and can even be used during compile-time), whereas <code>Requires&lt;T&gt;()</code> needs to be evaluated at run-time, and can recognize requirements which were added during run-time.</p>", "type": "rendered"}, "created_on": "2018-04-25T01:01:43.747319+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T01:01:43.753374+00:00", "type": "pullrequest_comment", "id": 62522394}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522438.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522438"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Should this be renamed to `UpperLimitOfExpectedDataCount`? Or just drop the word `Count` all together? ", "markup": "markdown", "html": "<p>Should this be renamed to <code>UpperLimitOfExpectedDataCount</code>? Or just drop the word <code>Count</code> all together? </p>", "type": "rendered"}, "created_on": "2018-04-25T01:03:55.842044+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 244, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T01:03:55.849058+00:00", "type": "pullrequest_comment", "id": 62522438}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522578.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522578"}}, "parent": {"id": 62522438, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522438.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522438"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "When you call this function, during compile-time it will literally go through and count the number of expected data entries with O(N) complexity, which is why I begin it with a verb (because it's performing the action of counting).\n\nWe could flip the `Count` to the other side of the function name. I wouldn't recommend removing `Count` because then it sounds like we're finding the highest possible value of our data (whatever \"value\" might mean).", "markup": "markdown", "html": "<p>When you call this function, during compile-time it will literally go through and count the number of expected data entries with O(N) complexity, which is why I begin it with a verb (because it's performing the action of counting).</p>\n<p>We could flip the <code>Count</code> to the other side of the function name. I wouldn't recommend removing <code>Count</code> because then it sounds like we're finding the highest possible value of our data (whatever \"value\" might mean).</p>", "type": "rendered"}, "created_on": "2018-04-25T01:09:52.596572+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T01:10:09.378866+00:00", "type": "pullrequest_comment", "id": 62522578}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522688.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522688"}}, "parent": {"id": 62522578, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522578.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522578"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Ahh thanks. That was what I was checking (the act of counting).", "markup": "markdown", "html": "<p>Ahh thanks. That was what I was checking (the act of counting).</p>", "type": "rendered"}, "created_on": "2018-04-25T01:14:18.235145+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T01:14:18.241348+00:00", "type": "pullrequest_comment", "id": 62522688}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774474.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774474"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Will this function always produce a compilation error?", "markup": "markdown", "html": "<p>Will this function always produce a compilation error?</p>", "type": "rendered"}, "created_on": "2018-04-26T21:54:19.589824+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 386, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T21:54:19.597419+00:00", "type": "pullrequest_comment", "id": 62774474}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774870.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774870"}}, "parent": {"id": 62774474, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774474.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774474"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Only if a user attempts to use `Get<T>()` on a const-qualified composite when `T` might not exist (because it wasn't marked as required at compile-time).\n\nThe base `CompositeData` class doesn't even offer a const-qualified version of `Get<T>()` because it assumes it might need to create a `T` entry if `T` did not already exist. This `Get<T>() const` is an enhancement for `RequireData<T>` which is only possible because we can guarantee at compile-time that a `T` entry will exist in `RequireData<T>`.", "markup": "markdown", "html": "<p>Only if a user attempts to use <code>Get&lt;T&gt;()</code> on a const-qualified composite when <code>T</code> might not exist (because it wasn't marked as required at compile-time).</p>\n<p>The base <code>CompositeData</code> class doesn't even offer a const-qualified version of <code>Get&lt;T&gt;()</code> because it assumes it might need to create a <code>T</code> entry if <code>T</code> did not already exist. This <code>Get&lt;T&gt;() const</code> is an enhancement for <code>RequireData&lt;T&gt;</code> which is only possible because we can guarantee at compile-time that a <code>T</code> entry will exist in <code>RequireData&lt;T&gt;</code>.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:00:48.749533+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:01:16.267894+00:00", "type": "pullrequest_comment", "id": 62774870}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775495.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775495"}}, "parent": {"id": 62774870, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774870.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774870"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Should the comment be modified to indicate that a compiler error will occur if `Data` is not `Required`, not always as the current comment seems to indicate?", "markup": "markdown", "html": "<p>Should the comment be modified to indicate that a compiler error will occur if <code>Data</code> is not <code>Required</code>, not always as the current comment seems to indicate?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:13:45.748249+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:13:45.754770+00:00", "type": "pullrequest_comment", "id": 62775495}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775766.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775766"}}, "parent": {"id": 62775495, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775495.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775495"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "This specific overload of the function will only be called if `Required<R>::Get<T>() const` is called and `T != R`. If `T == R`, then the overload of `Get<T>() const` on line 403 will be called, so the comment is technically correct. It's just that the comment only applies to the specific overload that's implemented here; it does not apply to the `Get<T>() const` function in general.", "markup": "markdown", "html": "<p>This specific overload of the function will only be called if <code>Required&lt;R&gt;::Get&lt;T&gt;() const</code> is called and <code>T != R</code>. If <code>T == R</code>, then the overload of <code>Get&lt;T&gt;() const</code> on line 403 will be called, so the comment is technically correct. It's just that the comment only applies to the specific overload that's implemented here; it does not apply to the <code>Get&lt;T&gt;() const</code> function in general.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:19:37.825905+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:19:37.834850+00:00", "type": "pullrequest_comment", "id": 62775766}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775863.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775863"}}, "parent": {"id": 62775766, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775766.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775766"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I think we could add a static_assertion test for this similar to the ones in ign-common:\n\n* #!/ignitionrobotics/ign-common/src/9a5d83baf8e68a775023d95ff9cf313f9d4593ca/test/static_assertions/?at=default", "markup": "markdown", "html": "<p>I think we could add a static_assertion test for this similar to the ones in ign-common:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-common/src/9a5d83baf8e68a775023d95ff9cf313f9d4593ca/test/static_assertions/?at=default\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-common/src/9a5d83baf8e68a775023d95ff9cf313f9d4593ca/test/static_assertions/?at=default</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-04-26T22:21:39.480999+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:21:39.488001+00:00", "type": "pullrequest_comment", "id": 62775863}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776058.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776058"}}, "parent": {"id": 62775766, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775766.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775766"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Thanks, that makes sense. Why implement lines 397 if this will always cause a compilation error?", "markup": "markdown", "html": "<p>Thanks, that makes sense. Why implement lines 397 if this will always cause a compilation error?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:25:49.104326+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:25:49.111493+00:00", "type": "pullrequest_comment", "id": 62776058}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776316.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776316"}}, "parent": {"id": 62776058, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776058.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776058"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "In case something weird happens where this function gets dispatched instead of the specialized overload, this function will still behave the way it's supposed to. Notice that the implementation is still exactly the same as the specialized one.\n\nSo this function overload isn't *meant* to be used for the specialized case, but it still *could* be used correctly if it gets explicitly called on for some reason.", "markup": "markdown", "html": "<p>In case something weird happens where this function gets dispatched instead of the specialized overload, this function will still behave the way it's supposed to. Notice that the implementation is still exactly the same as the specialized one.</p>\n<p>So this function overload isn't <em>meant</em> to be used for the specialized case, but it still <em>could</em> be used correctly if it gets explicitly called on for some reason.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:29:57.957533+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:29:57.964127+00:00", "type": "pullrequest_comment", "id": 62776316}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776471.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776471"}}, "parent": {"id": 62776316, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776316.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776316"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Sorry to go in a circle, but this leads me back to the question about always raising a compilation error and the doxygen brief. If this could be used correctly, if called explicitly, then the \"\\brief\" is not accurate?", "markup": "markdown", "html": "<p>Sorry to go in a circle, but this leads me back to the question about always raising a compilation error and the doxygen brief. If this could be used correctly, if called explicitly, then the \"\\brief\" is not accurate?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:33:21.345266+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:33:21.353230+00:00", "type": "pullrequest_comment", "id": 62776471}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776709.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776709"}}, "parent": {"id": 62776471, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776471.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776471"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I guess it's a matter of how you frame it. Our current implementation should only call this function in cases where the `static_assert` will fail. It's possible for our implementation to change, or it's possible (but discouraged) for a user to somehow call this function directly.\n\nSo right now, assuming a user is not violating our API, this function will always throw a compilation error. However, it was written in a way that if it were called under just the right circumstances that the `static_assert` passes, then it would do the right thing.\n\nI suppose we could change the documentation to explain the edge case, but that might mislead people into thinking that we should expect this function to be compiled and used under normal circumstances.", "markup": "markdown", "html": "<p>I guess it's a matter of how you frame it. Our current implementation should only call this function in cases where the <code>static_assert</code> will fail. It's possible for our implementation to change, or it's possible (but discouraged) for a user to somehow call this function directly.</p>\n<p>So right now, assuming a user is not violating our API, this function will always throw a compilation error. However, it was written in a way that if it were called under just the right circumstances that the <code>static_assert</code> passes, then it would do the right thing.</p>\n<p>I suppose we could change the documentation to explain the edge case, but that might mislead people into thinking that we should expect this function to be compiled and used under normal circumstances.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:38:26.880129+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:38:26.887762+00:00", "type": "pullrequest_comment", "id": 62776709}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776780.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776780"}}, "parent": {"id": 62776709, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776709.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776709"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "That's fine. I think we beat this horse sufficiently.", "markup": "markdown", "html": "<p>That's fine. I think we beat this horse sufficiently.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:40:11.937535+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:40:11.944369+00:00", "type": "pullrequest_comment", "id": 62776780}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775568.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775568"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Side question. Should every data type that we want to use in a CompositeData be encapsulated inside a class like `StringData` and `IntData`?", "markup": "markdown", "html": "<p>Side question. Should every data type that we want to use in a CompositeData be encapsulated inside a class like <code>StringData</code> and <code>IntData</code>?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:15:04.232924+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 31, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-26T22:15:04.241333+00:00", "type": "pullrequest_comment", "id": 62775568}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778725.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778725"}}, "parent": {"id": 62775568, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775568.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775568"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "The answer is yes.", "markup": "markdown", "html": "<p>The answer is yes.</p>", "type": "rendered"}, "created_on": "2018-04-26T23:25:01.547767+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-26T23:25:01.555128+00:00", "type": "pullrequest_comment", "id": 62778725}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62865710.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62865710"}}, "parent": {"id": 62778725, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778725.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778725"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "It used to be necessary, but it's not anymore after I tweaked the implementation. There might still be some legacy code and legacy documentation which assumes it's necessary, but that should be revised.\n\nI'd like to keep the `StringData` and `IntData` classes for the tests, because it makes it very clear what the constructors are for those data types, which is helpful for testing. But there's nothing to stop someone from doing `composite.Get<std::string>() = \"some string\";` in their code.", "markup": "markdown", "html": "<p>It used to be necessary, but it's not anymore after I tweaked the implementation. There might still be some legacy code and legacy documentation which assumes it's necessary, but that should be revised.</p>\n<p>I'd like to keep the <code>StringData</code> and <code>IntData</code> classes for the tests, because it makes it very clear what the constructors are for those data types, which is helpful for testing. But there's nothing to stop someone from doing <code>composite.Get&lt;std::string&gt;() = \"some string\";</code> in their code.</p>", "type": "rendered"}, "created_on": "2018-04-27T17:36:05.427697+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T17:36:05.434298+00:00", "type": "pullrequest_comment", "id": 62865710}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868652.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868652"}}, "parent": {"id": 62865710, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62865710.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62865710"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I just tested `Get<std::string>()` and it works, but `Get<double>()` doesn't work:\n\n~~~\nsrc/CompositeData_TEST.cc:57:31:   required from here\ninclude/ignition/physics/Cloneable.hh:73:11:\n error: base type \u2018double\u2019 fails to be a struct or class type\n     class MakeCloneable final : public T, public Cloneable\n           ^\n~~~", "markup": "markdown", "html": "<p>I just tested <code>Get&lt;std::string&gt;()</code> and it works, but <code>Get&lt;double&gt;()</code> doesn't work:</p>\n<div class=\"codehilite\"><pre><span></span>src/CompositeData_TEST.cc:57:31:   required from here\ninclude/ignition/physics/Cloneable.hh:73:11:\n error: base type \u2018double\u2019 fails to be a struct or class type\n     class MakeCloneable final : public T, public Cloneable\n           ^\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-27T18:12:38.434441+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T18:12:38.444505+00:00", "type": "pullrequest_comment", "id": 62868652}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868821.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868821"}}, "parent": {"id": 62868652, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868652.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868652"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Right, primitives won't work because they can't be inherited. I don't think there's much value in trying to support primitives, but we technically *could* write a template specialization of `MakeCloneable` for each primitive type in the language.", "markup": "markdown", "html": "<p>Right, primitives won't work because they can't be inherited. I don't think there's much value in trying to support primitives, but we technically <em>could</em> write a template specialization of <code>MakeCloneable</code> for each primitive type in the language.</p>", "type": "rendered"}, "created_on": "2018-04-27T18:14:54.183067+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T18:14:54.190209+00:00", "type": "pullrequest_comment", "id": 62868821}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868930.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868930"}}, "parent": {"id": 62868821, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868821.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868821"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "(Or probably just write one template implementation that's specific to primitives and then enumerate the primitive specializations)", "markup": "markdown", "html": "<p>(Or probably just write one template implementation that's specific to primitives and then enumerate the primitive specializations)</p>", "type": "rendered"}, "created_on": "2018-04-27T18:16:13.078801+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T18:16:13.084960+00:00", "type": "pullrequest_comment", "id": 62868930}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62871407.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62871407"}}, "parent": {"id": 62868821, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868821.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868821"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "It might not be best practice, but I think it wouldn't hurt to support primitive types. We could handle that in a separate pull request since it is not related to `SpecifyData`", "markup": "markdown", "html": "<p>It might not be best practice, but I think it wouldn't hurt to support primitive types. We could handle that in a separate pull request since it is not related to <code>SpecifyData</code></p>", "type": "rendered"}, "created_on": "2018-04-27T18:48:11.349051+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T18:48:11.358486+00:00", "type": "pullrequest_comment", "id": 62871407}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62872084.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62872084"}}, "parent": {"id": 62871407, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62871407.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62871407"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I'm certainly open to it, although I would urge some caution. I'm not sure if we really want to encourage using primitive data entries in a `CompositeData` object.\n\nThe underlying motivation of `CompositeData` is to enable backend plugin developers to embed their library's own data types into our pipelines. Encouraging the use of primitive types could easily confuse the pipeline, because how would any plugin know whether the `composite.Get<int>()` is their own `int` or whether it may have been overridden by another plugin's `composite.Get<int>()`?\n\nSupporting other commonly used types like `std::string` is an inevitable consequence of wanting to support arbitrary classes, so it would not be practical to block plugin developers from using those. But supporting primitives involves an active effort on our part, and I'm worried that might send the wrong message about what the purpose of this class is.", "markup": "markdown", "html": "<p>I'm certainly open to it, although I would urge some caution. I'm not sure if we really want to encourage using primitive data entries in a <code>CompositeData</code> object.</p>\n<p>The underlying motivation of <code>CompositeData</code> is to enable backend plugin developers to embed their library's own data types into our pipelines. Encouraging the use of primitive types could easily confuse the pipeline, because how would any plugin know whether the <code>composite.Get&lt;int&gt;()</code> is their own <code>int</code> or whether it may have been overridden by another plugin's <code>composite.Get&lt;int&gt;()</code>?</p>\n<p>Supporting other commonly used types like <code>std::string</code> is an inevitable consequence of wanting to support arbitrary classes, so it would not be practical to block plugin developers from using those. But supporting primitives involves an active effort on our part, and I'm worried that might send the wrong message about what the purpose of this class is.</p>", "type": "rendered"}, "created_on": "2018-04-27T18:56:50.767412+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T18:56:50.773764+00:00", "type": "pullrequest_comment", "id": 62872084}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62873748.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62873748"}}, "parent": {"id": 62872084, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62872084.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62872084"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I know it's not a good practice to use primitives; you can have much better semantics with named wrapper classes, but I think it's more of a U/X thing for people trying out CompositeData or trying to hack something really quickly.", "markup": "markdown", "html": "<p>I know it's not a good practice to use primitives; you can have much better semantics with named wrapper classes, but I think it's more of a U/X thing for people trying out CompositeData or trying to hack something really quickly.</p>", "type": "rendered"}, "created_on": "2018-04-27T19:21:53.251536+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T19:21:53.257926+00:00", "type": "pullrequest_comment", "id": 62873748}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874007.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874007"}}, "parent": {"id": 62873748, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62873748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62873748"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I don't know how much effort it is though, so it may not be worth it if it's  a lot of code", "markup": "markdown", "html": "<p>I don't know how much effort it is though, so it may not be worth it if it's  a lot of code</p>", "type": "rendered"}, "created_on": "2018-04-27T19:26:18.183130+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T19:26:18.192327+00:00", "type": "pullrequest_comment", "id": 62874007}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874450.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874450"}}, "parent": {"id": 62874007, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874007.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874007"}}, "depth": 9}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "It'd probably be something like\n\n```\nnamespace detail {\n\ntemplate <typename P>\nstruct PrimitiveWrapper\n{\n  public: P value;\n};\n\ntemplate <typename P>\nusing PrimitiveCloneable = MakeCloneable<PrimitiveWrapper<P>>;\n\n} // namespace detail\n\n#define DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE( x ) \\\n  class MakeCloneable<x> : public detail::PrimitiveCloneable<x> { };\n\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(int)\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(double)\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(std::size_t)\n// ... etc ...\n```", "markup": "markdown", "html": "<p>It'd probably be something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">namespace</span> <span class=\"nt\">detail</span> <span class=\"p\">{</span>\n\n<span class=\"err\">template</span> <span class=\"err\">&lt;typename</span> <span class=\"err\">P&gt;</span>\n<span class=\"err\">struct</span> <span class=\"err\">PrimitiveWrapper</span>\n<span class=\"err\">{</span>\n  <span class=\"n\">public</span><span class=\"p\">:</span> <span class=\"n\">P</span> <span class=\"n\">value</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"o\">;</span>\n\n<span class=\"nt\">template</span> <span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">P</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">using</span> <span class=\"nt\">PrimitiveCloneable</span> <span class=\"o\">=</span> <span class=\"nt\">MakeCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">PrimitiveWrapper</span><span class=\"o\">&lt;</span><span class=\"nt\">P</span><span class=\"o\">&gt;&gt;;</span>\n\n<span class=\"err\">}</span> <span class=\"o\">//</span> <span class=\"nt\">namespace</span> <span class=\"nt\">detail</span>\n\n<span class=\"p\">#</span><span class=\"nn\">define</span> <span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span> <span class=\"nt\">x</span> <span class=\"o\">)</span> <span class=\"err\">\\</span>\n  <span class=\"nt\">class</span> <span class=\"nt\">MakeCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">x</span><span class=\"o\">&gt;</span> <span class=\"o\">:</span> <span class=\"nt\">public</span> <span class=\"nt\">detail</span><span class=\"p\">::</span><span class=\"nd\">PrimitiveCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">x</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span> <span class=\"p\">}</span><span class=\"o\">;</span>\n\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">int</span><span class=\"o\">)</span>\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">double</span><span class=\"o\">)</span>\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span><span class=\"o\">)</span>\n<span class=\"o\">//</span> <span class=\"o\">...</span> <span class=\"nt\">etc</span> <span class=\"o\">...</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-27T19:32:36.418400+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T19:32:46.137710+00:00", "type": "pullrequest_comment", "id": 62874450}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874156.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874156"}}, "parent": {"id": 62873748, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62873748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62873748"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "My personal view is that if someone is using `CompositeData`, they're operating at a deep enough level in the physics that they shouldn't want to do any quick hacking (notwithstanding the plugin prototypes that we've been making, since those are just tests of the concept).\n\nBut your point is definitely valid, and if that's a use case we want to support, then I'm okay with it.", "markup": "markdown", "html": "<p>My personal view is that if someone is using <code>CompositeData</code>, they're operating at a deep enough level in the physics that they shouldn't want to do any quick hacking (notwithstanding the plugin prototypes that we've been making, since those are just tests of the concept).</p>\n<p>But your point is definitely valid, and if that's a use case we want to support, then I'm okay with it.</p>", "type": "rendered"}, "created_on": "2018-04-27T19:28:19.464414+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T19:28:19.470332+00:00", "type": "pullrequest_comment", "id": 62874156}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62877192.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62877192"}}, "parent": {"id": 62874156, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874156.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874156"}}, "depth": 9}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I say we make a feature request for it in the issue tracker with this discussion but not prioritize it unless there is demand", "markup": "markdown", "html": "<p>I say we make a feature request for it in the issue tracker with this discussion but not prioritize it unless there is demand</p>", "type": "rendered"}, "created_on": "2018-04-27T20:14:48.979406+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T20:14:48.986031+00:00", "type": "pullrequest_comment", "id": 62877192}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62881911.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62881911"}}, "parent": {"id": 62877192, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62877192.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62877192"}}, "depth": 10}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "issue #5", "markup": "markdown", "html": "<p>issue <a href=\"#!/ignitionrobotics/ign-physics/issues/5/support-primitive-datatypes-in\" rel=\"nofollow\" title=\"Support primitive datatypes in CompositeData\" class=\"ap-connect-link\">#5</a></p>", "type": "rendered"}, "created_on": "2018-04-27T21:37:40.416150+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T21:37:40.424502+00:00", "type": "pullrequest_comment", "id": 62881911}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62879368.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62879368"}}, "parent": {"id": 62874156, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874156.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874156"}}, "depth": 9}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Would it be easy to make the use of POD fail at compile time?", "markup": "markdown", "html": "<p>Would it be easy to make the use of POD fail at compile time?</p>", "type": "rendered"}, "created_on": "2018-04-27T20:49:34.257857+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T20:49:34.267097+00:00", "type": "pullrequest_comment", "id": 62879368}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62879692.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62879692"}}, "parent": {"id": 62879368, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62879368.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62879368"}}, "depth": 10}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I don't think there's anything wrong with using POD in a CompositeData general (and it wouldn't actually solve the issue with `std::string`, since `std::string` isn't a POD).\n\nThere's only a problem if multiple plugins are operating on the same data type without accounting for the fact that there are other plugins who are operating on it. I don't think that's a design concern that can reasonably be addressed by the `CompositeData` class itself. But I think that design concern is a little bit less bad if we don't support primitives.", "markup": "markdown", "html": "<p>I don't think there's anything wrong with using POD in a CompositeData general (and it wouldn't actually solve the issue with <code>std::string</code>, since <code>std::string</code> isn't a POD).</p>\n<p>There's only a problem if multiple plugins are operating on the same data type without accounting for the fact that there are other plugins who are operating on it. I don't think that's a design concern that can reasonably be addressed by the <code>CompositeData</code> class itself. But I think that design concern is a little bit less bad if we don't support primitives.</p>", "type": "rendered"}, "created_on": "2018-04-27T20:54:34.425793+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T20:54:34.435625+00:00", "type": "pullrequest_comment", "id": 62879692}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62880181.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62880181"}}, "parent": {"id": 62873748, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62873748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62873748"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "here's an example of what I meant by 'better semantics with named wrapper classes':\n\n* #!/ignitionrobotics/ign-physics/src/7940640ea0c423c8cfccef941e250616ad71585f/include/ignition/physics/ForwardStep.hh?fileviewer=file-view-default#ForwardStep.hh-36:45\n\nwe have a `WorldPose` struct defined, but then we also define `TargetPose` and `EndEffectorPose` as derived structs", "markup": "markdown", "html": "<p>here's an example of what I meant by 'better semantics with named wrapper classes':</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/src/7940640ea0c423c8cfccef941e250616ad71585f/include/ignition/physics/ForwardStep.hh?fileviewer=file-view-default#ForwardStep.hh-36:45\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/src/7940640ea0c423c8cfccef941e250616ad71585f/include/ignition/physics/ForwardStep.hh?fileviewer=file-view-default#ForwardStep.hh-36:45</a></li>\n</ul>\n<p>we have a <code>WorldPose</code> struct defined, but then we also define <code>TargetPose</code> and <code>EndEffectorPose</code> as derived structs</p>", "type": "rendered"}, "created_on": "2018-04-27T21:03:16.090652+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T21:03:16.097806+00:00", "type": "pullrequest_comment", "id": 62880181}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775659.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775659"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Nit: can you prefix this with a lowercase `g`, and you do you want to set it to false here? And, should `used` be `use`?", "markup": "markdown", "html": "<p>Nit: can you prefix this with a lowercase <code>g</code>, and you do you want to set it to false here? And, should <code>used</code> be <code>use</code>?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:17:17.708084+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 36, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:17:17.714199+00:00", "type": "pullrequest_comment", "id": 62775659}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775858.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775858"}}, "parent": {"id": 62775659, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775659.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775659"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "We can't set it false in a header, because that would be an ODR violation.\n\nThis flag doesn't decide whether to use the \"Expect Data Access\". Instead, it reports whether the \"Expected Data Access\" has been used.\n\nI'll prefix it with a lowercase g, though, since it's a global variable.", "markup": "markdown", "html": "<p>We can't set it false in a header, because that would be an ODR violation.</p>\n<p>This flag doesn't decide whether to use the \"Expect Data Access\". Instead, it reports whether the \"Expected Data Access\" has been used.</p>\n<p>I'll prefix it with a lowercase g, though, since it's a global variable.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:21:34.491245+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:21:34.498053+00:00", "type": "pullrequest_comment", "id": 62775858}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776177.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776177"}}, "parent": {"id": 62775858, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775858.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775858"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Out of curiosity, is this ODR violation only something on clang or windows? Setting this to false and running the test works fine for me with no warnings or errors.", "markup": "markdown", "html": "<p>Out of curiosity, is this ODR violation only something on clang or windows? Setting this to false and running the test works fine for me with no warnings or errors.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:27:53.925280+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:27:53.932881+00:00", "type": "pullrequest_comment", "id": 62776177}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776413.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776413"}}, "parent": {"id": 62776177, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776177.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776177"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "That's just a lucky coincidence, because this variable is only getting compiled in our unit tests, and our unit tests don't link to each other since they're standalone applications. If someone activated this variable (using preprocessor directives) while compiling a library and included the header in multiple translation units, it would become an ODR violation.", "markup": "markdown", "html": "<p>That's just a lucky coincidence, because this variable is only getting compiled in our unit tests, and our unit tests don't link to each other since they're standalone applications. If someone activated this variable (using preprocessor directives) while compiling a library and included the header in multiple translation units, it would become an ODR violation.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:31:56.658345+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:31:56.664819+00:00", "type": "pullrequest_comment", "id": 62776413}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776521.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776521"}}, "parent": {"id": 62776413, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776413.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776413"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Thanks.", "markup": "markdown", "html": "<p>Thanks.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:34:23.138383+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:34:23.145378+00:00", "type": "pullrequest_comment", "id": 62776521}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775817.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775817"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Sorry if there are tests for this later in the file..Can you add a test like `EXPECT_FALSE(sData.Expects<IntData>())`?", "markup": "markdown", "html": "<p>Sorry if there are tests for this later in the file..Can you add a test like <code>EXPECT_FALSE(sData.Expects&lt;IntData&gt;())</code>?</p>", "type": "rendered"}, "created_on": "2018-04-26T22:20:32.490969+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": 41, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-26T22:20:32.498499+00:00", "type": "pullrequest_comment", "id": 62775817}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62776716.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62776716"}}, "parent": {"id": 62775817, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62775817.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62775817"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Ignore. I see the tests now.", "markup": "markdown", "html": "<p>Ignore. I see the tests now.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:38:33.483999+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-26T22:38:33.491400+00:00", "type": "pullrequest_comment", "id": 62776716}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778703.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778703"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I made a few additions to the tests [here](#!/ignitionrobotics/ign-physics/branch/JustSpecifyData_nate?dest=JustSpecifyData#diff). The reference point added to the performance test was helpful, at least to me, to understand how well the composite data performs.\n\n", "markup": "markdown", "html": "<p>I made a few additions to the tests <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/branch/JustSpecifyData_nate?dest=JustSpecifyData#diff\" rel=\"nofollow\">here</a>. The reference point added to the performance test was helpful, at least to me, to understand how well the composite data performs.</p>", "type": "rendered"}, "created_on": "2018-04-26T23:24:32.592959+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-04-26T23:24:32.601338+00:00", "type": "pullrequest_comment", "id": 62778703}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778759.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778759"}}, "parent": {"id": 62778703, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778703.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778703"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "This all looks good. I'm approving. Up to you whether you want to include the `JustSpecifyData_nate` branch.", "markup": "markdown", "html": "<p>This all looks good. I'm approving. Up to you whether you want to include the <code>JustSpecifyData_nate</code> branch.</p>", "type": "rendered"}, "created_on": "2018-04-26T23:25:44.306665+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-04-26T23:25:44.313749+00:00", "type": "pullrequest_comment", "id": 62778759}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62879424.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62879424"}}, "parent": {"id": 62778759, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778759.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778759"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Merged: de0a1c2", "markup": "markdown", "html": "<p>Merged: <a href=\"#!/ignitionrobotics/ign-physics/commits/de0a1c2\" rel=\"nofollow\" class=\"ap-connect-link\">de0a1c2</a></p>", "type": "rendered"}, "created_on": "2018-04-27T20:50:01.593104+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-27T20:50:01.618232+00:00", "type": "pullrequest_comment", "id": 62879424}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887195.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887195"}}, "parent": {"id": 62778703, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62778703.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62778703"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "that's an interesting reference point; it's probably tough to do better than iterating over a `std::vector`. I'm a little curious now about what the comparison would be with something based on a map, since we had identified that as a comparable data structure", "markup": "markdown", "html": "<p>that's an interesting reference point; it's probably tough to do better than iterating over a <code>std::vector</code>. I'm a little curious now about what the comparison would be with something based on a map, since we had identified that as a comparable data structure</p>", "type": "rendered"}, "created_on": "2018-04-28T00:42:05.447520+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T00:42:05.453994+00:00", "type": "pullrequest_comment", "id": 62887195}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887315.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887315"}}, "parent": {"id": 62887195, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887195.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887195"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "We could reduce (maybe eliminate) the gap by getting rid of the query tracking.\n\nIn fact, since these are templated functions, we may be able to make the query tracking configurable at compile-time. We could have it only activate while in debug mode, or allow developers to turn it on/off with compile definitions.\n\nSome of the SpecifyData metaprogramming features would have to be cut down so that they don't rely on the availability of querying information, but I don't think that would be a significant loss.", "markup": "markdown", "html": "<p>We could reduce (maybe eliminate) the gap by getting rid of the query tracking.</p>\n<p>In fact, since these are templated functions, we may be able to make the query tracking configurable at compile-time. We could have it only activate while in debug mode, or allow developers to turn it on/off with compile definitions.</p>\n<p>Some of the SpecifyData metaprogramming features would have to be cut down so that they don't rely on the availability of querying information, but I don't think that would be a significant loss.</p>", "type": "rendered"}, "created_on": "2018-04-28T00:53:43.847321+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-28T00:53:43.853206+00:00", "type": "pullrequest_comment", "id": 62887315}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887332"}}, "parent": {"id": 62887315, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887315.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887315"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I'd suggest saving the idea for later, though, once we have a full working physics stack that we can do meaningful benchmarks with.", "markup": "markdown", "html": "<p>I'd suggest saving the idea for later, though, once we have a full working physics stack that we can do meaningful benchmarks with.</p>", "type": "rendered"}, "created_on": "2018-04-28T00:54:59.925709+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-28T00:54:59.932402+00:00", "type": "pullrequest_comment", "id": 62887332}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887364.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887364"}}, "parent": {"id": 62887332, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887332"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "agreed", "markup": "markdown", "html": "<p>agreed</p>", "type": "rendered"}, "created_on": "2018-04-28T00:59:02.822366+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T00:59:02.829816+00:00", "type": "pullrequest_comment", "id": 62887364}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62966838.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62966838"}}, "parent": {"id": 62887332, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887332"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Can you make an issue for this?", "markup": "markdown", "html": "<p>Can you make an issue for this?</p>", "type": "rendered"}, "created_on": "2018-04-30T14:30:56.703435+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-04-30T14:30:56.728789+00:00", "type": "pullrequest_comment", "id": 62966838}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62983718.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62983718"}}, "parent": {"id": 62966838, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62966838.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62966838"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "[Opened issue](#!/ignitionrobotics/ign-physics/issues/6/)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/issues/6/\" rel=\"nofollow\">Opened issue</a></p>", "type": "rendered"}, "created_on": "2018-04-30T17:00:43.320899+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-30T17:00:43.327911+00:00", "type": "pullrequest_comment", "id": 62983718}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868698.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868698"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "One thing I'd like to draw attention to was @sloretz 's [proposal a while back](#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-45022763) about naming `ExpectData<T>` to `OptionalData<T>`, because it might be unclear what the difference is between `Expected` and `Required`.\n\nI'm definitely open to this idea. I think my only hesitation is that having an `Optional<T>` class might lead users to think that they need to specify every `T` that the object is able to accept (kind of like the [C++17 `std::variant` class](http://en.cppreference.com/w/cpp/utility/variant)). In reality, every type is already considered optional, while the `ExpectData<T>` class gives special performance benefits to any types that are specified.\n\nI would appreciate more opinions on this, because I'm not sure if the current name is appropriate, or if we should try to improve it.", "markup": "markdown", "html": "<p>One thing I'd like to draw attention to was @sloretz 's <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/5/part-2-compositedata-specifydata/activity#comment-45022763\" rel=\"nofollow\">proposal a while back</a> about naming <code>ExpectData&lt;T&gt;</code> to <code>OptionalData&lt;T&gt;</code>, because it might be unclear what the difference is between <code>Expected</code> and <code>Required</code>.</p>\n<p>I'm definitely open to this idea. I think my only hesitation is that having an <code>Optional&lt;T&gt;</code> class might lead users to think that they need to specify every <code>T</code> that the object is able to accept (kind of like the <a data-is-external-link=\"true\" href=\"http://en.cppreference.com/w/cpp/utility/variant\" rel=\"nofollow\">C++17 <code>std::variant</code> class</a>). In reality, every type is already considered optional, while the <code>ExpectData&lt;T&gt;</code> class gives special performance benefits to any types that are specified.</p>\n<p>I would appreciate more opinions on this, because I'm not sure if the current name is appropriate, or if we should try to improve it.</p>", "type": "rendered"}, "created_on": "2018-04-27T18:13:18.428985+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-27T18:13:18.441812+00:00", "type": "pullrequest_comment", "id": 62868698}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62876222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62876222"}}, "parent": {"id": 62868698, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62868698.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62868698"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Thanks. I had forgotten about that proposal.  From my point of view, every data type that is not Expected or Required is optional. The \"expected\" name indicates that the user is acknowledging the fact that certain data types will likely exist and therefore special considerations should be taken. So, I view:\n\n* Optional: Everything that is neither Expected nor Required and receives the poorest performance.\n* Expected: Data types that are likely to exist, and should receive special treatment.\n* Required: Data types that must and are guaranteed to exist.\n\nDoes that jive with your thoughts Grey?", "markup": "markdown", "html": "<p>Thanks. I had forgotten about that proposal.  From my point of view, every data type that is not Expected or Required is optional. The \"expected\" name indicates that the user is acknowledging the fact that certain data types will likely exist and therefore special considerations should be taken. So, I view:</p>\n<ul>\n<li>Optional: Everything that is neither Expected nor Required and receives the poorest performance.</li>\n<li>Expected: Data types that are likely to exist, and should receive special treatment.</li>\n<li>Required: Data types that must and are guaranteed to exist.</li>\n</ul>\n<p>Does that jive with your thoughts Grey?</p>", "type": "rendered"}, "created_on": "2018-04-27T19:59:24.186329+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-04-27T19:59:30.424365+00:00", "type": "pullrequest_comment", "id": 62876222}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62876740.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62876740"}}, "parent": {"id": 62876222, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62876222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62876222"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Yep, that was exactly the idea behind the current naming.", "markup": "markdown", "html": "<p>Yep, that was exactly the idea behind the current naming.</p>", "type": "rendered"}, "created_on": "2018-04-27T20:07:54.429330+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-27T20:07:54.435725+00:00", "type": "pullrequest_comment", "id": 62876740}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887204.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887204"}}, "parent": {"id": 62876222, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62876222.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62876222"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I think `Expected` makes more sense to me than `Optional`", "markup": "markdown", "html": "<p>I think <code>Expected</code> makes more sense to me than <code>Optional</code></p>", "type": "rendered"}, "created_on": "2018-04-28T00:42:46.240202+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T00:42:46.246693+00:00", "type": "pullrequest_comment", "id": 62887204}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62872463.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62872463"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I've added a commit that significantly cleans up the documentation: 1e3a9fc\n\nAll of the classes that are only used for implementation (i.e. not really part of the public API) are now hidden from doxygen.", "markup": "markdown", "html": "<p>I've added a commit that significantly cleans up the documentation: <a href=\"#!/ignitionrobotics/ign-physics/commits/1e3a9fc\" rel=\"nofollow\" class=\"ap-connect-link\">1e3a9fc</a></p>\n<p>All of the classes that are only used for implementation (i.e. not really part of the public API) are now hidden from doxygen.</p>", "type": "rendered"}, "created_on": "2018-04-27T19:01:57.922423+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-27T19:01:57.930327+00:00", "type": "pullrequest_comment", "id": 62872463}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62872525.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62872525"}}, "parent": {"id": 62872463, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62872463.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62872463"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Note: it's best if used with [this branch of ign-cmake](#!/ignitionrobotics/ign-cmake/pull-requests/73).", "markup": "markdown", "html": "<p>Note: it's best if used with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/pull-requests/73\" rel=\"nofollow\">this branch of ign-cmake</a>.</p>", "type": "rendered"}, "created_on": "2018-04-27T19:02:53.328517+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-27T19:02:53.335376+00:00", "type": "pullrequest_comment", "id": 62872525}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887339.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887339"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "just one code_check complaint:\n\n* https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/7/cppcheckResult/", "markup": "markdown", "html": "<p>just one code_check complaint:</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/7/cppcheckResult/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/7/cppcheckResult/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-04-28T00:56:00.176479+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T00:56:00.182932+00:00", "type": "pullrequest_comment", "id": 62887339}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62890127.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62890127"}}, "parent": {"id": 62887339, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62887339.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62887339"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "suppressed in ~~1dc9962d76cd~~ bc902981b001", "markup": "markdown", "html": "<p>suppressed in <del><a href=\"#!/ignitionrobotics/ign-physics/commits/1dc9962d76cd\" rel=\"nofollow\" class=\"ap-connect-link\">1dc9962d76cd</a></del> <a href=\"#!/ignitionrobotics/ign-physics/commits/bc902981b001\" rel=\"nofollow\" class=\"ap-connect-link\">bc902981b001</a></p>", "type": "rendered"}, "created_on": "2018-04-28T06:48:10.182562+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T06:48:50.016691+00:00", "type": "pullrequest_comment", "id": 62890127}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62890176.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62890176"}}, "parent": {"id": 62890127, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62890127.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62890127"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-xenial-amd64&build=8)](https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/8/) https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/8/", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/8/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-xenial-amd64&amp;build=8\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/8/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-xenial-amd64/8/</a></p>", "type": "rendered"}, "created_on": "2018-04-28T06:51:49.425797+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-04-28T06:51:49.432140+00:00", "type": "pullrequest_comment", "id": 62890176}], "page": 1, "size": 99}