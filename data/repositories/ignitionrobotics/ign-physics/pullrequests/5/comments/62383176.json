{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62383176.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62383176"}}, "parent": {"id": 62237730, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62237730.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62237730"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "I've removed the `template` keyword: e383ec8 \n\nI originally put it in because it's usually necessary for dependent name lookup, which is explained pretty exhaustively [here](https://stackoverflow.com/a/613132). I guess in this particular case it's not needed, maybe because the dependent name is a class instead of a function? Or maybe because it's not actually a \"dependent name\" since it only depends on the template parameter, and not on the templated class that it's being called inside of?\n\nWhatever the reason, gcc, clang, and MSVC all seem happy to compile the code without the `template` keyword. I still suspect that MSVC should've accepted it, but if the code is valid without using the keyword, I won't complain.", "markup": "markdown", "html": "<p>I've removed the <code>template</code> keyword: <a href=\"#!/ignitionrobotics/ign-physics/commits/e383ec8\" rel=\"nofollow\" class=\"ap-connect-link\">e383ec8</a> </p>\n<p>I originally put it in because it's usually necessary for dependent name lookup, which is explained pretty exhaustively <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/a/613132\" rel=\"nofollow\">here</a>. I guess in this particular case it's not needed, maybe because the dependent name is a class instead of a function? Or maybe because it's not actually a \"dependent name\" since it only depends on the template parameter, and not on the templated class that it's being called inside of?</p>\n<p>Whatever the reason, gcc, clang, and MSVC all seem happy to compile the code without the <code>template</code> keyword. I still suspect that MSVC should've accepted it, but if the code is valid without using the keyword, I won't complain.</p>", "type": "rendered"}, "created_on": "2018-04-23T22:54:31.790942+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-23T22:54:31.798139+00:00", "type": "pullrequest_comment", "id": 62383176}