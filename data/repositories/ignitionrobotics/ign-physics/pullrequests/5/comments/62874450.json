{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874450.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:bc902981b001..8eb69edea97d?path=src%2FSpecifyData_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874450"}}, "parent": {"id": 62874007, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62874007.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62874007"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "It'd probably be something like\n\n```\nnamespace detail {\n\ntemplate <typename P>\nstruct PrimitiveWrapper\n{\n  public: P value;\n};\n\ntemplate <typename P>\nusing PrimitiveCloneable = MakeCloneable<PrimitiveWrapper<P>>;\n\n} // namespace detail\n\n#define DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE( x ) \\\n  class MakeCloneable<x> : public detail::PrimitiveCloneable<x> { };\n\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(int)\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(double)\nDETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE(std::size_t)\n// ... etc ...\n```", "markup": "markdown", "html": "<p>It'd probably be something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">namespace</span> <span class=\"nt\">detail</span> <span class=\"p\">{</span>\n\n<span class=\"err\">template</span> <span class=\"err\">&lt;typename</span> <span class=\"err\">P&gt;</span>\n<span class=\"err\">struct</span> <span class=\"err\">PrimitiveWrapper</span>\n<span class=\"err\">{</span>\n  <span class=\"n\">public</span><span class=\"p\">:</span> <span class=\"n\">P</span> <span class=\"n\">value</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"o\">;</span>\n\n<span class=\"nt\">template</span> <span class=\"o\">&lt;</span><span class=\"nt\">typename</span> <span class=\"nt\">P</span><span class=\"o\">&gt;</span>\n<span class=\"nt\">using</span> <span class=\"nt\">PrimitiveCloneable</span> <span class=\"o\">=</span> <span class=\"nt\">MakeCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">PrimitiveWrapper</span><span class=\"o\">&lt;</span><span class=\"nt\">P</span><span class=\"o\">&gt;&gt;;</span>\n\n<span class=\"err\">}</span> <span class=\"o\">//</span> <span class=\"nt\">namespace</span> <span class=\"nt\">detail</span>\n\n<span class=\"p\">#</span><span class=\"nn\">define</span> <span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span> <span class=\"nt\">x</span> <span class=\"o\">)</span> <span class=\"err\">\\</span>\n  <span class=\"nt\">class</span> <span class=\"nt\">MakeCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">x</span><span class=\"o\">&gt;</span> <span class=\"o\">:</span> <span class=\"nt\">public</span> <span class=\"nt\">detail</span><span class=\"p\">::</span><span class=\"nd\">PrimitiveCloneable</span><span class=\"o\">&lt;</span><span class=\"nt\">x</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span> <span class=\"p\">}</span><span class=\"o\">;</span>\n\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">int</span><span class=\"o\">)</span>\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">double</span><span class=\"o\">)</span>\n<span class=\"nt\">DETAIL_IGN_PHYSICS_MAKECLONEABLE_PRIMITIVE</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">size_t</span><span class=\"o\">)</span>\n<span class=\"o\">//</span> <span class=\"o\">...</span> <span class=\"nt\">etc</span> <span class=\"o\">...</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-27T19:32:36.418400+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": false, "path": "src/SpecifyData_TEST.cc"}, "updated_on": "2018-04-27T19:32:46.137710+00:00", "type": "pullrequest_comment", "id": 62874450}