{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774870.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:ab7c93600889..8eb69edea97d?path=include%2Fignition%2Fphysics%2Fdetail%2FPrivateSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774870"}}, "parent": {"id": 62774474, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62774474.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62774474"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "Only if a user attempts to use `Get<T>()` on a const-qualified composite when `T` might not exist (because it wasn't marked as required at compile-time).\n\nThe base `CompositeData` class doesn't even offer a const-qualified version of `Get<T>()` because it assumes it might need to create a `T` entry if `T` did not already exist. This `Get<T>() const` is an enhancement for `RequireData<T>` which is only possible because we can guarantee at compile-time that a `T` entry will exist in `RequireData<T>`.", "markup": "markdown", "html": "<p>Only if a user attempts to use <code>Get&lt;T&gt;()</code> on a const-qualified composite when <code>T</code> might not exist (because it wasn't marked as required at compile-time).</p>\n<p>The base <code>CompositeData</code> class doesn't even offer a const-qualified version of <code>Get&lt;T&gt;()</code> because it assumes it might need to create a <code>T</code> entry if <code>T</code> did not already exist. This <code>Get&lt;T&gt;() const</code> is an enhancement for <code>RequireData&lt;T&gt;</code> which is only possible because we can guarantee at compile-time that a <code>T</code> entry will exist in <code>RequireData&lt;T&gt;</code>.</p>", "type": "rendered"}, "created_on": "2018-04-26T22:00:48.749533+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/detail/PrivateSpecifyData.hh"}, "updated_on": "2018-04-26T22:01:16.267894+00:00", "type": "pullrequest_comment", "id": 62774870}