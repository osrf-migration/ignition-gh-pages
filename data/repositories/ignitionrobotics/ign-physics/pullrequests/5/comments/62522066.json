{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62522066.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e42648072940..8eb69edea97d?path=include%2Fignition%2Fphysics%2FSpecifyData.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62522066"}}, "parent": {"id": 62521944, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5/comments/62521944.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5/_/diff#comment-62521944"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/5"}}, "title": "Part 2: CompositeData, SpecifyData implementation and tests"}, "content": {"raw": "An example will probably explain it better than a description:\n\n```\nusing FooData = RequireData<Foo>\n\n// AlwaysRequires() can NOT be called on an instance, because it is a static function\nEXPECT_TRUE(FooData::AlwaysRequires<Foo>());\nEXPECT_FALSE(FooData::AlwaysRequires<Bar>());\n\n// Requires() can ONLY be called on an instance\nFooData data;\nEXPECT_TRUE(data.Requires<Foo>());\nEXPECT_FALSE(data.Requires<Bar>());\n\n// Requires() return value can change during runtime\ndata.MakeRequired<Bar>();\nEXPECT_TRUE(data.Requires<Bar>());\n\n// AlwaysRequires() is determined from type information at compile time, so it can never change\nEXPECT_FALSE(FooData::AlwaysRequires<Bar>());\n```", "markup": "markdown", "html": "<p>An example will probably explain it better than a description:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">using</span> <span class=\"nt\">FooData</span> <span class=\"o\">=</span> <span class=\"nt\">RequireData</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span><span class=\"o\">()</span> <span class=\"nt\">can</span> <span class=\"nt\">NOT</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span><span class=\"o\">,</span> <span class=\"nt\">because</span> <span class=\"nt\">it</span> <span class=\"nt\">is</span> <span class=\"nt\">a</span> <span class=\"nt\">static</span> <span class=\"nt\">function</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span><span class=\"o\">()</span> <span class=\"nt\">can</span> <span class=\"nt\">ONLY</span> <span class=\"nt\">be</span> <span class=\"nt\">called</span> <span class=\"nt\">on</span> <span class=\"nt\">an</span> <span class=\"nt\">instance</span>\n<span class=\"nt\">FooData</span> <span class=\"nt\">data</span><span class=\"o\">;</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Foo</span><span class=\"o\">&gt;());</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Requires</span><span class=\"o\">()</span> <span class=\"nt\">return</span> <span class=\"nt\">value</span> <span class=\"nt\">can</span> <span class=\"nt\">change</span> <span class=\"nt\">during</span> <span class=\"nt\">runtime</span>\n<span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">MakeRequired</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;();</span>\n<span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">data</span><span class=\"p\">.</span><span class=\"nc\">Requires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">AlwaysRequires</span><span class=\"o\">()</span> <span class=\"nt\">is</span> <span class=\"nt\">determined</span> <span class=\"nt\">from</span> <span class=\"nt\">type</span> <span class=\"nt\">information</span> <span class=\"nt\">at</span> <span class=\"nt\">compile</span> <span class=\"nt\">time</span><span class=\"o\">,</span> <span class=\"nt\">so</span> <span class=\"nt\">it</span> <span class=\"nt\">can</span> <span class=\"nt\">never</span> <span class=\"nt\">change</span>\n<span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">FooData</span><span class=\"p\">::</span><span class=\"nd\">AlwaysRequires</span><span class=\"o\">&lt;</span><span class=\"nt\">Bar</span><span class=\"o\">&gt;());</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-25T00:45:55.422295+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/SpecifyData.hh"}, "updated_on": "2018-04-25T00:46:58.429819+00:00", "type": "pullrequest_comment", "id": 62522066}