{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134906375.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:6f689e2dbb59..e6065f91a166?path=dartsim%2Fsrc%2FEntityManagementFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134906375"}}, "parent": {"id": 134849520, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134849520.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134849520"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "In theory it shouldn\u2019t be possible for this function to be called with an invalid `_modelID` value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public `ignition-physics` API.\n\nIf we\u2019re worried about the possibility of users doing crazy things, I think I\u2019d recommend an `assert` to avoid the cost of the check when compiling in release mode.\n\nThen again, maybe what I\u2019m suggesting is a micro-optimization and it would be better to have strict checks on these things until `ignition-physics` has proven itself with more mileage. Then we can relax these checks in the future, once we\u2019re more confident in the design, to squeeze out more performance.", "markup": "markdown", "html": "<p>In theory it shouldn\u2019t be possible for this function to be called with an invalid <code>_modelID</code> value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public <code>ignition-physics</code> API.</p>\n<p>If we\u2019re worried about the possibility of users doing crazy things, I think I\u2019d recommend an <code>assert</code> to avoid the cost of the check when compiling in release mode.</p>\n<p>Then again, maybe what I\u2019m suggesting is a micro-optimization and it would be better to have strict checks on these things until <code>ignition-physics</code> has proven itself with more mileage. Then we can relax these checks in the future, once we\u2019re more confident in the design, to squeeze out more performance.</p>", "type": "rendered"}, "created_on": "2020-02-07T04:04:30.786813+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 594, "from": null, "outdated": true, "path": "dartsim/src/EntityManagementFeatures.cc"}, "updated_on": "2020-02-07T04:04:30.794573+00:00", "type": "pullrequest_comment", "id": 134906375}