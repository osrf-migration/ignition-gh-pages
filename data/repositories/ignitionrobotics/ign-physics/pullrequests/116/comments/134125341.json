{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125341.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:dc3dc5b18404..daa84ad7aa1b?path=include%2Fignition%2Fphysics%2FCollisionFilterMask.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125341"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I wonder if this should be `SetCollisionFilterMask(~)` since it won\u2019t add a mask if the object already has one.\n\nI also wonder if we should support something like `RemoveCollisionFilterMask(~)`.", "markup": "markdown", "html": "<p>I wonder if this should be <code>SetCollisionFilterMask(~)</code> since it won\u2019t add a mask if the object already has one.</p>\n<p>I also wonder if we should support something like <code>RemoveCollisionFilterMask(~)</code>.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:52:54.621342+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 40, "from": null, "outdated": true, "path": "include/ignition/physics/CollisionFilterMask.hh"}, "updated_on": "2020-02-03T04:52:54.626128+00:00", "type": "pullrequest_comment", "id": 134125341}