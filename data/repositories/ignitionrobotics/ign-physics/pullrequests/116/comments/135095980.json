{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135095980.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:6f689e2dbb59..e6065f91a166?path=dartsim%2Fsrc%2FEntityManagementFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135095980"}}, "parent": {"id": 135072161, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135072161.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135072161"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Ah, I see :thinking: \n\nI think my recommendation \\(perhaps as a future feature since it\u2019s not really critical\\) is to take advantage of the reference counting for `EntityPtr`s so that calling `RemoveModel(~)` will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished. That\u2019s how I intended the `ignition-physics` API to work, although maybe I neglected to actually implement it like that.\n\nThat being said, it looks like we could probably just move these lines into the `if (this->models.HasEntity(_modelID))` statement. As long as that returns true, I believe we can be certain that the model exists.", "markup": "markdown", "html": "<p>Ah, I see <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f914.png\" alt=\"\ud83e\udd14\" title=\":thinking:\" data-emoji-short-name=\":thinking:\" /> </p>\n<p>I think my recommendation (perhaps as a future feature since it\u2019s not really critical) is to take advantage of the reference counting for <code>EntityPtr</code>s so that calling <code>RemoveModel(~)</code> will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished. That\u2019s how I intended the <code>ignition-physics</code> API to work, although maybe I neglected to actually implement it like that.</p>\n<p>That being said, it looks like we could probably just move these lines into the <code>if (this-&gt;models.HasEntity(_modelID))</code> statement. As long as that returns true, I believe we can be certain that the model exists.</p>", "type": "rendered"}, "created_on": "2020-02-10T02:54:04.392119+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 594, "from": null, "outdated": true, "path": "dartsim/src/EntityManagementFeatures.cc"}, "updated_on": "2020-02-10T02:54:04.399964+00:00", "type": "pullrequest_comment", "id": 135095980}