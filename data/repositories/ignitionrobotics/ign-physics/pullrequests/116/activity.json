{"pagelen": 50, "values": [{"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "66025c17edec", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/66025c17edec.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/66025c17edec"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "MERGED", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-03-04T00:46:58.272452+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/138511237.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-138511237"}}, "parent": {"id": 138460915, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/138460915.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-138460915"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Clean, merging!", "markup": "markdown", "html": "<p>Clean, merging!</p>", "type": "rendered"}, "created_on": "2020-03-04T00:46:52.349874+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-03-04T00:46:52.361964+00:00", "type": "pullrequest_comment", "id": 138511237}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"approval": {"date": "2020-03-03T17:33:39.225795+00:00", "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/138460915.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-138460915"}}, "parent": {"id": 136710622, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/136710622.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-136710622"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "one last whitespace change; it looks good!\n\nmerge when CI is clean", "markup": "markdown", "html": "<p>one last whitespace change; it looks good!</p>\n<p>merge when CI is clean</p>", "type": "rendered"}, "created_on": "2020-03-03T17:33:36.860390+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-03-03T17:33:36.871606+00:00", "type": "pullrequest_comment", "id": 138460915}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "66025c17edec", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/66025c17edec.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/66025c17edec"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-03-03T17:30:10.082217+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "66025c17edec", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/66025c17edec.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/66025c17edec"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-03-03T17:30:10.065949+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/136710622.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-136710622"}}, "parent": {"id": 136710384, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/136710384.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-136710384"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "and then one style change to restore the leading `_` in a function's parameter names: 985ec5b\n\n(my apologies for pushing directly)", "markup": "markdown", "html": "<p>and then one style change to restore the leading <code>_</code> in a function's parameter names: <a href=\"#!/ignitionrobotics/ign-physics/commits/985ec5b\" rel=\"nofollow\" class=\"ap-connect-link\">985ec5b</a></p>\n<p>(my apologies for pushing directly)</p>", "type": "rendered"}, "created_on": "2020-02-20T05:57:26.271246+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-02-20T05:57:26.278428+00:00", "type": "pullrequest_comment", "id": 136710622}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "985ec5b6e4d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/985ec5b6e4d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/985ec5b6e4d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:56:40.188428+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/136710384.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-136710384"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I made some minor edits to the doxygen of the new feature and the Changelog", "markup": "markdown", "html": "<p>I made some minor edits to the doxygen of the new feature and the Changelog</p>", "type": "rendered"}, "created_on": "2020-02-20T05:54:27.411453+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-02-20T05:54:27.418733+00:00", "type": "pullrequest_comment", "id": 136710384}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "910d1fd4d94b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/910d1fd4d94b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/910d1fd4d94b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:49:08.738874+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "910d1fd4d94b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/910d1fd4d94b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/910d1fd4d94b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:49:08.688018+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "72d82d54a2ff", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/72d82d54a2ff.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/72d82d54a2ff"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:48:45.664024+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "9efe8aee3d56", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9efe8aee3d56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9efe8aee3d56"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:42:36.414341+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "8fea56a39aa3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8fea56a39aa3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8fea56a39aa3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "9efe8aee3d56", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9efe8aee3d56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9efe8aee3d56"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-02-20T05:42:36.342793+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/136696213.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-136696213"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Is this ready to be merged?", "markup": "markdown", "html": "<p>Is this ready to be merged?</p>", "type": "rendered"}, "created_on": "2020-02-20T01:58:44.602873+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-02-20T01:58:44.609047+00:00", "type": "pullrequest_comment", "id": 136696213}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"approval": {"date": "2020-02-13T15:57:14.842898+00:00", "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135502840.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135502840"}}, "parent": {"id": 135095980, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135095980.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135095980"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "> I think my recommendation (perhaps as a future feature since it\u2019s not really critical) is to take advantage of the reference counting for EntityPtrs so that calling RemoveModel(~) will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished.\n\nYeah, I think that partly works. For example, `GetModelName` would still work on a removed model because it still has a valid pointer to the underlying DART skeleton. The problem is when the function tries to access `this->models` or any of the `EntityStorage` objects in `Base.hh` because those get pruned when a model is removed.\n\n> That being said, it looks like we could probably just move these lines into the if (this->models.HasEntity(_modelID)) statement. As long as that returns true, I believe we can be certain that the model exists.\n\nYup, that's what I suggest as well.", "markup": "markdown", "html": "<blockquote>\n<p>I think my recommendation (perhaps as a future feature since it\u2019s not really critical) is to take advantage of the reference counting for EntityPtrs so that calling RemoveModel(~) will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished.</p>\n</blockquote>\n<p>Yeah, I think that partly works. For example, <code>GetModelName</code> would still work on a removed model because it still has a valid pointer to the underlying DART skeleton. The problem is when the function tries to access <code>this-&gt;models</code> or any of the <code>EntityStorage</code> objects in <code>Base.hh</code> because those get pruned when a model is removed.</p>\n<blockquote>\n<p>That being said, it looks like we could probably just move these lines into the if (this-&gt;models.HasEntity(_modelID)) statement. As long as that returns true, I believe we can be certain that the model exists.</p>\n</blockquote>\n<p>Yup, that's what I suggest as well.</p>", "type": "rendered"}, "created_on": "2020-02-12T03:00:21.949151+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-12T03:00:21.959512+00:00", "type": "pullrequest_comment", "id": 135502840}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135095980.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135095980"}}, "parent": {"id": 135072161, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135072161.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135072161"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Ah, I see :thinking: \n\nI think my recommendation \\(perhaps as a future feature since it\u2019s not really critical\\) is to take advantage of the reference counting for `EntityPtr`s so that calling `RemoveModel(~)` will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished. That\u2019s how I intended the `ignition-physics` API to work, although maybe I neglected to actually implement it like that.\n\nThat being said, it looks like we could probably just move these lines into the `if (this->models.HasEntity(_modelID))` statement. As long as that returns true, I believe we can be certain that the model exists.", "markup": "markdown", "html": "<p>Ah, I see <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f914.png\" alt=\"\ud83e\udd14\" title=\":thinking:\" data-emoji-short-name=\":thinking:\" /> </p>\n<p>I think my recommendation (perhaps as a future feature since it\u2019s not really critical) is to take advantage of the reference counting for <code>EntityPtr</code>s so that calling <code>RemoveModel(~)</code> will only remove a model from its world and stage the model object for deletion, but will not actually delete it until all references to the model have vanished. That\u2019s how I intended the <code>ignition-physics</code> API to work, although maybe I neglected to actually implement it like that.</p>\n<p>That being said, it looks like we could probably just move these lines into the <code>if (this-&gt;models.HasEntity(_modelID))</code> statement. As long as that returns true, I believe we can be certain that the model exists.</p>", "type": "rendered"}, "created_on": "2020-02-10T02:54:04.392119+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-10T02:54:04.399964+00:00", "type": "pullrequest_comment", "id": 135095980}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/135072161.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-135072161"}}, "parent": {"id": 134906375, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134906375.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134906375"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "> In theory it shouldn\u2019t be possible for this function to be called with an invalid _modelID value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public ignition-physics API.\n\nIf you call `Model::Remove` twice, the second time, `_modelID` will be invalid in the sense that it's not in `Base::models` anymore. Of course, you wouldn't do that on purpose, but I can see how someone could have multiple `ModelPtr` to the same model and call `Remove` on them from different locations in their code. The question is, do we throw an exception when that happens or just noop?\n", "markup": "markdown", "html": "<blockquote>\n<p>In theory it shouldn\u2019t be possible for this function to be called with an invalid _modelID value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public ignition-physics API.</p>\n</blockquote>\n<p>If you call <code>Model::Remove</code> twice, the second time, <code>_modelID</code> will be invalid in the sense that it's not in <code>Base::models</code> anymore. Of course, you wouldn't do that on purpose, but I can see how someone could have multiple <code>ModelPtr</code> to the same model and call <code>Remove</code> on them from different locations in their code. The question is, do we throw an exception when that happens or just noop?</p>", "type": "rendered"}, "created_on": "2020-02-09T00:13:26.551097+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-09T00:13:26.561060+00:00", "type": "pullrequest_comment", "id": 135072161}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134906375.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134906375"}}, "parent": {"id": 134849520, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134849520.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134849520"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "In theory it shouldn\u2019t be possible for this function to be called with an invalid `_modelID` value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public `ignition-physics` API.\n\nIf we\u2019re worried about the possibility of users doing crazy things, I think I\u2019d recommend an `assert` to avoid the cost of the check when compiling in release mode.\n\nThen again, maybe what I\u2019m suggesting is a micro-optimization and it would be better to have strict checks on these things until `ignition-physics` has proven itself with more mileage. Then we can relax these checks in the future, once we\u2019re more confident in the design, to squeeze out more performance.", "markup": "markdown", "html": "<p>In theory it shouldn\u2019t be possible for this function to be called with an invalid <code>_modelID</code> value unless the user is doing some really gnarly stuff by calling this function directly on the plugin instance instead of using the intended public <code>ignition-physics</code> API.</p>\n<p>If we\u2019re worried about the possibility of users doing crazy things, I think I\u2019d recommend an <code>assert</code> to avoid the cost of the check when compiling in release mode.</p>\n<p>Then again, maybe what I\u2019m suggesting is a micro-optimization and it would be better to have strict checks on these things until <code>ignition-physics</code> has proven itself with more mileage. Then we can relax these checks in the future, once we\u2019re more confident in the design, to squeeze out more performance.</p>", "type": "rendered"}, "created_on": "2020-02-07T04:04:30.786813+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-07T04:04:30.794573+00:00", "type": "pullrequest_comment", "id": 134906375}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "e6065f91a166", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/e6065f91a166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/e6065f91a166"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "150a71eb2ea0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/150a71eb2ea0.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/150a71eb2ea0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T01:48:47.566422+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134898903.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134898903"}}, "parent": {"id": 134855089, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134855089.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134855089"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Oops didn\u2019t go through the whole code, thanks merged!", "markup": "markdown", "html": "<p>Oops didn\u2019t go through the whole code, thanks merged!</p>", "type": "rendered"}, "created_on": "2020-02-07T01:36:58.489541+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-02-07T01:36:58.498666+00:00", "type": "pullrequest_comment", "id": 134898903}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "e6065f91a166", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/e6065f91a166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/e6065f91a166"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "5ba6fd5a39c4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5ba6fd5a39c4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5ba6fd5a39c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T01:35:25.330764+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134897776.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134897776"}}, "parent": {"id": 134847064, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134847064.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134847064"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I think the easy answer to this is that I was in the mindset of the previous solution using a pair map that and didn\u2019t think about the easier way of just fetching and doing the bitwise and in the collision ignoring function.\n\nThanks a lot for spotting it! Fixing it now, it does simplify thing a lot yes.", "markup": "markdown", "html": "<p>I think the easy answer to this is that I was in the mindset of the previous solution using a pair map that and didn\u2019t think about the easier way of just fetching and doing the bitwise and in the collision ignoring function.</p>\n<p>Thanks a lot for spotting it! Fixing it now, it does simplify thing a lot yes.</p>", "type": "rendered"}, "created_on": "2020-02-07T01:13:24.188317+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-02-07T01:13:24.193269+00:00", "type": "pullrequest_comment", "id": 134897776}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "e6065f91a166", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/e6065f91a166.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/e6065f91a166"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "4bfe6be10d74", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4bfe6be10d74.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4bfe6be10d74"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-07T00:45:21.781032+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134855089.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134855089"}}, "parent": {"id": 134522608, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134522608.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134522608"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Thanks! I created PR with some more suggested style changes #!/ignitionrobotics/ign-physics/pull-requests/118", "markup": "markdown", "html": "<p>Thanks! I created PR with some more suggested style changes <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/118\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/118</a></p>", "type": "rendered"}, "created_on": "2020-02-06T18:18:09.328275+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-02-06T18:18:09.343769+00:00", "type": "pullrequest_comment", "id": 134855089}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134849520.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134849520"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Since there is a chance `RemoveModel` can be call with a `_modelID` of a model that doesn't exist, I suggest we move these two lines into the scope of the `if` statement.", "markup": "markdown", "html": "<p>Since there is a chance <code>RemoveModel</code> can be call with a <code>_modelID</code> of a model that doesn't exist, I suggest we move these two lines into the scope of the <code>if</code> statement.</p>", "type": "rendered"}, "created_on": "2020-02-06T17:38:23.014170+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-06T17:38:23.020561+00:00", "type": "pullrequest_comment", "id": 134849520}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134848298.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134848298"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Should we return `0xff` instead since that's the default bitmask of a shape? ", "markup": "markdown", "html": "<p>Should we return <code>0xff</code> instead since that's the default bitmask of a shape? </p>", "type": "rendered"}, "created_on": "2020-02-06T17:29:38.312585+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-06T17:29:38.319459+00:00", "type": "pullrequest_comment", "id": 134848298}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134847064.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134847064"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Maybe I'm missing something but, is there an advantage to using `dart::collision::detail::UnorderedPairs<DartShape>` than retrieving the bitmasks of `shapeNode1` and `shapeNode2` from `bitmaskMap` and doing the bitwise and here? I think it would greatly simplify the code. Also, and maybe @{557058:67759e29-d1df-465f-868d-047738e36fc9} can chime in, I don't know if classes in the `detail` namespace are meant to be used outside of DART.", "markup": "markdown", "html": "<p>Maybe I'm missing something but, is there an advantage to using <code>dart::collision::detail::UnorderedPairs&lt;DartShape&gt;</code> than retrieving the bitmasks of <code>shapeNode1</code> and <code>shapeNode2</code> from <code>bitmaskMap</code> and doing the bitwise and here? I think it would greatly simplify the code. Also, and maybe <span class=\"ap-mention\" data-atlassian-id=\"557058:67759e29-d1df-465f-868d-047738e36fc9\">@Michael Grey</span> can chime in, I don't know if classes in the <code>detail</code> namespace are meant to be used outside of DART.</p>", "type": "rendered"}, "created_on": "2020-02-06T17:21:30.885517+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-06T17:21:30.913774+00:00", "type": "pullrequest_comment", "id": 134847064}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134522608.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134522608"}}, "parent": {"id": 134444503, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134444503.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134444503"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Done! The CollisionFilter object is now a bit more involved since I had to create a custom hashmap to store ShapeNode pairs, but it\u2019s not too bad. I also addressed \\(as far as I can tell\\) all the suggested changes.", "markup": "markdown", "html": "<p>Done! The CollisionFilter object is now a bit more involved since I had to create a custom hashmap to store ShapeNode pairs, but it\u2019s not too bad. I also addressed (as far as I can tell) all the suggested changes.</p>", "type": "rendered"}, "created_on": "2020-02-05T05:25:24.825286+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-02-05T05:25:24.832204+00:00", "type": "pullrequest_comment", "id": 134522608}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "6f689e2dbb59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/6f689e2dbb59.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/6f689e2dbb59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-05T05:25:06.058075+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "c7cf0d37499c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/c7cf0d37499c.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/c7cf0d37499c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-05T04:25:43.786956+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134447549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134447549"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "nit: We usually specify access modifiers(`public`, `private`) for each member function and variable.", "markup": "markdown", "html": "<p>nit: We usually specify access modifiers(<code>public</code>, <code>private</code>) for each member function and variable.</p>", "type": "rendered"}, "created_on": "2020-02-04T16:41:30.603915+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-04T16:41:48.195660+00:00", "type": "pullrequest_comment", "id": 134447549}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134446249.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134446249"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "We should use camelCase for variable names according to the [Gazebo style guide](http://gazebosim.org/tutorials?tut=contrib_code&cat=development#Style).  ", "markup": "markdown", "html": "<p>We should use camelCase for variable names according to the <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style\" rel=\"nofollow\">Gazebo style guide</a>.  </p>", "type": "rendered"}, "created_on": "2020-02-04T16:34:45.812132+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-04T16:34:45.824060+00:00", "type": "pullrequest_comment", "id": 134446249}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134445392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134445392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I think this can go in `Shape.hh`, but remain a `Feature`. A physics engine does not have to implement all the `Feature`s in `Shape.hh`, so that shouldn't be a problem. Putting `Shape` related code in `Shapes.hh` would make it easier to find, IMO.", "markup": "markdown", "html": "<p>I think this can go in <code>Shape.hh</code>, but remain a <code>Feature</code>. A physics engine does not have to implement all the <code>Feature</code>s in <code>Shape.hh</code>, so that shouldn't be a problem. Putting <code>Shape</code> related code in <code>Shapes.hh</code> would make it easier to find, IMO.</p>", "type": "rendered"}, "created_on": "2020-02-04T16:30:46.377642+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-02-04T16:30:46.386746+00:00", "type": "pullrequest_comment", "id": 134445392}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134444503.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134444503"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "In Gazebo classic, `collide_bitmask` was a property of `<collision><surface>` and you could have multiple collisions with different bitmasks inside a single link. From what I can understand from reading the code, this implementation sets bitmasks on the `BodyNode` which corresponds to Gazebo links. Would it be possible to set bitmasks on Shapes instead?", "markup": "markdown", "html": "<p>In Gazebo classic, <code>collide_bitmask</code> was a property of <code>&lt;collision&gt;&lt;surface&gt;</code> and you could have multiple collisions with different bitmasks inside a single link. From what I can understand from reading the code, this implementation sets bitmasks on the <code>BodyNode</code> which corresponds to Gazebo links. Would it be possible to set bitmasks on Shapes instead?</p>", "type": "rendered"}, "created_on": "2020-02-04T16:26:50.632255+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-02-04T16:26:50.644195+00:00", "type": "pullrequest_comment", "id": 134444503}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "0e7d5f6acefd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/0e7d5f6acefd.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/0e7d5f6acefd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-04T08:37:31.092112+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\r\n\r\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\r\n\r\nA few parts that I\u2019d like feedback on:\r\n\r\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\r\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\r\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\r\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\r\n\r\n\u200c", "title": "Implement collision filtering based on collide_bitmask property", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "7176636dca38", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7176636dca38.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7176636dca38"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-04T08:37:02.400248+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134335574.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134335574"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "OK! Renamed the feature from Add to Set \\(since indeed it updates\\), added a Remove feature as well as a getter and unit test with a simple world for all of those.\n\nAlso addressed all the review changes", "markup": "markdown", "html": "<p>OK! Renamed the feature from Add to Set (since indeed it updates), added a Remove feature as well as a getter and unit test with a simple world for all of those.</p>\n<p>Also addressed all the review changes</p>", "type": "rendered"}, "created_on": "2020-02-04T07:58:36.894728+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-02-04T07:59:16.676852+00:00", "type": "pullrequest_comment", "id": 134335574}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\n\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\n\nA few parts that I\u2019d like feedback on:\n\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\n\n\u200c", "title": "First draft of collide_bitmask feature", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "7176636dca38", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7176636dca38.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7176636dca38"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-04T07:42:47.122482+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\n\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\n\nA few parts that I\u2019d like feedback on:\n\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\n\n\u200c", "title": "First draft of collide_bitmask feature", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "203eb89e9332", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/203eb89e9332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/203eb89e9332"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-04T07:27:54.599208+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"update": {"description": "This PR adds support for the collide\\_bitmask feature \\(present in Gazebo classic\\) to disable collisions between sets of objects.\n\nSince I\u2019m quite new at ign-physics there might be a few rough edges and, while it works in my scenario, I\u2019m not quite sure it is either the right approach to do it or whether it works in all cases, I\u2019ll get some more worlds \\(like the gazebo classic example one to explain collide\\_bitmasks\\) in the coming days and double check it works as intended.\n\nA few parts that I\u2019d like feedback on:\n\n* Is this actually the right way to implement such a feature? Again being new at ign-physics it\u2019s quite the learning curve.\n* Is the Feature definition correct? Is that the right place to put it? Since it\u2019s a shape feature I thought about adding it to Shape.hh but was afraid about what might have happened if there was a physics engine that didn\u2019t provide it.\n* I\u2019m also not very familiar with the DART API so if there is anything obviously wrong there feel free to let me know.\n* When populating the hashmap bitmask\\_map I noticed \\(by adding a print statement\\) that even for a moderate number of objects there is a huge number of entries being added, I suspect this is due to using shapes but again I\u2019m not too sure.\n\n\u200c", "title": "First draft of collide_bitmask feature", "destination": {"commit": {"hash": "daa84ad7aa1b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/daa84ad7aa1b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/daa84ad7aa1b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics2"}}, "reason": "", "source": {"commit": {"hash": "ef16d31e893b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ef16d31e893b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ef16d31e893b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "add_collision_bitmask"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-02-04T07:18:48.250246+00:00"}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134137160.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134137160"}}, "parent": {"id": 134125132, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125132.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125132"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Agree, will also add a GetCollisionFilterMask, could be useful for UI purposes", "markup": "markdown", "html": "<p>Agree, will also add a GetCollisionFilterMask, could be useful for UI purposes</p>", "type": "rendered"}, "created_on": "2020-02-03T07:26:13.164805+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-02-03T07:26:13.173699+00:00", "type": "pullrequest_comment", "id": 134137160}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134128027.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134128027"}}, "parent": {"id": 134127783, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134127783.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134127783"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I agree that high performance isn\u2019t a requirement for this setup, because this is something that should only happen occasionally; it should not be part of a regular simulation update step.\n\nAlso since the PIMPL pattern is being used here, we can implement it inefficiently to start, and then make a smarter more efficient implementation later on if someone decides it\u2019s important.", "markup": "markdown", "html": "<p>I agree that high performance isn\u2019t a requirement for this setup, because this is something that should only happen occasionally; it should not be part of a regular simulation update step.</p>\n<p>Also since the PIMPL pattern is being used here, we can implement it inefficiently to start, and then make a smarter more efficient implementation later on if someone decides it\u2019s important.</p>", "type": "rendered"}, "created_on": "2020-02-03T05:42:44.507076+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-03T05:42:44.515374+00:00", "type": "pullrequest_comment", "id": 134128027}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134127783.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134127783"}}, "parent": {"id": 134125487, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125487.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125487"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "For both this and the comments about removing a bitmask I\u2019m open to adding more features. I didn\u2019t do it in my first iteration because I couldn\u2019t come up with a use case.\n\nIt seems the most common way to use bitmasks is to add them to the sdf file and set them when it is parsed. But still I think it makes sense to make the code more robust to future additions, for example if we add a GUI feature to dynamically change the bitmask. A delete function is also useful if an object is removed, so we can avoid memory leaks in the hash maps \\(and possible catastrophic behavior if a new object is created later and it has the same address of a previously deleted one!\\)\n\nI can see two ways to update the bitmask if a previous one was set already:\n\n* Edit the current function by adding another check in the loop versus the previously set bitmask \\(if existing\\), delete the entry if the previous bitmask was ANDing to 0 but the new one isn\u2019t. Has the benefit of only one iteration over the whole map but if we want to add a function to remove a bitmask \\(as you mentioned in the comments under the new feature header\\) we would need to duplicate the deleting code.\n* Just add a new function to delete all the collisions for an object that iterates over the whole map and deletes all the previously created pairs. Call the function both when we want to remove a bitmask or when we want to update a preexisting one. It is possibly slightly less efficient since we need to iterate twice over the whole map in case of update but since it is an operation that \\_should\\_ happen seldomly it is probably better for cleaner code?\n\nAs you can guess I\u2019m oriented towards the second option but what do you think?", "markup": "markdown", "html": "<p>For both this and the comments about removing a bitmask I\u2019m open to adding more features. I didn\u2019t do it in my first iteration because I couldn\u2019t come up with a use case.</p>\n<p>It seems the most common way to use bitmasks is to add them to the sdf file and set them when it is parsed. But still I think it makes sense to make the code more robust to future additions, for example if we add a GUI feature to dynamically change the bitmask. A delete function is also useful if an object is removed, so we can avoid memory leaks in the hash maps (and possible catastrophic behavior if a new object is created later and it has the same address of a previously deleted one!)</p>\n<p>I can see two ways to update the bitmask if a previous one was set already:</p>\n<ul>\n<li>Edit the current function by adding another check in the loop versus the previously set bitmask (if existing), delete the entry if the previous bitmask was ANDing to 0 but the new one isn\u2019t. Has the benefit of only one iteration over the whole map but if we want to add a function to remove a bitmask (as you mentioned in the comments under the new feature header) we would need to duplicate the deleting code.</li>\n<li>Just add a new function to delete all the collisions for an object that iterates over the whole map and deletes all the previously created pairs. Call the function both when we want to remove a bitmask or when we want to update a preexisting one. It is possibly slightly less efficient since we need to iterate twice over the whole map in case of update but since it is an operation that _should_ happen seldomly it is probably better for cleaner code?</li>\n</ul>\n<p>As you can guess I\u2019m oriented towards the second option but what do you think?</p>", "type": "rendered"}, "created_on": "2020-02-03T05:39:04.033115+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-02-03T05:39:04.042493+00:00", "type": "pullrequest_comment", "id": 134127783}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125487.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125487"}}, "parent": {"id": 134125337, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125337.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125337"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "Ohhh I see!\n\nIt makes sense to leverage that, but I think this implementation has some holes in it, then. If the bitmask of an object gets changed, then we need to make sure we recalculate all the pairs that it should be blacklisted with. In the current implementation, changing the bitmask will only add more pairs to the blacklist and not remove any previous pairs.", "markup": "markdown", "html": "<p>Ohhh I see!</p>\n<p>It makes sense to leverage that, but I think this implementation has some holes in it, then. If the bitmask of an object gets changed, then we need to make sure we recalculate all the pairs that it should be blacklisted with. In the current implementation, changing the bitmask will only add more pairs to the blacklist and not remove any previous pairs.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:55:59.051559+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-03T04:55:59.061840+00:00", "type": "pullrequest_comment", "id": 134125487}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125337.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125337"}}, "parent": {"id": 134125005, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125005.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125005"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "It doesn\u2019t override it! While looking at the dartsim [API](https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html) I found that the BodyNodeCollisionFilter class already has a [map of pairs](https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html#a95c65203c4727215e4cb5b4cf8b15d5f) of ignored BodyNode pointers that can be edited via [add / remove functions](https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html#a3c2356646f799e3d5996c30cab876849). Hence instead of overriding the ignoresCollision method and reimplementing the same functionality I thought of just using the API provided by the object itself.", "markup": "markdown", "html": "<p>It doesn\u2019t override it! While looking at the dartsim <a data-is-external-link=\"true\" href=\"https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html\" rel=\"nofollow\">API</a> I found that the BodyNodeCollisionFilter class already has a <a data-is-external-link=\"true\" href=\"https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html#a95c65203c4727215e4cb5b4cf8b15d5f\" rel=\"nofollow\">map of pairs</a> of ignored BodyNode pointers that can be edited via <a data-is-external-link=\"true\" href=\"https://dartsim.github.io/dart/v6.7.3/d6/d6e/classdart_1_1collision_1_1BodyNodeCollisionFilter.html#a3c2356646f799e3d5996c30cab876849\" rel=\"nofollow\">add / remove functions</a>. Hence instead of overriding the ignoresCollision method and reimplementing the same functionality I thought of just using the API provided by the object itself.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:52:51.017160+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-02-03T04:54:15.888004+00:00", "type": "pullrequest_comment", "id": 134125337}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125341.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125341"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I wonder if this should be `SetCollisionFilterMask(~)` since it won\u2019t add a mask if the object already has one.\n\nI also wonder if we should support something like `RemoveCollisionFilterMask(~)`.", "markup": "markdown", "html": "<p>I wonder if this should be <code>SetCollisionFilterMask(~)</code> since it won\u2019t add a mask if the object already has one.</p>\n<p>I also wonder if we should support something like <code>RemoveCollisionFilterMask(~)</code>.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:52:54.621342+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-03T04:52:54.626128+00:00", "type": "pullrequest_comment", "id": 134125341}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125132.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125132"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I think I\u2019d recommend naming this something like `SetCollisionFilterMask(~)`. We should also consider offering a `GetCollisionFilterMask()`.", "markup": "markdown", "html": "<p>I think I\u2019d recommend naming this something like <code>SetCollisionFilterMask(~)</code>. We should also consider offering a <code>GetCollisionFilterMask()</code>.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:47:44.063975+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-03T04:47:44.070328+00:00", "type": "pullrequest_comment", "id": 134125132}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/comments/134125005.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116/_/diff#comment-134125005"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}, "content": {"raw": "I don\u2019t see where this class is overriding the `ignoresCollision(~)` function of `dart::collision::BodyNodeCollisionFilter`, so I don\u2019t understand how this PR can be working.", "markup": "markdown", "html": "<p>I don\u2019t see where this class is overriding the <code>ignoresCollision(~)</code> function of <code>dart::collision::BodyNodeCollisionFilter</code>, so I don\u2019t understand how this PR can be working.</p>", "type": "rendered"}, "created_on": "2020-02-03T04:44:06.110646+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2020-02-03T04:44:06.116643+00:00", "type": "pullrequest_comment", "id": 134125005}, "pull_request": {"type": "pullrequest", "id": 116, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/116"}}, "title": "Implement collision filtering based on collide_bitmask property"}}], "next": "data/repositories/ignitionrobotics/ign-physics/pullrequests/116/activity_ctx=npHzHGtg.json"}