{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/comments/59391572.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14/_/diff#comment-59391572"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 14, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14"}}, "title": "[proposal] valgrind"}, "content": {"raw": "I think valgrind might have an extra memory check or two, but it is possible to run tests with sanitizers using only arguments to cmake. And advantage is a problem detected by a sanitizer causes the test to return non zero exit code, so it looks like a test failure and can be part of normal testing rather than an extra step in pipelines.\n\nIt would look roughly like this. `gcc` has some sanitizer support, so the `clang` compiler part isn't strictly necessary.\n\n```\nexport SANITIZERS=\"-fsanitize=address -fsanitize=undefined\"\ncmake .. \\\n    -DCMAKE_BUILD_TYPE=Debug \\\n    -DCMAKE_C_COMPILER=\"/usr/bin/clang-6.0\" \\\n    -DCMAKE_CXX_COMPILER=\"/usr/bin/clang++-6.0\" \\\n    -DCMAKE_C_FLAGS=\"$SANITIZERS\" \\\n    -DCMAKE_CXX_FLAGS=\"$SANITIZERS\" \\\n    -DCMAKE_EXE_LINKER_FLAGS=\"$SANITIZERS\" \\\n    -DCMAKE_SHARED_LINKER_FLAGS=\"$SANITIZERS\" \\\n    -DCMAKE_MODULE_LINKER_FLAGS=\"$SANITIZERS\"\n\nmake -j 8\nmake test\n```", "markup": "markdown", "html": "<p>I think valgrind might have an extra memory check or two, but it is possible to run tests with sanitizers using only arguments to cmake. And advantage is a problem detected by a sanitizer causes the test to return non zero exit code, so it looks like a test failure and can be part of normal testing rather than an extra step in pipelines.</p>\n<p>It would look roughly like this. <code>gcc</code> has some sanitizer support, so the <code>clang</code> compiler part isn't strictly necessary.</p>\n<div class=\"codehilite\"><pre><span></span>export SANITIZERS=&quot;-fsanitize=address -fsanitize=undefined&quot;\ncmake .. \\\n    -DCMAKE_BUILD_TYPE=Debug \\\n    -DCMAKE_C_COMPILER=&quot;/usr/bin/clang-6.0&quot; \\\n    -DCMAKE_CXX_COMPILER=&quot;/usr/bin/clang++-6.0&quot; \\\n    -DCMAKE_C_FLAGS=&quot;$SANITIZERS&quot; \\\n    -DCMAKE_CXX_FLAGS=&quot;$SANITIZERS&quot; \\\n    -DCMAKE_EXE_LINKER_FLAGS=&quot;$SANITIZERS&quot; \\\n    -DCMAKE_SHARED_LINKER_FLAGS=&quot;$SANITIZERS&quot; \\\n    -DCMAKE_MODULE_LINKER_FLAGS=&quot;$SANITIZERS&quot;\n\nmake -j 8\nmake test\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-20T21:35:33.463133+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-03-20T21:35:33.466255+00:00", "type": "pullrequest_comment", "id": 59391572}