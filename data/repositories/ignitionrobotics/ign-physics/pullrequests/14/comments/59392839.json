{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/comments/59392839.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14/_/diff#comment-59392839"}}, "parent": {"id": 59391572, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/comments/59391572.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14/_/diff#comment-59391572"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 14, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14"}}, "title": "[proposal] valgrind"}, "content": {"raw": "Here's a short example\n\n\n/tmp/leak.cpp\n\n```c++\nint main(int argc, char **argv)\n{\n  char * obviousLeak = new char[12345];\n  return 0;\n}\n```\n\nBuild and run using address sanitizer in gcc\n\n```\nsloretz@nxt:/tmp$ g++ -fsanitize=address -g leak.cpp \nsloretz@nxt:/tmp$ ./a.out \n\n=================================================================\n==26968==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 12345 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdc2c8e46b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x4006fe in main /tmp/leak.cpp:3\n    #2 0x7fdc2c4a182f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: 12345 byte(s) leaked in 1 allocation(s).\n```\n", "markup": "markdown", "html": "<p>Here's a short example</p>\n<p>/tmp/leak.cpp</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">char</span> <span class=\"o\">*</span> <span class=\"n\">obviousLeak</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">char</span><span class=\"p\">[</span><span class=\"mi\">12345</span><span class=\"p\">];</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Build and run using address sanitizer in gcc</p>\n<div class=\"codehilite\"><pre><span></span>sloretz@nxt:/tmp$ g++ -fsanitize=address -g leak.cpp \nsloretz@nxt:/tmp$ ./a.out \n\n=================================================================\n==26968==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 12345 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdc2c8e46b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x4006fe in main /tmp/leak.cpp:3\n    #2 0x7fdc2c4a182f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: 12345 byte(s) leaked in 1 allocation(s).\n</pre></div>", "type": "rendered"}, "created_on": "2018-03-20T21:53:54.674792+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-03-20T21:53:54.678789+00:00", "type": "pullrequest_comment", "id": 59392839}