{"pagelen": 50, "values": [{"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* ~~`ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementation~~.", "title": "Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9f2afceebc2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f9f2afceebc2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f9f2afceebc2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "MERGED", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-28T18:32:52.047183+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89406189.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89406189"}}, "parent": {"id": 89404897, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89404897.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89404897"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "whoops, I just saw that you made a similar but more elegant comment here\n\n* #!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/activity#comment-89271304", "markup": "markdown", "html": "<p>whoops, I just saw that you made a similar but more elegant comment here</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/activity#comment-89271304\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/activity#comment-89271304</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-01-25T23:33:36.880224+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-01-25T23:33:36.888336+00:00", "type": "pullrequest_comment", "id": 89406189}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89405505.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89405505"}}, "parent": {"id": 89271397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89271397.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89271397"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "I made one comment about how the API could be changed if we didn't want to `throw`, but I'm not sure we would want to do it and anyway it's too big a change to include here", "markup": "markdown", "html": "<p>I made one comment about how the API could be changed if we didn't want to <code>throw</code>, but I'm not sure we would want to do it and anyway it's too big a change to include here</p>", "type": "rendered"}, "created_on": "2019-01-25T23:16:07.066515+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-01-25T23:16:07.074938+00:00", "type": "pullrequest_comment", "id": 89405505}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"approval": {"date": "2019-01-25T23:14:25.152370+00:00", "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89404897.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89404897"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "I suppose we could return a `std::pair<bool, std::size_t>` and indicate in the first `bool` whether the second `std::size_t` is valid", "markup": "markdown", "html": "<p>I suppose we could return a <code>std::pair&lt;bool, std::size_t&gt;</code> and indicate in the first <code>bool</code> whether the second <code>std::size_t</code> is valid</p>", "type": "rendered"}, "created_on": "2019-01-25T23:01:19.407567+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-01-25T23:01:19.414225+00:00", "type": "pullrequest_comment", "id": 89404897}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* ~~`ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementation~~.", "title": "Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f9f2afceebc2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f9f2afceebc2.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f9f2afceebc2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-25T02:06:15.084608+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89271397.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89271397"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "This is now ready for review. There's still some outstanding issues in the PR.\n\n* A number of functions return `GenerateInvalidId()` when the containing entity has been removed. This could possibly lead to segfaults. I left a comment in an example context [here](#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/diff#comment-89271000)\n* Getting the index of an entity when the entity has been removed. I left a comment in an example context [here](#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/diff#comment-89271304)", "markup": "markdown", "html": "<p>This is now ready for review. There's still some outstanding issues in the PR.</p>\n<ul>\n<li>A number of functions return <code>GenerateInvalidId()</code> when the containing entity has been removed. This could possibly lead to segfaults. I left a comment in an example context <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/diff#comment-89271000\" rel=\"nofollow\">here</a></li>\n<li>Getting the index of an entity when the entity has been removed. I left a comment in an example context <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/56/use-references-in-an-entity/diff#comment-89271304\" rel=\"nofollow\">here</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-01-25T00:30:51.671258+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-01-25T00:30:51.679674+00:00", "type": "pullrequest_comment", "id": 89271397}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89271304.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89271304"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "> This will throw if the model has been removed. The alternative is to first check if the model exists, but what should we return if it doesn't exist\n\nOne possible solution would be to change the return type to `std::optional<std::size_t>` and return `nullopt`.\n", "markup": "markdown", "html": "<blockquote>\n<p>This will throw if the model has been removed. The alternative is to first check if the model exists, but what should we return if it doesn't exist</p>\n</blockquote>\n<p>One possible solution would be to change the return type to <code>std::optional&lt;std::size_t&gt;</code> and return <code>nullopt</code>.</p>", "type": "rendered"}, "created_on": "2019-01-25T00:29:14.369584+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-01-25T00:29:14.376286+00:00", "type": "pullrequest_comment", "id": 89271304}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/89271000.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-89271000"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "I return`GenerateInvalidId()` here when the containing entity has been  removed. This would cause a segfault if the user proceeds to use the returned object without checking its validity. The underlying `joint` entity potentially still exists in DART so it would be nice to return a valid Identity and prevent a segfault. This would also allow us to keep consistency with `GetJointCount` which would return a positive number (assuming the model had some joints before it was removed).\n\nA possible solution is to create a new jointID by calling `GetNextEntity` here and use it in `GenerateIdentity`. For that we will need to make `Base::entityCount` mutable, since it needs to be incremented from otherwise const functions. ", "markup": "markdown", "html": "<p>I return<code>GenerateInvalidId()</code> here when the containing entity has been  removed. This would cause a segfault if the user proceeds to use the returned object without checking its validity. The underlying <code>joint</code> entity potentially still exists in DART so it would be nice to return a valid Identity and prevent a segfault. This would also allow us to keep consistency with <code>GetJointCount</code> which would return a positive number (assuming the model had some joints before it was removed).</p>\n<p>A possible solution is to create a new jointID by calling <code>GetNextEntity</code> here and use it in <code>GenerateIdentity</code>. For that we will need to make <code>Base::entityCount</code> mutable, since it needs to be incremented from otherwise const functions. </p>", "type": "rendered"}, "created_on": "2019-01-25T00:23:31.100440+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2019-01-25T00:23:31.108743+00:00", "type": "pullrequest_comment", "id": 89271000}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* ~~`ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementation~~.", "title": "Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ed90b205c748", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ed90b205c748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ed90b205c748"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-24T23:48:58.282917+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* ~~`ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementation~~.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ed90b205c748", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ed90b205c748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ed90b205c748"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-24T23:47:42.996634+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ed90b205c748", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ed90b205c748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ed90b205c748"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-24T23:46:36.810451+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "588b98c2d68e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/588b98c2d68e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/588b98c2d68e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "16fdcbda57e4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/16fdcbda57e4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/16fdcbda57e4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-24T22:48:28.766761+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fcc4a8113b66", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fcc4a8113b66.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fcc4a8113b66"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-22T23:29:24.826154+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fcc4a8113b66", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fcc4a8113b66.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fcc4a8113b66"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-22T23:29:24.624678+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c7c09bcd23a0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/c7c09bcd23a0.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/c7c09bcd23a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-22T21:21:37.086230+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c7c09bcd23a0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/c7c09bcd23a0.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/c7c09bcd23a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-22T21:21:37.010911+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/88937057.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-88937057"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "this comment is now out of date", "markup": "markdown", "html": "<p>this comment is now out of date</p>", "type": "rendered"}, "created_on": "2019-01-22T21:17:32.305497+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {}, "updated_on": "2019-01-22T21:17:32.314892+00:00", "type": "pullrequest_comment", "id": 88937057}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"approval": {"date": "2019-01-18T06:23:42.282909+00:00", "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/88506414.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-88506414"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "When I was first putting together this ECS API I deliberated between passing `std::size_t` or `Identity`. I decided to go with `std::size_t` to keep it as raw as possible, but this change makes sense, and makes the implementation API a little more powerful :thumbsup: ", "markup": "markdown", "html": "<p>When I was first putting together this ECS API I deliberated between passing <code>std::size_t</code> or <code>Identity</code>. I decided to go with <code>std::size_t</code> to keep it as raw as possible, but this change makes sense, and makes the implementation API a little more powerful <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f44d.png\" alt=\"\ud83d\udc4d\" title=\":thumbsup:\" data-emoji-short-name=\":thumbsup:\" /> </p>", "type": "rendered"}, "created_on": "2019-01-18T06:23:38.252764+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-18T06:23:38.260424+00:00", "type": "pullrequest_comment", "id": 88506414}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/88173445.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-88173445"}}, "parent": {"id": 88173091, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/88173091.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-88173091"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "Ooops, I missed that `engineName` is `static`, my bad", "markup": "markdown", "html": "<p>Ooops, I missed that <code>engineName</code> is <code>static</code>, my bad</p>", "type": "rendered"}, "created_on": "2019-01-15T23:12:31.928317+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2019-01-15T23:12:47.557535+00:00", "type": "pullrequest_comment", "id": 88173445}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56/comments/88173091.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56/_/diff#comment-88173091"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}, "content": {"raw": "~~~This is returning a reference to a temporary value. The return type is `const std::string &`, but `engineName` is a temporary variable created on the stack. On `return` the string is destructed and the return value is an address to where that value was on the stack. This may pass a test depending on what `std::string::~string()` does, but it will likely crash if another variable is created on the stack before doing something with the returned value. I strongly recommend returning a copy `std::string` instead of a reference.~~~", "markup": "markdown", "html": "<p><del>~This is returning a reference to a temporary value. The return type is <code>const std::string &amp;</code>, but <code>engineName</code> is a temporary variable created on the stack. On <code>return</code> the string is destructed and the return value is an address to where that value was on the stack. This may pass a test depending on what <code>std::string::~string()</code> does, but it will likely crash if another variable is created on the stack before doing something with the returned value. I strongly recommend returning a copy <code>std::string</code> instead of a reference.</del>~</p>", "type": "rendered"}, "created_on": "2019-01-15T23:07:21.671670+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2019-01-15T23:12:20.462066+00:00", "type": "pullrequest_comment", "id": 88173091}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.\r\n\r\n\r\n## TODO:\r\n* `ReferenceInterface` is currently used only in a couple of places for proof of concept. If the concept is acceptable, I'll update the rest of the implementaiton.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01eb02714214", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/01eb02714214.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/01eb02714214"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-15T20:02:51.788948+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01eb02714214", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/01eb02714214.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/01eb02714214"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-15T19:54:37.429644+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}, {"update": {"description": "This pull request lays the foundation for the upcoming remove entities feature. The idea is if an engine supports reference-counted entities, we should use those references to manipulate the entities inside the engine. This would prevent segfaults or exceptions from occurring when operations are performed on a removed entity via an `EntityPtr` object.\r\n\r\nThis is different from what we are doing right now in the `dartsim` wrapper because we store strong references in `EntityStorage` data structures and use those to manipulate the entities in the engine.\r\n\r\neg.\r\n\r\nInstead of\r\n\r\n\r\n```\r\n#!c++\r\n\r\n const std::string &EntityManagementFeatures::GetModelName(\r\n     const std::size_t _modelID) const\r\n {\r\n   return this->models.at(_modelID)->getName();\r\n }\r\n```\r\n\r\n\r\nwe would have \r\n\r\n```\r\n#!c++\r\n\r\n\r\n  const std::string &EntityManagementFeatures::GetModelName(\r\n     const Identity &_modelID) const\r\n {\r\n   return this->ReferenceInterface<DartSkeleton>(_modelID)->getName();\r\n }\r\n \r\n```\r\nIn the first `GetModelName`, the call to `this->models.at(_modelID)` will throw if the model has been removed. But in the second `GetModelName`, `getName` is called via the pointer stored in the `EntityPtr` (actually in the `Identity` object of `Entity`). This call would succeed even if the model is removed from the world because the the memory allocated for the skeleton would not have been destroyed.", "title": "[WIP] Use references in an Entity", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01eb02714214", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/01eb02714214.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/01eb02714214"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "use_refs_in_entity"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-15T19:54:37.374541+00:00"}, "pull_request": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/56.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/56"}}, "title": "Use references in an Entity"}}]}