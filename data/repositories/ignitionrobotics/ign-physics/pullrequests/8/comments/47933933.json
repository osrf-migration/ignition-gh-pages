{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/8/comments/47933933.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:55c161130d8a..e95ce8514c46?path=ignition-physics-ode%2FBuggyDemoController.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/8/_/diff#comment-47933933"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/8.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/8"}}, "title": "Create a Buggy plugin using ODE to demonstrate the buggyDemo"}, "content": {"raw": "At some point we discussed the matter of whether it's necessary to call `ResetQueries` before `WriteRequiredData`. If we stick with the current query concept (or something similar), I think what we should do is ensure that the `ignition-physics` pipeline always calls `ResetQueries` on each of the `CompositeData` objects *before* passing them to `ForwardStep::Step(~)` so that the developer of the plugin does not need to be concerned about the concept of the \"queried state\". That way the `ignition-physics` pipeline can identify which data types are (or are not) being handled without the plugin developer needing to give any thought to the queried states.\n\nI'm still completely open to a redesign of the \"queried\" concept, so long as we can have a sensible way of recognizing whenever some type of data is being neglected by the plugin that's supposed to be handling it.", "markup": "markdown", "html": "<p>At some point we discussed the matter of whether it's necessary to call <code>ResetQueries</code> before <code>WriteRequiredData</code>. If we stick with the current query concept (or something similar), I think what we should do is ensure that the <code>ignition-physics</code> pipeline always calls <code>ResetQueries</code> on each of the <code>CompositeData</code> objects <em>before</em> passing them to <code>ForwardStep::Step(~)</code> so that the developer of the plugin does not need to be concerned about the concept of the \"queried state\". That way the <code>ignition-physics</code> pipeline can identify which data types are (or are not) being handled without the plugin developer needing to give any thought to the queried states.</p>\n<p>I'm still completely open to a redesign of the \"queried\" concept, so long as we can have a sensible way of recognizing whenever some type of data is being neglected by the plugin that's supposed to be handling it.</p>", "type": "rendered"}, "created_on": "2017-10-25T01:10:10.649874+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 328, "from": null, "outdated": true, "path": "ignition-physics-ode/BuggyDemoController.cc"}, "updated_on": "2017-10-25T01:10:10.652729+00:00", "type": "pullrequest_comment", "id": 47933933}