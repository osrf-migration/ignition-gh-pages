{"pagelen": 50, "values": [{"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "4b4831e05a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/4b4831e05a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/4b4831e05a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "8e5586c0cf93", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8e5586c0cf93.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8e5586c0cf93"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "DECLINED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2020-04-06T19:10:39.333698+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/143892515.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-143892515"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "I'm going to decline this since we have pr #99 with a bullet plugin implementation", "markup": "markdown", "html": "<p>I'm going to decline this since we have <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/99/add-bullet-physics-engine\" rel=\"nofollow\" class=\"ap-connect-link\">pr #99</a> with a bullet plugin implementation</p>", "type": "rendered"}, "created_on": "2020-04-06T19:10:34.700106+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2020-04-06T19:10:34.702649+00:00", "type": "pullrequest_comment", "id": 143892515}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "673f5da643cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/673f5da643cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/673f5da643cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "8e5586c0cf93", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8e5586c0cf93.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8e5586c0cf93"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-05-02T22:19:50.883680+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "673f5da643cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/673f5da643cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/673f5da643cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "fdb41e8f3b37", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fdb41e8f3b37.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fdb41e8f3b37"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2019-04-18T16:02:26.816309+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/98830846.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-98830846"}}, "parent": {"id": 98828890, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/98828890.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-98828890"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "ok, I'll respond to the pull request comments", "markup": "markdown", "html": "<p>ok, I'll respond to the pull request comments</p>", "type": "rendered"}, "created_on": "2019-04-15T15:50:07.102715+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-15T15:50:07.151150+00:00", "type": "pullrequest_comment", "id": 98830846}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/98828890.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-98828890"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "According to asana, this PR is blocking @scpeters. If this is true, then can we please get this reviewed and merged this week?", "markup": "markdown", "html": "<p>According to asana, this PR is blocking @scpeters. If this is true, then can we please get this reviewed and merged this week?</p>", "type": "rendered"}, "created_on": "2019-04-15T15:40:03.249869+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2019-04-15T15:40:03.285549+00:00", "type": "pullrequest_comment", "id": 98828890}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/93924260.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-93924260"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "Besides moving the `ign_find_package(Bullet)` call to a `find_package(Bullet)` call in `test/plugins/CMakeLists.txt`, I think this PR is ready for approval.", "markup": "markdown", "html": "<p>Besides moving the <code>ign_find_package(Bullet)</code> call to a <code>find_package(Bullet)</code> call in <code>test/plugins/CMakeLists.txt</code>, I think this PR is ready for approval.</p>", "type": "rendered"}, "created_on": "2019-03-06T04:50:28.561059+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-03-06T04:50:28.569755+00:00", "type": "pullrequest_comment", "id": 93924260}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/93924169.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-93924169"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "I think `find_package(Bullet)` can go right before this line.", "markup": "markdown", "html": "<p>I think <code>find_package(Bullet)</code> can go right before this line.</p>", "type": "rendered"}, "created_on": "2019-03-06T04:48:56.270809+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2019-03-06T04:48:56.276875+00:00", "type": "pullrequest_comment", "id": 93924169}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/93918896.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-93918896"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "I think we actually shouldn't use `ign_find_package(~)` for Bullet until we're ready to make an `ignition-physics-bullet` component library.\n\nFrom what I can tell, right now we're only using Bullet to build the test plugin. For that use case, I think we should use a regular `find_package(Bullet)` in the `test/CMakeLists.txt` file. Using `ign_find_package(~)` will have side-effects where Bullet may get added to `ignition-physics` config-files or pkg-config files.", "markup": "markdown", "html": "<p>I think we actually shouldn't use <code>ign_find_package(~)</code> for Bullet until we're ready to make an <code>ignition-physics-bullet</code> component library.</p>\n<p>From what I can tell, right now we're only using Bullet to build the test plugin. For that use case, I think we should use a regular <code>find_package(Bullet)</code> in the <code>test/CMakeLists.txt</code> file. Using <code>ign_find_package(~)</code> will have side-effects where Bullet may get added to <code>ignition-physics</code> config-files or pkg-config files.</p>", "type": "rendered"}, "created_on": "2019-03-06T03:09:31.548392+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2019-03-06T03:09:31.557131+00:00", "type": "pullrequest_comment", "id": 93918896}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "98e871c5fb7a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/98e871c5fb7a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/98e871c5fb7a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "fdb41e8f3b37", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fdb41e8f3b37.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fdb41e8f3b37"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-03-05T21:39:23.483803+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "75be30c75340", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/75be30c75340.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/75be30c75340"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "def7517424c4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/def7517424c4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/def7517424c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-03-05T19:29:28.475957+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "75be30c75340", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/75be30c75340.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/75be30c75340"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "def7517424c4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/def7517424c4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/def7517424c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-03-05T19:29:18.060550+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "75be30c75340", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/75be30c75340.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/75be30c75340"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "def7517424c4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/def7517424c4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/def7517424c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-03-05T19:29:17.991808+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "68ca512f9652", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/68ca512f9652.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/68ca512f9652"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "def7517424c4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/def7517424c4.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/def7517424c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-03-05T19:29:00.309615+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "79bf3aa1b63b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/79bf3aa1b63b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/79bf3aa1b63b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "5c5399cb3e3a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5c5399cb3e3a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5c5399cb3e3a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-12T01:13:49.233292+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "83b15f89d1de", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/83b15f89d1de.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/83b15f89d1de"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "fb42fa89c79f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fb42fa89c79f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fb42fa89c79f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-09T14:55:34.519499+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "aaaa8959e45b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/aaaa8959e45b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/aaaa8959e45b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "44e903854b97", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/44e903854b97.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/44e903854b97"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-08T22:05:36.730544+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "aaaa8959e45b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/aaaa8959e45b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/aaaa8959e45b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "5b65bf82384f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5b65bf82384f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5b65bf82384f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-08T22:04:15.571617+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "aaaa8959e45b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/aaaa8959e45b.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/aaaa8959e45b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "5b65bf82384f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5b65bf82384f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5b65bf82384f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-08T22:04:15.517657+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/86847017.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-86847017"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "I assume we have this separate include file with this `#pragma` because the bullet headers are producing warnings in GCC. If so, it might be a good idea to explain that here with a comment.", "markup": "markdown", "html": "<p>I assume we have this separate include file with this <code>#pragma</code> because the bullet headers are producing warnings in GCC. If so, it might be a good idea to explain that here with a comment.</p>", "type": "rendered"}, "created_on": "2019-01-02T09:24:23.791061+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2019-01-02T09:24:23.801020+00:00", "type": "pullrequest_comment", "id": 86847017}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "83ad1552f434", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/83ad1552f434.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/83ad1552f434"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "5b65bf82384f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/5b65bf82384f.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/5b65bf82384f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T18:13:58.375566+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "c279e1850fbd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/c279e1850fbd.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/c279e1850fbd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T01:42:44.772761+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "ce39741dc40e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ce39741dc40e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ce39741dc40e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T01:23:36.487947+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "81b5573de5c8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/81b5573de5c8.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/81b5573de5c8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T01:10:26.603110+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "d74cea31bb53", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d74cea31bb53.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d74cea31bb53"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T01:03:30.089772+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "656b6e069411", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/656b6e069411.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/656b6e069411"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T01:01:18.505998+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "6d97a31fd592", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/6d97a31fd592.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/6d97a31fd592"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T00:33:26.775276+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "9d4abefb4ee3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/9d4abefb4ee3.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/9d4abefb4ee3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "d260ed9c7fe6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d260ed9c7fe6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d260ed9c7fe6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-12-13T00:11:43.377573+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/65497549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-65497549"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "Plugin classes don't have any use for a PIMPL pointer, because the plugin loader acts as an ABI firewall. There's no risk of breaking the library's public ABI compatibility for a plugin class.", "markup": "markdown", "html": "<p>Plugin classes don't have any use for a PIMPL pointer, because the plugin loader acts as an ABI firewall. There's no risk of breaking the library's public ABI compatibility for a plugin class.</p>", "type": "rendered"}, "created_on": "2018-05-29T02:20:56.284491+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-05-29T02:20:56.334425+00:00", "type": "pullrequest_comment", "id": 65497549}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/65121056.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-65121056"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "Write functions get the information not from the state but querying to dataPtr or bullet classes. It is the same because everything happens in the same step. But by definition I think that the write functions should be copying the state\u2019s information. They can operate with the state variables, but the information in the output should come from the state itself. This allows to differentiate the WriteState method from the Write methods and the example is more clear on what is going on showing what each function does. The results will be the same so it is not an important change.", "markup": "markdown", "html": "<p>Write functions get the information not from the state but querying to dataPtr or bullet classes. It is the same because everything happens in the same step. But by definition I think that the write functions should be copying the state\u2019s information. They can operate with the state variables, but the information in the output should come from the state itself. This allows to differentiate the WriteState method from the Write methods and the example is more clear on what is going on showing what each function does. The results will be the same so it is not an important change.</p>", "type": "rendered"}, "created_on": "2018-05-23T20:09:16.422716+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "inline": {}, "updated_on": "2018-05-28T17:07:02.232432+00:00", "type": "pullrequest_comment", "id": 65121056}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "11da7af59a05", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/11da7af59a05.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/11da7af59a05"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "71489fc37f04", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/71489fc37f04.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/71489fc37f04"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2018-05-25T15:58:25.624928+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/65121151.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-65121151"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "Why we use u for inputs, x for state but h instead of y for outputs?", "markup": "markdown", "html": "<p>Why we use u for inputs, x for state but h instead of y for outputs?</p>", "type": "rendered"}, "created_on": "2018-05-23T20:10:15.840898+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "inline": {}, "updated_on": "2018-05-23T20:10:15.886301+00:00", "type": "pullrequest_comment", "id": 65121151}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "11da7af59a05", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/11da7af59a05.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/11da7af59a05"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "71489fc37f04", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/71489fc37f04.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/71489fc37f04"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-05-16T23:36:14.630525+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "11da7af59a05", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/11da7af59a05.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/11da7af59a05"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "ee8d90bd4369", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ee8d90bd4369.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ee8d90bd4369"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-05-16T23:35:28.454699+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)", "destination": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "bfc4cbcea498", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/bfc4cbcea498.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/bfc4cbcea498"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-26T19:44:10.990765+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Double Pendulum Part 2: PID control using bullet (rebranched)", "destination": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "bfc4cbcea498", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/bfc4cbcea498.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/bfc4cbcea498"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T20:53:22.022674+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/59767277.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-59767277"}}, "parent": {"id": 59767255, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/59767255.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-59767255"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "from me:\n\nI just moved the double pendulum examples to a folder called `ignition-physics-dart-bullet`", "markup": "markdown", "html": "<p>from me:</p>\n<p>I just moved the double pendulum examples to a folder called <code>ignition-physics-dart-bullet</code></p>", "type": "rendered"}, "created_on": "2018-03-23T20:51:10.120087+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-23T20:51:10.123159+00:00", "type": "pullrequest_comment", "id": 59767277}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16/comments/59767255.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16/_/diff#comment-59767255"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}, "content": {"raw": "from @JChoclin:\n\nLooks ok. The plot of the errors: \n\n![plot of errors](https://bitbucket-assetroot.s3.amazonaws.com/repository/5q9rMzd/1049669840-plot1.png?Signature=toF0GcvZWHr%2BE1bivXUVgYst%2Bjo%3D&Expires=1521839937&AWSAccessKeyId=AKIAIQWXW6WLXMB5QZAQ&versionId=w1GmmEsbqzbl1mIzH8_CAazRs1qu.18E)\n\nTests coverage, code-check outputs, all that is the same than the previous pull request #12.\n\nI would change and group the examples in a separated folder, like `examples/double-pendulum`. BulletMathConversions.hh should be in `include/ignition/physics/conversions` or similar in my opinion.", "markup": "markdown", "html": "<p>from @JChoclin:</p>\n<p>Looks ok. The plot of the errors: </p>\n<p><img alt=\"plot of errors\" src=\"https://bitbucket-assetroot.s3.amazonaws.com/repository/5q9rMzd/1049669840-plot1.png?Signature=toF0GcvZWHr%2BE1bivXUVgYst%2Bjo%3D&amp;Expires=1521839937&amp;AWSAccessKeyId=AKIAIQWXW6WLXMB5QZAQ&amp;versionId=w1GmmEsbqzbl1mIzH8_CAazRs1qu.18E\" /></p>\n<p>Tests coverage, code-check outputs, all that is the same than the previous <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/12/example-double-pendulum-with-pid-control\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #12</a>.</p>\n<p>I would change and group the examples in a separated folder, like <code>examples/double-pendulum</code>. BulletMathConversions.hh should be in <code>include/ignition/physics/conversions</code> or similar in my opinion.</p>", "type": "rendered"}, "created_on": "2018-03-23T20:50:45.238354+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-03-23T20:50:45.248582+00:00", "type": "pullrequest_comment", "id": 59767255}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Example: double pendulum with PID control using bullet (rebranched)", "destination": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "bfc4cbcea498", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/bfc4cbcea498.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/bfc4cbcea498"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T20:48:53.116463+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}, {"update": {"description": "This is a rebranched version of pull request #13. Original description:\r\n\r\nThis builds on the double pendulum example using dart in pull request #12. With both physics engines installed, this branch provides a prototype of the physics abstraction layer. To simplify the build process and loading and finding plugin libraries, the `BulletDoublePendulum` plugin is added to the `ignition-physics-dart` library by using the same folder and adding symbols to the plugins.cc. It could alternatively be located in its own library file, or it could be called `ignition::physics::bullet::DoublePendulum` if we rearranged the code in subfolders, but this was expedient for this prototype.\r\n\r\nI did have to relax some expectations in the test, possibly because `libbullet-dev` is compiled with single precision, while dart is using double precision. I also had to relax the expectations on repeatability after resetting the state; I'm not sure why. It could be that some state variables are missing or the solver should be reset in some way. At this point, I think that's ok; there will be different levels of accuracy for different physics engines, so we can think about how we want to encode different expectations.\r\n\r\nNote that I initially made an ODE example in the [experimental/double_pendulum/ode branch](#!/ignitionrobotics/ign-physics/branch/experimental/double_pendulum/ode), but I switched to bullet after I noticed that in upstream ODE, the hinge joint always reports angles between [-PI, PI], while this controller expects unwrapped angles. We have this feature in our fork of ODE, and this feature was added to bullet ([see upstream feature request](https://github.com/bulletphysics/bullet3/issues/42)). I will work on upstreaming some of the changes in our fork of ODE, but for now it was easier to make the example with bullet.\r\n\r\nThere are a couple non-urgent TODO items that I noted:\r\n\r\n* I don't clean up any of the memory that I allocate with `new`\r\n* bullet has some support for serialization, which might be useful for saving state\r\n* it would be interesting to implement this example with btMultibody to try the new Featherstone API", "title": "Example: double pendulum with PID control using bullet (rebranched)", "destination": {"commit": {"hash": "f68f3117e787", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f68f3117e787.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f68f3117e787"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "ign-physics1"}}, "reason": "", "source": {"commit": {"hash": "bfc4cbcea498", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/bfc4cbcea498.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/bfc4cbcea498"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "experimental/double_pendulum/dart-bullet"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-03-23T20:48:53.084827+00:00"}, "pull_request": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/16"}}, "title": "Part 5: BulletDoublePendulum, PID control using bullet (rebranched)"}}]}