{"rendered": {"reason": {"raw": "Moving this to an issue.", "markup": "markdown", "html": "<p>Moving this to an issue.</p>", "type": "rendered"}, "description": {"raw": "This is mostly a proposal, and I'm also looking for an approach that is easier to scale (e.g. easy add more tests).\r\n\r\nThe proposal is to add `valgrind --tool=memcheck` to our tests. A memory leak will cause pipelines to fail. \r\n\r\nOpen questions:\r\n\r\n1. Is this a good practice?\r\n2. How should valgrind be used?\r\n\r\n    a.  We could run valgrind against all the tests. That seems overkill, and gtest and other testing tools/frameworks/mocks might get in the way.\r\n\r\n    b. Another option would be to run valgrind again integration tests only. Same problem as Option A\r\n\r\n    c.  This PR takes a third approach, which is to create a `gtest` free executable that is run against valgrind. This approach requires more work, but it mimics how the physics library will be used by downstream users.\r\n\r\n3. Can `ign-cmake` be extended to make valgrind tests easier to add and run?", "markup": "markdown", "html": "<p>This is mostly a proposal, and I'm also looking for an approach that is easier to scale (e.g. easy add more tests).</p>\n<p>The proposal is to add <code>valgrind --tool=memcheck</code> to our tests. A memory leak will cause pipelines to fail. </p>\n<p>Open questions:</p>\n<ol>\n<li>Is this a good practice?</li>\n<li>\n<p>How should valgrind be used?</p>\n<p>a.  We could run valgrind against all the tests. That seems overkill, and gtest and other testing tools/frameworks/mocks might get in the way.</p>\n<p>b. Another option would be to run valgrind again integration tests only. Same problem as Option A</p>\n<p>c.  This PR takes a third approach, which is to create a <code>gtest</code> free executable that is run against valgrind. This approach requires more work, but it mimics how the physics library will be used by downstream users.</p>\n</li>\n<li>\n<p>Can <code>ign-cmake</code> be extended to make valgrind tests easier to add and run?</p>\n</li>\n</ol>", "type": "rendered"}, "title": {"raw": "[proposal] valgrind", "markup": "markdown", "html": "<p>[proposal] valgrind</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is mostly a proposal, and I'm also looking for an approach that is easier to scale (e.g. easy add more tests).\r\n\r\nThe proposal is to add `valgrind --tool=memcheck` to our tests. A memory leak will cause pipelines to fail. \r\n\r\nOpen questions:\r\n\r\n1. Is this a good practice?\r\n2. How should valgrind be used?\r\n\r\n    a.  We could run valgrind against all the tests. That seems overkill, and gtest and other testing tools/frameworks/mocks might get in the way.\r\n\r\n    b. Another option would be to run valgrind again integration tests only. Same problem as Option A\r\n\r\n    c.  This PR takes a third approach, which is to create a `gtest` free executable that is run against valgrind. This approach requires more work, but it mimics how the physics library will be used by downstream users.\r\n\r\n3. Can `ign-cmake` be extended to make valgrind tests easier to add and run?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diffstat/ignitionrobotics/ign-physics:3f3c978af37a%0D0da5d346b047?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/14/merge"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/14"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:3f3c978af37a%0D0da5d346b047?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/14/statuses_page=1.json"}}, "title": "[proposal] valgrind", "close_source_branch": false, "reviewers": [], "id": 14, "destination": {"commit": {"hash": "0da5d346b047", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/0da5d346b047.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/0da5d346b047"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "JustCompositeData"}}, "created_on": "2018-03-20T21:17:25.219833+00:00", "summary": {"raw": "This is mostly a proposal, and I'm also looking for an approach that is easier to scale (e.g. easy add more tests).\r\n\r\nThe proposal is to add `valgrind --tool=memcheck` to our tests. A memory leak will cause pipelines to fail. \r\n\r\nOpen questions:\r\n\r\n1. Is this a good practice?\r\n2. How should valgrind be used?\r\n\r\n    a.  We could run valgrind against all the tests. That seems overkill, and gtest and other testing tools/frameworks/mocks might get in the way.\r\n\r\n    b. Another option would be to run valgrind again integration tests only. Same problem as Option A\r\n\r\n    c.  This PR takes a third approach, which is to create a `gtest` free executable that is run against valgrind. This approach requires more work, but it mimics how the physics library will be used by downstream users.\r\n\r\n3. Can `ign-cmake` be extended to make valgrind tests easier to add and run?", "markup": "markdown", "html": "<p>This is mostly a proposal, and I'm also looking for an approach that is easier to scale (e.g. easy add more tests).</p>\n<p>The proposal is to add <code>valgrind --tool=memcheck</code> to our tests. A memory leak will cause pipelines to fail. </p>\n<p>Open questions:</p>\n<ol>\n<li>Is this a good practice?</li>\n<li>\n<p>How should valgrind be used?</p>\n<p>a.  We could run valgrind against all the tests. That seems overkill, and gtest and other testing tools/frameworks/mocks might get in the way.</p>\n<p>b. Another option would be to run valgrind again integration tests only. Same problem as Option A</p>\n<p>c.  This PR takes a third approach, which is to create a <code>gtest</code> free executable that is run against valgrind. This approach requires more work, but it mimics how the physics library will be used by downstream users.</p>\n</li>\n<li>\n<p>Can <code>ign-cmake</code> be extended to make valgrind tests easier to add and run?</p>\n</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "3f3c978af37a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/3f3c978af37a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/3f3c978af37a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "JustCompositeData_valgriind"}}, "comment_count": 14, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-03-20T22:04:39.095302+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-20T22:00:34.505073+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-20T21:56:39.376326+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2018-03-20T21:51:58.584307+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "Moving this to an issue.", "updated_on": "2018-03-26T15:39:04.488400+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}