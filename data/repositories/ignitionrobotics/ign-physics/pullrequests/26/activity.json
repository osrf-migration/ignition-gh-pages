{"pagelen": 50, "values": [{"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0d401b8f0573", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/0d401b8f0573.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/0d401b8f0573"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "MERGED", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-27T17:58:30.153309+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"approval": {"date": "2018-08-27T15:29:23.376100+00:00", "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"approval": {"date": "2018-08-27T04:54:56.017182+00:00", "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0d401b8f0573", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/0d401b8f0573.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/0d401b8f0573"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-27T01:14:04.090689+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/74004050.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-74004050"}}, "parent": {"id": 73993855, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73993855.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73993855"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "see pull request #33", "markup": "markdown", "html": "<p>see <a href=\"#!/ignitionrobotics/ign-physics/pull-requests/33/framesemantics-rename-framed-to-relative\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #33</a></p>", "type": "rendered"}, "created_on": "2018-08-24T18:19:09.868850+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-24T18:19:09.878408+00:00", "type": "pullrequest_comment", "id": 74004050}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73993855.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73993855"}}, "parent": {"id": 73991139, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73991139.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73991139"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I am good with `Relative`.", "markup": "markdown", "html": "<p>I am good with <code>Relative</code>.</p>", "type": "rendered"}, "created_on": "2018-08-24T16:19:04.829842+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-08-24T16:19:04.836731+00:00", "type": "pullrequest_comment", "id": 73993855}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73991139.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73991139"}}, "parent": {"id": 73922006, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73922006.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73922006"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I think I marginally like `Framed` better than `Relative`, but consistency is better, so I would favor replacing all the `Framed` prefixes with `Relative`. If @azeey agrees, I'll go ahead and make make that change so we can move forward", "markup": "markdown", "html": "<p>I think I marginally like <code>Framed</code> better than <code>Relative</code>, but consistency is better, so I would favor replacing all the <code>Framed</code> prefixes with <code>Relative</code>. If @azeey agrees, I'll go ahead and make make that change so we can move forward</p>", "type": "rendered"}, "created_on": "2018-08-24T15:50:59.356937+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-24T15:50:59.430705+00:00", "type": "pullrequest_comment", "id": 73991139}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73986964.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73986964"}}, "parent": {"id": 73911123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73911123.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73911123"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Makes sense. Thanks for the explanation.", "markup": "markdown", "html": "<p>Makes sense. Thanks for the explanation.</p>", "type": "rendered"}, "created_on": "2018-08-24T15:15:35.190830+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-08-24T15:15:35.198130+00:00", "type": "pullrequest_comment", "id": 73986964}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73922006.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73922006"}}, "parent": {"id": 73918514, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73918514.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73918514"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Does anyone have thoughts on keeping `FrameData` as-is and finding a term other than `Framed` to put in front of the other types? So instead of `FramedVelocity`, we would have `XxxxVelocity` where we need to figure out what `Xxxx` should be \\(e.g. `RelativeVelocity`\\)?\n\nIs that still on the table, or are there objections to it?", "markup": "markdown", "html": "<p>Does anyone have thoughts on keeping <code>FrameData</code> as-is and finding a term other than <code>Framed</code> to put in front of the other types? So instead of <code>FramedVelocity</code>, we would have <code>XxxxVelocity</code> where we need to figure out what <code>Xxxx</code> should be (e.g. <code>RelativeVelocity</code>)?</p>\n<p>Is that still on the table, or are there objections to it?</p>", "type": "rendered"}, "created_on": "2018-08-24T05:51:28.577782+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-24T05:51:28.583878+00:00", "type": "pullrequest_comment", "id": 73922006}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73918514.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73918514"}}, "parent": {"id": 73879593, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73879593.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73879593"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I think `KinematicState` is more specific and precise than `FrameData`, but maybe not precise enough because people might think of multi body kinematics, which is a bit different and more complex.\n\nMaybe `CartesianState` or `CartesianKinematicState` is more precise?", "markup": "markdown", "html": "<p>I think <code>KinematicState</code> is more specific and precise than <code>FrameData</code>, but maybe not precise enough because people might think of multi body kinematics, which is a bit different and more complex.</p>\n<p>Maybe <code>CartesianState</code> or <code>CartesianKinematicState</code> is more precise?</p>", "type": "rendered"}, "created_on": "2018-08-24T04:29:13.401067+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-24T04:29:13.407184+00:00", "type": "pullrequest_comment", "id": 73918514}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73911123.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73911123"}}, "parent": {"id": 73868276, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73868276.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73868276"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "In my opinion, not in this case.\n\nAn important aspect of the PImpl\\+ECS design is that absolutely nothing in the inheritance structure contains any member data except for the bottom-most base `Entity<P, F>` class.\n\nIt's plausible that we might get some marginal performance improvement if we have this class store a `FrameID` object that gets initialized during construction and then returned by reference here. However, it\u2019s also plausible that this would result in a marginal hit to performance, because it means copying and moving are more expensive.\n\nWorse, doing this would make copying and moving much more complicated. Right now, since every \"Feature API\" class contains no member data, we can have our highest-level copy and move operations do nothing but `static_cast<Entity<P, F>&>(*this) = other;` and `static_cast<Entity<P, F>&(*this) = std::move(other)`. This is helpful because otherwise copy and move operations would have to traverse the entire inheritance structure, calling the copy/move operations of all member objects recursively. Since we're using lots of virtual inheritance, this means that many data members would be getting redundantly copied/moved again and again. By taking advantage of the fact that absolutely all data is stored solely in `Entity<P, F>`, we can write extremely efficient copies and moves.\n\nAnd then factoring in things like Return Value Optimization as well as the fact that this data structure is extremely light weight, I don\u2019t think it\u2019s worth tainting the inheritance structure by adding member data for this case alone.", "markup": "markdown", "html": "<p>In my opinion, not in this case.</p>\n<p>An important aspect of the PImpl+ECS design is that absolutely nothing in the inheritance structure contains any member data except for the bottom-most base <code>Entity&lt;P, F&gt;</code> class.</p>\n<p>It's plausible that we might get some marginal performance improvement if we have this class store a <code>FrameID</code> object that gets initialized during construction and then returned by reference here. However, it\u2019s also plausible that this would result in a marginal hit to performance, because it means copying and moving are more expensive.</p>\n<p>Worse, doing this would make copying and moving much more complicated. Right now, since every \"Feature API\" class contains no member data, we can have our highest-level copy and move operations do nothing but <code>static_cast&lt;Entity&lt;P, F&gt;&amp;&gt;(*this) = other;</code> and <code>static_cast&lt;Entity&lt;P, F&gt;&amp;(*this) = std::move(other)</code>. This is helpful because otherwise copy and move operations would have to traverse the entire inheritance structure, calling the copy/move operations of all member objects recursively. Since we're using lots of virtual inheritance, this means that many data members would be getting redundantly copied/moved again and again. By taking advantage of the fact that absolutely all data is stored solely in <code>Entity&lt;P, F&gt;</code>, we can write extremely efficient copies and moves.</p>\n<p>And then factoring in things like Return Value Optimization as well as the fact that this data structure is extremely light weight, I don\u2019t think it\u2019s worth tainting the inheritance structure by adding member data for this case alone.</p>", "type": "rendered"}, "created_on": "2018-08-24T00:57:39.757097+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-08-24T00:57:39.762702+00:00", "type": "pullrequest_comment", "id": 73911123}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73880331.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73880331"}}, "parent": {"id": 73879593, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73879593.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73879593"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "ok, @mxgrey how do you feel about `FrameData` -> `KinematicState` and `RelativeFrameData` -> `FramedKinematicState`?", "markup": "markdown", "html": "<p>ok, @mxgrey how do you feel about <code>FrameData</code> -&gt; <code>KinematicState</code> and <code>RelativeFrameData</code> -&gt; <code>FramedKinematicState</code>?</p>", "type": "rendered"}, "created_on": "2018-08-23T17:29:25.105377+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-23T17:29:25.117896+00:00", "type": "pullrequest_comment", "id": 73880331}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73879593.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73879593"}}, "parent": {"id": 73816178, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73816178.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73816178"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "The [comment](#!/ignitionrobotics/ign-physics/pull-requests/26/feature-system-part-2-frame-semantics/diff#Linclude/ignition/physics/FrameData.hhT63) already states \"The FrameData struct fully describes the kinematic state of a Frame with \"Dim\" dimensions and \"Scalar\" precision.\"  So `KinematicState` seems appropriate if it doesn\u2019t create confusion for other reasons I\u2019m not aware of.", "markup": "markdown", "html": "<p>The <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/26/feature-system-part-2-frame-semantics/diff#Linclude/ignition/physics/FrameData.hhT63\" rel=\"nofollow\">comment</a> already states \"The FrameData struct fully describes the kinematic state of a Frame with \"Dim\" dimensions and \"Scalar\" precision.\"  So <code>KinematicState</code> seems appropriate if it doesn\u2019t create confusion for other reasons I\u2019m not aware of.</p>", "type": "rendered"}, "created_on": "2018-08-23T17:21:38.402627+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-08-23T17:21:38.410199+00:00", "type": "pullrequest_comment", "id": 73879593}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73868276.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73868276"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Similar to the [other comment](#!/ignitionrobotics/ign-physics/pull-requests/26/feature-system-part-2-frame-semantics/activity#comment-73204172) about `FrameIDs`, would it be better to create a member variable of type `FrameID` in the `Frame` constructor and return a const ref to it when `GetFrameID` is called? ", "markup": "markdown", "html": "<p>Similar to the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/pull-requests/26/feature-system-part-2-frame-semantics/activity#comment-73204172\" rel=\"nofollow\">other comment</a> about <code>FrameIDs</code>, would it be better to create a member variable of type <code>FrameID</code> in the <code>Frame</code> constructor and return a const ref to it when <code>GetFrameID</code> is called? </p>", "type": "rendered"}, "created_on": "2018-08-23T15:41:59.587225+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-08-23T15:41:59.599220+00:00", "type": "pullrequest_comment", "id": 73868276}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ccaa7c302b6d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ccaa7c302b6d.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ccaa7c302b6d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:10:14.758803+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ccaa7c302b6d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ccaa7c302b6d.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ccaa7c302b6d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:10:13.941645+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73816979.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73816979"}}, "parent": {"id": 73774038, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73774038.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73774038"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "FrameID warning fixed in f7db9c2", "markup": "markdown", "html": "<p>FrameID warning fixed in <a href=\"#!/ignitionrobotics/ign-physics/commits/f7db9c2\" rel=\"nofollow\" class=\"ap-connect-link\">f7db9c2</a></p>", "type": "rendered"}, "created_on": "2018-08-23T10:07:02.604182+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-23T10:07:02.694020+00:00", "type": "pullrequest_comment", "id": 73816979}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f7db9c2028e9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f7db9c2028e9.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f7db9c2028e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:06:23.960992+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f7db9c2028e9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f7db9c2028e9.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f7db9c2028e9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:06:23.758702+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d9cbc3903bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d9cbc3903bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d9cbc3903bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:03:37.213103+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7af89e327d1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7af89e327d1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7af89e327d1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:03:20.268431+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "fbc7c458ca2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fbc7c458ca2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fbc7c458ca2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7af89e327d1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7af89e327d1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7af89e327d1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-23T10:03:20.232407+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73816178.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73816178"}}, "parent": {"id": 73229663, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73229663.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73229663"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Since `FrameData` consists of Pose, Velocity, and Acceleration, should we consider calling it `KinematicData` or `KinematicState`? Then `FramedKinematicData` or `FramedKinematicState` could be used?", "markup": "markdown", "html": "<p>Since <code>FrameData</code> consists of Pose, Velocity, and Acceleration, should we consider calling it <code>KinematicData</code> or <code>KinematicState</code>? Then <code>FramedKinematicData</code> or <code>FramedKinematicState</code> could be used?</p>", "type": "rendered"}, "created_on": "2018-08-23T10:00:31.969579+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-23T10:00:31.977820+00:00", "type": "pullrequest_comment", "id": 73816178}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "794049b91e6e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/794049b91e6e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/794049b91e6e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7af89e327d1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7af89e327d1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7af89e327d1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-23T05:58:17.943080+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73774038.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73774038"}}, "parent": {"id": 73773771, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73773771.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73773771"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "warnings here: https://build.osrfoundation.org/job/ign_physics-pr-win/26/warnings43Result/\n\nthere is a DLL interface complaint similar to one I discussed here:\n\n* #!/ignitionrobotics/ign-physics/pull-requests/24/feature-system-part-1/diff#comment-73766258", "markup": "markdown", "html": "<p>warnings here: <a href=\"https://build.osrfoundation.org/job/ign_physics-pr-win/26/warnings43Result/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ign_physics-pr-win/26/warnings43Result/</a></p>\n<p>there is a DLL interface complaint similar to one I discussed here:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-physics/pull-requests/24/feature-system-part-1/diff#comment-73766258\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-physics/pull-requests/24/feature-system-part-1/diff#comment-73766258</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-08-23T00:32:33.715812+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-23T00:32:33.725167+00:00", "type": "pullrequest_comment", "id": 73774038}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73773771.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73773771"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "The CI for this branch is happy, except for a few windows compiler warnings.\n\n[![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ign_physics-pr-win&build=26)](https://build.osrfoundation.org/job/ign_physics-pr-win/26/) https://build.osrfoundation.org/job/ign_physics-pr-win/26/", "markup": "markdown", "html": "<p>The CI for this branch is happy, except for a few windows compiler warnings.</p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ign_physics-pr-win/26/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ign_physics-pr-win&amp;build=26\" /></a> <a href=\"https://build.osrfoundation.org/job/ign_physics-pr-win/26/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ign_physics-pr-win/26/</a></p>", "type": "rendered"}, "created_on": "2018-08-23T00:24:49.894738+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-23T00:24:49.900958+00:00", "type": "pullrequest_comment", "id": 73773771}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "d5e72bd9cce6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d5e72bd9cce6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d5e72bd9cce6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ab380cbfae5a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ab380cbfae5a.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ab380cbfae5a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-22T23:55:53.709740+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "d5e72bd9cce6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d5e72bd9cce6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d5e72bd9cce6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f1286531d449", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f1286531d449.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f1286531d449"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-22T23:43:11.351607+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "d5e72bd9cce6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d5e72bd9cce6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d5e72bd9cce6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d212402d5b94", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d212402d5b94.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d212402d5b94"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-22T23:00:12.963157+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "d5e72bd9cce6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d5e72bd9cce6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d5e72bd9cce6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f0fdf705685c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/f0fdf705685c.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/f0fdf705685c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-22T22:35:18.927828+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "d5e72bd9cce6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d5e72bd9cce6.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d5e72bd9cce6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fa3f66635e14", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/fa3f66635e14.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/fa3f66635e14"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-08-22T22:04:51.178589+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bf1c45991f49", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/bf1c45991f49.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/bf1c45991f49"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-21T05:59:57.625230+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System Part 2: Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8e7e369236bb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8e7e369236bb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8e7e369236bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-20T09:59:36.691902+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing.", "title": "Feature System 1: Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8e7e369236bb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8e7e369236bb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8e7e369236bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-20T09:59:16.856886+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73234207.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73234207"}}, "parent": {"id": 73229663, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73229663.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73229663"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "> Also, I\u2019ve added some more tests to improve coverage of\u00a0`FrameSpace::ResolveToWorldCoordinates`:\u00a0[47e5bb9](https://bitbucket.org/azeey/ign-physics/commits/47e5bb970037864161920a211c2f9cf34dbf8cee). Let me know if I should create a PR.\n\nThanks for the additional tests! I\u2019ve merged them in.", "markup": "markdown", "html": "<blockquote>\n<p>Also, I\u2019ve added some more tests to improve coverage of\u00a0<code>FrameSpace::ResolveToWorldCoordinates</code>:\u00a0<a data-is-external-link=\"true\" href=\"https://bitbucket.org/azeey/ign-physics/commits/47e5bb970037864161920a211c2f9cf34dbf8cee\" rel=\"nofollow\">47e5bb9</a>. Let me know if I should create a PR.</p>\n</blockquote>\n<p>Thanks for the additional tests! I\u2019ve merged them in.</p>", "type": "rendered"}, "created_on": "2018-08-17T03:48:05.027852+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-17T03:48:05.033467+00:00", "type": "pullrequest_comment", "id": 73234207}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing. \r\n\r\n\u200c", "title": "Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8e7e369236bb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/8e7e369236bb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/8e7e369236bb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-17T03:46:12.298301+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73232775.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73232775"}}, "parent": {"id": 73229663, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73229663.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73229663"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "> I had some trouble understanding the `FrameData` type because it's name was so similar to `FramedPosition` or `FramedForce`.\n\nYeah, I definitely agree it's confusing. `FrameData` looks like it should be similar to `FramedPosition` and `FramedForce`, but really `RelativeFrameData` is closer to them. I didn't want to refer to `RelativeFrameData` as `FramedFrameData`, because that name makes me feel dizzy.\n\nWe could consider renaming `FramedPosition` and `FramedForce` to `RelativePosition` and `RelativeForce`, although I\u2019m not totally sure if \u201crelative\u201d is the most appropriate word to use for those types of quantities.\n\nI\u2019m definitely open to changing the names of these things; it\u2019s just a bit of a head-scratcher to come up with names that are expressive and consistent.\n\nEdit: If we decide to switch `Framed` to `Relative`, we could also rename `FramedQuantity` to `RelativeQuantity`. Again, I'm not 100% sure that `Relative` is the best adjective to use here, but if others think it\u2019s acceptable and preferable, we could make that change.", "markup": "markdown", "html": "<blockquote>\n<p>I had some trouble understanding the <code>FrameData</code> type because it's name was so similar to <code>FramedPosition</code> or <code>FramedForce</code>.</p>\n</blockquote>\n<p>Yeah, I definitely agree it's confusing. <code>FrameData</code> looks like it should be similar to <code>FramedPosition</code> and <code>FramedForce</code>, but really <code>RelativeFrameData</code> is closer to them. I didn't want to refer to <code>RelativeFrameData</code> as <code>FramedFrameData</code>, because that name makes me feel dizzy.</p>\n<p>We could consider renaming <code>FramedPosition</code> and <code>FramedForce</code> to <code>RelativePosition</code> and <code>RelativeForce</code>, although I\u2019m not totally sure if \u201crelative\u201d is the most appropriate word to use for those types of quantities.</p>\n<p>I\u2019m definitely open to changing the names of these things; it\u2019s just a bit of a head-scratcher to come up with names that are expressive and consistent.</p>\n<p>Edit: If we decide to switch <code>Framed</code> to <code>Relative</code>, we could also rename <code>FramedQuantity</code> to <code>RelativeQuantity</code>. Again, I'm not 100% sure that <code>Relative</code> is the best adjective to use here, but if others think it\u2019s acceptable and preferable, we could make that change.</p>", "type": "rendered"}, "created_on": "2018-08-17T03:03:19.429125+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-17T03:14:29.108615+00:00", "type": "pullrequest_comment", "id": 73232775}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73232670.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73232670"}}, "parent": {"id": 73199835, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73199835.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73199835"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Removed: 4f4b04a", "markup": "markdown", "html": "<p>Removed: <a href=\"#!/ignitionrobotics/ign-physics/commits/4f4b04a\" rel=\"nofollow\" class=\"ap-connect-link\">4f4b04a</a></p>", "type": "rendered"}, "created_on": "2018-08-17T02:59:10.641240+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-08-17T02:59:10.647556+00:00", "type": "pullrequest_comment", "id": 73232670}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73232640.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73232640"}}, "parent": {"id": 73203649, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73203649.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73203649"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "That documentation was out of date in numerous ways. I\u2019ve updated here: 55e98e9", "markup": "markdown", "html": "<p>That documentation was out of date in numerous ways. I\u2019ve updated here: <a href=\"#!/ignitionrobotics/ign-physics/commits/55e98e9\" rel=\"nofollow\" class=\"ap-connect-link\">55e98e9</a></p>", "type": "rendered"}, "created_on": "2018-08-17T02:58:11.825449+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-08-17T02:58:11.831609+00:00", "type": "pullrequest_comment", "id": 73232640}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73232596.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73232596"}}, "parent": {"id": 73204172, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73204172.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73204172"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "Great catch, definitely not nitpicking! I think this function was originally written when `FrameID` did nothing but wrap a single integer, at which point copying is just a teensy bit preferable to using a reference. But now that it includes a `std::shared_ptr` as well, reference is definitely preferable.\n\nI've done a pass and changed `FrameID` values to references wherever it seemed relevant: 1290e6f", "markup": "markdown", "html": "<p>Great catch, definitely not nitpicking! I think this function was originally written when <code>FrameID</code> did nothing but wrap a single integer, at which point copying is just a teensy bit preferable to using a reference. But now that it includes a <code>std::shared_ptr</code> as well, reference is definitely preferable.</p>\n<p>I've done a pass and changed <code>FrameID</code> values to references wherever it seemed relevant: <a href=\"#!/ignitionrobotics/ign-physics/commits/1290e6f\" rel=\"nofollow\" class=\"ap-connect-link\">1290e6f</a></p>", "type": "rendered"}, "created_on": "2018-08-17T02:56:39.128725+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2018-08-17T02:56:39.135882+00:00", "type": "pullrequest_comment", "id": 73232596}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing. \r\n\r\n\u200c", "title": "Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "55e98e9d00cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/55e98e9d00cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/55e98e9d00cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-17T02:53:55.287167+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73229663.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73229663"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I left fairly minor comments in the code. When initially reading the code, I had some trouble understanding the `FrameData` type because it's name was so similar to `FramedPosition` or `FramedForce`. As it turns out, the latter types are one level of encapsulation higher than `FrameData` and type that encapsulates `FrameData` with a Frame is `RelativeFrameData`. I wish we had a better name for `FrameData`, but I don't have any good suggestions.\n\nAlso, I\u2019ve added some more tests to improve coverage of `FrameSpace::ResolveToWorldCoordinates`: [47e5bb9](https://bitbucket.org/azeey/ign-physics/commits/47e5bb970037864161920a211c2f9cf34dbf8cee). Let me know if I should create a PR.", "markup": "markdown", "html": "<p>I left fairly minor comments in the code. When initially reading the code, I had some trouble understanding the <code>FrameData</code> type because it's name was so similar to <code>FramedPosition</code> or <code>FramedForce</code>. As it turns out, the latter types are one level of encapsulation higher than <code>FrameData</code> and type that encapsulates <code>FrameData</code> with a Frame is <code>RelativeFrameData</code>. I wish we had a better name for <code>FrameData</code>, but I don't have any good suggestions.</p>\n<p>Also, I\u2019ve added some more tests to improve coverage of <code>FrameSpace::ResolveToWorldCoordinates</code>: <a data-is-external-link=\"true\" href=\"https://bitbucket.org/azeey/ign-physics/commits/47e5bb970037864161920a211c2f9cf34dbf8cee\" rel=\"nofollow\">47e5bb9</a>. Let me know if I should create a PR.</p>", "type": "rendered"}, "created_on": "2018-08-17T01:25:24.803330+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-08-17T01:25:24.809013+00:00", "type": "pullrequest_comment", "id": 73229663}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73204172.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73204172"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "This might be nitpicking, but what's the rational for passing the `FrameID` by value in some functions and by const ref in other functions. I understand copying is useful when you want the reference counter to increment, but do we need that here? ", "markup": "markdown", "html": "<p>This might be nitpicking, but what's the rational for passing the <code>FrameID</code> by value in some functions and by const ref in other functions. I understand copying is useful when you want the reference counter to increment, but do we need that here? </p>", "type": "rendered"}, "created_on": "2018-08-16T18:44:47.241401+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-08-16T18:44:47.248836+00:00", "type": "pullrequest_comment", "id": 73204172}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73203649.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73203649"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I couldn't find this function. Do we still need to add it or should this refer to `GenerateIdentity` in `src/Identity.cc`?", "markup": "markdown", "html": "<p>I couldn't find this function. Do we still need to add it or should this refer to <code>GenerateIdentity</code> in <code>src/Identity.cc</code>?</p>", "type": "rendered"}, "created_on": "2018-08-16T18:39:06.297240+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-08-16T18:39:06.314424+00:00", "type": "pullrequest_comment", "id": 73203649}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/73199835.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-73199835"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "This block of tests is repeated in next block starting on line 867", "markup": "markdown", "html": "<p>This block of tests is repeated in next block starting on line 867</p>", "type": "rendered"}, "created_on": "2018-08-16T17:59:51.198646+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-08-16T17:59:51.207309+00:00", "type": "pullrequest_comment", "id": 73199835}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71314400.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71314400"}}, "parent": {"id": 71314332, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71314332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71314332"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "hm, part of that rendering incorrectly on the web viewer, but it works on my local ipython instance", "markup": "markdown", "html": "<p>hm, part of that rendering incorrectly on the web viewer, but it works on my local ipython instance</p>", "type": "rendered"}, "created_on": "2018-07-27T23:02:43.502568+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-07-27T23:02:43.510852+00:00", "type": "pullrequest_comment", "id": 71314400}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71314332.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71314332"}}, "parent": {"id": 71314320, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71314320.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71314320"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "http://nbviewer.jupyter.org/urls/bitbucket.org/ignitionrobotics/ign-physics/raw/316e4fe1f936ba078fffcf9088c9d9b2480f2fd6/test/integration/FrameSemantics.ipynb", "markup": "markdown", "html": "<p><a href=\"http://nbviewer.jupyter.org/urls/bitbucket.org/ignitionrobotics/ign-physics/raw/316e4fe1f936ba078fffcf9088c9d9b2480f2fd6/test/integration/FrameSemantics.ipynb\" rel=\"nofollow\" class=\"ap-connect-link\">http://nbviewer.jupyter.org/urls/bitbucket.org/ignitionrobotics/ign-physics/raw/316e4fe1f936ba078fffcf9088c9d9b2480f2fd6/test/integration/FrameSemantics.ipynb</a></p>", "type": "rendered"}, "created_on": "2018-07-27T23:00:05.339014+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-07-27T23:00:05.346938+00:00", "type": "pullrequest_comment", "id": 71314332}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71314320.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71314320"}}, "parent": {"id": 71210390, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71210390.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71210390"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "I just added an ipython notebook with the analytical derivation of that nonintuitive result, fixed the expectation and merged it into this branch.", "markup": "markdown", "html": "<p>I just added an ipython notebook with the analytical derivation of that nonintuitive result, fixed the expectation and merged it into this branch.</p>", "type": "rendered"}, "created_on": "2018-07-27T22:59:27.655654+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-07-27T22:59:27.662395+00:00", "type": "pullrequest_comment", "id": 71314320}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"update": {"description": "This PR introduces an implementation of Frame Semantics, as described in the design docs. It builds directly off of the [Feature System PR](#!/ignitionrobotics/ign-physics/pull-requests/24).\r\n\r\nThe concept and implementation follows the [design doc](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/659926/Ignition+Physics) pretty closely, so I suggest looking there for an exhaustive explanation. But here is a high-level outline of what we have:\r\n\r\n* Quantities \\(e.g. vectors, points, poses\\) that have a frame of reference are given by a `FramedQuantity<>`. `FramedQuantity<>` is a class template that allows any kind of mathematical quantity to be framed \\(assuming it makes mathematical sense for the quantity to be framed\\). It uses the [policy-based design](https://en.wikipedia.org/wiki/Policy-based_design) pattern to determine how to transform various quantities between reference frames.\r\n* Frames are identified by a FrameID. The FrameID is very similar to the Identity class which is used by the Feature System, except FrameIDs are only available for entities that are considered frames by their physics plugin.\r\n* FramedQuantities and Frames are templated on their dimensionality and precision. This allows us to simultaneously support 2D/3D spaces and float/double precision with all the same API and implementation \\(note: fixed precision has not been tested yet, but should be possible in theory\\). However, to make this possible, the implementation is using the Eigen C\\+\\+ library instead of ignition-math for its underlying data types.\r\n* Physics plugins can decide whether they support expressing Models, Links, and/or Joints as frames \\(e.g. a plugin can decide that it considers Models and Links to be frames, but not Joints\\). The physics engine only needs to be able to return the transform of a frame with respect to the world, and the Frame Semantics implementation will take care of the rest.\r\n* FramedQuantities can be \u201cresolved\u201d with respect to any reference frame. This means that there is a very simple API which will give you the raw quantity of a FramedQuantity as it would be expressed with respect to any arbitrary frame of your choosing. \r\n\r\n\u200c", "title": "Frame Semantics", "destination": {"commit": {"hash": "ecbe33f89720", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/ecbe33f89720.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/ecbe33f89720"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "316e4fe1f936", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/316e4fe1f936.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/316e4fe1f936"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "FrameSemantics_raw"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2018-07-27T22:57:34.893987+00:00"}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71212470.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71212470"}}, "parent": {"id": 71210390, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/71210390.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-71210390"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "my comments from earlier today are based on my first attempts at an analytical solution, which appear to match the ign-physics approach\n\nseems likely that my intuition about point D was overly simplified", "markup": "markdown", "html": "<p>my comments from earlier today are based on my first attempts at an analytical solution, which appear to match the ign-physics approach</p>\n<p>seems likely that my intuition about point D was overly simplified</p>", "type": "rendered"}, "created_on": "2018-07-27T04:56:43.323828+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-07-27T04:56:43.335903+00:00", "type": "pullrequest_comment", "id": 71212470}, "pull_request": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}}], "next": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/activity_ctx=4BSXIjsb.json"}