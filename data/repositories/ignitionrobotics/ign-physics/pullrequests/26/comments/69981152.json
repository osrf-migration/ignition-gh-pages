{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/69981152.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:3375b48fca0c..917ae6fd851c?path=include%2Fignition%2Fphysics%2Fdetail%2FFramedQuantity.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-69981152"}}, "parent": {"id": 69817932, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26/comments/69817932.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26/_/diff#comment-69817932"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/26.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/26"}}, "title": "Feature System Part 2: Frame Semantics"}, "content": {"raw": "`AngularVectorType` and `LinearVectorType` are both defined with a `using X = Y` declaration. If you have something like\n\n    using A = C;\n    using B = C;\n\nthen `A` and `B` are considered equivalent symbols. Once compilation has finished, any instance of `A` or `B` will be replaced with `C`.\n\nAn unfortunate side-effect of this is it offers less type protection. A user could pass in a Linear Vector quantity into an argument that expects an Angular Vector quantity. I\u2019d be open to tweaking the implementation so that these two types are treated as unique symbols by the compiler, but that\u2019s not something we necessarily need to decide right now. We could change that in the future without significantly impacting the API.", "markup": "markdown", "html": "<p><code>AngularVectorType</code> and <code>LinearVectorType</code> are both defined with a <code>using X = Y</code> declaration. If you have something like</p>\n<div class=\"codehilite\"><pre><span></span>using A = C;\nusing B = C;\n</pre></div>\n\n\n<p>then <code>A</code> and <code>B</code> are considered equivalent symbols. Once compilation has finished, any instance of <code>A</code> or <code>B</code> will be replaced with <code>C</code>.</p>\n<p>An unfortunate side-effect of this is it offers less type protection. A user could pass in a Linear Vector quantity into an argument that expects an Angular Vector quantity. I\u2019d be open to tweaking the implementation so that these two types are treated as unique symbols by the compiler, but that\u2019s not something we necessarily need to decide right now. We could change that in the future without significantly impacting the API.</p>", "type": "rendered"}, "created_on": "2018-07-16T02:46:10.372521+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/detail/FramedQuantity.hh"}, "updated_on": "2018-07-16T02:46:10.379376+00:00", "type": "pullrequest_comment", "id": 69981152}