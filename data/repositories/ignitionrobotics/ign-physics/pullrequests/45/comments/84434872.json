{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/45/comments/84434872.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/45/_/diff#comment-84434872"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 45, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/45.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/45"}}, "title": "Split GetEntities feature into multiple subfeatures"}, "content": {"raw": "I like this idea, and I figured it was just a matter of time before this refactoring became necessary. I just have a couple suggestions to consider:\n\n* Instead of `EngineGetWorld`, `WorldGetModel` etc., what if we named the features `GetWorldFromEngine`, `GetModeFromWorld`, `GetLinkFromModel`, etc.? I feel like that would make it much more obvious what the role of the feature is based on the name.\n* Instead of `GetEngine` maybe that feature should be called `EngineInfo` or `GetEngineInfo` or `GetEngineProperties`, something along those lines. At first I was really confused about how/why we would get an engine from an engine.\n* We could still give the feature list the name of `GetEntities`. We don't need to put a `List` suffix on the end of feature lists \\(ideally, Features and FeatureLists should be just about interchangeable. This isn't 100% true yet, because there are some funny edge cases in the template implementations, but I hope to get things there eventually\\). I'm mostly recommending this because the name `GetEntitiesList` made me think it was a feature that would allow you to get a list of entities.\n\n", "markup": "markdown", "html": "<p>I like this idea, and I figured it was just a matter of time before this refactoring became necessary. I just have a couple suggestions to consider:</p>\n<ul>\n<li>Instead of <code>EngineGetWorld</code>, <code>WorldGetModel</code> etc., what if we named the features <code>GetWorldFromEngine</code>, <code>GetModeFromWorld</code>, <code>GetLinkFromModel</code>, etc.? I feel like that would make it much more obvious what the role of the feature is based on the name.</li>\n<li>Instead of <code>GetEngine</code> maybe that feature should be called <code>EngineInfo</code> or <code>GetEngineInfo</code> or <code>GetEngineProperties</code>, something along those lines. At first I was really confused about how/why we would get an engine from an engine.</li>\n<li>We could still give the feature list the name of <code>GetEntities</code>. We don't need to put a <code>List</code> suffix on the end of feature lists (ideally, Features and FeatureLists should be just about interchangeable. This isn't 100% true yet, because there are some funny edge cases in the template implementations, but I hope to get things there eventually). I'm mostly recommending this because the name <code>GetEntitiesList</code> made me think it was a feature that would allow you to get a list of entities.</li>\n</ul>", "type": "rendered"}, "created_on": "2018-12-04T08:04:08.034453+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-12-04T08:04:08.055536+00:00", "type": "pullrequest_comment", "id": 84434872}