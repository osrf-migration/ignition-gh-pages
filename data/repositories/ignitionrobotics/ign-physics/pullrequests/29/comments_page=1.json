{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71577549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71577549"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Have we thought about how `ign-gazebo` will use this? My understanding from the [initial design document](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/625348/Entity+Component+System#EntityComponentSystem-Roleofsdformat) was that libraries like `ign-physics` and `ign-rendering` would be SDF-agnostic.", "markup": "markdown", "html": "<p>Have we thought about how <code>ign-gazebo</code> will use this? My understanding from the <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/625348/Entity+Component+System#EntityComponentSystem-Roleofsdformat\" rel=\"nofollow\">initial design document</a> was that libraries like <code>ign-physics</code> and <code>ign-rendering</code> would be SDF-agnostic.</p>", "type": "rendered"}, "created_on": "2018-07-31T17:24:57.003881+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-07-31T17:24:57.010353+00:00", "type": "pullrequest_comment", "id": 71577549}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71615795.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71615795"}}, "parent": {"id": 71577549, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71577549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71577549"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Great point! As of right now, I'm not sure where the `ign-gazebo` stands in terms of ECS architecture, but I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets.\n\nIn terms of being sdf-agnostic, the beauty of the Feature System \\+ optional `ign-physics-sdf` component library is that it gives physics engines the option of whether or not they will depend on \\(and consume\\) SDF information. SDF is not a hard dependency of the core `ign-physics` library, so a physics engine is not required to depend on SDF. Moreover, the Feature System will allow `ign-gazebo` to inspect whether a plugin has `ign-physics-sdf` features at run time, and then make decisions based on that.\n\nEventually the core `ign-physics` library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF \\(we could have those features right now, but it involves a lot of typing, which we don't immediately have time for\\). Once those core features are available, then `ign-gazebo` will have an alternative means to transfer SDF information into the simulator. So here\u2019s the control flow that I\u2019m envisioning:\n\n1. `ign-gazebo` loads an SDF file into the native SDF data structures.\n2. `ign-gazebo` checks whether the physics engine supports the `ign-physics-sdf` features.\n3. If it does, then `ign-gazebo` passes the SDF data structures directly to the physics engine. This is ideal, because it allows physics engines to support custom parameters within an SDF. For example, our `dartsim` engine could support `<collision_detector>` SDF elements that allow users to choose one of the four collision detectors that `dartsim` supports. Our `ODE` engine could support parameters like `CFM` within the SDF. Other custom engines created by end-users could support their own custom SDF extensions.\n4. If the physics engine does not support `ign-physics-sdf`, then `ign-gazebo` can use the \\(future\\) core `ign-physics` features to construct the specifications of the SDF file on a best-effort basis. Some physics engines may be lacking the necessary features to construct everything that is specified in any given SDF file, so `ign-gazebo` will log warnings about what features are missing from the physics engine and which parts of the SDF cannot be loaded because of it.\n5. If a physics engine does not support `ign-gazebo` and also does not support programmatic construction of simulation objects, then it will need to determine its own way of constructing its simulation environment. Maybe it gets its information from another source, or maybe its environment is hard-coded into the engine/wrapper. This would be entirely up to whoever develops the plugin wrapper.\n\n", "markup": "markdown", "html": "<p>Great point! As of right now, I'm not sure where the <code>ign-gazebo</code> stands in terms of ECS architecture, but I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets.</p>\n<p>In terms of being sdf-agnostic, the beauty of the Feature System + optional <code>ign-physics-sdf</code> component library is that it gives physics engines the option of whether or not they will depend on (and consume) SDF information. SDF is not a hard dependency of the core <code>ign-physics</code> library, so a physics engine is not required to depend on SDF. Moreover, the Feature System will allow <code>ign-gazebo</code> to inspect whether a plugin has <code>ign-physics-sdf</code> features at run time, and then make decisions based on that.</p>\n<p>Eventually the core <code>ign-physics</code> library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for). Once those core features are available, then <code>ign-gazebo</code> will have an alternative means to transfer SDF information into the simulator. So here\u2019s the control flow that I\u2019m envisioning:</p>\n<ol>\n<li><code>ign-gazebo</code> loads an SDF file into the native SDF data structures.</li>\n<li><code>ign-gazebo</code> checks whether the physics engine supports the <code>ign-physics-sdf</code> features.</li>\n<li>If it does, then <code>ign-gazebo</code> passes the SDF data structures directly to the physics engine. This is ideal, because it allows physics engines to support custom parameters within an SDF. For example, our <code>dartsim</code> engine could support <code>&lt;collision_detector&gt;</code> SDF elements that allow users to choose one of the four collision detectors that <code>dartsim</code> supports. Our <code>ODE</code> engine could support parameters like <code>CFM</code> within the SDF. Other custom engines created by end-users could support their own custom SDF extensions.</li>\n<li>If the physics engine does not support <code>ign-physics-sdf</code>, then <code>ign-gazebo</code> can use the (future) core <code>ign-physics</code> features to construct the specifications of the SDF file on a best-effort basis. Some physics engines may be lacking the necessary features to construct everything that is specified in any given SDF file, so <code>ign-gazebo</code> will log warnings about what features are missing from the physics engine and which parts of the SDF cannot be loaded because of it.</li>\n<li>If a physics engine does not support <code>ign-gazebo</code> and also does not support programmatic construction of simulation objects, then it will need to determine its own way of constructing its simulation environment. Maybe it gets its information from another source, or maybe its environment is hard-coded into the engine/wrapper. This would be entirely up to whoever develops the plugin wrapper.</li>\n</ol>", "type": "rendered"}, "created_on": "2018-08-01T02:59:12.759113+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-01T02:59:12.771595+00:00", "type": "pullrequest_comment", "id": 71615795}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}, "parent": {"id": 71615795, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71615795.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71615795"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets\n\nI'm not sure if you've synced with @nkoenig on this, but my understanding was that the gz11 beta would use `ign-gazebo`'s ECS and `ign-physics`.\n\n> Eventually the core ign-physics library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for).\n\nSo it sounds like we'll start with native SDF support first and a full C++ API later. Again, I'm not sure if you've already discussed this, but by looking at how `ign-gazebo` is already doing [its own SDF parsing](#!/ignitionrobotics/ign-gazebo/pull-requests/13/server-update/diff#Lsrc/ServerPrivate.ccT89) and the [example physics system](#!/ignitionrobotics/ign-gazebo/pull-requests/15/systems/diff#chg-src/PhysicsSystem.cc) is SDF-agnostic, it sounds to me like we may need that C++ API before the SDF interface?", "markup": "markdown", "html": "<blockquote>\n<p>I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets</p>\n</blockquote>\n<p>I'm not sure if you've synced with @nkoenig on this, but my understanding was that the gz11 beta would use <code>ign-gazebo</code>'s ECS and <code>ign-physics</code>.</p>\n<blockquote>\n<p>Eventually the core ign-physics library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for).</p>\n</blockquote>\n<p>So it sounds like we'll start with native SDF support first and a full C++ API later. Again, I'm not sure if you've already discussed this, but by looking at how <code>ign-gazebo</code> is already doing <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/13/server-update/diff#Lsrc/ServerPrivate.ccT89\" rel=\"nofollow\">its own SDF parsing</a> and the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/15/systems/diff#chg-src/PhysicsSystem.cc\" rel=\"nofollow\">example physics system</a> is SDF-agnostic, it sounds to me like we may need that C++ API before the SDF interface?</p>", "type": "rendered"}, "created_on": "2018-08-01T19:11:08.794643+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-08-01T19:11:08.811312+00:00", "type": "pullrequest_comment", "id": 71725297}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71726231.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71726231"}}, "parent": {"id": 71725297, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "The gz11 beta will use ign-gazebo.\n\nWhen talking with @scpeters, the idea was load SDF in ign-gazebo and then construct links, joints, etc using ign-physics API and not pass SDF to ign-physics.", "markup": "markdown", "html": "<p>The gz11 beta will use ign-gazebo.</p>\n<p>When talking with @scpeters, the idea was load SDF in ign-gazebo and then construct links, joints, etc using ign-physics API and not pass SDF to ign-physics.</p>", "type": "rendered"}, "created_on": "2018-08-01T19:21:48.494284+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-08-01T19:21:48.511235+00:00", "type": "pullrequest_comment", "id": 71726231}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71736439.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71736439"}}, "parent": {"id": 71726231, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71726231.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71726231"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I think the main concern was avoiding an sdf dependency in the core of ign physics, but using a component avoids that and allows us to use the sdformat Dom classes instead of making duplicate data structures. I haven't had a chance to review this yet due to travel, but I like the approach", "markup": "markdown", "html": "<p>I think the main concern was avoiding an sdf dependency in the core of ign physics, but using a component avoids that and allows us to use the sdformat Dom classes instead of making duplicate data structures. I haven't had a chance to review this yet due to travel, but I like the approach</p>", "type": "rendered"}, "created_on": "2018-08-01T21:21:01.748301+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-01T21:21:01.755906+00:00", "type": "pullrequest_comment", "id": 71736439}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71747637.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71747637"}}, "parent": {"id": 71736439, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71736439.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71736439"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "And as the `ign-physics` API continues to mature, we'll gradually have core API features that can be used as alternatives to the `SDF`-based construction. We\u2019ll also be able to provide helper classes so that physics engines that provide the core construction features are able to get the SDF-based construction features practically for free.", "markup": "markdown", "html": "<p>And as the <code>ign-physics</code> API continues to mature, we'll gradually have core API features that can be used as alternatives to the <code>SDF</code>-based construction. We\u2019ll also be able to provide helper classes so that physics engines that provide the core construction features are able to get the SDF-based construction features practically for free.</p>", "type": "rendered"}, "created_on": "2018-08-02T00:55:39.804246+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-02T00:55:39.811267+00:00", "type": "pullrequest_comment", "id": 71747637}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71747548.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71747548"}}, "parent": {"id": 71725297, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> I'm not sure if you've synced with\u00a0[@Nathan Koenig](https://bitbucket.org/nkoenig)\u00a0on this, but my understanding was that the gz11 beta would use\u00a0`ign-gazebo`'s ECS and\u00a0`ign-physics`.\n\nAh, no, I hadn't heard about the ECS development in `ign-gazebo`, so I didn\u2019t know that had been progressing. Thanks for pointing that out!\n\nI'll subscribe to `ign-gazebo` notifications; hopefully that\u2019ll help me stay in the loop.", "markup": "markdown", "html": "<blockquote>\n<p>I'm not sure if you've synced with\u00a0<a data-is-external-link=\"true\" href=\"https://bitbucket.org/nkoenig\" rel=\"nofollow\">@Nathan Koenig</a>\u00a0on this, but my understanding was that the gz11 beta would use\u00a0<code>ign-gazebo</code>'s ECS and\u00a0<code>ign-physics</code>.</p>\n</blockquote>\n<p>Ah, no, I hadn't heard about the ECS development in <code>ign-gazebo</code>, so I didn\u2019t know that had been progressing. Thanks for pointing that out!</p>\n<p>I'll subscribe to <code>ign-gazebo</code> notifications; hopefully that\u2019ll help me stay in the loop.</p>", "type": "rendered"}, "created_on": "2018-08-02T00:52:25.692125+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-02T00:52:25.739843+00:00", "type": "pullrequest_comment", "id": 71747548}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71655506.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71655506"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "504f90f adds support for loading Fixed, Prismatic, Revolute, and Screw joint types.", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/504f90f\" rel=\"nofollow\" class=\"ap-connect-link\">504f90f</a> adds support for loading Fixed, Prismatic, Revolute, and Screw joint types.</p>", "type": "rendered"}, "created_on": "2018-08-01T10:19:07.596775+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-01T10:19:16.468548+00:00", "type": "pullrequest_comment", "id": 71655506}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999162.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999162"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I'm glad `ConstructLink` and `ConstructJoint` are distinct features because not all physics engines can add new links and joints after the model has been initialized (simbody for example)", "markup": "markdown", "html": "<p>I'm glad <code>ConstructLink</code> and <code>ConstructJoint</code> are distinct features because not all physics engines can add new links and joints after the model has been initialized (simbody for example)</p>", "type": "rendered"}, "created_on": "2018-08-04T00:35:24.414342+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-04T00:35:24.420646+00:00", "type": "pullrequest_comment", "id": 71999162}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/72021857.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-72021857"}}, "parent": {"id": 71999162, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999162.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999162"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Right, for engines where everything in a model needs to be initialized upfront, they would only be able to provide the `ConstructModel` and/or `ConstructWorld` features. The `ConstructLink` and `ConstructJoint` wouldn\u2019t be options for those engines.\n\nIn dartsim, a Joint always needs to be constructed at the same time as a Link, but we'll be side-stepping this issue by having `ConstructLink` always create a Link with a `FreeJoint`, and then `ConstructJoint` will simply take an existing Link and reattach it to its new parent \\(as defined by the `sdf::Joint`\\) while changing the joint type if necessary. The catch with this approach is that `ConstructJoint` cannot be called on an `sdf::Joint` if the parent or child Link of that Joint has not already been created, but I think that\u2019s a reasonable restriction to have.", "markup": "markdown", "html": "<p>Right, for engines where everything in a model needs to be initialized upfront, they would only be able to provide the <code>ConstructModel</code> and/or <code>ConstructWorld</code> features. The <code>ConstructLink</code> and <code>ConstructJoint</code> wouldn\u2019t be options for those engines.</p>\n<p>In dartsim, a Joint always needs to be constructed at the same time as a Link, but we'll be side-stepping this issue by having <code>ConstructLink</code> always create a Link with a <code>FreeJoint</code>, and then <code>ConstructJoint</code> will simply take an existing Link and reattach it to its new parent (as defined by the <code>sdf::Joint</code>) while changing the joint type if necessary. The catch with this approach is that <code>ConstructJoint</code> cannot be called on an <code>sdf::Joint</code> if the parent or child Link of that Joint has not already been created, but I think that\u2019s a reasonable restriction to have.</p>", "type": "rendered"}, "created_on": "2018-08-06T02:10:14.501330+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-06T02:10:14.507499+00:00", "type": "pullrequest_comment", "id": 72021857}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I'm thinking about the case when you provide an sdf world file and want to find a physics plugin that supports all the features expressed in that file. If you detect `revolute` and `ball` joints, for example, you append those to a feature list when requesting a plugin.\n\nTo support this, what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed? A plugin could provide `ConstructWorld` and `ConstructModel` and then `CanConstructBallJoint`, `CanConstructRevoluteJoint`, etc. Those `CanConstruct*` features could be mostly empty; it's just their existence that signals the relevant information when requesting a compatible plugin.\n\nA similar approach could also be taken for shape types I think.", "markup": "markdown", "html": "<p>I'm thinking about the case when you provide an sdf world file and want to find a physics plugin that supports all the features expressed in that file. If you detect <code>revolute</code> and <code>ball</code> joints, for example, you append those to a feature list when requesting a plugin.</p>\n<p>To support this, what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed? A plugin could provide <code>ConstructWorld</code> and <code>ConstructModel</code> and then <code>CanConstructBallJoint</code>, <code>CanConstructRevoluteJoint</code>, etc. Those <code>CanConstruct*</code> features could be mostly empty; it's just their existence that signals the relevant information when requesting a compatible plugin.</p>\n<p>A similar approach could also be taken for shape types I think.</p>", "type": "rendered"}, "created_on": "2018-08-04T00:51:31.602890+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-04T00:51:31.609109+00:00", "type": "pullrequest_comment", "id": 71999392}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/72022036.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-72022036"}}, "parent": {"id": 71999392, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999392"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed?\u00a0\n\nInstead of dummy features, I think this is exactly what the Behavior System would be good for. With the Behavior System, we can define a behavior like `ignition::physics::sdf::CanConstructRevoluteJoint` which expresses that the plugin is able to construct revolute joints. Then we can put a behavior test \\(a.k.a. a unit test\\) inside of that behavior class which will test that when an SDF containing a revolute joint is passed to the plugin's `ignition::physics::sdf::ConstructJoint` interface, it will create a revolute joint with all the correct properties. When `ign-gazebo` finds an SDF that requires revolute joint construction, it can query the plugin to see if it has that behavior.\n\nIt might be a while until we start developing the Behavior System since it\u2019s not a critical priority, but that\u2019s where I would recommend putting this kind of concept.", "markup": "markdown", "html": "<blockquote>\n<p>what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed?\u00a0</p>\n</blockquote>\n<p>Instead of dummy features, I think this is exactly what the Behavior System would be good for. With the Behavior System, we can define a behavior like <code>ignition::physics::sdf::CanConstructRevoluteJoint</code> which expresses that the plugin is able to construct revolute joints. Then we can put a behavior test (a.k.a. a unit test) inside of that behavior class which will test that when an SDF containing a revolute joint is passed to the plugin's <code>ignition::physics::sdf::ConstructJoint</code> interface, it will create a revolute joint with all the correct properties. When <code>ign-gazebo</code> finds an SDF that requires revolute joint construction, it can query the plugin to see if it has that behavior.</p>\n<p>It might be a while until we start developing the Behavior System since it\u2019s not a critical priority, but that\u2019s where I would recommend putting this kind of concept.</p>", "type": "rendered"}, "created_on": "2018-08-06T02:17:36.773410+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-06T02:17:36.780397+00:00", "type": "pullrequest_comment", "id": 72022036}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/72319038.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-72319038"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "This PR now includes the ability to load collision and visual data from an SDF.\n\nNote that this branch currently depends on these two SDF PRs:\n\n* [~~https://bitbucket.org/osrf/sdformat/pull-requests/453/~~](https://bitbucket.org/osrf/sdformat/pull-requests/453)\n* [~~https://bitbucket.org/osrf/sdformat/pull-requests/452/~~](https://bitbucket.org/osrf/sdformat/pull-requests/452)\n\n", "markup": "markdown", "html": "<p>This PR now includes the ability to load collision and visual data from an SDF.</p>\n<p>Note that this branch currently depends on these two SDF PRs:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-requests/453\" rel=\"nofollow\"><del>https://bitbucket.org/osrf/sdformat/pull-requests/453/</del></a></li>\n<li><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-requests/452\" rel=\"nofollow\"><del>https://bitbucket.org/osrf/sdformat/pull-requests/452/</del></a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-08-08T08:29:58.181146+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-31T09:00:37.461662+00:00", "type": "pullrequest_comment", "id": 72319038}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75539250.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:63a6c382ecdc..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75539250"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Since `tf` is now in World frame,  I don\u2019t think the second argument is not needed here. Otherwise, the transformation from parent to child is applied twice. That\u2019s what happened when I loaded an sdf with the following poses\n\n```xml\n...\n<model name=\"sphere\">\n  <pose>0 0 10 0 0 0</pose>\n  <link name=\"sphere_link\">\n    <pose>0.0 0.0 0.0 0 0 0</pose>\n...\n```\n\nAfter loading, the z position of `sphere_link` is 20 instead of 10. Removing the second argument fixes it for me.", "markup": "markdown", "html": "<p>Since <code>tf</code> is now in World frame,  I don\u2019t think the second argument is not needed here. Otherwise, the transformation from parent to child is applied twice. That\u2019s what happened when I loaded an sdf with the following poses</p>\n<div class=\"codehilite language-xml\"><pre><span></span>...\n<span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sphere&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;pose&gt;</span>0 0 10 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;sphere_link&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose&gt;</span>0.0 0.0 0.0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n...\n</pre></div>\n\n\n<p>After loading, the z position of <code>sphere_link</code> is 20 instead of 10. Removing the second argument fixes it for me.</p>", "type": "rendered"}, "created_on": "2018-09-11T00:46:02.206708+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 362, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-11T00:46:02.212772+00:00", "type": "pullrequest_comment", "id": 75539250}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75543482.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75543482"}}, "parent": {"id": 75539250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75539250.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75539250"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Great catch! I was thinking about resolving the coordinates in two different ways, and accidentally used both.\n\nI\u2019ve fixed it just like you suggested, and added your test: ebaeae3", "markup": "markdown", "html": "<p>Great catch! I was thinking about resolving the coordinates in two different ways, and accidentally used both.</p>\n<p>I\u2019ve fixed it just like you suggested, and added your test: <a href=\"#!/ignitionrobotics/ign-physics/commits/ebaeae3\" rel=\"nofollow\" class=\"ap-connect-link\">ebaeae3</a></p>", "type": "rendered"}, "created_on": "2018-09-11T02:31:35.111109+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-11T02:31:35.118250+00:00", "type": "pullrequest_comment", "id": 75543482}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75823824.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75823824"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "new ubuntu build [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-ubuntu_auto-amd64&build=47)](https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/47/) https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/47/", "markup": "markdown", "html": "<p>new ubuntu build <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/47/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-ubuntu_auto-amd64&amp;build=47\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/47/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/47/</a></p>", "type": "rendered"}, "created_on": "2018-09-12T23:50:09.936348+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-09-12T23:50:09.942329+00:00", "type": "pullrequest_comment", "id": 75823824}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/76088486.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-76088486"}}, "parent": {"id": 75823824, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75823824.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75823824"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "clean now [![Build Status](https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-ubuntu_auto-amd64&build=52)](https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/52/) https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/52/", "markup": "markdown", "html": "<p>clean now <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/52/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://build.osrfoundation.org/buildStatus/icon?job=ignition_physics-ci-pr_any-ubuntu_auto-amd64&amp;build=52\" /></a> <a href=\"https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/52/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/job/ignition_physics-ci-pr_any-ubuntu_auto-amd64/52/</a></p>", "type": "rendered"}, "created_on": "2018-09-15T06:30:10.422543+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-09-15T06:30:10.430320+00:00", "type": "pullrequest_comment", "id": 76088486}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824380.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=sdf%2Finclude%2Fignition%2Fphysics%2Fsdf%2FConstructJoint.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824380"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I think `_world` -> `_model`?", "markup": "markdown", "html": "<p>I think <code>_world</code> -&gt; <code>_model</code>?</p>", "type": "rendered"}, "created_on": "2018-09-13T00:02:13.712471+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 43, "from": null, "path": "sdf/include/ignition/physics/sdf/ConstructJoint.hh"}, "updated_on": "2018-09-13T00:02:13.723036+00:00", "type": "pullrequest_comment", "id": 75824380}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75832002.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=sdf%2Finclude%2Fignition%2Fphysics%2Fsdf%2FConstructJoint.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75832002"}}, "parent": {"id": 75824380, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824380.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824380"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Fixed: f34b3b4", "markup": "markdown", "html": "<p>Fixed: <a href=\"#!/ignitionrobotics/ign-physics/commits/f34b3b4\" rel=\"nofollow\" class=\"ap-connect-link\">f34b3b4</a></p>", "type": "rendered"}, "created_on": "2018-09-13T03:28:40.443418+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "sdf/include/ignition/physics/sdf/ConstructJoint.hh"}, "updated_on": "2018-09-13T03:28:40.450604+00:00", "type": "pullrequest_comment", "id": 75832002}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824394.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=sdf%2Finclude%2Fignition%2Fphysics%2Fsdf%2FConstructLink.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824394"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "here also: I think `_world` -> `_model`?", "markup": "markdown", "html": "<p>here also: I think <code>_world</code> -&gt; <code>_model</code>?</p>", "type": "rendered"}, "created_on": "2018-09-13T00:02:25.285148+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 43, "from": null, "path": "sdf/include/ignition/physics/sdf/ConstructLink.hh"}, "updated_on": "2018-09-13T00:02:25.296462+00:00", "type": "pullrequest_comment", "id": 75824394}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75831994.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=sdf%2Finclude%2Fignition%2Fphysics%2Fsdf%2FConstructLink.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75831994"}}, "parent": {"id": 75824394, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824394.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824394"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Fixed: f34b3b4", "markup": "markdown", "html": "<p>Fixed: <a href=\"#!/ignitionrobotics/ign-physics/commits/f34b3b4\" rel=\"nofollow\" class=\"ap-connect-link\">f34b3b4</a></p>", "type": "rendered"}, "created_on": "2018-09-13T03:28:31.559036+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "sdf/include/ignition/physics/sdf/ConstructLink.hh"}, "updated_on": "2018-09-13T03:28:31.566982+00:00", "type": "pullrequest_comment", "id": 75831994}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824866.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=dartsim%2FCMakeLists.txt"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824866"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "ok, this confused me at first, but I think I get it. the contents of `dartsim/include` are treated as interface headers and installed, then we make a separate target / component `dartsim-plugin` that depends on dartsim", "markup": "markdown", "html": "<p>ok, this confused me at first, but I think I get it. the contents of <code>dartsim/include</code> are treated as interface headers and installed, then we make a separate target / component <code>dartsim-plugin</code> that depends on dartsim</p>", "type": "rendered"}, "created_on": "2018-09-13T00:11:58.822847+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 12, "from": null, "path": "dartsim/CMakeLists.txt"}, "updated_on": "2018-09-13T00:11:58.829321+00:00", "type": "pullrequest_comment", "id": 75824866}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75831600.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=dartsim%2FCMakeLists.txt"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75831600"}}, "parent": {"id": 75824866, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75824866.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75824866"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Yep, exactly!\n\nThis is the method through which plugin developers could provide custom features that are unique to their own plugins.\n\nPlugin developers can export headers that define the interfaces of the features, and then plugin users can depend on those headers and request those features when they go to load an engine.\n\nNote that all the other headers involved in the implementation of the `dartsim-plugin` library are kept in `src/` and never exported. That\u2019s because those headers do not define feature APIs and are not meant to be exposed to end-users. They are only used to make the implementation cleaner and compilation faster \\(instead of stuffing the entire plugin implementation into a single translation unit\\).", "markup": "markdown", "html": "<p>Yep, exactly!</p>\n<p>This is the method through which plugin developers could provide custom features that are unique to their own plugins.</p>\n<p>Plugin developers can export headers that define the interfaces of the features, and then plugin users can depend on those headers and request those features when they go to load an engine.</p>\n<p>Note that all the other headers involved in the implementation of the <code>dartsim-plugin</code> library are kept in <code>src/</code> and never exported. That\u2019s because those headers do not define feature APIs and are not meant to be exposed to end-users. They are only used to make the implementation cleaner and compilation faster (instead of stuffing the entire plugin implementation into a single translation unit).</p>", "type": "rendered"}, "created_on": "2018-09-13T03:17:35.339732+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "dartsim/CMakeLists.txt"}, "updated_on": "2018-09-13T03:17:35.347900+00:00", "type": "pullrequest_comment", "id": 75831600}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75825573.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=dartsim%2Fsrc%2FEntityManagementFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75825573"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "just noting that all these functions that call `std::unordered_map::at` can throw", "markup": "markdown", "html": "<p>just noting that all these functions that call <code>std::unordered_map::at</code> can throw</p>", "type": "rendered"}, "created_on": "2018-09-13T00:27:34.092630+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 207, "from": null, "path": "dartsim/src/EntityManagementFeatures.cc"}, "updated_on": "2018-09-13T00:27:34.099933+00:00", "type": "pullrequest_comment", "id": 75825573}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75831456.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f2670aa89e10..56e5d19776ab?path=dartsim%2Fsrc%2FEntityManagementFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75831456"}}, "parent": {"id": 75825573, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75825573.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75825573"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Yeah, I\u2019m doing that intentionally to help sniff out bugs.\n\nI believe if I've designed the feature system correctly and implemented the plugin correctly, it should never throw in any of these `at(~)` calls. So if it does throw, then I\u2019m making some faulty assumption or left a bug in the code somewhere.\n\nI actually plan on totally redoing the design of the entity management within the plugin once we've had some time to break in this code and give the feature system an endurance test. If we can confirm that the feature system design is air-tight, then we can replace these maps with `std::vector<void*>` containers and use static\\_casts to manage everything. That would be a maximally efficient and maximally performant plugin wrapper, which could probably be generalized to other physics engines very easily.", "markup": "markdown", "html": "<p>Yeah, I\u2019m doing that intentionally to help sniff out bugs.</p>\n<p>I believe if I've designed the feature system correctly and implemented the plugin correctly, it should never throw in any of these <code>at(~)</code> calls. So if it does throw, then I\u2019m making some faulty assumption or left a bug in the code somewhere.</p>\n<p>I actually plan on totally redoing the design of the entity management within the plugin once we've had some time to break in this code and give the feature system an endurance test. If we can confirm that the feature system design is air-tight, then we can replace these maps with <code>std::vector&lt;void*&gt;</code> containers and use static_casts to manage everything. That would be a maximally efficient and maximally performant plugin wrapper, which could probably be generalized to other physics engines very easily.</p>", "type": "rendered"}, "created_on": "2018-09-13T03:13:47.929278+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "dartsim/src/EntityManagementFeatures.cc"}, "updated_on": "2018-09-13T03:13:47.935780+00:00", "type": "pullrequest_comment", "id": 75831456}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75827200.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75827200"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I've reviewed everything so far except SDFFeatures.cc\n\nThis is pretty cool", "markup": "markdown", "html": "<p>I've reviewed everything so far except SDFFeatures.cc</p>\n<p>This is pretty cool</p>", "type": "rendered"}, "created_on": "2018-09-13T01:14:46.293364+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-09-13T01:14:46.300753+00:00", "type": "pullrequest_comment", "id": 75827200}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75943052.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75943052"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "At some point, it would be nice to have a test that confirms all the math in this function", "markup": "markdown", "html": "<p>At some point, it would be nice to have a test that confirms all the math in this function</p>", "type": "rendered"}, "created_on": "2018-09-13T19:25:16.055171+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 203, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-13T19:25:16.062115+00:00", "type": "pullrequest_comment", "id": 75943052}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75967206.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75967206"}}, "parent": {"id": 75943052, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75943052.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75943052"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Hopefully we\u2019ll eventually have the \u201cbehavior system\u201d implemented, which will allow us to create consistent tests across all physics plugins. We\u2019ll want to include funny edge cases like this in those tests.", "markup": "markdown", "html": "<p>Hopefully we\u2019ll eventually have the \u201cbehavior system\u201d implemented, which will allow us to create consistent tests across all physics plugins. We\u2019ll want to include funny edge cases like this in those tests.</p>", "type": "rendered"}, "created_on": "2018-09-14T02:42:11.477437+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-14T02:42:11.484169+00:00", "type": "pullrequest_comment", "id": 75967206}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75944299.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75944299"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I think we could modularize this process a bit, so that we have one bit of shared code that any physics plugin could use that resolves a URI and uses `ignition::common::MeshLoader` to load an `ignition::common::Mesh`, and then each physics plugin can just translate from `ignition::common::Mesh` to its own native format.", "markup": "markdown", "html": "<p>I think we could modularize this process a bit, so that we have one bit of shared code that any physics plugin could use that resolves a URI and uses <code>ignition::common::MeshLoader</code> to load an <code>ignition::common::Mesh</code>, and then each physics plugin can just translate from <code>ignition::common::Mesh</code> to its own native format.</p>", "type": "rendered"}, "created_on": "2018-09-13T19:40:38.543714+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 214, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-13T19:40:38.552944+00:00", "type": "pullrequest_comment", "id": 75944299}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75944841.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75944841"}}, "parent": {"id": 75944299, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75944299.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75944299"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I think `ignition::common::MeshManager` is at a higher level than `MeshLoader`, so that should be preferred.", "markup": "markdown", "html": "<p>I think <code>ignition::common::MeshManager</code> is at a higher level than <code>MeshLoader</code>, so that should be preferred.</p>", "type": "rendered"}, "created_on": "2018-09-13T19:46:25.547099+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-13T19:46:25.554912+00:00", "type": "pullrequest_comment", "id": 75944841}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75945011.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75945011"}}, "parent": {"id": 75944841, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/75944841.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-75944841"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "a partial example is in ign-rendering:\n\n* #!/ignitionrobotics/ign-rendering/src/a346e7d9dbdfa29872e1edbbe32c21000b28686f/examples/mesh_viewer/Main.cc#lines-63:65", "markup": "markdown", "html": "<p>a partial example is in ign-rendering:</p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-rendering/src/a346e7d9dbdfa29872e1edbbe32c21000b28686f/examples/mesh_viewer/Main.cc#lines-63:65\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-rendering/src/a346e7d9dbdfa29872e1edbbe32c21000b28686f/examples/mesh_viewer/Main.cc#lines-63:65</a></li>\n</ul>", "type": "rendered"}, "created_on": "2018-09-13T19:48:24.921083+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-13T19:48:24.927097+00:00", "type": "pullrequest_comment", "id": 75945011}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/76079748.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:f34b3b4c860a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-76079748"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "This message seems off to me. I think it should be \"Model [name] does not contain a Link with the name [linkName]\"", "markup": "markdown", "html": "<p>This message seems off to me. I think it should be \"Model [name] does not contain a Link with the name [linkName]\"</p>", "type": "rendered"}, "created_on": "2018-09-14T21:26:16.111485+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 517, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-14T21:26:16.118617+00:00", "type": "pullrequest_comment", "id": 76079748}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/76080344.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:fbc8e7ffbf8a..56e5d19776ab?path=dartsim%2Fsrc%2FSDFFeatures.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-76080344"}}, "parent": {"id": 76079748, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/76079748.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-76079748"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I changed it in  fbc8e7f; please let me know if that was a mistake", "markup": "markdown", "html": "<p>I changed it in  <a href=\"#!/ignitionrobotics/ign-physics/commits/fbc8e7f\" rel=\"nofollow\" class=\"ap-connect-link\">fbc8e7f</a>; please let me know if that was a mistake</p>", "type": "rendered"}, "created_on": "2018-09-14T21:37:41.721163+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 517, "from": null, "path": "dartsim/src/SDFFeatures.cc"}, "updated_on": "2018-09-14T21:37:41.729898+00:00", "type": "pullrequest_comment", "id": 76080344}], "page": 1, "size": 33}