{"pagelen": 50, "values": [{"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2625e63e1811", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/2625e63e1811.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/2625e63e1811"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-16T08:47:37.084667+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "47ba2a648e1c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/47ba2a648e1c.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/47ba2a648e1c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-15T10:16:07.853877+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7e9778c8308e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/7e9778c8308e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/7e9778c8308e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-10T10:05:39.289253+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "228a8f42e6f5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/228a8f42e6f5.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/228a8f42e6f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-08T09:10:01.940950+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "87895e345002", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/87895e345002.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/87895e345002"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-08T08:21:28.098592+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "abd2228178aa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/abd2228178aa.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/abd2228178aa"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-07T10:42:51.316321+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d76bf72cdad1", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/d76bf72cdad1.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/d76bf72cdad1"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-06T09:57:05.723949+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/72022036.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-72022036"}}, "parent": {"id": 71999392, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999392"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed?\u00a0\n\nInstead of dummy features, I think this is exactly what the Behavior System would be good for. With the Behavior System, we can define a behavior like `ignition::physics::sdf::CanConstructRevoluteJoint` which expresses that the plugin is able to construct revolute joints. Then we can put a behavior test \\(a.k.a. a unit test\\) inside of that behavior class which will test that when an SDF containing a revolute joint is passed to the plugin's `ignition::physics::sdf::ConstructJoint` interface, it will create a revolute joint with all the correct properties. When `ign-gazebo` finds an SDF that requires revolute joint construction, it can query the plugin to see if it has that behavior.\n\nIt might be a while until we start developing the Behavior System since it\u2019s not a critical priority, but that\u2019s where I would recommend putting this kind of concept.", "markup": "markdown", "html": "<blockquote>\n<p>what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed?\u00a0</p>\n</blockquote>\n<p>Instead of dummy features, I think this is exactly what the Behavior System would be good for. With the Behavior System, we can define a behavior like <code>ignition::physics::sdf::CanConstructRevoluteJoint</code> which expresses that the plugin is able to construct revolute joints. Then we can put a behavior test (a.k.a. a unit test) inside of that behavior class which will test that when an SDF containing a revolute joint is passed to the plugin's <code>ignition::physics::sdf::ConstructJoint</code> interface, it will create a revolute joint with all the correct properties. When <code>ign-gazebo</code> finds an SDF that requires revolute joint construction, it can query the plugin to see if it has that behavior.</p>\n<p>It might be a while until we start developing the Behavior System since it\u2019s not a critical priority, but that\u2019s where I would recommend putting this kind of concept.</p>", "type": "rendered"}, "created_on": "2018-08-06T02:17:36.773410+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-06T02:17:36.780397+00:00", "type": "pullrequest_comment", "id": 72022036}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/72021857.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-72021857"}}, "parent": {"id": 71999162, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999162.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999162"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Right, for engines where everything in a model needs to be initialized upfront, they would only be able to provide the `ConstructModel` and/or `ConstructWorld` features. The `ConstructLink` and `ConstructJoint` wouldn\u2019t be options for those engines.\n\nIn dartsim, a Joint always needs to be constructed at the same time as a Link, but we'll be side-stepping this issue by having `ConstructLink` always create a Link with a `FreeJoint`, and then `ConstructJoint` will simply take an existing Link and reattach it to its new parent \\(as defined by the `sdf::Joint`\\) while changing the joint type if necessary. The catch with this approach is that `ConstructJoint` cannot be called on an `sdf::Joint` if the parent or child Link of that Joint has not already been created, but I think that\u2019s a reasonable restriction to have.", "markup": "markdown", "html": "<p>Right, for engines where everything in a model needs to be initialized upfront, they would only be able to provide the <code>ConstructModel</code> and/or <code>ConstructWorld</code> features. The <code>ConstructLink</code> and <code>ConstructJoint</code> wouldn\u2019t be options for those engines.</p>\n<p>In dartsim, a Joint always needs to be constructed at the same time as a Link, but we'll be side-stepping this issue by having <code>ConstructLink</code> always create a Link with a <code>FreeJoint</code>, and then <code>ConstructJoint</code> will simply take an existing Link and reattach it to its new parent (as defined by the <code>sdf::Joint</code>) while changing the joint type if necessary. The catch with this approach is that <code>ConstructJoint</code> cannot be called on an <code>sdf::Joint</code> if the parent or child Link of that Joint has not already been created, but I think that\u2019s a reasonable restriction to have.</p>", "type": "rendered"}, "created_on": "2018-08-06T02:10:14.501330+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-06T02:10:14.507499+00:00", "type": "pullrequest_comment", "id": 72021857}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999392.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I'm thinking about the case when you provide an sdf world file and want to find a physics plugin that supports all the features expressed in that file. If you detect `revolute` and `ball` joints, for example, you append those to a feature list when requesting a plugin.\n\nTo support this, what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed? A plugin could provide `ConstructWorld` and `ConstructModel` and then `CanConstructBallJoint`, `CanConstructRevoluteJoint`, etc. Those `CanConstruct*` features could be mostly empty; it's just their existence that signals the relevant information when requesting a compatible plugin.\n\nA similar approach could also be taken for shape types I think.", "markup": "markdown", "html": "<p>I'm thinking about the case when you provide an sdf world file and want to find a physics plugin that supports all the features expressed in that file. If you detect <code>revolute</code> and <code>ball</code> joints, for example, you append those to a feature list when requesting a plugin.</p>\n<p>To support this, what do you think about making dummy features that aren't used in the actual model construction but signal which joint types can be constructed? A plugin could provide <code>ConstructWorld</code> and <code>ConstructModel</code> and then <code>CanConstructBallJoint</code>, <code>CanConstructRevoluteJoint</code>, etc. Those <code>CanConstruct*</code> features could be mostly empty; it's just their existence that signals the relevant information when requesting a compatible plugin.</p>\n<p>A similar approach could also be taken for shape types I think.</p>", "type": "rendered"}, "created_on": "2018-08-04T00:51:31.602890+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-04T00:51:31.609109+00:00", "type": "pullrequest_comment", "id": 71999392}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71999162.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71999162"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I'm glad `ConstructLink` and `ConstructJoint` are distinct features because not all physics engines can add new links and joints after the model has been initialized (simbody for example)", "markup": "markdown", "html": "<p>I'm glad <code>ConstructLink</code> and <code>ConstructJoint</code> are distinct features because not all physics engines can add new links and joints after the model has been initialized (simbody for example)</p>", "type": "rendered"}, "created_on": "2018-08-04T00:35:24.414342+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-04T00:35:24.420646+00:00", "type": "pullrequest_comment", "id": 71999162}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71747637.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71747637"}}, "parent": {"id": 71736439, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71736439.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71736439"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "And as the `ign-physics` API continues to mature, we'll gradually have core API features that can be used as alternatives to the `SDF`-based construction. We\u2019ll also be able to provide helper classes so that physics engines that provide the core construction features are able to get the SDF-based construction features practically for free.", "markup": "markdown", "html": "<p>And as the <code>ign-physics</code> API continues to mature, we'll gradually have core API features that can be used as alternatives to the <code>SDF</code>-based construction. We\u2019ll also be able to provide helper classes so that physics engines that provide the core construction features are able to get the SDF-based construction features practically for free.</p>", "type": "rendered"}, "created_on": "2018-08-02T00:55:39.804246+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-02T00:55:39.811267+00:00", "type": "pullrequest_comment", "id": 71747637}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71747548.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71747548"}}, "parent": {"id": 71725297, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> I'm not sure if you've synced with\u00a0[@Nathan Koenig](https://bitbucket.org/nkoenig)\u00a0on this, but my understanding was that the gz11 beta would use\u00a0`ign-gazebo`'s ECS and\u00a0`ign-physics`.\n\nAh, no, I hadn't heard about the ECS development in `ign-gazebo`, so I didn\u2019t know that had been progressing. Thanks for pointing that out!\n\nI'll subscribe to `ign-gazebo` notifications; hopefully that\u2019ll help me stay in the loop.", "markup": "markdown", "html": "<blockquote>\n<p>I'm not sure if you've synced with\u00a0<a data-is-external-link=\"true\" href=\"https://bitbucket.org/nkoenig\" rel=\"nofollow\">@Nathan Koenig</a>\u00a0on this, but my understanding was that the gz11 beta would use\u00a0<code>ign-gazebo</code>'s ECS and\u00a0<code>ign-physics</code>.</p>\n</blockquote>\n<p>Ah, no, I hadn't heard about the ECS development in <code>ign-gazebo</code>, so I didn\u2019t know that had been progressing. Thanks for pointing that out!</p>\n<p>I'll subscribe to <code>ign-gazebo</code> notifications; hopefully that\u2019ll help me stay in the loop.</p>", "type": "rendered"}, "created_on": "2018-08-02T00:52:25.692125+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-02T00:52:25.739843+00:00", "type": "pullrequest_comment", "id": 71747548}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71736439.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71736439"}}, "parent": {"id": 71726231, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71726231.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71726231"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "I think the main concern was avoiding an sdf dependency in the core of ign physics, but using a component avoids that and allows us to use the sdformat Dom classes instead of making duplicate data structures. I haven't had a chance to review this yet due to travel, but I like the approach", "markup": "markdown", "html": "<p>I think the main concern was avoiding an sdf dependency in the core of ign physics, but using a component avoids that and allows us to use the sdformat Dom classes instead of making duplicate data structures. I haven't had a chance to review this yet due to travel, but I like the approach</p>", "type": "rendered"}, "created_on": "2018-08-01T21:21:01.748301+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-08-01T21:21:01.755906+00:00", "type": "pullrequest_comment", "id": 71736439}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71726231.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71726231"}}, "parent": {"id": 71725297, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "The gz11 beta will use ign-gazebo.\n\nWhen talking with @scpeters, the idea was load SDF in ign-gazebo and then construct links, joints, etc using ign-physics API and not pass SDF to ign-physics.", "markup": "markdown", "html": "<p>The gz11 beta will use ign-gazebo.</p>\n<p>When talking with @scpeters, the idea was load SDF in ign-gazebo and then construct links, joints, etc using ign-physics API and not pass SDF to ign-physics.</p>", "type": "rendered"}, "created_on": "2018-08-01T19:21:48.494284+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2018-08-01T19:21:48.511235+00:00", "type": "pullrequest_comment", "id": 71726231}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71725297.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71725297"}}, "parent": {"id": 71615795, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71615795.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71615795"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "> I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets\n\nI'm not sure if you've synced with @nkoenig on this, but my understanding was that the gz11 beta would use `ign-gazebo`'s ECS and `ign-physics`.\n\n> Eventually the core ign-physics library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for).\n\nSo it sounds like we'll start with native SDF support first and a full C++ API later. Again, I'm not sure if you've already discussed this, but by looking at how `ign-gazebo` is already doing [its own SDF parsing](#!/ignitionrobotics/ign-gazebo/pull-requests/13/server-update/diff#Lsrc/ServerPrivate.ccT89) and the [example physics system](#!/ignitionrobotics/ign-gazebo/pull-requests/15/systems/diff#chg-src/PhysicsSystem.cc) is SDF-agnostic, it sounds to me like we may need that C++ API before the SDF interface?", "markup": "markdown", "html": "<blockquote>\n<p>I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets</p>\n</blockquote>\n<p>I'm not sure if you've synced with @nkoenig on this, but my understanding was that the gz11 beta would use <code>ign-gazebo</code>'s ECS and <code>ign-physics</code>.</p>\n<blockquote>\n<p>Eventually the core ign-physics library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for).</p>\n</blockquote>\n<p>So it sounds like we'll start with native SDF support first and a full C++ API later. Again, I'm not sure if you've already discussed this, but by looking at how <code>ign-gazebo</code> is already doing <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/13/server-update/diff#Lsrc/ServerPrivate.ccT89\" rel=\"nofollow\">its own SDF parsing</a> and the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/15/systems/diff#chg-src/PhysicsSystem.cc\" rel=\"nofollow\">example physics system</a> is SDF-agnostic, it sounds to me like we may need that C++ API before the SDF interface?</p>", "type": "rendered"}, "created_on": "2018-08-01T19:11:08.794643+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-08-01T19:11:08.811312+00:00", "type": "pullrequest_comment", "id": 71725297}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71655506.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71655506"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "504f90f adds support for loading Fixed, Prismatic, Revolute, and Screw joint types.", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-physics/commits/504f90f\" rel=\"nofollow\" class=\"ap-connect-link\">504f90f</a> adds support for loading Fixed, Prismatic, Revolute, and Screw joint types.</p>", "type": "rendered"}, "created_on": "2018-08-01T10:19:07.596775+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-01T10:19:16.468548+00:00", "type": "pullrequest_comment", "id": 71655506}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "504f90fa37ed", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/504f90fa37ed.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/504f90fa37ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-01T10:17:19.707795+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nI don\u2019t know if I\u2019ll have time to continue working on this tomorrow, but I expect to have a working physics plugin \\(based on dartsim\\) that can account for most SDF properties by the end of the week, or by early next week.\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "504f90fa37ed", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/504f90fa37ed.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/504f90fa37ed"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-08-01T10:14:48.807434+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71615795.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71615795"}}, "parent": {"id": 71577549, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71577549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71577549"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Great point! As of right now, I'm not sure where the `ign-gazebo` stands in terms of ECS architecture, but I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets.\n\nIn terms of being sdf-agnostic, the beauty of the Feature System \\+ optional `ign-physics-sdf` component library is that it gives physics engines the option of whether or not they will depend on \\(and consume\\) SDF information. SDF is not a hard dependency of the core `ign-physics` library, so a physics engine is not required to depend on SDF. Moreover, the Feature System will allow `ign-gazebo` to inspect whether a plugin has `ign-physics-sdf` features at run time, and then make decisions based on that.\n\nEventually the core `ign-physics` library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF \\(we could have those features right now, but it involves a lot of typing, which we don't immediately have time for\\). Once those core features are available, then `ign-gazebo` will have an alternative means to transfer SDF information into the simulator. So here\u2019s the control flow that I\u2019m envisioning:\n\n1. `ign-gazebo` loads an SDF file into the native SDF data structures.\n2. `ign-gazebo` checks whether the physics engine supports the `ign-physics-sdf` features.\n3. If it does, then `ign-gazebo` passes the SDF data structures directly to the physics engine. This is ideal, because it allows physics engines to support custom parameters within an SDF. For example, our `dartsim` engine could support `<collision_detector>` SDF elements that allow users to choose one of the four collision detectors that `dartsim` supports. Our `ODE` engine could support parameters like `CFM` within the SDF. Other custom engines created by end-users could support their own custom SDF extensions.\n4. If the physics engine does not support `ign-physics-sdf`, then `ign-gazebo` can use the \\(future\\) core `ign-physics` features to construct the specifications of the SDF file on a best-effort basis. Some physics engines may be lacking the necessary features to construct everything that is specified in any given SDF file, so `ign-gazebo` will log warnings about what features are missing from the physics engine and which parts of the SDF cannot be loaded because of it.\n5. If a physics engine does not support `ign-gazebo` and also does not support programmatic construction of simulation objects, then it will need to determine its own way of constructing its simulation environment. Maybe it gets its information from another source, or maybe its environment is hard-coded into the engine/wrapper. This would be entirely up to whoever develops the plugin wrapper.\n\n", "markup": "markdown", "html": "<p>Great point! As of right now, I'm not sure where the <code>ign-gazebo</code> stands in terms of ECS architecture, but I\u2019m pretty confident that we won\u2019t have a sufficiently developed ECS framework in place for our upcoming development targets.</p>\n<p>In terms of being sdf-agnostic, the beauty of the Feature System + optional <code>ign-physics-sdf</code> component library is that it gives physics engines the option of whether or not they will depend on (and consume) SDF information. SDF is not a hard dependency of the core <code>ign-physics</code> library, so a physics engine is not required to depend on SDF. Moreover, the Feature System will allow <code>ign-gazebo</code> to inspect whether a plugin has <code>ign-physics-sdf</code> features at run time, and then make decisions based on that.</p>\n<p>Eventually the core <code>ign-physics</code> library will define features to allow users programmatically construct simulation objects and set the states/properties of those objects, independently of SDF (we could have those features right now, but it involves a lot of typing, which we don't immediately have time for). Once those core features are available, then <code>ign-gazebo</code> will have an alternative means to transfer SDF information into the simulator. So here\u2019s the control flow that I\u2019m envisioning:</p>\n<ol>\n<li><code>ign-gazebo</code> loads an SDF file into the native SDF data structures.</li>\n<li><code>ign-gazebo</code> checks whether the physics engine supports the <code>ign-physics-sdf</code> features.</li>\n<li>If it does, then <code>ign-gazebo</code> passes the SDF data structures directly to the physics engine. This is ideal, because it allows physics engines to support custom parameters within an SDF. For example, our <code>dartsim</code> engine could support <code>&lt;collision_detector&gt;</code> SDF elements that allow users to choose one of the four collision detectors that <code>dartsim</code> supports. Our <code>ODE</code> engine could support parameters like <code>CFM</code> within the SDF. Other custom engines created by end-users could support their own custom SDF extensions.</li>\n<li>If the physics engine does not support <code>ign-physics-sdf</code>, then <code>ign-gazebo</code> can use the (future) core <code>ign-physics</code> features to construct the specifications of the SDF file on a best-effort basis. Some physics engines may be lacking the necessary features to construct everything that is specified in any given SDF file, so <code>ign-gazebo</code> will log warnings about what features are missing from the physics engine and which parts of the SDF cannot be loaded because of it.</li>\n<li>If a physics engine does not support <code>ign-gazebo</code> and also does not support programmatic construction of simulation objects, then it will need to determine its own way of constructing its simulation environment. Maybe it gets its information from another source, or maybe its environment is hard-coded into the engine/wrapper. This would be entirely up to whoever develops the plugin wrapper.</li>\n</ol>", "type": "rendered"}, "created_on": "2018-08-01T02:59:12.759113+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-08-01T02:59:12.771595+00:00", "type": "pullrequest_comment", "id": 71615795}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29/comments/71577549.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29/_/diff#comment-71577549"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}, "content": {"raw": "Have we thought about how `ign-gazebo` will use this? My understanding from the [initial design document](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/625348/Entity+Component+System#EntityComponentSystem-Roleofsdformat) was that libraries like `ign-physics` and `ign-rendering` would be SDF-agnostic.", "markup": "markdown", "html": "<p>Have we thought about how <code>ign-gazebo</code> will use this? My understanding from the <a data-is-external-link=\"true\" href=\"https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/625348/Entity+Component+System#EntityComponentSystem-Roleofsdformat\" rel=\"nofollow\">initial design document</a> was that libraries like <code>ign-physics</code> and <code>ign-rendering</code> would be SDF-agnostic.</p>", "type": "rendered"}, "created_on": "2018-07-31T17:24:57.003881+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-07-31T17:24:57.010353+00:00", "type": "pullrequest_comment", "id": 71577549}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nI don\u2019t know if I\u2019ll have time to continue working on this tomorrow, but I expect to have a working physics plugin \\(based on dartsim\\) that can account for most SDF properties by the end of the week, or by early next week.\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256).", "title": "[WIP] Features for constructing objects from SDF data", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "eb924825f13e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/eb924825f13e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/eb924825f13e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-07-31T10:12:03.293293+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nI don\u2019t know if I\u2019ll have time to continue working on this tomorrow, but I expect to have a working physics plugin \\(based on dartsim\\) that can account for most SDF properties by the end of the week, or by early next week.\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256/).", "title": "[WIP] Features to construct from SDF", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "eb924825f13e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/eb924825f13e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/eb924825f13e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-07-31T10:11:44.302245+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}, {"update": {"description": "This PR introduces an `ign-physics-sdf` component which provides features for having a physics plugin construct simulation objects from an SDF data representation.\r\n\r\nThis also begins the development of an official `ign-physics-dartsim` plugin \\(the other PRs that use dartsim were just meant for proofs-of-concept\\).\r\n\r\nI don\u2019t know if I\u2019ll have time to continue working on this tomorrow, but I expect to have a working physics plugin \\(based on dartsim\\) that can account for most SDF properties by the end of the week, or by early next week.\r\n\r\nNote that the new features require dartsim version 6 \\(I\u2019m specifically testing on 6.7\\) and [this branch of ign-math](#!/ignitionrobotics/ign-math/pull-requests/256/).", "title": "[WIP] Features to construct from SDF", "destination": {"commit": {"hash": "29320d1d6984", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/29320d1d6984.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/29320d1d6984"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "eb924825f13e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/commit/eb924825f13e.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/commits/eb924825f13e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{63a01c4f-5625-443b-96f0-73c4005ccada}ts=c_plus_plus"}}, "type": "repository", "name": "ign-physics", "full_name": "ignitionrobotics/ign-physics", "uuid": "{63a01c4f-5625-443b-96f0-73c4005ccada}"}, "branch": {"name": "sdf_component"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2018-07-31T10:11:44.256804+00:00"}, "pull_request": {"type": "pullrequest", "id": 29, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/29.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/29"}}, "title": "Feature System Part 6: Features for constructing objects from SDF data"}}]}