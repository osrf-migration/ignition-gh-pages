{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/47/comments/85512028.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:9f5cb659626f..4732aad04aa5?path=dartsim%2Fsrc%2FEntityManagement_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/47/_/diff#comment-85512028"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 47, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/47.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/47"}}, "title": "Adding support for MeshShape"}, "content": {"raw": "how do you feel about adding some expectations on the absolute size of the mesh?\n\n~~~\ndiff -r 9f5cb659626f dartsim/src/EntityManagement_TEST.cc\n--- a/dartsim/src/EntityManagement_TEST.cc      Tue Dec 11 04:36:24 2018 +0000\n+++ b/dartsim/src/EntityManagement_TEST.cc      Wed Dec 12 18:15:05 2018 -0800\n@@ -155,6 +155,10 @@\n   const auto originalMeshSize = mesh->Max() - mesh->Min();\n   const auto meshShapeSize = meshShape->GetSize();\n \n+  EXPECT_NEAR(meshShapeSize[0], 0.5106, 1e-4);\n+  EXPECT_NEAR(meshShapeSize[1], 0.3831, 1e-4);\n+  EXPECT_NEAR(meshShapeSize[2], 0.1956, 1e-4);\n+\n   // Note: dartsim uses assimp for storing mesh data, and assimp by default uses\n   // single floating point precision (instead of double precision), so we can't\n   // expect these values to be exact.\n~~~", "markup": "markdown", "html": "<p>how do you feel about adding some expectations on the absolute size of the mesh?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 9f5cb659626f dartsim/src/EntityManagement_TEST.cc</span>\n<span class=\"gd\">--- a/dartsim/src/EntityManagement_TEST.cc      Tue Dec 11 04:36:24 2018 +0000</span>\n<span class=\"gi\">+++ b/dartsim/src/EntityManagement_TEST.cc      Wed Dec 12 18:15:05 2018 -0800</span>\n<span class=\"gu\">@@ -155,6 +155,10 @@</span>\n   const auto originalMeshSize = mesh-&gt;Max() - mesh-&gt;Min();\n   const auto meshShapeSize = meshShape-&gt;GetSize();\n\n<span class=\"gi\">+  EXPECT_NEAR(meshShapeSize[0], 0.5106, 1e-4);</span>\n<span class=\"gi\">+  EXPECT_NEAR(meshShapeSize[1], 0.3831, 1e-4);</span>\n<span class=\"gi\">+  EXPECT_NEAR(meshShapeSize[2], 0.1956, 1e-4);</span>\n<span class=\"gi\">+</span>\n   // Note: dartsim uses assimp for storing mesh data, and assimp by default uses\n   // single floating point precision (instead of double precision), so we can&#39;t\n   // expect these values to be exact.\n</pre></div>", "type": "rendered"}, "created_on": "2018-12-13T02:26:17.124317+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 162, "from": null, "outdated": true, "path": "dartsim/src/EntityManagement_TEST.cc"}, "updated_on": "2018-12-13T02:26:17.131562+00:00", "type": "pullrequest_comment", "id": 85512028}