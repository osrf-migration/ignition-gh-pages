{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/68158151.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:0b4ccbbf71e9..3bf87fe246a9?path=include%2Fignition%2Fphysics%2FEntity.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-68158151"}}, "parent": {"id": 68142994, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/68142994.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-68142994"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24"}}, "title": "Feature System Part 1"}, "content": {"raw": "The implementation of the Feature System is essentially a mix of ECS, PIMPL, and Variadic CRTP patterns.\n\nThe `Identity` of an `Entity` is a crucial piece of the ECS aspect of the design. Every object must correctly know its `Identity` or else we can easily experience undefined behavior or segmentation faults.\n\nI've put in a bunch of constraints to try to ensure that an `Entity` will never be given a bogus `Identity`. Specifically, I've made it so that only physics plugins themselves are able to produce `Identity` objects.\n\nNevertheless, implementation mistakes could be made, either within the feature system implementation or within a plugin implementation. To make those kinds of mistakes a little more obvious, the default construction of `Entity` and `Identity` will produce an `Identity::id` with a value of `INVALID_ENTITY_ID`, a.k.a. `std::numeric_limits<std::size_t>::max()`. If an `Identity` object ever has that value, we can immediately know that something went wrong during its construction, and if a user ever holds an `Entity` with an invalid `Identity`, then it most likely means that our implementation has a bug \\(or the user is intentionally doing something that they\u2019re not supposed to\\).", "markup": "markdown", "html": "<p>The implementation of the Feature System is essentially a mix of ECS, PIMPL, and Variadic CRTP patterns.</p>\n<p>The <code>Identity</code> of an <code>Entity</code> is a crucial piece of the ECS aspect of the design. Every object must correctly know its <code>Identity</code> or else we can easily experience undefined behavior or segmentation faults.</p>\n<p>I've put in a bunch of constraints to try to ensure that an <code>Entity</code> will never be given a bogus <code>Identity</code>. Specifically, I've made it so that only physics plugins themselves are able to produce <code>Identity</code> objects.</p>\n<p>Nevertheless, implementation mistakes could be made, either within the feature system implementation or within a plugin implementation. To make those kinds of mistakes a little more obvious, the default construction of <code>Entity</code> and <code>Identity</code> will produce an <code>Identity::id</code> with a value of <code>INVALID_ENTITY_ID</code>, a.k.a. <code>std::numeric_limits&lt;std::size_t&gt;::max()</code>. If an <code>Identity</code> object ever has that value, we can immediately know that something went wrong during its construction, and if a user ever holds an <code>Entity</code> with an invalid <code>Identity</code>, then it most likely means that our implementation has a bug (or the user is intentionally doing something that they\u2019re not supposed to).</p>", "type": "rendered"}, "created_on": "2018-06-26T05:56:56.973657+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/physics/Entity.hh"}, "updated_on": "2018-06-26T05:56:56.988881+00:00", "type": "pullrequest_comment", "id": 68158151}