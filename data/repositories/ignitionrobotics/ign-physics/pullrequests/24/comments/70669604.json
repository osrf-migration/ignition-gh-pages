{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/70669604.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-70669604"}}, "parent": {"id": 70669041, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/70669041.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-70669041"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24"}}, "title": "Feature System Part 1"}, "content": {"raw": "Right, I think the design doc touches on this a bit, but here\u2019s the brief overview:\n\n1. We'll pre-define some standard feature sets. When a user loads a plugin that uses one of these standard feature sets, we'll be able to detect it using `plugin->QueryInterface<T>()` and then pass the plugin an object which expresses that standard set of features.\n2. Users who want a custom set of features will need to have their plugin accept a generic object that doesn't express any features, and then we'll provide some \"dynamic casting\" tools \\(similar to `RequestFeatures` which has already been implemented\\) to convert the generic object into an object that expresses the custom features that the user\u2019s plugin requires. If that \u201cdynamic cast\u201d fails, then it falls on the user\u2019s plugin to decide how to proceed.\n\nIn both cases, we don\u2019t need the SDF to tell us what features are required, because in case \\(1\\) we can detect it from the interfaces provided by the plugin, and in case \\(2\\) we rely on the user\u2019s plugin to extract the features that it needs.\n\n`ign-gazebo` shouldn't need any knowledge about physics features, because that will all be handled within `ign-physics` and `ign-plugin`.", "markup": "markdown", "html": "<p>Right, I think the design doc touches on this a bit, but here\u2019s the brief overview:</p>\n<ol>\n<li>We'll pre-define some standard feature sets. When a user loads a plugin that uses one of these standard feature sets, we'll be able to detect it using <code>plugin-&gt;QueryInterface&lt;T&gt;()</code> and then pass the plugin an object which expresses that standard set of features.</li>\n<li>Users who want a custom set of features will need to have their plugin accept a generic object that doesn't express any features, and then we'll provide some \"dynamic casting\" tools (similar to <code>RequestFeatures</code> which has already been implemented) to convert the generic object into an object that expresses the custom features that the user\u2019s plugin requires. If that \u201cdynamic cast\u201d fails, then it falls on the user\u2019s plugin to decide how to proceed.</li>\n</ol>\n<p>In both cases, we don\u2019t need the SDF to tell us what features are required, because in case (1) we can detect it from the interfaces provided by the plugin, and in case (2) we rely on the user\u2019s plugin to extract the features that it needs.</p>\n<p><code>ign-gazebo</code> shouldn't need any knowledge about physics features, because that will all be handled within <code>ign-physics</code> and <code>ign-plugin</code>.</p>", "type": "rendered"}, "created_on": "2018-07-23T06:11:11.051756+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-07-23T06:11:11.061001+00:00", "type": "pullrequest_comment", "id": 70669604}