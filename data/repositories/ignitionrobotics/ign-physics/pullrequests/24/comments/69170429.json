{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/69170429.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:994134779054..3bf87fe246a9?path=test%2FMockGetByName.hh"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-69170429"}}, "parent": {"id": 69167499, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/69167499.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-69167499"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24"}}, "title": "Feature System Part 1"}, "content": {"raw": "As for `const`, I have some mixed feelings. Technically we can, because there wouldn\u2019t be a violation of \u201cphysical\u201d constness, but I think there might be a violation of \u201clogical\u201d constness. It really depends on the exact relationship between a \u201cWorld\u201d and its \u201cEngine\u201d. Those relationships could even vary between different physics engines or different features within physics engines.\n\nI think for now the safest thing to do is have const-qualified and const-unqualified versions of every function that returns any kind of Entity. That way, we never risk an Entity breaking the logical constness of its parent.", "markup": "markdown", "html": "<p>As for <code>const</code>, I have some mixed feelings. Technically we can, because there wouldn\u2019t be a violation of \u201cphysical\u201d constness, but I think there might be a violation of \u201clogical\u201d constness. It really depends on the exact relationship between a \u201cWorld\u201d and its \u201cEngine\u201d. Those relationships could even vary between different physics engines or different features within physics engines.</p>\n<p>I think for now the safest thing to do is have const-qualified and const-unqualified versions of every function that returns any kind of Entity. That way, we never risk an Entity breaking the logical constness of its parent.</p>", "type": "rendered"}, "created_on": "2018-07-06T02:20:57.399401+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "test/MockGetByName.hh"}, "updated_on": "2018-07-06T02:20:57.406845+00:00", "type": "pullrequest_comment", "id": 69170429}