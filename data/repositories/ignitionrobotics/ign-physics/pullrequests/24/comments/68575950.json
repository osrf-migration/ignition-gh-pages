{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/68575950.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-68575950"}}, "parent": {"id": 68550452, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24/comments/68550452.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24/_/diff#comment-68550452"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 24, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/24.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/24"}}, "title": "Feature System Part 1"}, "content": {"raw": "Duplicate features are never supposed to be an issue.\n\nThere is *one* known pathological case right now, though: In rare cases, if a feature is side-by-side with itself in a `FeatureList`, then this will *sometimes* trigger a compilation error which originates from `ignition::common::SpecializedPluginPtr`. It turns out that C\\+\\+ doesn\u2019t like you double-inheriting at the same level in a class hierarchy. In other words:\n\n    class Child : public virtual Parent, public virtual Parent\n    {\n    };\n\nwill produce a compilation error, even though there's nothing inherently wrong with it conceptually. Once in a while, we'll get this compilation error from `SpecializedPluginPtr` when features are arranged just right in a `FeatureList`.\n\nI have plans to fix this in the upcoming `ignition::plugin::SpecializedPluginPtr`. We can't do anything about it from `ign-physics`.", "markup": "markdown", "html": "<p>Duplicate features are never supposed to be an issue.</p>\n<p>There is <em>one</em> known pathological case right now, though: In rare cases, if a feature is side-by-side with itself in a <code>FeatureList</code>, then this will <em>sometimes</em> trigger a compilation error which originates from <code>ignition::common::SpecializedPluginPtr</code>. It turns out that C++ doesn\u2019t like you double-inheriting at the same level in a class hierarchy. In other words:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">class</span> <span class=\"nx\">Child</span> : <span class=\"kt\">public</span> <span class=\"nx\">virtual</span> <span class=\"nx\">Parent</span><span class=\"p\">,</span> <span class=\"kr\">public</span> <span class=\"nx\">virtual</span> <span class=\"nx\">Parent</span>\n<span class=\"p\">{</span>\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<p>will produce a compilation error, even though there's nothing inherently wrong with it conceptually. Once in a while, we'll get this compilation error from <code>SpecializedPluginPtr</code> when features are arranged just right in a <code>FeatureList</code>.</p>\n<p>I have plans to fix this in the upcoming <code>ignition::plugin::SpecializedPluginPtr</code>. We can't do anything about it from <code>ign-physics</code>.</p>", "type": "rendered"}, "created_on": "2018-06-29T07:53:37.288166+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-06-29T07:53:37.298276+00:00", "type": "pullrequest_comment", "id": 68575950}