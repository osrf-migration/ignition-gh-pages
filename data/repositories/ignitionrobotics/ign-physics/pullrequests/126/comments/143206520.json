{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/126/comments/143206520.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-physics/diff/ignitionrobotics/ign-physics:e1a7eb846dd4..2435b93c821b?path=tpe%2Flib%2Fsrc%2FCollision.cc"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/126/_/diff#comment-143206520"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 126, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-physics/pullrequests/126.json"}, "html": {"href": "#!/ignitionrobotics/ign-physics/pull-requests/126"}}, "title": "[Citadel] TPE Lib"}, "content": {"raw": "Instead of copying each member here, I *think* you should be able to do:\n\n```\nCollision::Collision(const Collision &_other)\n  : Entity(), dataPtr(new CollisionPrivate(*_other.dataPtr))\n{\n}\n```\n\nThen whenever a new member is added to `CollisionPrivate`, we don't need to worry about adding a line here because it will be automatically copied.\n\nFor the copy assignment operator below, you could do:\n\n```\nCollision &Collision::operator=(const Collision &_other)\n{\n  return *this = Collision(_other);\n}\n```\n\nThe same goes for other classes implementing their own copy constructor / operators, like `Entity`.", "markup": "markdown", "html": "<p>Instead of copying each member here, I <em>think</em> you should be able to do:</p>\n<div class=\"codehilite\"><pre><span></span>Collision::Collision(const Collision &amp;_other)\n  : Entity(), dataPtr(new CollisionPrivate(*_other.dataPtr))\n{\n}\n</pre></div>\n\n\n<p>Then whenever a new member is added to <code>CollisionPrivate</code>, we don't need to worry about adding a line here because it will be automatically copied.</p>\n<p>For the copy assignment operator below, you could do:</p>\n<div class=\"codehilite\"><pre><span></span>Collision &amp;Collision::operator=(const Collision &amp;_other)\n{\n  return *this = Collision(_other);\n}\n</pre></div>\n\n\n<p>The same goes for other classes implementing their own copy constructor / operators, like <code>Entity</code>.</p>", "type": "rendered"}, "created_on": "2020-04-01T22:30:12.177430+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 47, "from": null, "outdated": true, "path": "tpe/lib/src/Collision.cc"}, "updated_on": "2020-04-01T22:30:12.179689+00:00", "type": "pullrequest_comment", "id": 143206520}