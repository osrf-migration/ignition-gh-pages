{"pagelen": 50, "values": [{"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "12c4a69c29d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/12c4a69c29d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/12c4a69c29d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T02:20:33.589190+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "fc449ae9dc06", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/fc449ae9dc06.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/fc449ae9dc06"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T01:08:39.289446+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "4365d29feead", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/4365d29feead.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/4365d29feead"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T01:05:13.755211+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36528381.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36528381"}}, "parent": {"id": 34290354, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34290354.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34290354"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "I've moved more code from the `GraphDirected` and `GraphUndirected` classes to `Graph`.", "markup": "markdown", "html": "<p>I've moved more code from the <code>GraphDirected</code> and <code>GraphUndirected</code> classes to <code>Graph</code>.</p>", "type": "rendered"}, "created_on": "2017-05-10T01:01:51.486702+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-05-10T01:01:51.489128+00:00", "type": "pullrequest_comment", "id": 36528381}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "20e0fbf8450e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/20e0fbf8450e.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/20e0fbf8450e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T00:58:18.712646+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "20e0fbf8450e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/20e0fbf8450e.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/20e0fbf8450e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T00:56:03.162904+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "b41336b802f5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/b41336b802f5.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/b41336b802f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-10T00:51:25.397810+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36526844.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36526844"}}, "parent": {"id": 36526750, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36526750.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36526750"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Sorry, by \"nodes\" I mean \"vertices\", and by \"processed\" I mean \"visited\".", "markup": "markdown", "html": "<p>Sorry, by \"nodes\" I mean \"vertices\", and by \"processed\" I mean \"visited\".</p>", "type": "rendered"}, "created_on": "2017-05-09T23:59:10.455774+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T23:59:20.223130+00:00", "type": "pullrequest_comment", "id": 36526844}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36526750.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36526750"}}, "parent": {"id": 36524946, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36524946.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36524946"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "When I use a graph definition of\n```\n  UndirectedGraph<int, double> graph(\n  {\n    // Vertices.\n    {{0, \"A\", 0}, {1, \"B\", 1}, {2, \"C\", 2}, {3, \"D\", 3},\n     {4, \"E\", 4}, {5, \"F\", 5}, {6, \"G\", 6}},\n\n     // Edges.\n     {{{0, 1}, 2.0}, {{0, 2}, 3.0}, {{1, 3}, 4.0}, {{2, 3}, 2.0},\n      {{3, 4}, 3.0}, {{3, 5}, 4.0}, {{3, 6}, 2.0}}\n  });\n```\nIn the UndirectedGraph BFS test, vertices 3,4,5, and 6 are all processed twice. I checked this by adding print statements to the BFS algorithm each time a node is processed or added to the graph.", "markup": "markdown", "html": "<p>When I use a graph definition of</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">  UndirectedGraph&lt;int, double&gt; graph(</span>\n<span class=\"x\">  {</span>\n<span class=\"x\">    // Vertices.</span>\n<span class=\"x\">    </span><span class=\"cp\">{{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"o\">,</span> <span class=\"m\">0</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">1</span><span class=\"o\">,</span> <span class=\"s2\">&quot;B&quot;</span><span class=\"o\">,</span> <span class=\"m\">1</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">2</span><span class=\"o\">,</span> <span class=\"s2\">&quot;C&quot;</span><span class=\"o\">,</span> <span class=\"m\">2</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span>\n     <span class=\"o\">{</span><span class=\"m\">4</span><span class=\"o\">,</span> <span class=\"s2\">&quot;E&quot;</span><span class=\"o\">,</span> <span class=\"m\">4</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">5</span><span class=\"o\">,</span> <span class=\"s2\">&quot;F&quot;</span><span class=\"o\">,</span> <span class=\"m\">5</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">6</span><span class=\"o\">,</span> <span class=\"s2\">&quot;G&quot;</span><span class=\"o\">,</span> <span class=\"m\">6</span><span class=\"cp\">}}</span><span class=\"x\">,</span>\n\n<span class=\"x\">     // Edges.</span>\n<span class=\"x\">     </span><span class=\"cp\">{{</span><span class=\"o\">{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"m\">1</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"m\">2</span><span class=\"o\">},</span> <span class=\"m\">3.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">1</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span> <span class=\"m\">4.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">2</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"o\">},</span>\n      <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">4</span><span class=\"o\">},</span> <span class=\"m\">3.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">5</span><span class=\"o\">},</span> <span class=\"m\">4.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">6</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">  });</span>\n</pre></div>\n\n\n<p>In the UndirectedGraph BFS test, vertices 3,4,5, and 6 are all processed twice. I checked this by adding print statements to the BFS algorithm each time a node is processed or added to the graph.</p>", "type": "rendered"}, "created_on": "2017-05-09T23:56:00.014119+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T23:56:00.070752+00:00", "type": "pullrequest_comment", "id": 36526750}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36524946.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36524946"}}, "parent": {"id": 36512136, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36512136.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36512136"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Did you find an example that doesn't work? I believe is still OK.", "markup": "markdown", "html": "<p>Did you find an example that doesn't work? I believe is still OK.</p>", "type": "rendered"}, "created_on": "2017-05-09T22:54:13.617617+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-05-09T22:54:13.619935+00:00", "type": "pullrequest_comment", "id": 36524946}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36523879.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36523879"}}, "parent": {"id": 36512210, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36512210.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36512210"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Modified in ce97d30.", "markup": "markdown", "html": "<p>Modified in <a href=\"#!/ignitionrobotics/ign-math/commits/ce97d30\" rel=\"nofollow\" class=\"ap-connect-link\">ce97d30</a>.</p>", "type": "rendered"}, "created_on": "2017-05-09T22:23:37.539869+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-05-09T22:23:37.542440+00:00", "type": "pullrequest_comment", "id": 36523879}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36523870.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36523870"}}, "parent": {"id": 36518328, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36518328.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36518328"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Added in \tce97d30.", "markup": "markdown", "html": "<p>Added in    <a href=\"#!/ignitionrobotics/ign-math/commits/ce97d30\" rel=\"nofollow\" class=\"ap-connect-link\">ce97d30</a>.</p>", "type": "rendered"}, "created_on": "2017-05-09T22:23:24.896693+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-05-09T22:23:24.900220+00:00", "type": "pullrequest_comment", "id": 36523870}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "ce97d30c7150", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/ce97d30c7150.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/ce97d30c7150"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-09T22:22:44.517598+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36523812.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36523812"}}, "parent": {"id": 36511385, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36511385.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36511385"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "The point is to check that the Ids found match the Ids used in the constructor.", "markup": "markdown", "html": "<p>The point is to check that the Ids found match the Ids used in the constructor.</p>", "type": "rendered"}, "created_on": "2017-05-09T22:21:59.584557+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-05-09T22:21:59.586547+00:00", "type": "pullrequest_comment", "id": 36523812}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "ebba3a466073", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/ebba3a466073.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/ebba3a466073"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-09T21:44:02.350732+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "0b5a339631bd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/0b5a339631bd.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/0b5a339631bd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-09T21:40:12.048197+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "258ffcc0e6ab", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/258ffcc0e6ab.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/258ffcc0e6ab"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-09T21:34:20.542896+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36518420.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36518420"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Finished reading through, and my only other question I have is whether or not the graph is supposed to support loopback edges. I think it would work in the current implementation, but there's no tests that use that functionality.", "markup": "markdown", "html": "<p>Finished reading through, and my only other question I have is whether or not the graph is supposed to support loopback edges. I think it would work in the current implementation, but there's no tests that use that functionality.</p>", "type": "rendered"}, "created_on": "2017-05-09T20:29:41.162537+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "updated_on": "2017-05-09T20:29:41.207977+00:00", "type": "pullrequest_comment", "id": 36518420}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36518328.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36518328"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "As in RemoveEdge above, try to remove previously removed vertex?", "markup": "markdown", "html": "<p>As in RemoveEdge above, try to remove previously removed vertex?</p>", "type": "rendered"}, "created_on": "2017-05-09T20:28:12.069231+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T20:28:12.113509+00:00", "type": "pullrequest_comment", "id": 36518328}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36512210.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36512210"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Nitpick: vertice -> vertex", "markup": "markdown", "html": "<p>Nitpick: vertice -&gt; vertex</p>", "type": "rendered"}, "created_on": "2017-05-09T18:51:41.118200+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T18:51:41.151430+00:00", "type": "pullrequest_comment", "id": 36512210}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36512136.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36512136"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Maybe my graph algos are rusty, but should there be a mechanism in place to make sure that a vertex doesn't get added to `pending` twice from multiple neighbors? Looking at the [wikipedia implementation](https://en.wikipedia.org/wiki/Breadth-first_search), I think that `v` should get added to `visited` as well as `pending` in this conditional, and `visited` should perhaps be renamed.", "markup": "markdown", "html": "<p>Maybe my graph algos are rusty, but should there be a mechanism in place to make sure that a vertex doesn't get added to <code>pending</code> twice from multiple neighbors? Looking at the <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Breadth-first_search\" rel=\"nofollow\">wikipedia implementation</a>, I think that <code>v</code> should get added to <code>visited</code> as well as <code>pending</code> in this conditional, and <code>visited</code> should perhaps be renamed.</p>", "type": "rendered"}, "created_on": "2017-05-09T18:50:24.332163+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T18:50:39.032565+00:00", "type": "pullrequest_comment", "id": 36512136}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36511385.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36511385"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "These tests check the vertex ID, which is explicitly set in the graph initialization. Is the point to check the constructor, or automatic ID assignment? ", "markup": "markdown", "html": "<p>These tests check the vertex ID, which is explicitly set in the graph initialization. Is the point to check the constructor, or automatic ID assignment? </p>", "type": "rendered"}, "created_on": "2017-05-09T18:38:39.907774+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-09T18:38:39.948798+00:00", "type": "pullrequest_comment", "id": 36511385}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36419781.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36419781"}}, "parent": {"id": 36027990, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36027990.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36027990"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Thanks, added in a187dbd.", "markup": "markdown", "html": "<p>Thanks, added in <a href=\"#!/ignitionrobotics/ign-math/commits/a187dbd\" rel=\"nofollow\" class=\"ap-connect-link\">a187dbd</a>.</p>", "type": "rendered"}, "created_on": "2017-05-08T16:55:15.112159+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-05-08T16:55:15.115049+00:00", "type": "pullrequest_comment", "id": 36419781}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "a187dbdfd0c1", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/a187dbdfd0c1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/a187dbdfd0c1"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-05-08T16:54:46.488529+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36419628.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36419628"}}, "parent": {"id": 36083397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36083397.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36083397"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "I designed it using `std::set` because of the semantics. I thought that a set was a good match for representing the ends of an unconnected edge. Still considering if is the right decision.", "markup": "markdown", "html": "<p>I designed it using <code>std::set</code> because of the semantics. I thought that a set was a good match for representing the ends of an unconnected edge. Still considering if is the right decision.</p>", "type": "rendered"}, "created_on": "2017-05-08T16:52:45.139465+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-05-08T16:52:45.143200+00:00", "type": "pullrequest_comment", "id": 36419628}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36085821.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36085821"}}, "parent": {"id": 36028232, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36028232.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36028232"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Actually, simply `return res` might be the best option for these functions, see http://stackoverflow.com/questions/11817873/using-stdmove-when-returning-a-value-from-a-function-to-avoid-to-copy", "markup": "markdown", "html": "<p>Actually, simply <code>return res</code> might be the best option for these functions, see <a href=\"http://stackoverflow.com/questions/11817873/using-stdmove-when-returning-a-value-from-a-function-to-avoid-to-copy\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/11817873/using-stdmove-when-returning-a-value-from-a-function-to-avoid-to-copy</a></p>", "type": "rendered"}, "created_on": "2017-05-02T16:35:30.339770+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-02T16:35:30.392238+00:00", "type": "pullrequest_comment", "id": 36085821}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36083397.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36083397"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "I was wondering about the heavy use of `std::set` in this implementation, because of the [high storage overhead](http://stackoverflow.com/questions/21449071/how-much-extra-memory-if-any-does-a-stdset-take-to-store-its-elements-v-s-a). It can see why the full graph has a `set` of vertices, because of the fast lookup speed, but why does `Edge` have one? Is there a situation where an `Edge` connects more than 2 vertices? Or does the `set` usage provide other benefits?", "markup": "markdown", "html": "<p>I was wondering about the heavy use of <code>std::set</code> in this implementation, because of the <a data-is-external-link=\"true\" href=\"http://stackoverflow.com/questions/21449071/how-much-extra-memory-if-any-does-a-stdset-take-to-store-its-elements-v-s-a\" rel=\"nofollow\">high storage overhead</a>. It can see why the full graph has a <code>set</code> of vertices, because of the fast lookup speed, but why does <code>Edge</code> have one? Is there a situation where an <code>Edge</code> connects more than 2 vertices? Or does the <code>set</code> usage provide other benefits?</p>", "type": "rendered"}, "created_on": "2017-05-02T16:04:27.555002+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "updated_on": "2017-05-02T16:04:27.613844+00:00", "type": "pullrequest_comment", "id": 36083397}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36028232.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36028232"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "`std::move(res);`?", "markup": "markdown", "html": "<p><code>std::move(res);</code>?</p>", "type": "rendered"}, "created_on": "2017-05-02T00:34:43.640057+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-02T00:34:43.690571+00:00", "type": "pullrequest_comment", "id": 36028232}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36027990.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36027990"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Should the doc describe return behavior?", "markup": "markdown", "html": "<p>Should the doc describe return behavior?</p>", "type": "rendered"}, "created_on": "2017-05-02T00:25:35.018151+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {}, "updated_on": "2017-05-02T00:25:35.065900+00:00", "type": "pullrequest_comment", "id": 36027990}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "b2c6b77032d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/b2c6b77032d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/b2c6b77032d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-18T02:02:27.165175+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "61fd7339aa0a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/61fd7339aa0a.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/61fd7339aa0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-18T01:29:25.571837+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "81931161c0fa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/81931161c0fa.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/81931161c0fa"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-18T00:53:50.446719+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/35158343.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-35158343"}}, "parent": {"id": 34354853, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354853.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354853"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "That was one reason and the other was to hide the representation that we're internally using for storing the vertices. The returned map can be seen as a way to return a \"view\" of the vertices.", "markup": "markdown", "html": "<p>That was one reason and the other was to hide the representation that we're internally using for storing the vertices. The returned map can be seen as a way to return a \"view\" of the vertices.</p>", "type": "rendered"}, "created_on": "2017-04-18T00:48:17.578482+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-04-18T00:48:31.407625+00:00", "type": "pullrequest_comment", "id": 35158343}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "ad610e1f5c34", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/ad610e1f5c34.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/ad610e1f5c34"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-17T23:57:11.329100+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/35100541.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-35100541"}}, "parent": {"id": 34209553, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34209553.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34209553"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "A first implementation of the `GraphAlgorithms` class has been added in fc33a39. I'll change a few things there but we can review how it looks like.", "markup": "markdown", "html": "<p>A first implementation of the <code>GraphAlgorithms</code> class has been added in <a href=\"#!/ignitionrobotics/ign-math/commits/fc33a39\" rel=\"nofollow\" class=\"ap-connect-link\">fc33a39</a>. I'll change a few things there but we can review how it looks like.</p>", "type": "rendered"}, "created_on": "2017-04-14T23:56:41.849341+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-04-15T00:06:42.300971+00:00", "type": "pullrequest_comment", "id": 35100541}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "fc33a39094a3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/fc33a39094a3.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/fc33a39094a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-14T23:53:21.427097+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34425780.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34425780"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "A few more suggestions in [this branch](#!/ignitionrobotics/ign-math/branch/graph_generic_nate2?dest=graph_generic#diff)", "markup": "markdown", "html": "<p>A few more suggestions in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/branch/graph_generic_nate2?dest=graph_generic#diff\" rel=\"nofollow\">this branch</a></p>", "type": "rendered"}, "created_on": "2017-04-04T14:29:04.788053+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-04-04T14:29:04.791677+00:00", "type": "pullrequest_comment", "id": 34425780}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "2c09383012a0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/2c09383012a0.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/2c09383012a0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-03T17:56:44.121398+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "4ef56b1ce772", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/4ef56b1ce772.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/4ef56b1ce772"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-03T17:20:32.591987+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34355785.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34355785"}}, "parent": {"id": 34354545, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354545.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354545"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "It definitely sounds more natural to me too. I was testing this suggestion a few days ago and ran into some problem when `_id` and `_data` were using the same type. I didn't spend time solving it but I'll go back and test it again.", "markup": "markdown", "html": "<p>It definitely sounds more natural to me too. I was testing this suggestion a few days ago and ran into some problem when <code>_id</code> and <code>_data</code> were using the same type. I didn't spend time solving it but I'll go back and test it again.</p>", "type": "rendered"}, "created_on": "2017-04-03T17:14:07.329768+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-04-03T17:14:07.333221+00:00", "type": "pullrequest_comment", "id": 34355785}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354853.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354853"}}, "parent": {"id": 34354759, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354759.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354759"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Ahh. I see you are creating a constant reference to each Vertex. This means a user won't be able to modify vertex accessed through this function, correct?", "markup": "markdown", "html": "<p>Ahh. I see you are creating a constant reference to each Vertex. This means a user won't be able to modify vertex accessed through this function, correct?</p>", "type": "rendered"}, "created_on": "2017-04-03T16:59:05.366950+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-04-03T16:59:05.369765+00:00", "type": "pullrequest_comment", "id": 34354853}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354759.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354759"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "What is the reason behind creating a new `std::map` instead of returning a reference to `this->vertices`?", "markup": "markdown", "html": "<p>What is the reason behind creating a new <code>std::map</code> instead of returning a reference to <code>this-&gt;vertices</code>?</p>", "type": "rendered"}, "created_on": "2017-04-03T16:57:34.792435+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-04-03T16:57:34.796077+00:00", "type": "pullrequest_comment", "id": 34354759}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34354545.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34354545"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Would you like to consider an alternate parameter order? A vertex name feels like it should be the first argument, with data second, and id third. Reasons include:\n\n1. A name should probably be enforced.\n2. A user may not have data when creating a vertex. This user would like to use a default value.\n\nI would propose the following definition:\n\n```\npublic: Vertex<V> &AddVertex(const std::string &_name, const V &_data = V(), const VertexId &_id = kNullId)\n```", "markup": "markdown", "html": "<p>Would you like to consider an alternate parameter order? A vertex name feels like it should be the first argument, with data second, and id third. Reasons include:</p>\n<ol>\n<li>A name should probably be enforced.</li>\n<li>A user may not have data when creating a vertex. This user would like to use a default value.</li>\n</ol>\n<p>I would propose the following definition:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">public</span><span class=\"o\">:</span> <span class=\"n\">Vertex</span><span class=\"o\">&lt;</span><span class=\"n\">V</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span><span class=\"n\">AddVertex</span><span class=\"o\">(</span><span class=\"kd\">const</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">&amp;</span><span class=\"n\">_name</span><span class=\"o\">,</span> <span class=\"kd\">const</span> <span class=\"n\">V</span> <span class=\"o\">&amp;</span><span class=\"n\">_data</span> <span class=\"o\">=</span> <span class=\"n\">V</span><span class=\"o\">(),</span> <span class=\"kd\">const</span> <span class=\"n\">VertexId</span> <span class=\"o\">&amp;</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"n\">kNullId</span><span class=\"o\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-04-03T16:54:48.289668+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2017-04-03T16:54:59.277234+00:00", "type": "pullrequest_comment", "id": 34354545}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34294891.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34294891"}}, "parent": {"id": 34290372, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34290372.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34290372"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Much clearer, thanks!", "markup": "markdown", "html": "<p>Much clearer, thanks!</p>", "type": "rendered"}, "created_on": "2017-04-02T19:29:41.741139+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-04-02T19:29:41.743479+00:00", "type": "pullrequest_comment", "id": 34294891}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34290372.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34290372"}}, "parent": {"id": 34211037, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34211037.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34211037"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "The API has been clarified (hopefully) and extended:\n\n* InDegree(vertex) -> int\n* OutDegree(vertex) -> int\n* AdjacentsFrom(vertex) -> vertices\n* AdjacentsTo(vertex) -> vertices\n* IncidentsFrom(vertex) -> edges\n* IncidentsTo(vertex) -> edges\n\nLet me know if now looks better.", "markup": "markdown", "html": "<p>The API has been clarified (hopefully) and extended:</p>\n<ul>\n<li>InDegree(vertex) -&gt; int</li>\n<li>OutDegree(vertex) -&gt; int</li>\n<li>AdjacentsFrom(vertex) -&gt; vertices</li>\n<li>AdjacentsTo(vertex) -&gt; vertices</li>\n<li>IncidentsFrom(vertex) -&gt; edges</li>\n<li>IncidentsTo(vertex) -&gt; edges</li>\n</ul>\n<p>Let me know if now looks better.</p>", "type": "rendered"}, "created_on": "2017-04-02T06:43:16.165320+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-04-02T06:43:52.517621+00:00", "type": "pullrequest_comment", "id": 34290372}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34290354.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34290354"}}, "parent": {"id": 34178160, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34178160.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34178160"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "I've been working on suggestions (1) and (2) proposed by @nkoenig. The code has been updated.", "markup": "markdown", "html": "<p>I've been working on suggestions (1) and (2) proposed by @nkoenig. The code has been updated.</p>", "type": "rendered"}, "created_on": "2017-04-02T06:40:06.442096+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-04-02T06:40:46.929007+00:00", "type": "pullrequest_comment", "id": 34290354}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "bf41af1ae3b6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/bf41af1ae3b6.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/bf41af1ae3b6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-04-02T06:33:34.712656+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34270552.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34270552"}}, "parent": {"id": 34202757, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34202757.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34202757"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Similar points have been made on pull request #141. After reading some of the feedback on this pull request though, I'm now thinking there are two kinds of users of the Graph class:\n\n1. Functions which will traverse the graph to do things like finding paths, cycles and searches (they would live in `GraphAlgorithm`)\n1. Functions which will query the graph for data\n\nFor case 1, I think it should be fine to share ownership of some aspects of the graph. The scope of these functions should have a short life and during that life, we don't want the graph to be suddenly pulled away from them. If that's the case, we could make functions that return shared pointers be private members, and make `GraphAlgorithm` something like a `friend`. The downside I can see is that downstream users wouldn't be able to write their own functions to traverse a graph, unless the API provided by `GraphAlgorithms` is enough.\n\nI think functions on case 2 could live longer. In this case, maybe they can keep an ID to the specific vertex or edge they're interested in, and use that ID to query the Graph later? And in case they want to traverse the graph, they can use that ID in conjunction with functions in `GraphAlgorithm`.\n\n", "markup": "markdown", "html": "<p>Similar points have been made on <a href=\"#!/ignitionrobotics/ign-math/pull-requests/141/graph\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #141</a>. After reading some of the feedback on this pull request though, I'm now thinking there are two kinds of users of the Graph class:</p>\n<ol>\n<li>Functions which will traverse the graph to do things like finding paths, cycles and searches (they would live in <code>GraphAlgorithm</code>)</li>\n<li>Functions which will query the graph for data</li>\n</ol>\n<p>For case 1, I think it should be fine to share ownership of some aspects of the graph. The scope of these functions should have a short life and during that life, we don't want the graph to be suddenly pulled away from them. If that's the case, we could make functions that return shared pointers be private members, and make <code>GraphAlgorithm</code> something like a <code>friend</code>. The downside I can see is that downstream users wouldn't be able to write their own functions to traverse a graph, unless the API provided by <code>GraphAlgorithms</code> is enough.</p>\n<p>I think functions on case 2 could live longer. In this case, maybe they can keep an ID to the specific vertex or edge they're interested in, and use that ID to query the Graph later? And in case they want to traverse the graph, they can use that ID in conjunction with functions in <code>GraphAlgorithm</code>.</p>", "type": "rendered"}, "created_on": "2017-03-31T18:23:55.318159+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2017-03-31T18:23:55.322023+00:00", "type": "pullrequest_comment", "id": 34270552}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"update": {"description": "Ready for design review. Take a look at the tests to see examples of usage.\r\n\r\nIn particular, I'm interested in the comments about the API and the overall design for supporting different types of edges. For now, this branch supports directed and undirected edges.\r\nI'm working on a few improvements that will come later:\r\n\r\n* Pluggable internal data representation (adjacency list, incidence list, adjacency matrix) using iterators. I consider this optional for now and it shouldn't change most of the API.\r\n* Dijkstra algorithm.\r\n* `Incidents()` should be faster. I can add an incidence list to the graph in addition to the adjacency list. This will make the graph to consume more memory but it will faster. I'll probably choose this option.", "title": "Graph generic", "destination": {"commit": {"hash": "826cd23c136c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/826cd23c136c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/826cd23c136c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_dead_end"}}, "reason": "", "source": {"commit": {"hash": "af02c91926c9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/af02c91926c9.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/af02c91926c9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "graph_generic"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2017-03-31T00:28:58.269448+00:00"}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34211037.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34211037"}}, "parent": {"id": 34210713, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34210713.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34210713"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "This is the generic `Graph` class, which could be directed, undirected, etc. `Incidents(v1)` returns the set of edges  that allow going from any vertex `v` to `v1`. In the case of an undirected graph, this function should return all edges that contain `v1`. In the case of a directed graph, it should return all edges, where the head (the destination) of each edge points to `v1`.\n\nThere's no function for returning the list of outgoing edges but we can create it.\n\n", "markup": "markdown", "html": "<p>This is the generic <code>Graph</code> class, which could be directed, undirected, etc. <code>Incidents(v1)</code> returns the set of edges  that allow going from any vertex <code>v</code> to <code>v1</code>. In the case of an undirected graph, this function should return all edges that contain <code>v1</code>. In the case of a directed graph, it should return all edges, where the head (the destination) of each edge points to <code>v1</code>.</p>\n<p>There's no function for returning the list of outgoing edges but we can create it.</p>", "type": "rendered"}, "created_on": "2017-03-31T00:13:11.495613+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-03-31T00:13:11.497979+00:00", "type": "pullrequest_comment", "id": 34211037}, "pull_request": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}}], "next": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/activity_ctx=ndRu9XS8Cg.json"}