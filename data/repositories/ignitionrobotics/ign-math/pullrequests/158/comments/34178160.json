{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34178160.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34178160"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "I've been playing with a slightly different approach [here](#!/ignitionrobotics/ign-math/branch/graph_generic_nate?dest=graph_generic#diff).\n\nThe main differences are:\n1. No shared pointers.\n2. Vertex and Edge data is stored consecutively in memory (*might* help with performance).\n3. Changed \"AddVertex\" function parameter list to put name first, followed by data, then id. This feels a bit more natural to me.\n\nI have left a bunch of parts commented out, and I ran out of time to implement directed vs undirected graphs. I think the difference can be handled in the `Edge` class without the need to subclass. It might even be possible to not required a Directed and Undirected graph subclass.\n\nAs usual, this is a suggestion that might be strewn with problems.", "markup": "markdown", "html": "<p>I've been playing with a slightly different approach <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/branch/graph_generic_nate?dest=graph_generic#diff\" rel=\"nofollow\">here</a>.</p>\n<p>The main differences are:\n1. No shared pointers.\n2. Vertex and Edge data is stored consecutively in memory (<em>might</em> help with performance).\n3. Changed \"AddVertex\" function parameter list to put name first, followed by data, then id. This feels a bit more natural to me.</p>\n<p>I have left a bunch of parts commented out, and I ran out of time to implement directed vs undirected graphs. I think the difference can be handled in the <code>Edge</code> class without the need to subclass. It might even be possible to not required a Directed and Undirected graph subclass.</p>\n<p>As usual, this is a suggestion that might be strewn with problems.</p>", "type": "rendered"}, "created_on": "2017-03-30T14:57:41.126027+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-03-30T14:57:41.129675+00:00", "type": "pullrequest_comment", "id": 34178160}