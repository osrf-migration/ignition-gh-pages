{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36526750.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:b6a2fd410631..826cd23c136c?path=include%2Fignition%2Fmath%2FGraphAlgorithms.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36526750"}}, "parent": {"id": 36524946, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/36524946.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-36524946"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "When I use a graph definition of\n```\n  UndirectedGraph<int, double> graph(\n  {\n    // Vertices.\n    {{0, \"A\", 0}, {1, \"B\", 1}, {2, \"C\", 2}, {3, \"D\", 3},\n     {4, \"E\", 4}, {5, \"F\", 5}, {6, \"G\", 6}},\n\n     // Edges.\n     {{{0, 1}, 2.0}, {{0, 2}, 3.0}, {{1, 3}, 4.0}, {{2, 3}, 2.0},\n      {{3, 4}, 3.0}, {{3, 5}, 4.0}, {{3, 6}, 2.0}}\n  });\n```\nIn the UndirectedGraph BFS test, vertices 3,4,5, and 6 are all processed twice. I checked this by adding print statements to the BFS algorithm each time a node is processed or added to the graph.", "markup": "markdown", "html": "<p>When I use a graph definition of</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"x\">  UndirectedGraph&lt;int, double&gt; graph(</span>\n<span class=\"x\">  {</span>\n<span class=\"x\">    // Vertices.</span>\n<span class=\"x\">    </span><span class=\"cp\">{{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"o\">,</span> <span class=\"m\">0</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">1</span><span class=\"o\">,</span> <span class=\"s2\">&quot;B&quot;</span><span class=\"o\">,</span> <span class=\"m\">1</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">2</span><span class=\"o\">,</span> <span class=\"s2\">&quot;C&quot;</span><span class=\"o\">,</span> <span class=\"m\">2</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span>\n     <span class=\"o\">{</span><span class=\"m\">4</span><span class=\"o\">,</span> <span class=\"s2\">&quot;E&quot;</span><span class=\"o\">,</span> <span class=\"m\">4</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">5</span><span class=\"o\">,</span> <span class=\"s2\">&quot;F&quot;</span><span class=\"o\">,</span> <span class=\"m\">5</span><span class=\"o\">},</span> <span class=\"o\">{</span><span class=\"m\">6</span><span class=\"o\">,</span> <span class=\"s2\">&quot;G&quot;</span><span class=\"o\">,</span> <span class=\"m\">6</span><span class=\"cp\">}}</span><span class=\"x\">,</span>\n\n<span class=\"x\">     // Edges.</span>\n<span class=\"x\">     </span><span class=\"cp\">{{</span><span class=\"o\">{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"m\">1</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">0</span><span class=\"o\">,</span> <span class=\"m\">2</span><span class=\"o\">},</span> <span class=\"m\">3.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">1</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span> <span class=\"m\">4.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">2</span><span class=\"o\">,</span> <span class=\"m\">3</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"o\">},</span>\n      <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">4</span><span class=\"o\">},</span> <span class=\"m\">3.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">5</span><span class=\"o\">},</span> <span class=\"m\">4.0</span><span class=\"o\">},</span> <span class=\"o\">{{</span><span class=\"m\">3</span><span class=\"o\">,</span> <span class=\"m\">6</span><span class=\"o\">},</span> <span class=\"m\">2.0</span><span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">  });</span>\n</pre></div>\n\n\n<p>In the UndirectedGraph BFS test, vertices 3,4,5, and 6 are all processed twice. I checked this by adding print statements to the BFS algorithm each time a node is processed or added to the graph.</p>", "type": "rendered"}, "created_on": "2017-05-09T23:56:00.014119+00:00", "user": {"display_name": "Adam Allevato", "uuid": "{7a39698c-2ebf-4713-b553-7a299c02fbae}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D"}, "html": {"href": "https://bitbucket.org/%7B7a39698c-2ebf-4713-b553-7a299c02fbae%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:9cc2f72a-500b-4533-b881-68a2a8d47847/54e9a6bd-b12a-4280-a72a-5d6b984b7e3c/128"}}, "nickname": "adam_allevato", "type": "user", "account_id": "557058:9cc2f72a-500b-4533-b881-68a2a8d47847"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/math/GraphAlgorithms.hh"}, "updated_on": "2017-05-09T23:56:00.070752+00:00", "type": "pullrequest_comment", "id": 36526750}