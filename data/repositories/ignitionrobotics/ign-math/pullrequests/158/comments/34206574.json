{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34206574.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34206574"}}, "parent": {"id": 34206105, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158/comments/34206105.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158/_/diff#comment-34206105"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/158"}}, "title": "Graph generic"}, "content": {"raw": "Instead of living in the Graph, what do you think about graph algorithms being functions that accept a Graph as a parameter? I think a smaller graph class would be easier to maintain. ", "markup": "markdown", "html": "<p>Instead of living in the Graph, what do you think about graph algorithms being functions that accept a Graph as a parameter? I think a smaller graph class would be easier to maintain. </p>", "type": "rendered"}, "created_on": "2017-03-30T22:01:27.860776+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-03-30T22:01:27.862980+00:00", "type": "pullrequest_comment", "id": 34206574}