{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/122/comments/21828651.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ccrean/ign-math:811e02fc8ebe..3c1a75cd450a?path=src%2FQuaternion_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/122/_/diff#comment-21828651"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 122, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/122.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/122"}}, "title": "Add tests for Euler angle singularities"}, "content": {"raw": "Could you also move the bracket to the next line to keep the style consistent with the rest of the code?\n\n```\n#!c++\n\nfor (double roll = 0; roll < 2 * IGN_PI + 0.1; roll += IGN_PI_4)\n{\n   for (double yaw = 0; yaw < 2 * IGN_PI + 0.1; yaw += IGN_PI_4)\n   {\n     math::Quaterniond q_orig(roll, IGN_PI_2, yaw);\n     math::Quaterniond q_derived(q_orig.Euler());\n     EXPECT_EQ(q_orig, q_derived);\n   }\n}\n```\n", "markup": "markdown", "html": "<p>Could you also move the bracket to the next line to keep the style consistent with the rest of the code?</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">roll</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">roll</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">IGN_PI</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span><span class=\"p\">;</span> <span class=\"n\">roll</span> <span class=\"o\">+=</span> <span class=\"n\">IGN_PI_4</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n   <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">yaw</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">yaw</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">IGN_PI</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span><span class=\"p\">;</span> <span class=\"n\">yaw</span> <span class=\"o\">+=</span> <span class=\"n\">IGN_PI_4</span><span class=\"p\">)</span>\n   <span class=\"p\">{</span>\n     <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Quaterniond</span> <span class=\"n\">q_orig</span><span class=\"p\">(</span><span class=\"n\">roll</span><span class=\"p\">,</span> <span class=\"n\">IGN_PI_2</span><span class=\"p\">,</span> <span class=\"n\">yaw</span><span class=\"p\">);</span>\n     <span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Quaterniond</span> <span class=\"n\">q_derived</span><span class=\"p\">(</span><span class=\"n\">q_orig</span><span class=\"p\">.</span><span class=\"n\">Euler</span><span class=\"p\">());</span>\n     <span class=\"n\">EXPECT_EQ</span><span class=\"p\">(</span><span class=\"n\">q_orig</span><span class=\"p\">,</span> <span class=\"n\">q_derived</span><span class=\"p\">);</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-08-02T22:46:49.064118+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 75, "from": null, "outdated": true, "path": "src/Quaternion_TEST.cc"}, "updated_on": "2016-08-02T22:46:49.066020+00:00", "type": "pullrequest_comment", "id": 21828651}