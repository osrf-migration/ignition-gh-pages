{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/342/comments/133120642.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:84089adba610..967f3fd478ef?path=src%2FGaussMarkovProcess_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/342/_/diff#comment-133120642"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 342, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/342.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/342"}}, "title": "Added GaussMarkovProcess"}, "content": {"raw": "I don\u2019t think that this test will reliably pass. It only took me two tries to get it to fail:\n\n```\n$ ./bin/UNIT_GaussMarkovProcess_TEST\nRunning main() from gtest_main.cc\n[==========] Running 3 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 3 tests from GaussMarkovProcessTest\n[ RUN      ] GaussMarkovProcessTest.DefaultConstructor\n[       OK ] GaussMarkovProcessTest.DefaultConstructor (0 ms)\n[ RUN      ] GaussMarkovProcessTest.Update\n[       OK ] GaussMarkovProcessTest.Update (1 ms)\n[ RUN      ] GaussMarkovProcessTest.Noise\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: (value) > (-10), actual: -10.5258 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: (value) > (-10), actual: -10.2249 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: (value) > (-10), actual: -10.6587 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: (value) > (-10), actual: -10.5162 vs -10\n[  FAILED  ] GaussMarkovProcessTest.Noise (0 ms)\n[----------] 3 tests from GaussMarkovProcessTest (1 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test case ran. (1 ms total)\n[  PASSED  ] 2 tests.\n[  FAILED  ] 1 test, listed below:\n[  FAILED  ] GaussMarkovProcessTest.Noise\n\n 1 FAILED TEST\n```\n\nYou could widen the acceptance band to make it fail less often, but eventually you\u2019ll get an unlikely sample that violates any threshold that you pick. I\u2019ll suggest an alternative in a PR.", "markup": "markdown", "html": "<p>I don\u2019t think that this test will reliably pass. It only took me two tries to get it to fail:</p>\n<div class=\"codehilite\"><pre><span></span>$ ./bin/UNIT_GaussMarkovProcess_TEST\nRunning main<span class=\"o\">()</span> from gtest_main.cc\n<span class=\"o\">[==========]</span> Running <span class=\"m\">3</span> tests from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment set-up.\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">3</span> tests from GaussMarkovProcessTest\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> GaussMarkovProcessTest.DefaultConstructor\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> GaussMarkovProcessTest.DefaultConstructor <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> GaussMarkovProcessTest.Update\n<span class=\"o\">[</span>       OK <span class=\"o\">]</span> GaussMarkovProcessTest.Update <span class=\"o\">(</span><span class=\"m\">1</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span> RUN      <span class=\"o\">]</span> GaussMarkovProcessTest.Noise\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: <span class=\"o\">(</span>value<span class=\"o\">)</span> &gt; <span class=\"o\">(</span>-10<span class=\"o\">)</span>, actual: -10.5258 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: <span class=\"o\">(</span>value<span class=\"o\">)</span> &gt; <span class=\"o\">(</span>-10<span class=\"o\">)</span>, actual: -10.2249 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: <span class=\"o\">(</span>value<span class=\"o\">)</span> &gt; <span class=\"o\">(</span>-10<span class=\"o\">)</span>, actual: -10.6587 vs -10\n/home/gerkey/code/rse/ign/ign-math/src/GaussMarkovProcess_TEST.cc:91: Failure\nExpected: <span class=\"o\">(</span>value<span class=\"o\">)</span> &gt; <span class=\"o\">(</span>-10<span class=\"o\">)</span>, actual: -10.5162 vs -10\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> GaussMarkovProcessTest.Noise <span class=\"o\">(</span><span class=\"m\">0</span> ms<span class=\"o\">)</span>\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> <span class=\"m\">3</span> tests from GaussMarkovProcessTest <span class=\"o\">(</span><span class=\"m\">1</span> ms total<span class=\"o\">)</span>\n\n<span class=\"o\">[</span>----------<span class=\"o\">]</span> Global <span class=\"nb\">test</span> environment tear-down\n<span class=\"o\">[==========]</span> <span class=\"m\">3</span> tests from <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span> ran. <span class=\"o\">(</span><span class=\"m\">1</span> ms total<span class=\"o\">)</span>\n<span class=\"o\">[</span>  PASSED  <span class=\"o\">]</span> <span class=\"m\">2</span> tests.\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> <span class=\"m\">1</span> test, listed below:\n<span class=\"o\">[</span>  FAILED  <span class=\"o\">]</span> GaussMarkovProcessTest.Noise\n\n <span class=\"m\">1</span> FAILED TEST\n</pre></div>\n\n\n<p>You could widen the acceptance band to make it fail less often, but eventually you\u2019ll get an unlikely sample that violates any threshold that you pick. I\u2019ll suggest an alternative in a PR.</p>", "type": "rendered"}, "created_on": "2020-01-24T22:21:45.376985+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "inline": {"to": 91, "from": null, "outdated": true, "path": "src/GaussMarkovProcess_TEST.cc"}, "updated_on": "2020-01-24T22:21:45.385735+00:00", "type": "pullrequest_comment", "id": 133120642}