{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/254/comments/62764593.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:1c4571d9ed4c..74311b863e67?path=include%2Fignition%2Fmath%2Fgraph%2FGraph.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/254/_/diff#comment-62764593"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 254, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/254.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/254"}}, "title": "Added function to get an edge based on two vertices"}, "content": {"raw": "It might be more efficient to use the adjacency list than the list of edges. This way the search will always contain edges where `sourceId` is present. E.g.:\n\n\n```\n#!c++\n\nfor (auto const &edgePair : this->IncidentsFrom(_sourceId))\n{\n   const auto &edge = edgePair.second.get();\n   if (edge.From(_sourceId) == _destId)\n     return edge;\n}\n```\n", "markup": "markdown", "html": "<p>It might be more efficient to use the adjacency list than the list of edges. This way the search will always contain edges where <code>sourceId</code> is present. E.g.:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"k\">const</span> <span class=\"o\">&amp;</span><span class=\"nl\">edgePair</span> <span class=\"p\">:</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">IncidentsFrom</span><span class=\"p\">(</span><span class=\"n\">_sourceId</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n   <span class=\"k\">const</span> <span class=\"k\">auto</span> <span class=\"o\">&amp;</span><span class=\"n\">edge</span> <span class=\"o\">=</span> <span class=\"n\">edgePair</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">();</span>\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">.</span><span class=\"n\">From</span><span class=\"p\">(</span><span class=\"n\">_sourceId</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">_destId</span><span class=\"p\">)</span>\n     <span class=\"k\">return</span> <span class=\"n\">edge</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-26T19:41:26.783839+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 643, "from": null, "outdated": true, "path": "include/ignition/math/graph/Graph.hh"}, "updated_on": "2018-04-26T19:41:48.156901+00:00", "type": "pullrequest_comment", "id": 62764593}