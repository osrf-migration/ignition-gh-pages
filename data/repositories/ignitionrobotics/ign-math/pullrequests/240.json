{"rendered": {"reason": {"raw": "Refactoring the code a bit.", "markup": "markdown", "html": "<p>Refactoring the code a bit.</p>", "type": "rendered"}, "description": {"raw": "Mostly a copy of ignition::common::MaterialDensity. The version in common used common's EnumIface class, which I didn't want to port over.\r\n\r\nInstead, this version of MaterialDensity has added a `Material` class, and moved the material type enum outside of the `MaterialDensity` class.\r\n\r\nThe API is now a bit easier to use:\r\n\r\n## In Common\r\n\r\n```\r\nMaterialDensity::Type material;\r\n double density;\r\n std::tie(material, density) = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << material << \"] Density[\" << density << \"]\\n\";\r\n```\r\n\r\n## In Math:\r\n\r\n```\r\nMaterial mat = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << mat.type << \"] Density[\" << mat.density << \"]\\n\";\r\n```", "markup": "markdown", "html": "<p>Mostly a copy of ignition::common::MaterialDensity. The version in common used common's EnumIface class, which I didn't want to port over.</p>\n<p>Instead, this version of MaterialDensity has added a <code>Material</code> class, and moved the material type enum outside of the <code>MaterialDensity</code> class.</p>\n<p>The API is now a bit easier to use:</p>\n<h2 id=\"markdown-header-in-common\">In Common</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Type</span> <span class=\"nt\">material</span><span class=\"o\">;</span>\n <span class=\"nt\">double</span> <span class=\"nt\">density</span><span class=\"o\">;</span>\n <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">material</span><span class=\"o\">,</span> <span class=\"nt\">density</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Nearest</span><span class=\"o\">(</span><span class=\"nt\">19300</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Mat Type</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; material &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\"> Density</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; density &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<h2 id=\"markdown-header-in-math\">In Math:</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">Material</span> <span class=\"nt\">mat</span> <span class=\"o\">=</span> <span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Nearest</span><span class=\"o\">(</span><span class=\"nt\">19300</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Mat Type</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; mat.type &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\"> Density</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; mat.density &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Adding material density", "markup": "markdown", "html": "<p>Adding material density</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Mostly a copy of ignition::common::MaterialDensity. The version in common used common's EnumIface class, which I didn't want to port over.\r\n\r\nInstead, this version of MaterialDensity has added a `Material` class, and moved the material type enum outside of the `MaterialDensity` class.\r\n\r\nThe API is now a bit easier to use:\r\n\r\n## In Common\r\n\r\n```\r\nMaterialDensity::Type material;\r\n double density;\r\n std::tie(material, density) = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << material << \"] Density[\" << density << \"]\\n\";\r\n```\r\n\r\n## In Math:\r\n\r\n```\r\nMaterial mat = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << mat.type << \"] Density[\" << mat.density << \"]\\n\";\r\n```", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/240/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diffstat/ignitionrobotics/ign-math:72a04f634f8d%0Dbb27f018993c?from_pullrequest_id=240"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/240/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/240.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/240/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/240/merge"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/240"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/240/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:72a04f634f8d%0Dbb27f018993c?from_pullrequest_id=240"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/240/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/240/statuses_page=1.json"}}, "title": "Adding material density", "close_source_branch": false, "reviewers": [], "id": 240, "destination": {"commit": {"hash": "bb27f018993c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/bb27f018993c.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/bb27f018993c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "ign-math4"}}, "created_on": "2018-04-03T19:51:12.852491+00:00", "summary": {"raw": "Mostly a copy of ignition::common::MaterialDensity. The version in common used common's EnumIface class, which I didn't want to port over.\r\n\r\nInstead, this version of MaterialDensity has added a `Material` class, and moved the material type enum outside of the `MaterialDensity` class.\r\n\r\nThe API is now a bit easier to use:\r\n\r\n## In Common\r\n\r\n```\r\nMaterialDensity::Type material;\r\n double density;\r\n std::tie(material, density) = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << material << \"] Density[\" << density << \"]\\n\";\r\n```\r\n\r\n## In Math:\r\n\r\n```\r\nMaterial mat = MaterialDensity::Nearest(19300.0);\r\nstd::cout << \"Mat Type[\" << mat.type << \"] Density[\" << mat.density << \"]\\n\";\r\n```", "markup": "markdown", "html": "<p>Mostly a copy of ignition::common::MaterialDensity. The version in common used common's EnumIface class, which I didn't want to port over.</p>\n<p>Instead, this version of MaterialDensity has added a <code>Material</code> class, and moved the material type enum outside of the <code>MaterialDensity</code> class.</p>\n<p>The API is now a bit easier to use:</p>\n<h2 id=\"markdown-header-in-common\">In Common</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Type</span> <span class=\"nt\">material</span><span class=\"o\">;</span>\n <span class=\"nt\">double</span> <span class=\"nt\">density</span><span class=\"o\">;</span>\n <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">material</span><span class=\"o\">,</span> <span class=\"nt\">density</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Nearest</span><span class=\"o\">(</span><span class=\"nt\">19300</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Mat Type</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; material &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\"> Density</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; density &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<h2 id=\"markdown-header-in-math\">In Math:</h2>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">Material</span> <span class=\"nt\">mat</span> <span class=\"o\">=</span> <span class=\"nt\">MaterialDensity</span><span class=\"p\">::</span><span class=\"nd\">Nearest</span><span class=\"o\">(</span><span class=\"nt\">19300</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">);</span>\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Mat Type</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; mat.type &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\"> Density</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; mat.density &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"o\">;</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "72a04f634f8d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/72a04f634f8d.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/72a04f634f8d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "material_density"}}, "comment_count": 1, "state": "DECLINED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-04-03T20:20:21.741165+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}], "reason": "Refactoring the code a bit.", "updated_on": "2018-04-03T22:09:36.550638+00:00", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}