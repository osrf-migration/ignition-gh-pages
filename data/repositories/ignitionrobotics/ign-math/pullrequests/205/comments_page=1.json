{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48475495.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48475495"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "I'm surprised this is actually being used :sweat_smile: I tend to convert `Pose3d` to `Matrix4d` before performing operations just so I feel comfortable with what's going on :slight_smile: Issue #60 talks about the positive and negative operators, but I think multiplication is equally confusing given that the documentation doesn't explain much.", "markup": "markdown", "html": "<p>I'm surprised this is actually being used <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f605.png\" alt=\"\ud83d\ude05\" title=\":sweat_smile:\" data-emoji-short-name=\":sweat_smile:\" /> I tend to convert <code>Pose3d</code> to <code>Matrix4d</code> before performing operations just so I feel comfortable with what's going on <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> Issue <a href=\"#!/ignitionrobotics/ign-math/issues/60/pose-addition-and-subtraction-needs-work\" rel=\"nofollow\" title=\"Pose addition and subtraction needs work [gazebo issue 216]\" class=\"ap-connect-link\">#60</a> talks about the positive and negative operators, but I think multiplication is equally confusing given that the documentation doesn't explain much.</p>", "type": "rendered"}, "created_on": "2017-10-31T21:42:16.714143+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-10-31T21:42:16.717230+00:00", "type": "pullrequest_comment", "id": 48475495}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48475929.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48475929"}}, "parent": {"id": 48475495, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48475495.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48475495"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "My honest (and rather strong) opinion on the addition and subtraction operators for `Pose3` is that they should be completely removed. For one thing, they're redundant with the existing multiplication and `.Inverse()` features, so they're not really necessary. But more importantly, they don't correspond to any *actual* conventional \"addition\" or \"subtraction\" operator that may be performed on homogeneous transformation matrices. The operators also lack commutativity, which is a property usually associated with addition, and I think that could lead to serious bugs.", "markup": "markdown", "html": "<p>My honest (and rather strong) opinion on the addition and subtraction operators for <code>Pose3</code> is that they should be completely removed. For one thing, they're redundant with the existing multiplication and <code>.Inverse()</code> features, so they're not really necessary. But more importantly, they don't correspond to any <em>actual</em> conventional \"addition\" or \"subtraction\" operator that may be performed on homogeneous transformation matrices. The operators also lack commutativity, which is a property usually associated with addition, and I think that could lead to serious bugs.</p>", "type": "rendered"}, "created_on": "2017-10-31T21:51:23.736713+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-10-31T21:51:23.739107+00:00", "type": "pullrequest_comment", "id": 48475929}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476448.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476448"}}, "parent": {"id": 48475929, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48475929.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48475929"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "After looking at the discussion on Gazebo, my opinion aligns completely with [what Jonathon Bohren posted](https://bitbucket.org/osrf/gazebo/issues/216/pose-addition-and-subtraction-needs-work#comment-25809292).", "markup": "markdown", "html": "<p>After looking at the discussion on Gazebo, my opinion aligns completely with <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/216/pose-addition-and-subtraction-needs-work#comment-25809292\" rel=\"nofollow\">what Jonathon Bohren posted</a>.</p>", "type": "rendered"}, "created_on": "2017-10-31T22:02:38.243656+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-10-31T22:02:38.246026+00:00", "type": "pullrequest_comment", "id": 48476448}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476269.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476269"}}, "parent": {"id": 48475495, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48475495.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48475495"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "Regarding converting to `Matrix4` and then multiplying, if you have the knowledge ahead of time that both objects are homogeneous transformation matrices, you can save yourself some floating point operations, because you can do `p1 + R1*p2` and then `R1*R2` instead of `M1*M2`. Granted, you only save something like 31 floating point operations out of 112 (~27% savings), but I'll take what I can get, especially when it's such a crucial and frequently used operation.", "markup": "markdown", "html": "<p>Regarding converting to <code>Matrix4</code> and then multiplying, if you have the knowledge ahead of time that both objects are homogeneous transformation matrices, you can save yourself some floating point operations, because you can do <code>p1 + R1*p2</code> and then <code>R1*R2</code> instead of <code>M1*M2</code>. Granted, you only save something like 31 floating point operations out of 112 (~27% savings), but I'll take what I can get, especially when it's such a crucial and frequently used operation.</p>", "type": "rendered"}, "created_on": "2017-10-31T21:58:44.669125+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-10-31T21:58:44.672289+00:00", "type": "pullrequest_comment", "id": 48476269}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476458.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476458"}}, "parent": {"id": 48476269, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476269.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476269"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "Yeah good points, converting back and forth is definitely costly", "markup": "markdown", "html": "<p>Yeah good points, converting back and forth is definitely costly</p>", "type": "rendered"}, "created_on": "2017-10-31T22:02:52.391723+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-10-31T22:02:52.393994+00:00", "type": "pullrequest_comment", "id": 48476458}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476418.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476418"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "The [latest Windows build](https://build.osrfoundation.org/job/ignition_math-ci-pr_any-windows7-amd64/335/) is :blue_circle: ", "markup": "markdown", "html": "<p>The <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_math-ci-pr_any-windows7-amd64/335/\" rel=\"nofollow\">latest Windows build</a> is <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f535.png\" alt=\"\ud83d\udd35\" title=\":blue_circle:\" data-emoji-short-name=\":blue_circle:\" /> </p>", "type": "rendered"}, "created_on": "2017-10-31T22:01:57.212125+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-10-31T22:01:57.214482+00:00", "type": "pullrequest_comment", "id": 48476418}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476984.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476984"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "Oh no, after reading [Jonathon Bohren's comment](https://bitbucket.org/osrf/gazebo/issues/216/pose-addition-and-subtraction-needs-work#comment-25809292) more thoroughly, I see that our multiplication operator is .... well it doesn't represent any conventional transform multiplication as far as I can tell. ~~The translation components seem fine~~ (the translation components might also be wonky, actually), but the rotation components are being multiplied backwards from the mathematical convention.\n\nI suppose I would've discovered this in the unit tests that I was about to write for `ignition-physics`, although I probably would have been bewildered, thinking that I had implemented something wrong on the physics side of things. I think this is a pretty major issue that needs to be addressed.", "markup": "markdown", "html": "<p>Oh no, after reading <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issues/216/pose-addition-and-subtraction-needs-work#comment-25809292\" rel=\"nofollow\">Jonathon Bohren's comment</a> more thoroughly, I see that our multiplication operator is .... well it doesn't represent any conventional transform multiplication as far as I can tell. <del>The translation components seem fine</del> (the translation components might also be wonky, actually), but the rotation components are being multiplied backwards from the mathematical convention.</p>\n<p>I suppose I would've discovered this in the unit tests that I was about to write for <code>ignition-physics</code>, although I probably would have been bewildered, thinking that I had implemented something wrong on the physics side of things. I think this is a pretty major issue that needs to be addressed.</p>", "type": "rendered"}, "created_on": "2017-10-31T22:13:18.488766+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-10-31T22:14:48.809182+00:00", "type": "pullrequest_comment", "id": 48476984}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48477208.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48477208"}}, "parent": {"id": 48476984, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48476984.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48476984"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "That's what I was hoping you were aware of. Definitely agree we should at the very minimum document what the operator is currently doing. It also looks like the operator has no unit test, so it's probably covered right now because it is used by other classes.", "markup": "markdown", "html": "<p>That's what I was hoping you were aware of. Definitely agree we should at the very minimum document what the operator is currently doing. It also looks like the operator has no unit test, so it's probably covered right now because it is used by other classes.</p>", "type": "rendered"}, "created_on": "2017-10-31T22:17:56.159146+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-10-31T22:17:56.162580+00:00", "type": "pullrequest_comment", "id": 48477208}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48482192.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48482192"}}, "parent": {"id": 48477208, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48477208.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48477208"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "After carefully going over the math of `operator*`, I've determined with certainty that it is effectively flipping its arguments around for no discernible reason.\n\nIn other words, the result of `T1 * T2` should really belong to `T2 * T1`.\n\nThis is seriously problematic, and I don't think documenting this as the intended behavior is appropriate. I think it's more likely that anywhere this operator is already getting used is unknowingly bugged, and anywhere it gets used in the future will become bugged.\n\nThis makes me further convinced that we should be urgently adopting a third party linear algebra library like `Eigen` or `Blaze` instead of dealing with the development and maintenance of our own (`ign-math` would serve a more focused role, providing utility classes like splines and frustrums).", "markup": "markdown", "html": "<p>After carefully going over the math of <code>operator*</code>, I've determined with certainty that it is effectively flipping its arguments around for no discernible reason.</p>\n<p>In other words, the result of <code>T1 * T2</code> should really belong to <code>T2 * T1</code>.</p>\n<p>This is seriously problematic, and I don't think documenting this as the intended behavior is appropriate. I think it's more likely that anywhere this operator is already getting used is unknowingly bugged, and anywhere it gets used in the future will become bugged.</p>\n<p>This makes me further convinced that we should be urgently adopting a third party linear algebra library like <code>Eigen</code> or <code>Blaze</code> instead of dealing with the development and maintenance of our own (<code>ign-math</code> would serve a more focused role, providing utility classes like splines and frustrums).</p>", "type": "rendered"}, "created_on": "2017-11-01T00:27:06.319053+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-01T00:27:06.321991+00:00", "type": "pullrequest_comment", "id": 48482192}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48482315.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48482315"}}, "parent": {"id": 48477208, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48477208.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48477208"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "Also, regarding test coverage, I just tried flipping the implementation so that it produces the expected result, and all of the `ign-math` tests passed, so it isn't currently being covered in `ign-math` tests.\n\nI'm going to try to build and run the gazebo test suite against the corrected version of `ign-math`, but that will require a recompilation of gazebo, so it may take a while to get the results.", "markup": "markdown", "html": "<p>Also, regarding test coverage, I just tried flipping the implementation so that it produces the expected result, and all of the <code>ign-math</code> tests passed, so it isn't currently being covered in <code>ign-math</code> tests.</p>\n<p>I'm going to try to build and run the gazebo test suite against the corrected version of <code>ign-math</code>, but that will require a recompilation of gazebo, so it may take a while to get the results.</p>", "type": "rendered"}, "created_on": "2017-11-01T00:31:53.441864+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-01T01:01:47.424940+00:00", "type": "pullrequest_comment", "id": 48482315}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48482550.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48482550"}}, "parent": {"id": 48482315, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48482315.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48482315"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "Interesting, the coverage tool is not marking the line as hit, but it doesn't mark it as not-hit either:\n\nhttps://codecov.io/bb/ignitionrobotics/ign-math/src/default/include/ignition/math/Pose3.hh#L215\n\nWhich means.... Our real coverage is probably much lower than 99% :confused: ", "markup": "markdown", "html": "<p>Interesting, the coverage tool is not marking the line as hit, but it doesn't mark it as not-hit either:</p>\n<p><a href=\"https://codecov.io/bb/ignitionrobotics/ign-math/src/default/include/ignition/math/Pose3.hh#L215\" rel=\"nofollow\" class=\"ap-connect-link\">https://codecov.io/bb/ignitionrobotics/ign-math/src/default/include/ignition/math/Pose3.hh#L215</a></p>\n<p>Which means.... Our real coverage is probably much lower than 99% <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f615.png\" alt=\"\ud83d\ude15\" title=\":confused:\" data-emoji-short-name=\":confused:\" /> </p>", "type": "rendered"}, "created_on": "2017-11-01T00:39:58.684766+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2017-11-01T00:39:58.687880+00:00", "type": "pullrequest_comment", "id": 48482550}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48483526.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48483526"}}, "parent": {"id": 48482550, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48482550.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48482550"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "I'm still waiting for Gazebo to recompile, but in the meantime I've been looking over the usage of `Pose3` in Gazebo, and my observations suggest that it's mostly just being used as a data storage class to move transform information around between different libraries. It doesn't seem like mathematical operations are performed using it, almost ever. On the rare occasion that it is used for any math operations, it's usually just the `Rot()` and `Pos()` components of the `Pose3` that actually get used. The member operators of `Pose3` seem untouched outside of the unit tests (although I admit that I could have missed some uses, since I didn't want to spend the time to comb through the code too rigorously).", "markup": "markdown", "html": "<p>I'm still waiting for Gazebo to recompile, but in the meantime I've been looking over the usage of <code>Pose3</code> in Gazebo, and my observations suggest that it's mostly just being used as a data storage class to move transform information around between different libraries. It doesn't seem like mathematical operations are performed using it, almost ever. On the rare occasion that it is used for any math operations, it's usually just the <code>Rot()</code> and <code>Pos()</code> components of the <code>Pose3</code> that actually get used. The member operators of <code>Pose3</code> seem untouched outside of the unit tests (although I admit that I could have missed some uses, since I didn't want to spend the time to comb through the code too rigorously).</p>", "type": "rendered"}, "created_on": "2017-11-01T01:16:54.779827+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-11-01T01:16:54.782656+00:00", "type": "pullrequest_comment", "id": 48483526}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48561556.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48561556"}}, "parent": {"id": 48483526, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205/comments/48483526.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205/_/diff#comment-48483526"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 205, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/205.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/205"}}, "title": "Fixing const-correctness for operator* of Pose3"}, "content": {"raw": "In my experience, the `+` operator for pose is most often used:\n\n* https://bitbucket.org/osrf/gazebo/src/f8f238d19f916106008e5e287b584dcc46ba7297/gazebo/physics/Entity.cc?at=default&fileviewer=file-view-default#Entity.cc-104:105", "markup": "markdown", "html": "<p>In my experience, the <code>+</code> operator for pose is most often used:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/osrf/gazebo/src/f8f238d19f916106008e5e287b584dcc46ba7297/gazebo/physics/Entity.cc?at=default&amp;fileviewer=file-view-default#Entity.cc-104:105\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/src/f8f238d19f916106008e5e287b584dcc46ba7297/gazebo/physics/Entity.cc?at=default&amp;fileviewer=file-view-default#Entity.cc-104:105</a></li>\n</ul>", "type": "rendered"}, "created_on": "2017-11-01T19:58:17.248002+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2017-11-01T19:58:17.251145+00:00", "type": "pullrequest_comment", "id": 48561556}], "page": 1, "size": 13}