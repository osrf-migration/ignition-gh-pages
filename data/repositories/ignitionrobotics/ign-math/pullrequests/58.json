{"rendered": {"description": {"raw": "When building on i686 without SSE, the ign equality helper uses the extra\r\nprecision within the x87 floating point module when comparing the difference\r\nbetween the two arguments to the epsilon value.  This causes the\r\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\r\n\r\n```\r\n13/44 Testing: UNIT_Line2_TEST\r\n13/44 Test: UNIT_Line2_TEST\r\nCommand: \"/builddir/build/BUILD/ignition-math2-2.2.2/build/src/UNIT_Line2_TEST\" \"--gtest_output=xml:/builddir/build/BUILD/ignition-math2-2.2.2/build/test_results/UNIT_Line2_TEST.xml\"\r\nDirectory: /builddir/build/BUILD/ignition-math2-2.2.2/build/src\r\n\"UNIT_Line2_TEST\" start time: Aug 21 00:43 UTC\r\nOutput:\r\n----------------------------------------------------------\r\nRunning main() from gtest_main.cc\r\n[==========] Running 9 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 9 tests from Line2Test\r\n[ RUN      ] Line2Test.Constructor\r\n[       OK ] Line2Test.Constructor (0 ms)\r\n[ RUN      ] Line2Test.Length\r\n[       OK ] Line2Test.Length (0 ms)\r\n[ RUN      ] Line2Test.Slope\r\n[       OK ] Line2Test.Slope (0 ms)\r\n[ RUN      ] Line2Test.ParallelLine\r\n[       OK ] Line2Test.ParallelLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearLine\r\n[       OK ] Line2Test.CollinearLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearPoint\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:152: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:164: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n[  FAILED  ] Line2Test.CollinearPoint (0 ms)\r\n[ RUN      ] Line2Test.Intersect\r\n[       OK ] Line2Test.Intersect (0 ms)\r\n[ RUN      ] Line2Test.Equality\r\n[       OK ] Line2Test.Equality (0 ms)\r\n[ RUN      ] Line2Test.OperatorStreamOut\r\n[       OK ] Line2Test.OperatorStreamOut (0 ms)\r\n[----------] 9 tests from Line2Test (0 ms total)\r\n[----------] Global test environment tear-down\r\n[==========] 9 tests from 1 test case ran. (0 ms total)\r\n[  PASSED  ] 8 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] Line2Test.CollinearPoint\r\n 1 FAILED TEST\r\n<end of output>\r\nTest time =   0.00 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n\"UNIT_Line2_TEST\" end time: Aug 21 00:43 UTC\r\n\"UNIT_Line2_TEST\" time elapsed: 00:00:00\r\n----------------------------------------------------------\r\n```\r\n\r\nThis patch creates an intermediate value for the difference between the two\r\narguments to be compared, which gets rid of the extra x87 precision. The\r\nresulting comparison is then performed without the extra precision, allowing\r\nthe test to pass.\r\n\r\nThis test was performed against ignition-math2-2.2.2\r\n\r\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "markup": "markdown", "html": "<p>When building on i686 without SSE, the ign equality helper uses the extra\nprecision within the x87 floating point module when comparing the difference\nbetween the two arguments to the epsilon value.  This causes the\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001</p>\n<div class=\"codehilite\"><pre><span></span>13/44 Testing: UNIT_Line2_TEST\n13/44 Test: UNIT_Line2_TEST\nCommand: &quot;/builddir/build/BUILD/ignition-math2-2.2.2/build/src/UNIT_Line2_TEST&quot; &quot;--gtest_output=xml:/builddir/build/BUILD/ignition-math2-2.2.2/build/test_results/UNIT_Line2_TEST.xml&quot;\nDirectory: /builddir/build/BUILD/ignition-math2-2.2.2/build/src\n&quot;UNIT_Line2_TEST&quot; start time: Aug 21 00:43 UTC\nOutput:\n----------------------------------------------------------\nRunning main() from gtest_main.cc\n[==========] Running 9 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 9 tests from Line2Test\n[ RUN      ] Line2Test.Constructor\n[       OK ] Line2Test.Constructor (0 ms)\n[ RUN      ] Line2Test.Length\n[       OK ] Line2Test.Length (0 ms)\n[ RUN      ] Line2Test.Slope\n[       OK ] Line2Test.Slope (0 ms)\n[ RUN      ] Line2Test.ParallelLine\n[       OK ] Line2Test.ParallelLine (0 ms)\n[ RUN      ] Line2Test.CollinearLine\n[       OK ] Line2Test.CollinearLine (0 ms)\n[ RUN      ] Line2Test.CollinearPoint\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:152: Failure\nValue of: lineA.Collinear(pt, 1e-4)\n  Actual: false\nExpected: true\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:164: Failure\nValue of: lineA.Collinear(pt, 1e-4)\n  Actual: false\nExpected: true\n[  FAILED  ] Line2Test.CollinearPoint (0 ms)\n[ RUN      ] Line2Test.Intersect\n[       OK ] Line2Test.Intersect (0 ms)\n[ RUN      ] Line2Test.Equality\n[       OK ] Line2Test.Equality (0 ms)\n[ RUN      ] Line2Test.OperatorStreamOut\n[       OK ] Line2Test.OperatorStreamOut (0 ms)\n[----------] 9 tests from Line2Test (0 ms total)\n[----------] Global test environment tear-down\n[==========] 9 tests from 1 test case ran. (0 ms total)\n[  PASSED  ] 8 tests.\n[  FAILED  ] 1 test, listed below:\n[  FAILED  ] Line2Test.CollinearPoint\n 1 FAILED TEST\n&lt;end of output&gt;\nTest time =   0.00 sec\n----------------------------------------------------------\nTest Failed.\n&quot;UNIT_Line2_TEST&quot; end time: Aug 21 00:43 UTC\n&quot;UNIT_Line2_TEST&quot; time elapsed: 00:00:00\n----------------------------------------------------------\n</pre></div>\n\n\n<p>This patch creates an intermediate value for the difference between the two\narguments to be compared, which gets rid of the extra x87 precision. The\nresulting comparison is then performed without the extra precision, allowing\nthe test to pass.</p>\n<p>This test was performed against ignition-math2-2.2.2</p>\n<p>See <a href=\"http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail</a> for a discussion of x87 equality pitfalls.</p>", "type": "rendered"}, "title": {"raw": "Change equality helper to work with 387 fp unit", "markup": "markdown", "html": "<p>Change equality helper to work with 387 fp unit</p>", "type": "rendered"}}, "type": "pullrequest", "description": "When building on i686 without SSE, the ign equality helper uses the extra\r\nprecision within the x87 floating point module when comparing the difference\r\nbetween the two arguments to the epsilon value.  This causes the\r\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\r\n\r\n```\r\n13/44 Testing: UNIT_Line2_TEST\r\n13/44 Test: UNIT_Line2_TEST\r\nCommand: \"/builddir/build/BUILD/ignition-math2-2.2.2/build/src/UNIT_Line2_TEST\" \"--gtest_output=xml:/builddir/build/BUILD/ignition-math2-2.2.2/build/test_results/UNIT_Line2_TEST.xml\"\r\nDirectory: /builddir/build/BUILD/ignition-math2-2.2.2/build/src\r\n\"UNIT_Line2_TEST\" start time: Aug 21 00:43 UTC\r\nOutput:\r\n----------------------------------------------------------\r\nRunning main() from gtest_main.cc\r\n[==========] Running 9 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 9 tests from Line2Test\r\n[ RUN      ] Line2Test.Constructor\r\n[       OK ] Line2Test.Constructor (0 ms)\r\n[ RUN      ] Line2Test.Length\r\n[       OK ] Line2Test.Length (0 ms)\r\n[ RUN      ] Line2Test.Slope\r\n[       OK ] Line2Test.Slope (0 ms)\r\n[ RUN      ] Line2Test.ParallelLine\r\n[       OK ] Line2Test.ParallelLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearLine\r\n[       OK ] Line2Test.CollinearLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearPoint\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:152: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:164: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n[  FAILED  ] Line2Test.CollinearPoint (0 ms)\r\n[ RUN      ] Line2Test.Intersect\r\n[       OK ] Line2Test.Intersect (0 ms)\r\n[ RUN      ] Line2Test.Equality\r\n[       OK ] Line2Test.Equality (0 ms)\r\n[ RUN      ] Line2Test.OperatorStreamOut\r\n[       OK ] Line2Test.OperatorStreamOut (0 ms)\r\n[----------] 9 tests from Line2Test (0 ms total)\r\n[----------] Global test environment tear-down\r\n[==========] 9 tests from 1 test case ran. (0 ms total)\r\n[  PASSED  ] 8 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] Line2Test.CollinearPoint\r\n 1 FAILED TEST\r\n<end of output>\r\nTest time =   0.00 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n\"UNIT_Line2_TEST\" end time: Aug 21 00:43 UTC\r\n\"UNIT_Line2_TEST\" time elapsed: 00:00:00\r\n----------------------------------------------------------\r\n```\r\n\r\nThis patch creates an intermediate value for the difference between the two\r\narguments to be compared, which gets rid of the extra x87 precision. The\r\nresulting comparison is then performed without the extra precision, allowing\r\nthe test to pass.\r\n\r\nThis test was performed against ignition-math2-2.2.2\r\n\r\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/58/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diffstat/ignitionrobotics/ign-math:66715c9b1c7b%0D7f2a000a3476?from_pullrequest_id=58"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/58/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/58.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/58/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/58/merge"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/58"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/58/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:66715c9b1c7b%0D7f2a000a3476?from_pullrequest_id=58"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/58/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/58/statuses_page=1.json"}}, "title": "Change equality helper to work with 387 fp unit", "close_source_branch": true, "reviewers": [], "id": 58, "destination": {"commit": {"hash": "7f2a000a3476", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/7f2a000a3476.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/7f2a000a3476"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "default"}}, "created_on": "2015-08-21T01:23:21.597973+00:00", "summary": {"raw": "When building on i686 without SSE, the ign equality helper uses the extra\r\nprecision within the x87 floating point module when comparing the difference\r\nbetween the two arguments to the epsilon value.  This causes the\r\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\r\n\r\n```\r\n13/44 Testing: UNIT_Line2_TEST\r\n13/44 Test: UNIT_Line2_TEST\r\nCommand: \"/builddir/build/BUILD/ignition-math2-2.2.2/build/src/UNIT_Line2_TEST\" \"--gtest_output=xml:/builddir/build/BUILD/ignition-math2-2.2.2/build/test_results/UNIT_Line2_TEST.xml\"\r\nDirectory: /builddir/build/BUILD/ignition-math2-2.2.2/build/src\r\n\"UNIT_Line2_TEST\" start time: Aug 21 00:43 UTC\r\nOutput:\r\n----------------------------------------------------------\r\nRunning main() from gtest_main.cc\r\n[==========] Running 9 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 9 tests from Line2Test\r\n[ RUN      ] Line2Test.Constructor\r\n[       OK ] Line2Test.Constructor (0 ms)\r\n[ RUN      ] Line2Test.Length\r\n[       OK ] Line2Test.Length (0 ms)\r\n[ RUN      ] Line2Test.Slope\r\n[       OK ] Line2Test.Slope (0 ms)\r\n[ RUN      ] Line2Test.ParallelLine\r\n[       OK ] Line2Test.ParallelLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearLine\r\n[       OK ] Line2Test.CollinearLine (0 ms)\r\n[ RUN      ] Line2Test.CollinearPoint\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:152: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:164: Failure\r\nValue of: lineA.Collinear(pt, 1e-4)\r\n  Actual: false\r\nExpected: true\r\n[  FAILED  ] Line2Test.CollinearPoint (0 ms)\r\n[ RUN      ] Line2Test.Intersect\r\n[       OK ] Line2Test.Intersect (0 ms)\r\n[ RUN      ] Line2Test.Equality\r\n[       OK ] Line2Test.Equality (0 ms)\r\n[ RUN      ] Line2Test.OperatorStreamOut\r\n[       OK ] Line2Test.OperatorStreamOut (0 ms)\r\n[----------] 9 tests from Line2Test (0 ms total)\r\n[----------] Global test environment tear-down\r\n[==========] 9 tests from 1 test case ran. (0 ms total)\r\n[  PASSED  ] 8 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] Line2Test.CollinearPoint\r\n 1 FAILED TEST\r\n<end of output>\r\nTest time =   0.00 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n\"UNIT_Line2_TEST\" end time: Aug 21 00:43 UTC\r\n\"UNIT_Line2_TEST\" time elapsed: 00:00:00\r\n----------------------------------------------------------\r\n```\r\n\r\nThis patch creates an intermediate value for the difference between the two\r\narguments to be compared, which gets rid of the extra x87 precision. The\r\nresulting comparison is then performed without the extra precision, allowing\r\nthe test to pass.\r\n\r\nThis test was performed against ignition-math2-2.2.2\r\n\r\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "markup": "markdown", "html": "<p>When building on i686 without SSE, the ign equality helper uses the extra\nprecision within the x87 floating point module when comparing the difference\nbetween the two arguments to the epsilon value.  This causes the\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001</p>\n<div class=\"codehilite\"><pre><span></span>13/44 Testing: UNIT_Line2_TEST\n13/44 Test: UNIT_Line2_TEST\nCommand: &quot;/builddir/build/BUILD/ignition-math2-2.2.2/build/src/UNIT_Line2_TEST&quot; &quot;--gtest_output=xml:/builddir/build/BUILD/ignition-math2-2.2.2/build/test_results/UNIT_Line2_TEST.xml&quot;\nDirectory: /builddir/build/BUILD/ignition-math2-2.2.2/build/src\n&quot;UNIT_Line2_TEST&quot; start time: Aug 21 00:43 UTC\nOutput:\n----------------------------------------------------------\nRunning main() from gtest_main.cc\n[==========] Running 9 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 9 tests from Line2Test\n[ RUN      ] Line2Test.Constructor\n[       OK ] Line2Test.Constructor (0 ms)\n[ RUN      ] Line2Test.Length\n[       OK ] Line2Test.Length (0 ms)\n[ RUN      ] Line2Test.Slope\n[       OK ] Line2Test.Slope (0 ms)\n[ RUN      ] Line2Test.ParallelLine\n[       OK ] Line2Test.ParallelLine (0 ms)\n[ RUN      ] Line2Test.CollinearLine\n[       OK ] Line2Test.CollinearLine (0 ms)\n[ RUN      ] Line2Test.CollinearPoint\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:152: Failure\nValue of: lineA.Collinear(pt, 1e-4)\n  Actual: false\nExpected: true\n/builddir/build/BUILD/ignition-math2-2.2.2/src/Line2_TEST.cc:164: Failure\nValue of: lineA.Collinear(pt, 1e-4)\n  Actual: false\nExpected: true\n[  FAILED  ] Line2Test.CollinearPoint (0 ms)\n[ RUN      ] Line2Test.Intersect\n[       OK ] Line2Test.Intersect (0 ms)\n[ RUN      ] Line2Test.Equality\n[       OK ] Line2Test.Equality (0 ms)\n[ RUN      ] Line2Test.OperatorStreamOut\n[       OK ] Line2Test.OperatorStreamOut (0 ms)\n[----------] 9 tests from Line2Test (0 ms total)\n[----------] Global test environment tear-down\n[==========] 9 tests from 1 test case ran. (0 ms total)\n[  PASSED  ] 8 tests.\n[  FAILED  ] 1 test, listed below:\n[  FAILED  ] Line2Test.CollinearPoint\n 1 FAILED TEST\n&lt;end of output&gt;\nTest time =   0.00 sec\n----------------------------------------------------------\nTest Failed.\n&quot;UNIT_Line2_TEST&quot; end time: Aug 21 00:43 UTC\n&quot;UNIT_Line2_TEST&quot; time elapsed: 00:00:00\n----------------------------------------------------------\n</pre></div>\n\n\n<p>This patch creates an intermediate value for the difference between the two\narguments to be compared, which gets rid of the extra x87 precision. The\nresulting comparison is then performed without the extra precision, allowing\nthe test to pass.</p>\n<p>This test was performed against ignition-math2-2.2.2</p>\n<p>See <a href=\"http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail</a> for a discussion of x87 equality pitfalls.</p>", "type": "rendered"}, "source": {"commit": {"hash": "1cc536745543", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/richmattes/ign-math/commit/1cc536745543"}, "html": {"href": "https://bitbucket.org/richmattes/ign-math/commits/1cc536745543"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/richmattes/ign-math"}, "html": {"href": "https://bitbucket.org/richmattes/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{ec8da820-bc0a-4654-a8be-676a74e7bae5}ts=c_plus_plus"}}, "type": "repository", "name": "ign-math", "full_name": "richmattes/ign-math", "uuid": "{ec8da820-bc0a-4654-a8be-676a74e7bae5}"}, "branch": {"name": "387_equality"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-09-06T17:23:17.875531+00:00", "type": "participant", "approved": false, "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}}, {"role": "PARTICIPANT", "participated_on": "2015-09-18T20:59:46.100530+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-09-14T15:20:42.621227+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2016-08-16T22:56:23.232193+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2016-08-16T22:56:23.238217+00:00", "author": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}, "merge_commit": {"hash": "66715c9b1c7b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/66715c9b1c7b.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/66715c9b1c7b"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}