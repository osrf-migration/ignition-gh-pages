{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/79/comments/12486525.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:e1ffc6e85e51..f326d4bb6908?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/79/_/diff#comment-12486525"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 79, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/79.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/79"}}, "title": "MassMatrix3::PrincipalMoments, diagonalizing the moment of inertia matrix"}, "content": {"raw": "This will require heap allocation which can be slow and isn't needed for a small fixed size sort. You could do it like this instead:\n```c++\n// On return a<=b.\ninline void sort2(int& a, int& b) {\n    if (a>b) std::swap(a,b);\n}\n// On return a<=b<=c.\ninline void sort3(int& a, int& b, int& c) {\n    sort2(a,b); // a<=b\n    sort2(b,c); // a<=c, b<=c\n    sort2(a,b); // a<=b<=c\n}\n```", "markup": "markdown", "html": "<p>This will require heap allocation which can be slow and isn't needed for a small fixed size sort. You could do it like this instead:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"c1\">// On return a&lt;=b.</span>\n<span class=\"kr\">inline</span> <span class=\"kt\">void</span> <span class=\"nf\">sort2</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">&amp;</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">&amp;</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">&gt;</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// On return a&lt;=b&lt;=c.</span>\n<span class=\"kr\">inline</span> <span class=\"kt\">void</span> <span class=\"nf\">sort3</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">&amp;</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">&amp;</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">&amp;</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">sort2</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">);</span> <span class=\"c1\">// a&lt;=b</span>\n    <span class=\"n\">sort2</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">);</span> <span class=\"c1\">// a&lt;=c, b&lt;=c</span>\n    <span class=\"n\">sort2</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">);</span> <span class=\"c1\">// a&lt;=b&lt;=c</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-12-06T23:29:42.869601+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": 371, "from": null, "outdated": true, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2015-12-06T23:29:42.926526+00:00", "type": "pullrequest_comment", "id": 12486525}