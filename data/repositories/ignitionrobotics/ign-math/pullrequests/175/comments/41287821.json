{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/175/comments/41287821.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/175/_/diff#comment-41287821"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 175, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/175.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/175"}}, "title": "Graphs part3"}, "content": {"raw": "Is there an easy way to instantiate graphs that do not want/need edge and/or vertex data?\n\nFor example, assume I only want to store `int` Veretex data in an UndirectedGraph. Then I'd like:\n\n```\nignition::math::graph::UndirectedGraph<int> graph\n```\n\nor, if I only care about vertex names and edge weights:\n\n```\nignition::math::graph::UndirectedGraph graph\n```\n", "markup": "markdown", "html": "<p>Is there an easy way to instantiate graphs that do not want/need edge and/or vertex data?</p>\n<p>For example, assume I only want to store <code>int</code> Veretex data in an UndirectedGraph. Then I'd like:</p>\n<div class=\"codehilite\"><pre><span></span>ignition::math::graph::UndirectedGraph&lt;int&gt; graph\n</pre></div>\n\n\n<p>or, if I only care about vertex names and edge weights:</p>\n<div class=\"codehilite\"><pre><span></span>ignition::math::graph::UndirectedGraph graph\n</pre></div>", "type": "rendered"}, "created_on": "2017-07-21T21:29:00.506936+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-07-21T21:29:00.509122+00:00", "type": "pullrequest_comment", "id": 41287821}