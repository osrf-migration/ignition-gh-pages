{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/169/comments/37697123.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/169/_/diff#comment-37697123"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 169, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/169.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/169"}}, "title": "Loop detection for splines"}, "content": {"raw": "@caguero I did some refactoring, and extended changes for a method to adjust tangents to avoid loops altogether. I think I addressed all your comments. Regarding that TODO for the non-coplanar case, the thing is that the concept of loops when splines go full 3D becomes a bit fuzzy. And so far I haven't found a method to reliably detect loops in such scenarios.", "markup": "markdown", "html": "<p>@caguero I did some refactoring, and extended changes for a method to adjust tangents to avoid loops altogether. I think I addressed all your comments. Regarding that TODO for the non-coplanar case, the thing is that the concept of loops when splines go full 3D becomes a bit fuzzy. And so far I haven't found a method to reliably detect loops in such scenarios.</p>", "type": "rendered"}, "created_on": "2017-05-26T19:40:19.298250+00:00", "user": {"display_name": "Michel Hidalgo", "uuid": "{8d1275d4-c87a-421f-99ef-9f847911fdce}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d1275d4-c87a-421f-99ef-9f847911fdce%7D"}, "html": {"href": "https://bitbucket.org/%7B8d1275d4-c87a-421f-99ef-9f847911fdce%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/476ee32e7d14b30bbbd90480f4559f62d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hidmic", "type": "user", "account_id": "557058:279c91d9-c821-4fb1-a6fc-0fbada4e07c4"}, "updated_on": "2017-05-26T19:40:19.360870+00:00", "type": "pullrequest_comment", "id": 37697123}