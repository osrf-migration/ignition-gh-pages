{"rendered": {"description": {"raw": "The spline loop detection code added in pull request #169 has a memory access problem (#84), and the original authors even proposed removing it in #74 since it is not needed for their application of splines.\r\n\r\nThis manually reverts that pull request with the exception of three patches that are retained:\r\n\r\n~~~\r\n--- include/ignition/math/Spline.hh\r\n+++ include/ignition/math/Spline.hh\r\n@@ -46,7 +46,7 @@\r\n       /// \\param[in] _t Tension value between 0.0 and 1.0\r\n       public: void Tension(double _t);\r\n \r\n-      /// \\brief Gets the tension value\r\n-      /// \\return the value of the tension, which is between 0.0 and 1.0\r\n+      /// \\brief Gets the tension value.\r\n+      /// \\return the value of the tension, which is between 0.0 and 1.0.\r\n       public: double Tension() const;\r\n \r\n~~~\r\n\r\n~~~\r\n--- include/ignition/math/SplinePrivate.hh\r\n+++ include/ignition/math/SplinePrivate.hh\r\n@@ -32,6 +32,11 @@\r\n     /// of arbitrary m derivatives at such point.\r\n     class ControlPoint\r\n     {\r\n+      /// \\brief Default constructor.\r\n+      public: ControlPoint()\r\n+      {\r\n+      }\r\n+\r\n       /// \\brief Constructor that takes the M derivatives that\r\n       /// define the control point.\r\n       /// \\param[in] _initList with the M derivatives.\r\n~~~\r\n\r\n~~~\r\n--- src/SplinePrivate.cc\r\n+++ src/SplinePrivate.cc\r\n@@ -57,7 +57,7 @@\r\n   const Vector3d &tan0 = _startPoint.MthDerivative(1);\r\n   const Vector3d &tan1 = _endPoint.MthDerivative(1);\r\n \r\n-  // Bernstein polynomials matrix\r\n+  // Hermite basis matrix\r\n   const Matrix4d bmatrix(2.0, -2.0,  1.0,  1.0,\r\n                         -3.0,  3.0, -2.0, -1.0,\r\n                          0.0,  0.0,  1.0,  0.0,\r\n~~~\r\n\r\nPlease speak up if you think any of these 3 patches should be reverted as well.", "markup": "markdown", "html": "<p>The spline loop detection code added in <a href=\"#!/ignitionrobotics/ign-math/pull-requests/169/loop-detection-for-splines\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #169</a> has a memory access problem (<a href=\"#!/ignitionrobotics/ign-math/issues/84/memory-access-error-in\" rel=\"nofollow\" title=\"Memory access error in SplineTest.EnsureNoLoop\" class=\"ap-connect-link\"><s>#84</s></a>), and the original authors even proposed removing it in <a href=\"#!/ignitionrobotics/ign-math/issues/74/consider-removing-hasloop-ensurenoloop\" rel=\"nofollow\" title=\"Consider removing HasLoop() / EnsureNoLoop() from Spline\" class=\"ap-connect-link\"><s>#74</s></a> since it is not needed for their application of splines.</p>\n<p>This manually reverts that pull request with the exception of three patches that are retained:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- include/ignition/math/Spline.hh</span>\n<span class=\"gi\">+++ include/ignition/math/Spline.hh</span>\n<span class=\"gu\">@@ -46,7 +46,7 @@</span>\n       /// \\param[in] _t Tension value between 0.0 and 1.0\n       public: void Tension(double _t);\n\n<span class=\"gd\">-      /// \\brief Gets the tension value</span>\n<span class=\"gd\">-      /// \\return the value of the tension, which is between 0.0 and 1.0</span>\n<span class=\"gi\">+      /// \\brief Gets the tension value.</span>\n<span class=\"gi\">+      /// \\return the value of the tension, which is between 0.0 and 1.0.</span>\n       public: double Tension() const;\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- include/ignition/math/SplinePrivate.hh</span>\n<span class=\"gi\">+++ include/ignition/math/SplinePrivate.hh</span>\n<span class=\"gu\">@@ -32,6 +32,11 @@</span>\n     /// of arbitrary m derivatives at such point.\n     class ControlPoint\n     {\n<span class=\"gi\">+      /// \\brief Default constructor.</span>\n<span class=\"gi\">+      public: ControlPoint()</span>\n<span class=\"gi\">+      {</span>\n<span class=\"gi\">+      }</span>\n<span class=\"gi\">+</span>\n       /// \\brief Constructor that takes the M derivatives that\n       /// define the control point.\n       /// \\param[in] _initList with the M derivatives.\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- src/SplinePrivate.cc</span>\n<span class=\"gi\">+++ src/SplinePrivate.cc</span>\n<span class=\"gu\">@@ -57,7 +57,7 @@</span>\n   const Vector3d &amp;tan0 = _startPoint.MthDerivative(1);\n   const Vector3d &amp;tan1 = _endPoint.MthDerivative(1);\n\n<span class=\"gd\">-  // Bernstein polynomials matrix</span>\n<span class=\"gi\">+  // Hermite basis matrix</span>\n   const Matrix4d bmatrix(2.0, -2.0,  1.0,  1.0,\n                         -3.0,  3.0, -2.0, -1.0,\n                          0.0,  0.0,  1.0,  0.0,\n</pre></div>\n\n\n<p>Please speak up if you think any of these 3 patches should be reverted as well.</p>", "type": "rendered"}, "title": {"raw": "redact spline loop detection (issues #74 and #84)", "markup": "markdown", "html": "<p>redact spline loop detection (issues <a href=\"#!/ignitionrobotics/ign-math/issues/74/consider-removing-hasloop-ensurenoloop\" rel=\"nofollow\" title=\"Consider removing HasLoop() / EnsureNoLoop() from Spline\" class=\"ap-connect-link\"><s>#74</s></a> and <a href=\"#!/ignitionrobotics/ign-math/issues/84/memory-access-error-in\" rel=\"nofollow\" title=\"Memory access error in SplineTest.EnsureNoLoop\" class=\"ap-connect-link\"><s>#84</s></a>)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The spline loop detection code added in pull request #169 has a memory access problem (#84), and the original authors even proposed removing it in #74 since it is not needed for their application of splines.\r\n\r\nThis manually reverts that pull request with the exception of three patches that are retained:\r\n\r\n~~~\r\n--- include/ignition/math/Spline.hh\r\n+++ include/ignition/math/Spline.hh\r\n@@ -46,7 +46,7 @@\r\n       /// \\param[in] _t Tension value between 0.0 and 1.0\r\n       public: void Tension(double _t);\r\n \r\n-      /// \\brief Gets the tension value\r\n-      /// \\return the value of the tension, which is between 0.0 and 1.0\r\n+      /// \\brief Gets the tension value.\r\n+      /// \\return the value of the tension, which is between 0.0 and 1.0.\r\n       public: double Tension() const;\r\n \r\n~~~\r\n\r\n~~~\r\n--- include/ignition/math/SplinePrivate.hh\r\n+++ include/ignition/math/SplinePrivate.hh\r\n@@ -32,6 +32,11 @@\r\n     /// of arbitrary m derivatives at such point.\r\n     class ControlPoint\r\n     {\r\n+      /// \\brief Default constructor.\r\n+      public: ControlPoint()\r\n+      {\r\n+      }\r\n+\r\n       /// \\brief Constructor that takes the M derivatives that\r\n       /// define the control point.\r\n       /// \\param[in] _initList with the M derivatives.\r\n~~~\r\n\r\n~~~\r\n--- src/SplinePrivate.cc\r\n+++ src/SplinePrivate.cc\r\n@@ -57,7 +57,7 @@\r\n   const Vector3d &tan0 = _startPoint.MthDerivative(1);\r\n   const Vector3d &tan1 = _endPoint.MthDerivative(1);\r\n \r\n-  // Bernstein polynomials matrix\r\n+  // Hermite basis matrix\r\n   const Matrix4d bmatrix(2.0, -2.0,  1.0,  1.0,\r\n                         -3.0,  3.0, -2.0, -1.0,\r\n                          0.0,  0.0,  1.0,  0.0,\r\n~~~\r\n\r\nPlease speak up if you think any of these 3 patches should be reverted as well.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/197/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diffstat/ignitionrobotics/ign-math:0125a5eaa7ed%0Dacae872b0be0?from_pullrequest_id=197"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/197/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/197.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/197/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/197/merge"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/197"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/197/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:0125a5eaa7ed%0Dacae872b0be0?from_pullrequest_id=197"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/pullrequests/197/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/197/statuses_page=1.json"}}, "title": "redact spline loop detection (issues #74 and #84)", "close_source_branch": true, "reviewers": [{"display_name": "Andr\u00e9s Fortier", "uuid": "{f9c4496c-9146-4675-b1d5-bd0ed156cf58}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D"}, "html": {"href": "https://bitbucket.org/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3/4af4377f-d065-496d-8cd4-01d5c760c6a3/128"}}, "nickname": "andres_fortier", "type": "user", "account_id": "557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3"}, {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}], "id": 197, "destination": {"commit": {"hash": "acae872b0be0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/acae872b0be0.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/acae872b0be0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "ign-math3"}}, "created_on": "2017-09-28T19:06:08.422255+00:00", "summary": {"raw": "The spline loop detection code added in pull request #169 has a memory access problem (#84), and the original authors even proposed removing it in #74 since it is not needed for their application of splines.\r\n\r\nThis manually reverts that pull request with the exception of three patches that are retained:\r\n\r\n~~~\r\n--- include/ignition/math/Spline.hh\r\n+++ include/ignition/math/Spline.hh\r\n@@ -46,7 +46,7 @@\r\n       /// \\param[in] _t Tension value between 0.0 and 1.0\r\n       public: void Tension(double _t);\r\n \r\n-      /// \\brief Gets the tension value\r\n-      /// \\return the value of the tension, which is between 0.0 and 1.0\r\n+      /// \\brief Gets the tension value.\r\n+      /// \\return the value of the tension, which is between 0.0 and 1.0.\r\n       public: double Tension() const;\r\n \r\n~~~\r\n\r\n~~~\r\n--- include/ignition/math/SplinePrivate.hh\r\n+++ include/ignition/math/SplinePrivate.hh\r\n@@ -32,6 +32,11 @@\r\n     /// of arbitrary m derivatives at such point.\r\n     class ControlPoint\r\n     {\r\n+      /// \\brief Default constructor.\r\n+      public: ControlPoint()\r\n+      {\r\n+      }\r\n+\r\n       /// \\brief Constructor that takes the M derivatives that\r\n       /// define the control point.\r\n       /// \\param[in] _initList with the M derivatives.\r\n~~~\r\n\r\n~~~\r\n--- src/SplinePrivate.cc\r\n+++ src/SplinePrivate.cc\r\n@@ -57,7 +57,7 @@\r\n   const Vector3d &tan0 = _startPoint.MthDerivative(1);\r\n   const Vector3d &tan1 = _endPoint.MthDerivative(1);\r\n \r\n-  // Bernstein polynomials matrix\r\n+  // Hermite basis matrix\r\n   const Matrix4d bmatrix(2.0, -2.0,  1.0,  1.0,\r\n                         -3.0,  3.0, -2.0, -1.0,\r\n                          0.0,  0.0,  1.0,  0.0,\r\n~~~\r\n\r\nPlease speak up if you think any of these 3 patches should be reverted as well.", "markup": "markdown", "html": "<p>The spline loop detection code added in <a href=\"#!/ignitionrobotics/ign-math/pull-requests/169/loop-detection-for-splines\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #169</a> has a memory access problem (<a href=\"#!/ignitionrobotics/ign-math/issues/84/memory-access-error-in\" rel=\"nofollow\" title=\"Memory access error in SplineTest.EnsureNoLoop\" class=\"ap-connect-link\"><s>#84</s></a>), and the original authors even proposed removing it in <a href=\"#!/ignitionrobotics/ign-math/issues/74/consider-removing-hasloop-ensurenoloop\" rel=\"nofollow\" title=\"Consider removing HasLoop() / EnsureNoLoop() from Spline\" class=\"ap-connect-link\"><s>#74</s></a> since it is not needed for their application of splines.</p>\n<p>This manually reverts that pull request with the exception of three patches that are retained:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- include/ignition/math/Spline.hh</span>\n<span class=\"gi\">+++ include/ignition/math/Spline.hh</span>\n<span class=\"gu\">@@ -46,7 +46,7 @@</span>\n       /// \\param[in] _t Tension value between 0.0 and 1.0\n       public: void Tension(double _t);\n\n<span class=\"gd\">-      /// \\brief Gets the tension value</span>\n<span class=\"gd\">-      /// \\return the value of the tension, which is between 0.0 and 1.0</span>\n<span class=\"gi\">+      /// \\brief Gets the tension value.</span>\n<span class=\"gi\">+      /// \\return the value of the tension, which is between 0.0 and 1.0.</span>\n       public: double Tension() const;\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- include/ignition/math/SplinePrivate.hh</span>\n<span class=\"gi\">+++ include/ignition/math/SplinePrivate.hh</span>\n<span class=\"gu\">@@ -32,6 +32,11 @@</span>\n     /// of arbitrary m derivatives at such point.\n     class ControlPoint\n     {\n<span class=\"gi\">+      /// \\brief Default constructor.</span>\n<span class=\"gi\">+      public: ControlPoint()</span>\n<span class=\"gi\">+      {</span>\n<span class=\"gi\">+      }</span>\n<span class=\"gi\">+</span>\n       /// \\brief Constructor that takes the M derivatives that\n       /// define the control point.\n       /// \\param[in] _initList with the M derivatives.\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"gd\">--- src/SplinePrivate.cc</span>\n<span class=\"gi\">+++ src/SplinePrivate.cc</span>\n<span class=\"gu\">@@ -57,7 +57,7 @@</span>\n   const Vector3d &amp;tan0 = _startPoint.MthDerivative(1);\n   const Vector3d &amp;tan1 = _endPoint.MthDerivative(1);\n\n<span class=\"gd\">-  // Bernstein polynomials matrix</span>\n<span class=\"gi\">+  // Hermite basis matrix</span>\n   const Matrix4d bmatrix(2.0, -2.0,  1.0,  1.0,\n                         -3.0,  3.0, -2.0, -1.0,\n                          0.0,  0.0,  1.0,  0.0,\n</pre></div>\n\n\n<p>Please speak up if you think any of these 3 patches should be reverted as well.</p>", "type": "rendered"}, "source": {"commit": {"hash": "e519e2c3ecf4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/e519e2c3ecf4.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/e519e2c3ecf4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "branch": {"name": "redact_spline_loop_detection"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2017-10-02T17:17:48.751891+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-02T22:22:48.393895+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Andr\u00e9s Fortier", "uuid": "{f9c4496c-9146-4675-b1d5-bd0ed156cf58}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D"}, "html": {"href": "https://bitbucket.org/%7Bf9c4496c-9146-4675-b1d5-bd0ed156cf58%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3/4af4377f-d065-496d-8cd4-01d5c760c6a3/128"}}, "nickname": "andres_fortier", "type": "user", "account_id": "557058:c59901bb-7eb0-4d2c-966f-7c66c154fef3"}}], "reason": "", "updated_on": "2017-10-02T23:22:10.338680+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": {"hash": "0125a5eaa7ed", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/0125a5eaa7ed.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/0125a5eaa7ed"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}