{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/256/comments/62887517.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/256/_/diff#comment-62887517"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 256, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/256.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/256"}}, "title": "Component for converting between eigen3 and ignition-math (part of #19)"}, "content": {"raw": "This should now be working with the [InterfaceLibraries_eigen3](#!/ignitionrobotics/ign-cmake/branch/InterfaceLibraries_eigen3) branch of ign-cmake.\n\nThe following can be used as test code:\n\n```\n# CMakeLists.txt\ncmake_minimum_required(VERSION 3.5.1)\nfind_package(ignition-math5 COMPONENTS eigen3)\nadd_executable(dummy dummy.cpp)\ntarget_link_libraries(dummy ignition-math5::eigen3)\n```\n\n(next file:)\n\n```\n// dummy.cpp\n\n#include <iostream>\n#include <ignition/math/eigen3/Conversions.hh>\n#include <Eigen/Geometry>\n\nint main()\n{\n  Eigen::Vector3d vecEig = Eigen::Vector3d(1.0, 2.0, 3.0);\n  ignition::math::Vector3d vecIgn = ignition::math::eigen3::convert(vecEig);\n\n  std::cout << vecIgn << std::endl;\n}\n```\n\n", "markup": "markdown", "html": "<p>This should now be working with the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/branch/InterfaceLibraries_eigen3\" rel=\"nofollow\">InterfaceLibraries_eigen3</a> branch of ign-cmake.</p>\n<p>The following can be used as test code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\"># CMakeLists.txt</span>\n<span class=\"nb\">cmake_minimum_required</span><span class=\"p\">(</span><span class=\"s\">VERSION</span> <span class=\"s\">3.5.1</span><span class=\"p\">)</span>\n<span class=\"nb\">find_package</span><span class=\"p\">(</span><span class=\"s\">ignition-math5</span> <span class=\"s\">COMPONENTS</span> <span class=\"s\">eigen3</span><span class=\"p\">)</span>\n<span class=\"nb\">add_executable</span><span class=\"p\">(</span><span class=\"s\">dummy</span> <span class=\"s\">dummy.cpp</span><span class=\"p\">)</span>\n<span class=\"nb\">target_link_libraries</span><span class=\"p\">(</span><span class=\"s\">dummy</span> <span class=\"s\">ignition-math5::eigen3</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>(next file:)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// dummy.cpp</span>\n\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ignition/math/eigen3/Conversions.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Eigen/Geometry&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kr\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span> <span class=\"n\">vecEig</span> <span class=\"o\">=</span> <span class=\"n\">Eigen</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">);</span>\n  <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span> <span class=\"n\">vecIgn</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">eigen3</span><span class=\"o\">::</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">vecEig</span><span class=\"p\">);</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">vecIgn</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-04-28T01:17:13.582807+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-28T01:17:13.589429+00:00", "type": "pullrequest_comment", "id": 62887517}