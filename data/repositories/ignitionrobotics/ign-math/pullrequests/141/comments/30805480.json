{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/141/comments/30805480.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/141/_/diff#comment-30805480"}}, "parent": {"id": 30655566, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/141/comments/30655566.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/141/_/diff#comment-30655566"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 141, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/141.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/141"}}, "title": "Graph"}, "content": {"raw": "I'm not a big fan of option 4.\n\nI like option 3. I would argue that we can make the API for this not that bad. We can put the Vertex value first in the `std::pair` and the `bool` second to be consistent with the `sdf::Element::Get` function.\n\nHere are additional usage examples:\n\n```\nstd::reference_wrapper<Vertex<V>> vertex;\nbool result;\n\nstd::tie(vertex, result) = graph.AddVertex(0, \"0\");\n```\n\n```\nstd::reference_wrapper<Vertex<V>> vertex;\n\nstd::tie(vertex, std::ignore) = graph.AddVertex(0, \"0\");\n```\n\n```\nauto vertex = std::get<0>(graph.AddVertex(0, \"0\"));\nauto result = std::get<1>(graph.AddVertex(1, \"1\"));\n```\n\n", "markup": "markdown", "html": "<p>I'm not a big fan of option 4.</p>\n<p>I like option 3. I would argue that we can make the API for this not that bad. We can put the Vertex value first in the <code>std::pair</code> and the <code>bool</code> second to be consistent with the <code>sdf::Element::Get</code> function.</p>\n<p>Here are additional usage examples:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">reference_wrapper</span><span class=\"o\">&lt;</span><span class=\"nt\">Vertex</span><span class=\"o\">&lt;</span><span class=\"nt\">V</span><span class=\"o\">&gt;&gt;</span> <span class=\"nt\">vertex</span><span class=\"o\">;</span>\n<span class=\"nt\">bool</span> <span class=\"nt\">result</span><span class=\"o\">;</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">vertex</span><span class=\"o\">,</span> <span class=\"nt\">result</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">graph</span><span class=\"p\">.</span><span class=\"nc\">AddVertex</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">reference_wrapper</span><span class=\"o\">&lt;</span><span class=\"nt\">Vertex</span><span class=\"o\">&lt;</span><span class=\"nt\">V</span><span class=\"o\">&gt;&gt;</span> <span class=\"nt\">vertex</span><span class=\"o\">;</span>\n\n<span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">tie</span><span class=\"o\">(</span><span class=\"nt\">vertex</span><span class=\"o\">,</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">ignore</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"nt\">graph</span><span class=\"p\">.</span><span class=\"nc\">AddVertex</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">auto</span> <span class=\"nt\">vertex</span> <span class=\"o\">=</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">get</span><span class=\"o\">&lt;</span><span class=\"nt\">0</span><span class=\"o\">&gt;(</span><span class=\"nt\">graph</span><span class=\"p\">.</span><span class=\"nc\">AddVertex</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"o\">));</span>\n<span class=\"nt\">auto</span> <span class=\"nt\">result</span> <span class=\"o\">=</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">get</span><span class=\"o\">&lt;</span><span class=\"nt\">1</span><span class=\"o\">&gt;(</span><span class=\"nt\">graph</span><span class=\"p\">.</span><span class=\"nc\">AddVertex</span><span class=\"o\">(</span><span class=\"nt\">1</span><span class=\"o\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"o\">));</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-02-02T19:54:42.906317+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2017-02-02T19:54:42.909317+00:00", "type": "pullrequest_comment", "id": 30805480}