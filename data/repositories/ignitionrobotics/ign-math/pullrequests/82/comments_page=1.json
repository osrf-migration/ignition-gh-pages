{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13237795.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13237795"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "[drone is happy](https://drone.io/bitbucket.org/ignitionrobotics/ign-math/419)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://drone.io/bitbucket.org/ignitionrobotics/ign-math/419\" rel=\"nofollow\">drone is happy</a></p>", "type": "rendered"}, "created_on": "2016-01-07T01:12:50.389203+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-07T01:12:50.391317+00:00", "type": "pullrequest_comment", "id": 13237795}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13237883.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13237883"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "@sherm1 this pull request adds the computation of inertia matrix eigenvectors (expressed as a rotation matrix / quaternion)", "markup": "markdown", "html": "<p>@sherm1 this pull request adds the computation of inertia matrix eigenvectors (expressed as a rotation matrix / quaternion)</p>", "type": "rendered"}, "created_on": "2016-01-07T01:19:34.364998+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-07T01:19:34.371042+00:00", "type": "pullrequest_comment", "id": 13237883}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13238798.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13238798"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Nice coverage, looks good to me.\n\nI added a Quaternion::Zero in the [mass_matrix_part3_nate](#!/ignitionrobotics/ign-math/branch/mass_matrix_part3_nate?dest=mass_matrix_part3#diff) branch.", "markup": "markdown", "html": "<p>Nice coverage, looks good to me.</p>\n<p>I added a Quaternion::Zero in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/branch/mass_matrix_part3_nate?dest=mass_matrix_part3#diff\" rel=\"nofollow\">mass_matrix_part3_nate</a> branch.</p>", "type": "rendered"}, "created_on": "2016-01-07T02:41:34.617748+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-01-07T02:41:34.619941+00:00", "type": "pullrequest_comment", "id": 13238798}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283762.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283762"}}, "parent": {"id": 13238798, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13238798.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13238798"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "`Quaternion::Zero` looks good, but is `this->` needed for calls to private static functions in a class?", "markup": "markdown", "html": "<p><code>Quaternion::Zero</code> looks good, but is <code>this-&gt;</code> needed for calls to private static functions in a class?</p>", "type": "rendered"}, "created_on": "2016-01-08T02:05:22.009766+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-08T02:05:22.011997+00:00", "type": "pullrequest_comment", "id": 13283762}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13866119.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13866119"}}, "parent": {"id": 13283762, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283762.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283762"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Technically, the `this->` pointer is not needed. We're only using it to help identify members of a class.", "markup": "markdown", "html": "<p>Technically, the <code>this-&gt;</code> pointer is not needed. We're only using it to help identify members of a class.</p>", "type": "rendered"}, "created_on": "2016-01-26T18:18:33.974858+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-01-26T18:18:33.977002+00:00", "type": "pullrequest_comment", "id": 13866119}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13314120.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13314120"}}, "parent": {"id": 13238798, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13238798.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13238798"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "merged without the `this->ClampedSqrt` in 961da766e1f3", "markup": "markdown", "html": "<p>merged without the <code>this-&gt;ClampedSqrt</code> in <a href=\"#!/ignitionrobotics/ign-math/commits/961da766e1f3\" rel=\"nofollow\" class=\"ap-connect-link\">961da766e1f3</a></p>", "type": "rendered"}, "created_on": "2016-01-08T21:53:33.933385+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-08T21:53:33.935405+00:00", "type": "pullrequest_comment", "id": 13314120}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13240607.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13240607"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Sweet! I love the the ipython proof of the repeated-eigenvalues claim.\n\nThe eigenvector routine is surprisingly complicated. It would be interesting to compare its performance and precision with a straightforward 3x3 symmetric eigensolver -- I think there is one in Eigen you could use. I'll compare it against the Lapack one in Simbody if I get a chance.", "markup": "markdown", "html": "<p>Sweet! I love the the ipython proof of the repeated-eigenvalues claim.</p>\n<p>The eigenvector routine is surprisingly complicated. It would be interesting to compare its performance and precision with a straightforward 3x3 symmetric eigensolver -- I think there is one in Eigen you could use. I'll compare it against the Lapack one in Simbody if I get a chance.</p>", "type": "rendered"}, "created_on": "2016-01-07T05:34:23.778576+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2016-01-07T05:34:23.833755+00:00", "type": "pullrequest_comment", "id": 13240607}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13249668.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13249668"}}, "parent": {"id": 13240607, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13240607.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13240607"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Hm...maybe it would have been easier to use Eigen: [Eigen::SelfAdjointEigenSolver::computeDirect](http://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a85cda7e77edf4923f3fc0512c83f6323). That function would generate a rotation matrix, and we could extract a quaternion from it.", "markup": "markdown", "html": "<p>Hm...maybe it would have been easier to use Eigen: <a data-is-external-link=\"true\" href=\"http://eigen.tuxfamily.org/dox/classEigen_1_1SelfAdjointEigenSolver.html#a85cda7e77edf4923f3fc0512c83f6323\" rel=\"nofollow\">Eigen::SelfAdjointEigenSolver::computeDirect</a>. That function would generate a rotation matrix, and we could extract a quaternion from it.</p>", "type": "rendered"}, "created_on": "2016-01-07T10:09:26.726342+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-07T10:09:26.728739+00:00", "type": "pullrequest_comment", "id": 13249668}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13264077.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13264077"}}, "parent": {"id": 13249668, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13249668.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13249668"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Could be useful for testing at least.", "markup": "markdown", "html": "<p>Could be useful for testing at least.</p>", "type": "rendered"}, "created_on": "2016-01-07T15:06:26.392337+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2016-01-07T15:06:26.435195+00:00", "type": "pullrequest_comment", "id": 13264077}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283361.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283361"}}, "parent": {"id": 13249668, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13249668.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13249668"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "I whipped up a quick test in 02b152cdb00e (branch `mass_matrix_part3_eigen`). It searches for Eigen as an optional dependency, and if it's found, it builds an optional test.\n\nThe example can solve two different matrices, one of which is a pathological case with an eigenvalue ratio over 10^40. The matrices are solved with the algorithm proposed here, along with Eigen's direct and iterative methods. In brief testing, it looks like the speed depends on which matrix is being solved. For example, the MassMatrix3 algorithm can skip some branches when there is a repeated eigenvalue and |f1| is small. There are many more code branches required, however when there are no repeated eigenvalues and neither |f1| and |f2| are small. Sometimes this code is faster, sometimes it is slower.", "markup": "markdown", "html": "<p>I whipped up a quick test in <a href=\"#!/ignitionrobotics/ign-math/commits/02b152cdb00e\" rel=\"nofollow\" class=\"ap-connect-link\">02b152cdb00e</a> (branch <code>mass_matrix_part3_eigen</code>). It searches for Eigen as an optional dependency, and if it's found, it builds an optional test.</p>\n<p>The example can solve two different matrices, one of which is a pathological case with an eigenvalue ratio over 10^40. The matrices are solved with the algorithm proposed here, along with Eigen's direct and iterative methods. In brief testing, it looks like the speed depends on which matrix is being solved. For example, the MassMatrix3 algorithm can skip some branches when there is a repeated eigenvalue and |f1| is small. There are many more code branches required, however when there are no repeated eigenvalues and neither |f1| and |f2| are small. Sometimes this code is faster, sometimes it is slower.</p>", "type": "rendered"}, "created_on": "2016-01-08T01:30:01.449748+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-08T01:30:01.451555+00:00", "type": "pullrequest_comment", "id": 13283361}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283407.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283407"}}, "parent": {"id": 13283361, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283361.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283361"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "If I hadn't already written this code, I would probably be advocating for just using Eigen.", "markup": "markdown", "html": "<p>If I hadn't already written this code, I would probably be advocating for just using Eigen.</p>", "type": "rendered"}, "created_on": "2016-01-08T01:32:59.731967+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-08T01:32:59.734023+00:00", "type": "pullrequest_comment", "id": 13283407}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13310977.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13310977"}}, "parent": {"id": 13283407, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13283407.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13283407"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "My 2 cents: if you like the Eigen approach and Eigen is there anyway you should just use it. It is that much less code that has to be tested and maintained. Without having written the new code you would have had no way to determine if the general approach was competitive, so that effort was not wasted at all.\n\nI think there is still a good argument for keeping the previous principal-moments-only calculator since I suspect it is considerably faster than a general eigensolver and provides everything needed for a quick validity check. But I suppose if you decide to use Eigen for the rotation matrix it would be worth doing some timings to check that assumption too.", "markup": "markdown", "html": "<p>My 2 cents: if you like the Eigen approach and Eigen is there anyway you should just use it. It is that much less code that has to be tested and maintained. Without having written the new code you would have had no way to determine if the general approach was competitive, so that effort was not wasted at all.</p>\n<p>I think there is still a good argument for keeping the previous principal-moments-only calculator since I suspect it is considerably faster than a general eigensolver and provides everything needed for a quick validity check. But I suppose if you decide to use Eigen for the rotation matrix it would be worth doing some timings to check that assumption too.</p>", "type": "rendered"}, "created_on": "2016-01-08T20:04:48.014614+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "updated_on": "2016-01-08T20:04:48.079869+00:00", "type": "pullrequest_comment", "id": 13310977}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13275829.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13275829"}}, "parent": {"id": 13240607, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13240607.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13240607"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Here's another good discussion of analytical vs iterative methods for 3x3 eigen-solving:\n\n* http://arxiv.org/abs/physics/0610206\n\nApparently the analytical methods can have issues with matrices of large condition number (see section 3.1)", "markup": "markdown", "html": "<p>Here's another good discussion of analytical vs iterative methods for 3x3 eigen-solving:</p>\n<ul>\n<li><a href=\"http://arxiv.org/abs/physics/0610206\" rel=\"nofollow\" class=\"ap-connect-link\">http://arxiv.org/abs/physics/0610206</a></li>\n</ul>\n<p>Apparently the analytical methods can have issues with matrices of large condition number (see section 3.1)</p>", "type": "rendered"}, "created_on": "2016-01-07T20:13:49.761643+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-01-07T20:13:49.763767+00:00", "type": "pullrequest_comment", "id": 13275829}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16375027.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16375027"}}, "parent": {"id": 13275829, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/13275829.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-13275829"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "@sherm1 I think this code is fine to be merged. We had a brief discussion here about using Eigen with ignition-math, and we have some ideas about creating an optional package that depends on both `ign-math` and `eigen` so that the base `ign-math` package would have minimal dependencies. That will be larger effort, so we won't do it for this pull request.\n\nRegarding the issues with large condition number, I've added an example in e2314ff that gives a bound on the accuracy.", "markup": "markdown", "html": "<p>@sherm1 I think this code is fine to be merged. We had a brief discussion here about using Eigen with ignition-math, and we have some ideas about creating an optional package that depends on both <code>ign-math</code> and <code>eigen</code> so that the base <code>ign-math</code> package would have minimal dependencies. That will be larger effort, so we won't do it for this pull request.</p>\n<p>Regarding the issues with large condition number, I've added an example in <a href=\"#!/ignitionrobotics/ign-math/commits/e2314ff\" rel=\"nofollow\" class=\"ap-connect-link\">e2314ff</a> that gives a bound on the accuracy.</p>", "type": "rendered"}, "created_on": "2016-03-29T00:33:33.929694+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-03-29T00:33:33.934779+00:00", "type": "pullrequest_comment", "id": 16375027}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16412043.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16412043"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "@scpeters, is that an absolute or relative tolerance? If it is absolute that doesn't seem like the right measure for a regression test. In Octave I get these eigenvalues:\n```\n>> eig(m)\n     0.980000199802004\n              99999000\n          100001000.02\n```\nThese should have a relative tolerance much smaller than 1e-2, like maybe 1e-8 ish (need to calculate to higher precision somehow to see). The absolute tolerance for the first entry should then also be around 1e-8.", "markup": "markdown", "html": "<p>@scpeters, is that an absolute or relative tolerance? If it is absolute that doesn't seem like the right measure for a regression test. In Octave I get these eigenvalues:</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt; eig(m)\n     0.980000199802004\n              99999000\n          100001000.02\n</pre></div>\n\n\n<p>These should have a relative tolerance much smaller than 1e-2, like maybe 1e-8 ish (need to calculate to higher precision somehow to see). The absolute tolerance for the first entry should then also be around 1e-8.</p>", "type": "rendered"}, "created_on": "2016-03-29T17:01:32.013658+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": 342, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-29T17:01:32.096785+00:00", "type": "pullrequest_comment", "id": 16412043}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16412431.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16412431"}}, "parent": {"id": 16412043, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16412043.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16412043"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "It's the absolute tolerance. It's not great because this is using a direct method instead of iterative (as indicated in http://arxiv.org/abs/physics/0610206 ). At this point, I'm just trying to document how accurate it is, not prove that it's great. I didn't read that paper until after implementing this, but I think it's close enough for our first intended application (inertia visualization).\n\nWe can try to improve the accuracy by interfacing with Eigen in a later pull request.", "markup": "markdown", "html": "<p>It's the absolute tolerance. It's not great because this is using a direct method instead of iterative (as indicated in <a href=\"http://arxiv.org/abs/physics/0610206\" rel=\"nofollow\" class=\"ap-connect-link\">http://arxiv.org/abs/physics/0610206</a> ). At this point, I'm just trying to document how accurate it is, not prove that it's great. I didn't read that paper until after implementing this, but I think it's close enough for our first intended application (inertia visualization).</p>\n<p>We can try to improve the accuracy by interfacing with Eigen in a later pull request.</p>", "type": "rendered"}, "created_on": "2016-03-29T17:09:25.694703+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-29T17:09:25.698196+00:00", "type": "pullrequest_comment", "id": 16412431}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16413756.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16413756"}}, "parent": {"id": 16412431, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16412431.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16412431"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "I'm not complaining about the accuracy of the method (yet) -- it's the test that seems invalid to me. It shouldn't be using an absolute tolerance for entries that differ by 8 orders of magnitude! An `Equal()` method that take an abstol shouldn't be used here -- do you have a better one available? For testing you typically want want one that compares scalars a and b with something like \n```\nscale = max(|a|,|b|,1)\nabstol = scale*reltol\nreturn abs(a-b) <= abstol\n```\nFor the eigenvalues you would want this done elementwise.", "markup": "markdown", "html": "<p>I'm not complaining about the accuracy of the method (yet) -- it's the test that seems invalid to me. It shouldn't be using an absolute tolerance for entries that differ by 8 orders of magnitude! An <code>Equal()</code> method that take an abstol shouldn't be used here -- do you have a better one available? For testing you typically want want one that compares scalars a and b with something like </p>\n<div class=\"codehilite\"><pre><span></span>scale = max(|a|,|b|,1)\nabstol = scale*reltol\nreturn abs(a-b) &lt;= abstol\n</pre></div>\n\n\n<p>For the eigenvalues you would want this done elementwise.</p>", "type": "rendered"}, "created_on": "2016-03-29T17:38:07.207498+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-29T17:38:07.267736+00:00", "type": "pullrequest_comment", "id": 16413756}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16418570.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16418570"}}, "parent": {"id": 16413756, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16413756.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16413756"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "The MassMatrix functions use relative tolerance, but the `Vector3::Equal` function only uses absolute tolerance, since it is based on the scalar [math::equal from Helpers.hh](#!/ignitionrobotics/ign-math/src/2555c7e8a9c5fa1c1cd1ed524b3627200bae1f47/include/ignition/math/Helpers.hh?at=default&fileviewer=file-view-default#Helpers.hh-327).\n\nWe would have to add a new helper function with relative tolerance. Do you have helper functions like this in simbody? What are the names?", "markup": "markdown", "html": "<p>The MassMatrix functions use relative tolerance, but the <code>Vector3::Equal</code> function only uses absolute tolerance, since it is based on the scalar <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/2555c7e8a9c5fa1c1cd1ed524b3627200bae1f47/include/ignition/math/Helpers.hh?at=default&amp;fileviewer=file-view-default#Helpers.hh-327\" rel=\"nofollow\">math::equal from Helpers.hh</a>.</p>\n<p>We would have to add a new helper function with relative tolerance. Do you have helper functions like this in simbody? What are the names?</p>", "type": "rendered"}, "created_on": "2016-03-29T19:30:20.725643+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-29T19:30:20.727892+00:00", "type": "pullrequest_comment", "id": 16418570}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16427333.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16427333"}}, "parent": {"id": 16418570, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16418570.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16418570"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Simbody has a whole infrastructure for comparing vectors and matrices, description [here](https://simtk.org/api_docs/simbody/latest/group__RegressionTesting.html), starting with a set of overloaded scalar comparison methods called `numericallyEqual()`. The vector and matrix ones use the scalar ones elementwise. [Here](https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/Testing.h#L200) is the double version:\n```c++\n    // Scale by the magnitude of the quantities being compared, so that we don't\n    // ask for unreasonable precision. For magnitudes near zero, we'll be satisfied\n    // if both are very small without demanding that they must also be relatively\n    // close. That is, we use a relative tolerance for big numbers and an absolute\n    // tolerance for small ones.\n    static bool numericallyEqual(double v1, double v2, int n, double tol=defTol<double>()) {\n        const double scale = n*std::max(std::max(std::abs(v1), std::abs(v2)), 1.0);\n        return std::abs(v1-v2) < scale*(double)tol;\n    }\n```\n\n[Here](https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition) is an article and floating point comparisons that was referenced from GoogleTest, which uses a similar method. \n\n", "markup": "markdown", "html": "<p>Simbody has a whole infrastructure for comparing vectors and matrices, description <a data-is-external-link=\"true\" href=\"https://simtk.org/api_docs/simbody/latest/group__RegressionTesting.html\" rel=\"nofollow\">here</a>, starting with a set of overloaded scalar comparison methods called <code>numericallyEqual()</code>. The vector and matrix ones use the scalar ones elementwise. <a data-is-external-link=\"true\" href=\"https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/Testing.h#L200\" rel=\"nofollow\">Here</a> is the double version:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>    <span class=\"c1\">// Scale by the magnitude of the quantities being compared, so that we don&#39;t</span>\n    <span class=\"c1\">// ask for unreasonable precision. For magnitudes near zero, we&#39;ll be satisfied</span>\n    <span class=\"c1\">// if both are very small without demanding that they must also be relatively</span>\n    <span class=\"c1\">// close. That is, we use a relative tolerance for big numbers and an absolute</span>\n    <span class=\"c1\">// tolerance for small ones.</span>\n    <span class=\"k\">static</span> <span class=\"kt\">bool</span> <span class=\"nf\">numericallyEqual</span><span class=\"p\">(</span><span class=\"kt\">double</span> <span class=\"n\">v1</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">v2</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"kt\">double</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"n\">defTol</span><span class=\"o\">&lt;</span><span class=\"kt\">double</span><span class=\"o\">&gt;</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">*</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">),</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">)),</span> <span class=\"mf\">1.0</span><span class=\"p\">);</span>\n        <span class=\"k\">return</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"o\">-</span><span class=\"n\">v2</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">scale</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"n\">tol</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition\" rel=\"nofollow\">Here</a> is an article and floating point comparisons that was referenced from GoogleTest, which uses a similar method. </p>", "type": "rendered"}, "created_on": "2016-03-29T23:53:59.195469+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-29T23:53:59.318951+00:00", "type": "pullrequest_comment", "id": 16427333}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16427601.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16427601"}}, "parent": {"id": 16418570, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16418570.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16418570"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "To me the `math::equal` routine looks ill-conceived because it is ambiguous but looks like you could know what it would do. Certainly using an absolute tolerance is not the behavior I would have expected -- that is almost never right! It should have a fuzzier name like `math::relativelyEqual` or my favorite `numericallyEqual`. That way people would worry about what the method actually does and look it up. In any case looking up `math::equal` doesn't tell you anything because the current documentation is also ambiguous (just says \"to a tolerance\").", "markup": "markdown", "html": "<p>To me the <code>math::equal</code> routine looks ill-conceived because it is ambiguous but looks like you could know what it would do. Certainly using an absolute tolerance is not the behavior I would have expected -- that is almost never right! It should have a fuzzier name like <code>math::relativelyEqual</code> or my favorite <code>numericallyEqual</code>. That way people would worry about what the method actually does and look it up. In any case looking up <code>math::equal</code> doesn't tell you anything because the current documentation is also ambiguous (just says \"to a tolerance\").</p>", "type": "rendered"}, "created_on": "2016-03-30T00:07:26.684557+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-03-30T00:07:26.736641+00:00", "type": "pullrequest_comment", "id": 16427601}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16738813.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16738813"}}, "parent": {"id": 16427601, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16427601.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16427601"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "+1 on new explicitly relative or numerically equal functions, issue #43.\n\nSide note issue #42 possible improvements to `Vector3::Equal` so it can accept vector of tolerances.\n\nFor the [current test](#!/ignitionrobotics/ign-math/src/e7b5cfb5f3f9/src/MassMatrix3_TEST.cc?fileviewer=file-view-default#MassMatrix3_TEST.cc-336), we can be be more specific with absolute value comparisons and list out each element while the two new issues are being worked on?\n\n~~~\n    const math::Vector3d Ieigen(0.98, 1e8-1e3, 1e8+1e3);\n    // the accuracy is approximately 2e-2\n    EXPECT_TRUE(m.PrincipalMoments().Equal(Ieigen, 2.5e-2));\n    EXPECT_FALSE(m.PrincipalMoments().Equal(Ieigen, 1.5e-2));\n~~~\n\nbecomes (pseudo-code):\n\n~~~\n    const math::Vector3d Ieigen(0.98, 1e8-1e3, 1e8+1e3);\n    // the accuracy is approximately 2e-2, for example matlab shows:\n    //      0.980000199802004\n    //      99999000\n    //      100001000.02\n    EXPECT_TRUE(math::equal(m.PrincipalMoments()[0], Ieigen[0], 0.000001));\n    EXPECT_TRUE(math::equal(m.PrincipalMoments()[1], Ieigen[1], 0.1));\n    EXPECT_TRUE(math::equal(m.PrincipalMoments()[2], Ieigen[2], 0.1));\n    EXPECT_FALSE(math::equal(m.PrincipalMoments()[0], Ieigen[0], 0.0000001));\n    EXPECT_FALSE(math::equal(m.PrincipalMoments()[1], Ieigen[1], 0.01));\n    EXPECT_FALSE(math::equal(m.PrincipalMoments()[2], Ieigen[2], 0.01));\n~~~", "markup": "markdown", "html": "<p>+1 on new explicitly relative or numerically equal functions, issue <a href=\"#!/ignitionrobotics/ign-math/issues/43/add-numerically-equal-and-relatively-equal\" rel=\"nofollow\" title=\"Add Numerically Equal and Relatively Equal comparisons in math helper class\" class=\"ap-connect-link\">#43</a>.</p>\n<p>Side note issue <a href=\"#!/ignitionrobotics/ign-math/issues/42/allow-vector3-equal-to-use-vector-of\" rel=\"nofollow\" title=\"Allow Vector3::Equal to use vector of tolerances\" class=\"ap-connect-link\">#42</a> possible improvements to <code>Vector3::Equal</code> so it can accept vector of tolerances.</p>\n<p>For the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/e7b5cfb5f3f9/src/MassMatrix3_TEST.cc?fileviewer=file-view-default#MassMatrix3_TEST.cc-336\" rel=\"nofollow\">current test</a>, we can be be more specific with absolute value comparisons and list out each element while the two new issues are being worked on?</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3d</span> <span class=\"nt\">Ieigen</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">98</span><span class=\"o\">,</span> <span class=\"nt\">1e8-1e3</span><span class=\"o\">,</span> <span class=\"nt\">1e8</span><span class=\"o\">+</span><span class=\"nt\">1e3</span><span class=\"o\">);</span>\n    <span class=\"o\">//</span> <span class=\"nt\">the</span> <span class=\"nt\">accuracy</span> <span class=\"nt\">is</span> <span class=\"nt\">approximately</span> <span class=\"nt\">2e-2</span>\n    <span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"p\">.</span><span class=\"nc\">Equal</span><span class=\"o\">(</span><span class=\"nt\">Ieigen</span><span class=\"o\">,</span> <span class=\"nt\">2</span><span class=\"p\">.</span><span class=\"nc\">5e-2</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"p\">.</span><span class=\"nc\">Equal</span><span class=\"o\">(</span><span class=\"nt\">Ieigen</span><span class=\"o\">,</span> <span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">5e-2</span><span class=\"o\">));</span>\n</pre></div>\n\n\n<p>becomes (pseudo-code):</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">const</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Vector3d</span> <span class=\"nt\">Ieigen</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">98</span><span class=\"o\">,</span> <span class=\"nt\">1e8-1e3</span><span class=\"o\">,</span> <span class=\"nt\">1e8</span><span class=\"o\">+</span><span class=\"nt\">1e3</span><span class=\"o\">);</span>\n    <span class=\"o\">//</span> <span class=\"nt\">the</span> <span class=\"nt\">accuracy</span> <span class=\"nt\">is</span> <span class=\"nt\">approximately</span> <span class=\"nt\">2e-2</span><span class=\"o\">,</span> <span class=\"nt\">for</span> <span class=\"nt\">example</span> <span class=\"nt\">matlab</span> <span class=\"nt\">shows</span><span class=\"o\">:</span>\n    <span class=\"o\">//</span>      <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">980000199802004</span>\n    <span class=\"o\">//</span>      <span class=\"nt\">99999000</span>\n    <span class=\"o\">//</span>      <span class=\"nt\">100001000</span><span class=\"p\">.</span><span class=\"nc\">02</span>\n    <span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">000001</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_TRUE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">1</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">0</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">0000001</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">1</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">01</span><span class=\"o\">));</span>\n    <span class=\"nt\">EXPECT_FALSE</span><span class=\"o\">(</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">equal</span><span class=\"o\">(</span><span class=\"nt\">m</span><span class=\"p\">.</span><span class=\"nc\">PrincipalMoments</span><span class=\"o\">()</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">Ieigen</span><span class=\"cp\">[</span><span class=\"mi\">2</span><span class=\"cp\">]</span><span class=\"o\">,</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">01</span><span class=\"o\">));</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-04-04T19:17:36.887313+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-04-04T19:28:59.737618+00:00", "type": "pullrequest_comment", "id": 16738813}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16739468.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16739468"}}, "parent": {"id": 16427601, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16427601.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16427601"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "@sherm1 can we proceed with this pull request if we move the discussion of numerical equality functions to #42? I'd like to merge this if possible", "markup": "markdown", "html": "<p>@sherm1 can we proceed with this pull request if we move the discussion of numerical equality functions to <a href=\"#!/ignitionrobotics/ign-math/issues/42/allow-vector3-equal-to-use-vector-of\" rel=\"nofollow\" title=\"Allow Vector3::Equal to use vector of tolerances\" class=\"ap-connect-link\">#42</a>? I'd like to merge this if possible</p>", "type": "rendered"}, "created_on": "2016-04-04T19:25:40.685774+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-04-04T19:25:40.692710+00:00", "type": "pullrequest_comment", "id": 16739468}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16748694.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16748694"}}, "parent": {"id": 16739468, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16739468.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16739468"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Hi, @scpeters. With John's proposed componentwise checks I think it would be OK to merge and move on. Without that I don't think the test is meaningful. I agree it would be nice not to entangle the math:: change with this PR.", "markup": "markdown", "html": "<p>Hi, @scpeters. With John's proposed componentwise checks I think it would be OK to merge and move on. Without that I don't think the test is meaningful. I agree it would be nice not to entangle the math:: change with this PR.</p>", "type": "rendered"}, "created_on": "2016-04-04T23:23:20.707277+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-04-04T23:23:20.773167+00:00", "type": "pullrequest_comment", "id": 16748694}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16749520.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16749520"}}, "parent": {"id": 16748694, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/16748694.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-16748694"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Ok, I'll work on those issues in parallel. I'll merge as soon as I have a 2nd approval.", "markup": "markdown", "html": "<p>Ok, I'll work on those issues in parallel. I'll merge as soon as I have a 2nd approval.</p>", "type": "rendered"}, "created_on": "2016-04-04T23:42:34.527935+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-04-04T23:42:34.533437+00:00", "type": "pullrequest_comment", "id": 16749520}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18268233.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18268233"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Is `[wikipedia]` supposed to have a link?", "markup": "markdown", "html": "<p>Is <code>[wikipedia]</code> supposed to have a link?</p>", "type": "rendered"}, "created_on": "2016-05-09T20:36:42.281397+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 404, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-09T20:36:42.283962+00:00", "type": "pullrequest_comment", "id": 18268233}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18337432.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18337432"}}, "parent": {"id": 18268233, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18268233.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18268233"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "added in 2af8ffc69146", "markup": "markdown", "html": "<p>added in <a href=\"#!/ignitionrobotics/ign-math/commits/2af8ffc69146\" rel=\"nofollow\" class=\"ap-connect-link\">2af8ffc69146</a></p>", "type": "rendered"}, "created_on": "2016-05-11T06:30:36.137125+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-11T06:30:36.139665+00:00", "type": "pullrequest_comment", "id": 18337432}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18268915.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18268915"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Document params and fix comment to sat `1e-12`?", "markup": "markdown", "html": "<p>Document params and fix comment to sat <code>1e-12</code>?</p>", "type": "rendered"}, "created_on": "2016-05-09T20:54:08.986110+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 670, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-09T20:54:08.988501+00:00", "type": "pullrequest_comment", "id": 18268915}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18327605.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18327605"}}, "parent": {"id": 18268915, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18268915.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18268915"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "updated docs and switched to 1e-6 in c599bc4 while keeping the same behavior", "markup": "markdown", "html": "<p>updated docs and switched to 1e-6 in <a href=\"#!/ignitionrobotics/ign-math/commits/c599bc4\" rel=\"nofollow\" class=\"ap-connect-link\">c599bc4</a> while keeping the same behavior</p>", "type": "rendered"}, "created_on": "2016-05-10T22:33:55.076696+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-10T22:33:55.079099+00:00", "type": "pullrequest_comment", "id": 18327605}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18269593.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18269593"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Could you elaborate how you got to this equation? It looks a bit different from the one on the paper and I'm not sure what are the steps to get to this :)", "markup": "markdown", "html": "<p>Could you elaborate how you got to this equation? It looks a bit different from the one on the paper and I'm not sure what are the steps to get to this :)</p>", "type": "rendered"}, "created_on": "2016-05-09T21:12:47.024922+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 453, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-09T21:12:47.027110+00:00", "type": "pullrequest_comment", "id": 18269593}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18338748.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18338748"}}, "parent": {"id": 18269593, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18269593.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18269593"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "I added some explanation in 697dd0aea16f: it's a combination of 5.12 and 5.14 and subtracting angles instead of multiplying by a rotation matrix. Let me know if that helps", "markup": "markdown", "html": "<p>I added some explanation in <a href=\"#!/ignitionrobotics/ign-math/commits/697dd0aea16f\" rel=\"nofollow\" class=\"ap-connect-link\">697dd0aea16f</a>: it's a combination of 5.12 and 5.14 and subtracting angles instead of multiplying by a rotation matrix. Let me know if that helps</p>", "type": "rendered"}, "created_on": "2016-05-11T07:07:19.478648+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-11T07:07:19.481768+00:00", "type": "pullrequest_comment", "id": 18338748}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18270142.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18270142"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "I might be confused here, but wouldn't this be a -90 degree pitch?\n\n~~~\nR = [ cos 0 sin ]\n    [ 0   1  0  ]\n    [ -sin 0 cos]\n~~~\n\n[ref](https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations)", "markup": "markdown", "html": "<p>I might be confused here, but wouldn't this be a -90 degree pitch?</p>\n<div class=\"codehilite\"><pre><span></span>R = [ cos 0 sin ]\n    [ 0   1  0  ]\n    [ -sin 0 cos]\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations\" rel=\"nofollow\">ref</a></p>", "type": "rendered"}, "created_on": "2016-05-09T21:30:30.644129+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 518, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-09T21:30:30.646747+00:00", "type": "pullrequest_comment", "id": 18270142}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18325217.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=include%2Fignition%2Fmath%2FMassMatrix3.hh"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18325217"}}, "parent": {"id": 18270142, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18270142.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18270142"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "you're right, I just changed the rotation matrix in the comment in 40f0b13e0cc4", "markup": "markdown", "html": "<p>you're right, I just changed the rotation matrix in the comment in <a href=\"#!/ignitionrobotics/ign-math/commits/40f0b13e0cc4\" rel=\"nofollow\" class=\"ap-connect-link\">40f0b13e0cc4</a></p>", "type": "rendered"}, "created_on": "2016-05-10T21:11:51.075787+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "include/ignition/math/MassMatrix3.hh"}, "updated_on": "2016-05-10T21:11:51.083457+00:00", "type": "pullrequest_comment", "id": 18325217}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18270666.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18270666"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "document `_tolerance`", "markup": "markdown", "html": "<p>document <code>_tolerance</code></p>", "type": "rendered"}, "created_on": "2016-05-09T21:48:17.214079+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 429, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-05-09T21:48:17.217182+00:00", "type": "pullrequest_comment", "id": 18270666}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18337692.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18337692"}}, "parent": {"id": 18270666, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18270666.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18270666"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "6b68bedf1e75", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-math/commits/6b68bedf1e75\" rel=\"nofollow\" class=\"ap-connect-link\">6b68bedf1e75</a></p>", "type": "rendered"}, "created_on": "2016-05-11T06:38:13.302128+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-05-11T06:38:13.304591+00:00", "type": "pullrequest_comment", "id": 18337692}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18271388.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:6129b20ed394..2166b54dca89?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18271388"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "This is not legal C++ code. The identifier `_Ixxyyzz` violates the prohibition on starting an identifier with an underscore followed by a capital letter. Identifiers like that are reserved for language system's internal use. See the [stackoverflow answer here](http://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier) for the rules. Spoiler alert: `17.4.3.2.1 Each name that ... begins with an underscore followed by an uppercase letter is reserved to the implementation for any use.`", "markup": "markdown", "html": "<p>This is not legal C++ code. The identifier <code>_Ixxyyzz</code> violates the prohibition on starting an identifier with an underscore followed by a capital letter. Identifiers like that are reserved for language system's internal use. See the <a data-is-external-link=\"true\" href=\"http://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier\" rel=\"nofollow\">stackoverflow answer here</a> for the rules. Spoiler alert: <code>17.4.3.2.1 Each name that ... begins with an underscore followed by an uppercase letter is reserved to the implementation for any use.</code></p>", "type": "rendered"}, "created_on": "2016-05-09T22:16:37.626372+00:00", "user": {"display_name": "Michael Sherman", "uuid": "{997c6f1e-e2a3-4f0e-8fa4-fed745840d50}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D"}, "html": {"href": "https://bitbucket.org/%7B997c6f1e-e2a3-4f0e-8fa4-fed745840d50%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355dea43ed612b7be3c9361df2d52213d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMS-2.png"}}, "nickname": "sherm1", "type": "user", "account_id": "557058:4590c319-b75f-4187-93d4-6cec61da74f7"}, "inline": {"to": 432, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-05-09T22:16:37.703704+00:00", "type": "pullrequest_comment", "id": 18271388}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18275076.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/ignitionrobotics/ign-math:None..None?path=src%2FMassMatrix3_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18275076"}}, "parent": {"id": 18271388, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18271388.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18271388"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "fixed in 630971d26347", "markup": "markdown", "html": "<p>fixed in <a href=\"#!/ignitionrobotics/ign-math/commits/630971d26347\" rel=\"nofollow\" class=\"ap-connect-link\">630971d26347</a></p>", "type": "rendered"}, "created_on": "2016-05-10T01:16:31.621291+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": null, "from": null, "path": "src/MassMatrix3_TEST.cc"}, "updated_on": "2016-05-10T01:16:31.624263+00:00", "type": "pullrequest_comment", "id": 18275076}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82/comments/18371869.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82/_/diff#comment-18371869"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/82.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/82"}}, "title": "MassMatrix::PrincipalAxesOffset (eigenvectors of inertia matrix)"}, "content": {"raw": "Thanks for the reviews!", "markup": "markdown", "html": "<p>Thanks for the reviews!</p>", "type": "rendered"}, "created_on": "2016-05-11T17:10:12.105589+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-05-11T17:10:12.108525+00:00", "type": "pullrequest_comment", "id": 18371869}], "page": 1, "size": 37}