{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/250/comments/68805138.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/250/_/diff#comment-68805138"}}, "parent": {"id": 68800167, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/250/comments/68800167.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/250/_/diff#comment-68800167"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/pullrequests/250.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/pull-requests/250"}}, "title": "Added cylinder class"}, "content": {"raw": "It\u2019s not an error; it\u2019s very much intentional, and it works as intended. An explanation:\n\nSuppose you have headers `A.hh` and `B.hh`, and these two headers are intended to work together, such that if one of them gets included, the other one needs to be included as well, and in a particular order, like\n\n    #include <A.hh>\n    #include <B.hh>\n\nYou don\u2019t want to force the user to know that both files need to be included in this particular order. You also want to be robust to the scenario that the user includes both of them in the wrong order, e.g.\n\n    #include <B.hh>\n    #include <A.hh>\n\nbecause the user might not know any better.\n\nThe solution to this is to put the line `#include <B.hh>` at the **bottom** of `A.hh`, while putting `#include <A.hh>` at the **top** of `B.hh`.\n\nThis ensures that whether the user includes either `A.hh` or `B.hh` or if the user includes both in the wrong order \\(basically, no matter how a user might try to cram these headers into their translation unit\\) the order in which the include directives get expanded will produce the desired result.", "markup": "markdown", "html": "<p>It\u2019s not an error; it\u2019s very much intentional, and it works as intended. An explanation:</p>\n<p>Suppose you have headers <code>A.hh</code> and <code>B.hh</code>, and these two headers are intended to work together, such that if one of them gets included, the other one needs to be included as well, and in a particular order, like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;A.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;B.hh&gt;</span><span class=\"cp\"></span>\n</pre></div>\n\n\n<p>You don\u2019t want to force the user to know that both files need to be included in this particular order. You also want to be robust to the scenario that the user includes both of them in the wrong order, e.g.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;B.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;A.hh&gt;</span><span class=\"cp\"></span>\n</pre></div>\n\n\n<p>because the user might not know any better.</p>\n<p>The solution to this is to put the line <code>#include &lt;B.hh&gt;</code> at the <strong>bottom</strong> of <code>A.hh</code>, while putting <code>#include &lt;A.hh&gt;</code> at the <strong>top</strong> of <code>B.hh</code>.</p>\n<p>This ensures that whether the user includes either <code>A.hh</code> or <code>B.hh</code> or if the user includes both in the wrong order (basically, no matter how a user might try to cram these headers into their translation unit) the order in which the include directives get expanded will produce the desired result.</p>", "type": "rendered"}, "created_on": "2018-07-03T01:28:09.658049+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-07-03T01:29:41.743728+00:00", "type": "pullrequest_comment", "id": 68805138}