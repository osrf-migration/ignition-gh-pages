{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/76/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/76.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/76/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/76/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/76/many-objects-are-not-std-move-able"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/76/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Many objects are not std::move-able", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In order to use `std::move` semantics in c++ (like assignment of unique_ptr's), objects need to have move constructor and move assignment operators defined (also known as the [rule of 5](https://en.wikipedia.org/wiki/Rule_of_three_(C%2B%2B_programming)#Rule_of_Five). This lets you do things like this:\r\n\r\n~~~\r\nstd::unique_ptr<math::Pose3d> ptr1, ptr2;\r\nptr1.reset(new math::Pose3d);\r\nptr2 = ptr1;\r\n~~~\r\n\r\nbut that doesn't currently work because we aren't following the rule of 5 for many of our classes. I mention this because I was trying to use it in a gazebo plugin and it didn't work. I've added some statements to unit tests in 90dce39 that illustrate this failure to compile.", "markup": "markdown", "html": "<p>In order to use <code>std::move</code> semantics in c++ (like assignment of unique_ptr's), objects need to have move constructor and move assignment operators defined (also known as the <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Rule_of_three_(C%2B%2B_programming)#Rule_of_Five\" rel=\"nofollow\">rule of 5</a>. This lets you do things like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">unique_ptr</span><span class=\"o\">&lt;</span><span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Pose3d</span><span class=\"o\">&gt;</span> <span class=\"nt\">ptr1</span><span class=\"o\">,</span> <span class=\"nt\">ptr2</span><span class=\"o\">;</span>\n<span class=\"nt\">ptr1</span><span class=\"p\">.</span><span class=\"nc\">reset</span><span class=\"o\">(</span><span class=\"nt\">new</span> <span class=\"nt\">math</span><span class=\"p\">::</span><span class=\"nd\">Pose3d</span><span class=\"o\">);</span>\n<span class=\"nt\">ptr2</span> <span class=\"o\">=</span> <span class=\"nt\">ptr1</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>but that doesn't currently work because we aren't following the rule of 5 for many of our classes. I mention this because I was trying to use it in a gazebo plugin and it didn't work. I've added some statements to unit tests in <a href=\"#!/ignitionrobotics/ign-math/commits/90dce39\" rel=\"nofollow\" class=\"ap-connect-link\">90dce39</a> that illustrate this failure to compile.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-08-04T22:13:15.098150+00:00", "milestone": null, "updated_on": "2017-08-04T22:13:26.124220+00:00", "type": "issue", "id": 76}