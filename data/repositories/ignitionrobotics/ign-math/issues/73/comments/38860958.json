{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38860958.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38860958"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "looking at that `Triangle3::Set` function; is it weird to clamp the index and set it anyway? So `Set(-1, _value)` is equivalent to `Set(0, _value)`. I guess that's fine as long as you document the behavior.", "markup": "markdown", "html": "<p>looking at that <code>Triangle3::Set</code> function; is it weird to clamp the index and set it anyway? So <code>Set(-1, _value)</code> is equivalent to <code>Set(0, _value)</code>. I guess that's fine as long as you document the behavior.</p>", "type": "rendered"}, "created_on": "2017-08-03T00:22:17.402403+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38860958}