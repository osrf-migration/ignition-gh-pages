{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/37897957.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-37897957"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "Another possible solution would be to have a function like `Set(_index, _value)`, similar to [Triangle3::Set(const unsigned int _index, const Vector3<T> &_pt)](#!/ignitionrobotics/ign-math/src/694f7d58fb95327146f43069b8ed83aeaa13b8a4/include/ignition/math/Triangle3.hh?fileviewer=file-view-default#Triangle3.hh-52)", "markup": "markdown", "html": "<p>Another possible solution would be to have a function like <code>Set(_index, _value)</code>, similar to <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/694f7d58fb95327146f43069b8ed83aeaa13b8a4/include/ignition/math/Triangle3.hh?fileviewer=file-view-default#Triangle3.hh-52\" rel=\"nofollow\">Triangle3::Set(const unsigned int _index, const Vector3&lt;T&gt; &amp;_pt)</a></p>", "type": "rendered"}, "created_on": "2017-06-28T16:54:18.416756+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 37897957}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/37903584.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-37903584"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "I think it could be added, but we have to be careful about buffer overflows.", "markup": "markdown", "html": "<p>I think it could be added, but we have to be careful about buffer overflows.</p>", "type": "rendered"}, "created_on": "2017-06-28T23:14:50.144229+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 37903584}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38860958.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38860958"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "looking at that `Triangle3::Set` function; is it weird to clamp the index and set it anyway? So `Set(-1, _value)` is equivalent to `Set(0, _value)`. I guess that's fine as long as you document the behavior.", "markup": "markdown", "html": "<p>looking at that <code>Triangle3::Set</code> function; is it weird to clamp the index and set it anyway? So <code>Set(-1, _value)</code> is equivalent to <code>Set(0, _value)</code>. I guess that's fine as long as you document the behavior.</p>", "type": "rendered"}, "created_on": "2017-08-03T00:22:17.402403+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38860958}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38861783.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38861783"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "I think it would be weird if we clamped it but then didn't set it, right? :)", "markup": "markdown", "html": "<p>I think it would be weird if we clamped it but then didn't set it, right? :)</p>", "type": "rendered"}, "created_on": "2017-08-03T01:51:12.911754+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 38861783}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38862695.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38862695"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "I was thinking that instead of returning `void` it could return a `bool` based on whether the index was valid. What I meant to say is that it seems weird to set one of the values on the end if an invalid index is given. But the weird behavior can be accepted if it's documented.", "markup": "markdown", "html": "<p>I was thinking that instead of returning <code>void</code> it could return a <code>bool</code> based on whether the index was valid. What I meant to say is that it seems weird to set one of the values on the end if an invalid index is given. But the weird behavior can be accepted if it's documented.</p>", "type": "rendered"}, "created_on": "2017-08-03T03:21:57.431048+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38862695}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38877962.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38877962"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "Oh I see, I have no strong opinions about this.", "markup": "markdown", "html": "<p>Oh I see, I have no strong opinions about this.</p>", "type": "rendered"}, "created_on": "2017-08-03T15:41:18.737762+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 38877962}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38890178.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38890178"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "I also think it's weird to clamp, unless it's properly documented (and returning ``bool`` in addition is even better). But it's not the kind of behaviour I would expect from a setter function... it either does the job, or it fails, IMO. So I would even say not clamping and just returning false would make sense. But since it's being done already, there is the risk of breaking something elsewhere, so maybe keeping this behaviour but documenting and returning ``bool`` will be the best way to go?", "markup": "markdown", "html": "<p>I also think it's weird to clamp, unless it's properly documented (and returning <code>bool</code> in addition is even better). But it's not the kind of behaviour I would expect from a setter function... it either does the job, or it fails, IMO. So I would even say not clamping and just returning false would make sense. But since it's being done already, there is the risk of breaking something elsewhere, so maybe keeping this behaviour but documenting and returning <code>bool</code> will be the best way to go?</p>", "type": "rendered"}, "created_on": "2017-08-04T07:36:51.562485+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": null, "type": "issue_comment", "id": 38890178}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38903774.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38903774"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "Well the `Triangle::Set` function is already clamping; the question is whether we want to follow that pattern with Vector3 or return `bool` since that seems to make more sense to some of us.\n\nI guess the clamping behavior was introduced by @nkoenig in f597ef1aa24ff19 when getting rid of exceptions.", "markup": "markdown", "html": "<p>Well the <code>Triangle::Set</code> function is already clamping; the question is whether we want to follow that pattern with Vector3 or return <code>bool</code> since that seems to make more sense to some of us.</p>\n<p>I guess the clamping behavior was introduced by @nkoenig in <a href=\"#!/ignitionrobotics/ign-math/commits/f597ef1aa24ff19\" rel=\"nofollow\" class=\"ap-connect-link\">f597ef1aa24ff19</a> when getting rid of exceptions.</p>", "type": "rendered"}, "created_on": "2017-08-04T17:45:02.530219+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 38903774}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/38994040.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-38994040"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "`std::vector::operator[]` [returns a reference and doesn't do bounds checking](http://www.cplusplus.com/reference/vector/vector/operator[]/), while `std::vector::at` [raises an exception if the index is out of bounds](http://www.cplusplus.com/reference/vector/vector/at/). I'd vote for copying this pattern over adding `Set(_index, _value)` as users familiar with `std::vector` may find it more intuitive.", "markup": "markdown", "html": "<p><code>std::vector::operator[]</code> <a data-is-external-link=\"true\" href=\"http://www.cplusplus.com/reference/vector/vector/operator[]/\" rel=\"nofollow\">returns a reference and doesn't do bounds checking</a>, while <code>std::vector::at</code> <a data-is-external-link=\"true\" href=\"http://www.cplusplus.com/reference/vector/vector/at/\" rel=\"nofollow\">raises an exception if the index is out of bounds</a>. I'd vote for copying this pattern over adding <code>Set(_index, _value)</code> as users familiar with <code>std::vector</code> may find it more intuitive.</p>", "type": "rendered"}, "created_on": "2017-08-09T17:56:23.274051+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 38994040}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/39352834.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-39352834"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "I strongly strongly agree with Shane on this.\n\nWhile I'm all in favor of safety checks, I don't think clamping adds safety; I think it would only result in confusing unexpected behavior that would make strange situations harder to debug. I think there's also an expectation that access operators like `operator[std::size_t]` are extremely low-cost direct access to memory, so adding in comparisons would unexpectedly penalize its use.\n\nIf we want to add bounds safety, I would propose having an assert that checks the bounds on the index that gets passed in. The assert would only be compiled in debug mode, so it wouldn't affect performance, and it would identify undefined behavior instead of confusingly disguising it.\n\nAlso, I added a non-const reference version of the operator in pull request #181 which I opened prior to seeing this issue posted.", "markup": "markdown", "html": "<p>I strongly strongly agree with Shane on this.</p>\n<p>While I'm all in favor of safety checks, I don't think clamping adds safety; I think it would only result in confusing unexpected behavior that would make strange situations harder to debug. I think there's also an expectation that access operators like <code>operator[std::size_t]</code> are extremely low-cost direct access to memory, so adding in comparisons would unexpectedly penalize its use.</p>\n<p>If we want to add bounds safety, I would propose having an assert that checks the bounds on the index that gets passed in. The assert would only be compiled in debug mode, so it wouldn't affect performance, and it would identify undefined behavior instead of confusingly disguising it.</p>\n<p>Also, I added a non-const reference version of the operator in <a href=\"#!/ignitionrobotics/ign-math/pull-requests/181/adding-non-const-bracket-operators-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #181</a> which I opened prior to seeing this issue posted.</p>", "type": "rendered"}, "created_on": "2017-08-25T20:44:10.699158+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-08-25T20:45:42.532754+00:00", "type": "issue_comment", "id": 39352834}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/39524476.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-39524476"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "+1 to Michael's post and suggestion!", "markup": "markdown", "html": "<p>+1 to Michael's post and suggestion!</p>", "type": "rendered"}, "created_on": "2017-08-31T08:42:30.173198+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": null, "type": "issue_comment", "id": 39524476}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments/41978910.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73#comment-41978910"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}}, "type": "issue", "id": 73, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "ignition::math::Vector3: operator [] does not return reference"}, "content": {"raw": "pull request #181", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-math/pull-requests/181/adding-non-const-bracket-operators-and\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #181</a></p>", "type": "rendered"}, "created_on": "2017-12-19T00:19:20.912593+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 41978910}], "page": 1, "size": 12}