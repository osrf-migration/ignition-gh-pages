{"priority": "trivial", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/44/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/44/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/44/memory-leak-of-rand-randgenerator"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/44/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Memory leak of Rand::randGenerator", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The private `static GeneratorType*` class variable [ignition::math::Rand::randGenerator](#!/ignitionrobotics/ign-math/src/be7428eb46b5aea2690fcbb518dcdcbfbe8063ee/include/ignition/math/Rand.hh?at=default&fileviewer=file-view-default#Rand.hh-77) is [allocated with `new`](#!/ignitionrobotics/ign-math/src/be7428eb46b5aea2690fcbb518dcdcbfbe8063ee/src/Rand.cc?at=default&fileviewer=file-view-default#Rand.cc-38) but is never `delete`d so I think it will leak.\r\n\r\nSince it is a private static variable, I wonder if we can change it to a `std::unique_ptr` without breaking ABI?", "markup": "markdown", "html": "<p>The private <code>static GeneratorType*</code> class variable <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/be7428eb46b5aea2690fcbb518dcdcbfbe8063ee/include/ignition/math/Rand.hh?at=default&amp;fileviewer=file-view-default#Rand.hh-77\" rel=\"nofollow\">ignition::math::Rand::randGenerator</a> is <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/be7428eb46b5aea2690fcbb518dcdcbfbe8063ee/src/Rand.cc?at=default&amp;fileviewer=file-view-default#Rand.cc-38\" rel=\"nofollow\">allocated with <code>new</code></a> but is never <code>delete</code>d so I think it will leak.</p>\n<p>Since it is a private static variable, I wonder if we can change it to a <code>std::unique_ptr</code> without breaking ABI?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2016-04-12T00:16:42.487289+00:00", "milestone": null, "updated_on": "2016-04-25T20:12:48.627359+00:00", "type": "issue", "id": 44}