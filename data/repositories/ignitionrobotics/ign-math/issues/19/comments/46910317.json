{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/19/comments/46910317.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/19#comment-46910317"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/19.json"}}, "type": "issue", "id": 19, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Consider using eigen"}, "content": {"raw": "@nkoenig eigen would allow a nice way to handle 2d simulation with similar data structures. Is it possible to keep eigen as a build dependency for ign-physics but only use ignition-math types in the API that faces ign-gazebo?", "markup": "markdown", "html": "<p>@nkoenig eigen would allow a nice way to handle 2d simulation with similar data structures. Is it possible to keep eigen as a build dependency for ign-physics but only use ignition-math types in the API that faces ign-gazebo?</p>", "type": "rendered"}, "created_on": "2018-07-24T17:33:33.627420+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 46910317}