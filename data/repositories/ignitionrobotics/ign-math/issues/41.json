{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/41/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/41.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/41/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/41/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/41/vector3-operator"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/41/vote"}}, "reporter": {"display_name": "Denys Kotelovych", "uuid": "{d5d4aed9-44fc-4a54-9c61-5b97c922b704}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd5d4aed9-44fc-4a54-9c61-5b97c922b704%7D"}, "html": {"href": "https://bitbucket.org/%7Bd5d4aed9-44fc-4a54-9c61-5b97c922b704%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/68635560755ca7c3bc83f04c7fb6cf5bd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsDK-3.png"}}, "nickname": "ilidar", "type": "user", "account_id": "557058:5b894372-fdd6-4476-ba24-d32157fe5572"}, "title": "Vector3 operator <", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This commit caused undefined behavior or even assert for sorting Vector3\r\n62370199526c199423ed81c9bc58d0913eaeca04, e.g.:\r\n\r\nv1 = (1.0, 2.0, 3.0), v2 = (3.0, 2.0, 1.0)\r\n\r\nProbably would be better to use something like this:\r\n```\r\n#!c++\r\nbool operator<(const Vector3d &lhs, const Vector3d &rhs) {\r\n  if (lhs.X() < rhs.X())\r\n    return true;\r\n  if (lhs.X() > rhs.X())\r\n    return false;\r\n  return lhs.Y() < rhs.Y();\r\n}\r\n```", "markup": "markdown", "html": "<p>This commit caused undefined behavior or even assert for sorting Vector3\n<a href=\"#!/ignitionrobotics/ign-math/commits/62370199526c199423ed81c9bc58d0913eaeca04\" rel=\"nofollow\" class=\"ap-connect-link\">62370199526c199423ed81c9bc58d0913eaeca04</a>, e.g.:</p>\n<p>v1 = (1.0, 2.0, 3.0), v2 = (3.0, 2.0, 1.0)</p>\n<p>Probably would be better to use something like this:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"k\">operator</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">Vector3d</span> <span class=\"o\">&amp;</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">Vector3d</span> <span class=\"o\">&amp;</span><span class=\"n\">rhs</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">rhs</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">rhs</span><span class=\"p\">.</span><span class=\"n\">X</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"n\">lhs</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">rhs</span><span class=\"p\">.</span><span class=\"n\">Y</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-02-15T18:41:42.327187+00:00", "milestone": null, "updated_on": "2016-03-14T11:20:44.258421+00:00", "type": "issue", "id": 41}