{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/comments/40303468.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/86#comment-40303468"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86.json"}}, "type": "issue", "id": 86, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Reconsider using static functions for Rand"}, "content": {"raw": "That sounds necessary for people who want repeatability.\n\nIt could still be nice to have an easy interface for users who don't care and don't want to hold their own class instance. Is that reasonable?", "markup": "markdown", "html": "<p>That sounds necessary for people who want repeatability.</p>\n<p>It could still be nice to have an easy interface for users who don't care and don't want to hold their own class instance. Is that reasonable?</p>", "type": "rendered"}, "created_on": "2017-10-04T22:23:28.541663+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 40303468}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/comments/40303618.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/86#comment-40303618"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86.json"}}, "type": "issue", "id": 86, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Reconsider using static functions for Rand"}, "content": {"raw": "There may still be thread safety issues. We could consider using [`thread_local`](http://en.cppreference.com/w/cpp/language/storage_duration) to resolve that, although that could produce some unexpected (but perhaps not very noticeable) overhead if threads are being created and destroyed. A static mutex might be a better solution.\n\nI think my biggest concern is the ability for one part of the code to interfere with the results of another part of the code by arbitrarily changing the seed. Therefore, I would suggest that we:\n\n1. Create a class to wrap all this functionality up in an stateful instance. The user can have control over the seed of this instance.\n2. Remove the `Rand::Seed(unsigned int)` function so that users can no longer arbitrary seed these static convenience functions. If a user wants control over the seed, they should use their own instance.\n3. Do something to guard against potential threading issues for the static functions.\n\nThen users who just want an easy and convenient way to get random number generators can do so without any risk of interference. Users who want to be able to control the behavior of their random number generation can also do so without any risk of interference.", "markup": "markdown", "html": "<p>There may still be thread safety issues. We could consider using <a data-is-external-link=\"true\" href=\"http://en.cppreference.com/w/cpp/language/storage_duration\" rel=\"nofollow\"><code>thread_local</code></a> to resolve that, although that could produce some unexpected (but perhaps not very noticeable) overhead if threads are being created and destroyed. A static mutex might be a better solution.</p>\n<p>I think my biggest concern is the ability for one part of the code to interfere with the results of another part of the code by arbitrarily changing the seed. Therefore, I would suggest that we:</p>\n<ol>\n<li>Create a class to wrap all this functionality up in an stateful instance. The user can have control over the seed of this instance.</li>\n<li>Remove the <code>Rand::Seed(unsigned int)</code> function so that users can no longer arbitrary seed these static convenience functions. If a user wants control over the seed, they should use their own instance.</li>\n<li>Do something to guard against potential threading issues for the static functions.</li>\n</ol>\n<p>Then users who just want an easy and convenient way to get random number generators can do so without any risk of interference. Users who want to be able to control the behavior of their random number generation can also do so without any risk of interference.</p>", "type": "rendered"}, "created_on": "2017-10-04T22:38:40.179840+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 40303618}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/comments/40304674.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/86#comment-40304674"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86.json"}}, "type": "issue", "id": 86, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Reconsider using static functions for Rand"}, "content": {"raw": "It makes sense to remove the ability to set the seed for the static functions. That sounds like a good plan to me.", "markup": "markdown", "html": "<p>It makes sense to remove the ability to set the seed for the static functions. That sounds like a good plan to me.</p>", "type": "rendered"}, "created_on": "2017-10-05T00:53:13.828311+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 40304674}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/comments/41979071.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/86#comment-41979071"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86.json"}}, "type": "issue", "id": 86, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Reconsider using static functions for Rand"}, "content": {"raw": "I'm not sure if we'll have a chance to fix this before the 4.0 release", "markup": "markdown", "html": "<p>I'm not sure if we'll have a chance to fix this before the 4.0 release</p>", "type": "rendered"}, "created_on": "2017-12-19T00:34:59.619941+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 41979071}], "page": 1, "size": 4}