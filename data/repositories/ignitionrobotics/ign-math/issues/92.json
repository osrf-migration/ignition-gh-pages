{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/92/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/92.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/92/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/92/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/92/plane-normal-and-offset-incorrectly-used"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/92/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "Plane Normal and offset incorrectly used by Plane::Side()", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The `Plane` constructor defines a plane using a [a normal vector and an offset along that vector](#!/ignitionrobotics/ign-math/src/8165048ff0af4328acdf176e0fddc1377c99f04b/include/ignition/math/Plane.hh?at=default&fileviewer=file-view-default#Plane.hh-63:65). For example, `Planed plane(Vector3d(1, 0, 0), 0.5);` constructs a plane parallel to the Y-Z plane passing through point (0.5, 0, 0).\r\n\r\nWhen I wrote pull request #194 I misunderstood and wrote the following test. It should fail, but it actually passes.\r\n\r\n```C++\r\n  // Construct an angled vertical plane\r\n  Planed plane(Vector3d(1, 1, 0), 1);\r\n\r\n  // 1m^3 box with one corner 1cm away from front side of plane\r\n  {\r\n    Box box(Vector3d(0.51, 0.51, -.5), Vector3d(1.51, 1.51, .5));\r\n    // WRONG, Side should report BOTH_SIDES, not positive side\r\n    EXPECT_EQ(Planed::POSITIVE_SIDE, plane.Side(box));\r\n  }\r\n```\r\n\r\nHere's what the test looks like from the top down. The gray vector is the normal. The red line is the plane. The blue box is the box being tested. The box clearly lies on both sides of the plane, but `Plane::Side(Box)` reports `POSITIVE_SIDE`.\r\n\r\n![ign_math_plane_side_bug.png](data/bitbucket.org/repo/dg5enz/images/1310441071-ign_math_plane_side_bug.png)\r\n\r\nIt's as if `Plane::Side(Box)` thinks the plane passes through points (1, 0, 0) and (0, 1, 0), but an offset of  1 along the normal actually puts the plane further out.", "markup": "markdown", "html": "<p>The <code>Plane</code> constructor defines a plane using a <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/src/8165048ff0af4328acdf176e0fddc1377c99f04b/include/ignition/math/Plane.hh?at=default&amp;fileviewer=file-view-default#Plane.hh-63:65\" rel=\"nofollow\">a normal vector and an offset along that vector</a>. For example, <code>Planed plane(Vector3d(1, 0, 0), 0.5);</code> constructs a plane parallel to the Y-Z plane passing through point (0.5, 0, 0).</p>\n<p>When I wrote <a href=\"#!/ignitionrobotics/ign-math/pull-requests/194/wip-additional-tests-for-plane-side\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #194</a> I misunderstood and wrote the following test. It should fail, but it actually passes.</p>\n<div class=\"codehilite language-C++\"><pre><span></span>  <span class=\"c1\">// Construct an angled vertical plane</span>\n  <span class=\"n\">Planed</span> <span class=\"nf\">plane</span><span class=\"p\">(</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// 1m^3 box with one corner 1cm away from front side of plane</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">Box</span> <span class=\"n\">box</span><span class=\"p\">(</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"mf\">0.51</span><span class=\"p\">,</span> <span class=\"mf\">0.51</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">.5</span><span class=\"p\">),</span> <span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"mf\">1.51</span><span class=\"p\">,</span> <span class=\"mf\">1.51</span><span class=\"p\">,</span> <span class=\"mf\">.5</span><span class=\"p\">));</span>\n    <span class=\"c1\">// WRONG, Side should report BOTH_SIDES, not positive side</span>\n    <span class=\"n\">EXPECT_EQ</span><span class=\"p\">(</span><span class=\"n\">Planed</span><span class=\"o\">::</span><span class=\"n\">POSITIVE_SIDE</span><span class=\"p\">,</span> <span class=\"n\">plane</span><span class=\"p\">.</span><span class=\"n\">Side</span><span class=\"p\">(</span><span class=\"n\">box</span><span class=\"p\">));</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Here's what the test looks like from the top down. The gray vector is the normal. The red line is the plane. The blue box is the box being tested. The box clearly lies on both sides of the plane, but <code>Plane::Side(Box)</code> reports <code>POSITIVE_SIDE</code>.</p>\n<p><img alt=\"ign_math_plane_side_bug.png\" src=\"data/bitbucket.org/repo/dg5enz/images/1310441071-ign_math_plane_side_bug.png\" /></p>\n<p>It's as if <code>Plane::Side(Box)</code> thinks the plane passes through points (1, 0, 0) and (0, 1, 0), but an offset of  1 along the normal actually puts the plane further out.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-22T18:31:59.913994+00:00", "milestone": null, "updated_on": "2018-03-22T18:31:59.913994+00:00", "type": "issue", "id": 92}