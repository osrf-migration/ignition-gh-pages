{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/73/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/73/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/73/ignition-math-vector3-operator-does-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/73/vote"}}, "reporter": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "title": "ignition::math::Vector3: operator [] does not return reference", "component": null, "votes": 0, "watches": 1, "content": {"raw": "``math::Vector3::operator[]`` does not return a reference, which sometimes can be useful. For example, as it is, we cannot use the operator for writing the i'th value conveniently in loops, e.g.\r\n\r\n```\r\n#!c++\r\n\r\nfor (int i=0; i<2; ++i)\r\n  v[i] = ...\r\n```\r\n\r\ninstead, we have to use X()/Y()/Z() functions.\r\n\r\nIs this intended, or would it be a good idea to return a reference from the operator instead? I can submit a PR for this if everyone agrees.\r\n\r\nSee also related [Gazebo issue 2713](https://bitbucket.org/osrf/gazebo/pull-requests/2713).", "markup": "markdown", "html": "<p><code>math::Vector3::operator[]</code> does not return a reference, which sometimes can be useful. For example, as it is, we cannot use the operator for writing the i'th value conveniently in loops, e.g.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n  <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">...</span>\n</pre></div>\n\n\n<p>instead, we have to use X()/Y()/Z() functions.</p>\n<p>Is this intended, or would it be a good idea to return a reference from the operator instead? I can submit a PR for this if everyone agrees.</p>\n<p>See also related <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/2713\" rel=\"nofollow\">Gazebo issue 2713</a>.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-06-20T05:25:59.974575+00:00", "milestone": null, "updated_on": "2017-12-19T00:19:20.889288+00:00", "type": "issue", "id": 73}