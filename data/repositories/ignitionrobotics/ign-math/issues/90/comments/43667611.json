{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/90/comments/43667611.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/90#comment-43667611"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/90.json"}}, "type": "issue", "id": 90, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Add sphere and cylinder shapes"}, "content": {"raw": "I would actually urge us to think carefully before adding more shape classes to `ign-math`.\n\nAs we experienced [with the frustum class](#!/ignitionrobotics/ign-math/pull-requests/193), collision detection is a really really hard problem, and it becomes combinatorially harder as you add arbitrarily more shape types to the mix.\n\nIf anything, I would suggest that we consider ways to have better integration with third-party collision detectors like FCL, ODE, Bullet, etc. Ideally we'd provide an abstract shape + collision detection interface for third-party collision detection libraries, and then choose a few popular open source collision detectors to provide stable support for, in the form of an optional component library.\n\nIt's not totally obvious to me where that kind of abstract shape concept would belong. I'm a bit reluctant to put it in `ign-math`, since `ign-math` (as far as I'm aware) has a history of just containing basic plain data types with some convenience functions. It wasn't particularly built to deal with abstraction, and supporting multiple collision detectors would be best facilitated by a plugin framework. `ign-physics` is all about abstraction and plugins, so I'd feel at least somewhat inclined to put this kind of thing in there instead.", "markup": "markdown", "html": "<p>I would actually urge us to think carefully before adding more shape classes to <code>ign-math</code>.</p>\n<p>As we experienced <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/pull-requests/193\" rel=\"nofollow\">with the frustum class</a>, collision detection is a really really hard problem, and it becomes combinatorially harder as you add arbitrarily more shape types to the mix.</p>\n<p>If anything, I would suggest that we consider ways to have better integration with third-party collision detectors like FCL, ODE, Bullet, etc. Ideally we'd provide an abstract shape + collision detection interface for third-party collision detection libraries, and then choose a few popular open source collision detectors to provide stable support for, in the form of an optional component library.</p>\n<p>It's not totally obvious to me where that kind of abstract shape concept would belong. I'm a bit reluctant to put it in <code>ign-math</code>, since <code>ign-math</code> (as far as I'm aware) has a history of just containing basic plain data types with some convenience functions. It wasn't particularly built to deal with abstraction, and supporting multiple collision detectors would be best facilitated by a plugin framework. <code>ign-physics</code> is all about abstraction and plugins, so I'd feel at least somewhat inclined to put this kind of thing in there instead.</p>", "type": "rendered"}, "created_on": "2018-03-02T18:54:53.680509+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 43667611}