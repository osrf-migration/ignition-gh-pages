{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/90/comments/44724749.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/90#comment-44724749"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/90.json"}}, "type": "issue", "id": 90, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Add sphere and cylinder shapes"}, "content": {"raw": "I think geometry abstraction can be very useful. We currently have [gazebo::physics::Shape](http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1Shape.html) and I agree it belongs more in math than in physics. Interestingly though, there is no such concept on `gazebo::rendering`, in fact, rendering geometries are created by `gazebo::common::MeshManager`.\n\nTemplating for different numbers of dimensions also sounds like a good idea. Ignition math currently has completely separate classes for things like `Vector2`,  `3` and `4`, which means there is some duplicate code and some inconsistent API (issue #71 for example).", "markup": "markdown", "html": "<p>I think geometry abstraction can be very useful. We currently have <a data-is-external-link=\"true\" href=\"http://gazebosim.org/api/dev/classgazebo_1_1physics_1_1Shape.html\" rel=\"nofollow\">gazebo::physics::Shape</a> and I agree it belongs more in math than in physics. Interestingly though, there is no such concept on <code>gazebo::rendering</code>, in fact, rendering geometries are created by <code>gazebo::common::MeshManager</code>.</p>\n<p>Templating for different numbers of dimensions also sounds like a good idea. Ignition math currently has completely separate classes for things like <code>Vector2</code>,  <code>3</code> and <code>4</code>, which means there is some duplicate code and some inconsistent API (issue <a href=\"#!/ignitionrobotics/ign-math/issues/71/add-functions-from-vector3-to-vector2-and\" rel=\"nofollow\" title=\"Add functions from Vector3 to Vector2 and Vector4\" class=\"ap-connect-link\">#71</a> for example).</p>", "type": "rendered"}, "created_on": "2018-04-16T15:44:31.420387+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 44724749}