{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/86/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/86/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/86/reconsider-using-static-functions-for-rand"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/86/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Reconsider using static functions for Rand", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I've noticed that all of the functions in `ignition::math::Rand` are static functions. I'm pretty certain this is not thread safe, and it could cause conflicts if different users within the same application want to have control over the seed (which can be useful for various reasons, like using a predetermined seed to get deterministic results for tests).\r\n\r\nI would propose that we instead create a class to wrap this functionality, and each instance of the class will manage its own seed, random device, and distribution member independently from all other instances.\r\n\r\nIf people agree with this idea, I'd be happy to make the necessary changes.", "markup": "markdown", "html": "<p>I've noticed that all of the functions in <code>ignition::math::Rand</code> are static functions. I'm pretty certain this is not thread safe, and it could cause conflicts if different users within the same application want to have control over the seed (which can be useful for various reasons, like using a predetermined seed to get deterministic results for tests).</p>\n<p>I would propose that we instead create a class to wrap this functionality, and each instance of the class will manage its own seed, random device, and distribution member independently from all other instances.</p>\n<p>If people agree with this idea, I'd be happy to make the necessary changes.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "new", "version": null, "edited_on": null, "created_on": "2017-10-04T21:28:05.272337+00:00", "milestone": null, "updated_on": "2017-12-19T00:34:59.632865+00:00", "type": "issue", "id": 86}