{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/48690489.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-48690489"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "I'm in favor of switching the semantics of `operator*` and removing `operator+`. Should we consider doing this on the `gz11` branch? I think the current semantics is very counter-intuitive.", "markup": "markdown", "html": "<p>I'm in favor of switching the semantics of <code>operator*</code> and removing <code>operator+</code>. Should we consider doing this on the <code>gz11</code> branch? I think the current semantics is very counter-intuitive.</p>", "type": "rendered"}, "created_on": "2018-11-01T20:04:05.128836+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": null, "type": "issue_comment", "id": 48690489}