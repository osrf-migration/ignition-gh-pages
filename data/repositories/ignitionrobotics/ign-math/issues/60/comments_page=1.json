{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/48690489.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-48690489"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "I'm in favor of switching the semantics of `operator*` and removing `operator+`. Should we consider doing this on the `gz11` branch? I think the current semantics is very counter-intuitive.", "markup": "markdown", "html": "<p>I'm in favor of switching the semantics of <code>operator*</code> and removing <code>operator+</code>. Should we consider doing this on the <code>gz11</code> branch? I think the current semantics is very counter-intuitive.</p>", "type": "rendered"}, "created_on": "2018-11-01T20:04:05.128836+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": null, "type": "issue_comment", "id": 48690489}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/48690578.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-48690578"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "I think we can make that switch. There might be repercussions in our code that are difficult to debug. If you do make this switch,  then you might want to make sure all Ignition libraries pass CI.", "markup": "markdown", "html": "<p>I think we can make that switch. There might be repercussions in our code that are difficult to debug. If you do make this switch,  then you might want to make sure all Ignition libraries pass CI.</p>", "type": "rendered"}, "created_on": "2018-11-01T20:11:13.512855+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 48690578}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/48693775.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-48693775"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "We currently don't use `operator*` anywhere in code or in testing, because it's so confusing that it only creates errors. Instead people will usually convert `Pose` objects to `Matrix4` objects and use the `Matrix4::operator*`.\n\nI fully agree with removing `operator+`, although I think that operator does get used in some places in the code, so those uses will need to be replaced with the fixed version of `operator*`.", "markup": "markdown", "html": "<p>We currently don't use <code>operator*</code> anywhere in code or in testing, because it's so confusing that it only creates errors. Instead people will usually convert <code>Pose</code> objects to <code>Matrix4</code> objects and use the <code>Matrix4::operator*</code>.</p>\n<p>I fully agree with removing <code>operator+</code>, although I think that operator does get used in some places in the code, so those uses will need to be replaced with the fixed version of <code>operator*</code>.</p>", "type": "rendered"}, "created_on": "2018-11-02T02:23:33.310700+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-11-02T02:24:47.422155+00:00", "type": "issue_comment", "id": 48693775}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/48710357.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-48710357"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "+1", "markup": "markdown", "html": "<p>+1</p>", "type": "rendered"}, "created_on": "2018-11-02T17:22:16.553561+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 48710357}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60/comments/50606589.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/60#comment-50606589"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/60.json"}}, "type": "issue", "id": 60, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Pose addition and subtraction needs work [gazebo issue 216]"}, "content": {"raw": "Yeah, it's really confusing that the `Pose3::operator*` has an opposite sign convention to Matrix4 multiplication. I've illustrated this in an added test in 7f7ed51\n\n* #!/ignitionrobotics/ign-math/commits/7f7ed51#Lsrc/Matrix4_TEST.ccT137", "markup": "markdown", "html": "<p>Yeah, it's really confusing that the <code>Pose3::operator*</code> has an opposite sign convention to Matrix4 multiplication. I've illustrated this in an added test in <a href=\"#!/ignitionrobotics/ign-math/commits/7f7ed51\" rel=\"nofollow\" class=\"ap-connect-link\">7f7ed51</a></p>\n<ul>\n<li><a href=\"#!/ignitionrobotics/ign-math/commits/7f7ed51#Lsrc/Matrix4_TEST.ccT137\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-math/commits/7f7ed51#Lsrc/Matrix4_TEST.ccT137</a></li>\n</ul>", "type": "rendered"}, "created_on": "2019-02-14T20:02:00.136250+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 50606589}], "page": 1, "size": 5}