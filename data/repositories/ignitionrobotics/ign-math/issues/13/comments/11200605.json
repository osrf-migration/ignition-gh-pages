{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/13/comments/11200605.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/13#comment-11200605"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/13.json"}}, "type": "issue", "id": 13, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Homebrew: UNIT_Filter_TEST (Failed)"}, "content": {"raw": "I looked at this with @caguero today, and it appears to be related to uninitialized variables. The following patch fixes it:\n~~~\ndiff -r ee8d2607413d include/ignition/math/Filter.hh\n--- a/include/ignition/math/Filter.hh   Fri Jul 11 10:51:20 2014 -0700\n+++ b/include/ignition/math/Filter.hh   Fri Jul 11 16:49:55 2014 -0700\n@@ -212,7 +212,12 @@\n       }\n\n       /// \\brief Input gain control coefficients.\n-      protected: double a0, a1, a2, b0, b1, b2 = 0;\n+      protected: double a0 = 0,\n+                        a1 = 0,\n+                        a2 = 0,\n+                        b0 = 0,\n+                        b1 = 0,\n+                        b2 = 0;\n\n       /// \\brief Gain of the feedback coefficients.\n       protected: T x1, x2, y1, y2;\ndiff -r ee8d2607413d src/Filter_TEST.cc\n--- a/src/Filter_TEST.cc    Fri Jul 11 10:51:20 2014 -0700\n+++ b/src/Filter_TEST.cc    Fri Jul 11 16:49:55 2014 -0700\n@@ -73,6 +73,7 @@\n TEST(FilterTest, Biquad)\n {\n   math::BiQuad<double> filterA;\n+  filterA.Set(0.0);\n   EXPECT_NEAR(filterA.Value(), 0.0, 1e-10);\n   EXPECT_NEAR(filterA.Process(1.1), 0.0, 1e-10);\n\n   filterA.Fc(0.3, 1.4);\n~~~\nThe modification to the test with `Set(0.0)` is necessary to initialize the `Filter::y0` variable. I don't know of any other way to initialize it.", "markup": "markdown", "html": "<p>I looked at this with @caguero today, and it appears to be related to uninitialized variables. The following patch fixes it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r ee8d2607413d include/ignition/math/Filter.hh</span>\n<span class=\"gd\">--- a/include/ignition/math/Filter.hh   Fri Jul 11 10:51:20 2014 -0700</span>\n<span class=\"gi\">+++ b/include/ignition/math/Filter.hh   Fri Jul 11 16:49:55 2014 -0700</span>\n<span class=\"gu\">@@ -212,7 +212,12 @@</span>\n       }\n\n       /// \\brief Input gain control coefficients.\n<span class=\"gd\">-      protected: double a0, a1, a2, b0, b1, b2 = 0;</span>\n<span class=\"gi\">+      protected: double a0 = 0,</span>\n<span class=\"gi\">+                        a1 = 0,</span>\n<span class=\"gi\">+                        a2 = 0,</span>\n<span class=\"gi\">+                        b0 = 0,</span>\n<span class=\"gi\">+                        b1 = 0,</span>\n<span class=\"gi\">+                        b2 = 0;</span>\n\n       /// \\brief Gain of the feedback coefficients.\n       protected: T x1, x2, y1, y2;\n<span class=\"gh\">diff -r ee8d2607413d src/Filter_TEST.cc</span>\n<span class=\"gd\">--- a/src/Filter_TEST.cc    Fri Jul 11 10:51:20 2014 -0700</span>\n<span class=\"gi\">+++ b/src/Filter_TEST.cc    Fri Jul 11 16:49:55 2014 -0700</span>\n<span class=\"gu\">@@ -73,6 +73,7 @@</span>\n TEST(FilterTest, Biquad)\n {\n   math::BiQuad&lt;double&gt; filterA;\n<span class=\"gi\">+  filterA.Set(0.0);</span>\n   EXPECT_NEAR(filterA.Value(), 0.0, 1e-10);\n   EXPECT_NEAR(filterA.Process(1.1), 0.0, 1e-10);\n\n   filterA.Fc(0.3, 1.4);\n</pre></div>\n\n\n<p>The modification to the test with <code>Set(0.0)</code> is necessary to initialize the <code>Filter::y0</code> variable. I don't know of any other way to initialize it.</p>", "type": "rendered"}, "created_on": "2014-07-12T00:12:08.534413+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 11200605}