{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/68/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/68.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/68/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/68/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/68/overall-improvements-to-spline"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/68/vote"}}, "reporter": {"display_name": "Michel Hidalgo", "uuid": "{8d1275d4-c87a-421f-99ef-9f847911fdce}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d1275d4-c87a-421f-99ef-9f847911fdce%7D"}, "html": {"href": "https://bitbucket.org/%7B8d1275d4-c87a-421f-99ef-9f847911fdce%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/476ee32e7d14b30bbbd90480f4559f62d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hidmic", "type": "user", "account_id": "557058:279c91d9-c821-4fb1-a6fc-0fbada4e07c4"}, "title": "Overall Improvements to Spline Implementation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, ignition::math::Spline straightforward implementation has a number of caveats and limitations:\r\n\r\n1. No control over spline point tangents.\r\n2. No support for tangent (or m-derivative) interpolation.\r\n3. No support for arc length computation.\r\n4. Parameterization works great for evenly distributed\r\n    points but leads to velocity changes when this isn't the case.\r\n\r\nI've opened a [proposal PR](#!/ignitionrobotics/ign-math/pull-requests/161/spline-improvements-proposal/diff) addressing 1, 2 and 3. Number 4 is harder, and attempts to transition to an arc length parameterization have been unsuccessfull so far (as you'll notice by the dummy implementation that the parameterization class now has). \r\n\r\nI'd love to hear some feedback.", "markup": "markdown", "html": "<p>Currently, ignition::math::Spline straightforward implementation has a number of caveats and limitations:</p>\n<ol>\n<li>No control over spline point tangents.</li>\n<li>No support for tangent (or m-derivative) interpolation.</li>\n<li>No support for arc length computation.</li>\n<li>Parameterization works great for evenly distributed\n    points but leads to velocity changes when this isn't the case.</li>\n</ol>\n<p>I've opened a <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-math/pull-requests/161/spline-improvements-proposal/diff\" rel=\"nofollow\">proposal PR</a> addressing 1, 2 and 3. Number 4 is harder, and attempts to transition to an arc length parameterization have been unsuccessfull so far (as you'll notice by the dummy implementation that the parameterization class now has). </p>\n<p>I'd love to hear some feedback.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-04-06T15:01:31.074899+00:00", "milestone": null, "updated_on": "2017-04-06T15:01:31.074899+00:00", "type": "issue", "id": 68}