{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37593433.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37593433"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "Currently, if += is called on a default-initialized box, the min, max (and extent) of the box are replaced with those of the added box (else case above). All I meant is that if we had a default constructor such as\n```\n#!c++\nBox::Box()\n: dataPtr(new BoxPrivate)\n{\n  this->dataPtr->min.Set(ignition::math::MAX_D, ignition::math::MAX_D, ignition::math::MAX_D);\n  this->dataPtr->max.Set(ignition::math::MIN_D, ignition::math::MIN_D, ignition::math::MIN_D);\n}\n```\nand then did the following\n```\n#!c++\nignition::math::Box defaultBox = ignition::math::Box();\nignition::math::Box box = ignition::math::Box(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);\ndefaultBox+=box;\n```\n`defaultBox` would be the same size as `box`.", "markup": "markdown", "html": "<p>Currently, if += is called on a default-initialized box, the min, max (and extent) of the box are replaced with those of the added box (else case above). All I meant is that if we had a default constructor such as</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Box</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">()</span>\n<span class=\"o\">:</span> <span class=\"n\">dataPtr</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">BoxPrivate</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">min</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">max</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>and then did the following</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span> <span class=\"n\">defaultBox</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">();</span>\n<span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span> <span class=\"n\">box</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"mf\">6.0</span><span class=\"p\">);</span>\n<span class=\"n\">defaultBox</span><span class=\"o\">+=</span><span class=\"n\">box</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p><code>defaultBox</code> would be the same size as <code>box</code>.</p>", "type": "rendered"}, "created_on": "2017-06-14T17:16:14.545467+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-14T17:17:19.816861+00:00", "type": "issue_comment", "id": 37593433}