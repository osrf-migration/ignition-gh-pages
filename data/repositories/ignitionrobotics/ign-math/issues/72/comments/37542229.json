{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37542229.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37542229"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "It seems like the desired behavior might be achieved by removing the `extent` parameter and initializing the min and max vectors with extreme values in the default constructor as is done explicitly in [Model::BoundingBox()](https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Model.cc?at=default&fileviewer=file-view-default#Model.cc-830) and [Link::BoundingBox()](https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Link.cc?at=default&fileviewer=file-view-default#Link.cc-733). Thus, if a valid box were added to a box generated from the default constructor, it would result in a copy of the valid box. However, with this approach, if you manually set the min and max vectors for the box from the default constructor, it would automatically become valid and combine correctly with other boxes.", "markup": "markdown", "html": "<p>It seems like the desired behavior might be achieved by removing the <code>extent</code> parameter and initializing the min and max vectors with extreme values in the default constructor as is done explicitly in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Model.cc?at=default&amp;fileviewer=file-view-default#Model.cc-830\" rel=\"nofollow\">Model::BoundingBox()</a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Link.cc?at=default&amp;fileviewer=file-view-default#Link.cc-733\" rel=\"nofollow\">Link::BoundingBox()</a>. Thus, if a valid box were added to a box generated from the default constructor, it would result in a copy of the valid box. However, with this approach, if you manually set the min and max vectors for the box from the default constructor, it would automatically become valid and combine correctly with other boxes.</p>", "type": "rendered"}, "created_on": "2017-06-13T01:57:23.557241+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-13T02:05:17.567762+00:00", "type": "issue_comment", "id": 37542229}