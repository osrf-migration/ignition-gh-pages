{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37542229.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37542229"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "It seems like the desired behavior might be achieved by removing the `extent` parameter and initializing the min and max vectors with extreme values in the default constructor as is done explicitly in [Model::BoundingBox()](https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Model.cc?at=default&fileviewer=file-view-default#Model.cc-830) and [Link::BoundingBox()](https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Link.cc?at=default&fileviewer=file-view-default#Link.cc-733). Thus, if a valid box were added to a box generated from the default constructor, it would result in a copy of the valid box. However, with this approach, if you manually set the min and max vectors for the box from the default constructor, it would automatically become valid and combine correctly with other boxes.", "markup": "markdown", "html": "<p>It seems like the desired behavior might be achieved by removing the <code>extent</code> parameter and initializing the min and max vectors with extreme values in the default constructor as is done explicitly in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Model.cc?at=default&amp;fileviewer=file-view-default#Model.cc-830\" rel=\"nofollow\">Model::BoundingBox()</a> and <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/a3a7c53ea929b09fc14730b45ef5ad060c47c7ca/gazebo/physics/Link.cc?at=default&amp;fileviewer=file-view-default#Link.cc-733\" rel=\"nofollow\">Link::BoundingBox()</a>. Thus, if a valid box were added to a box generated from the default constructor, it would result in a copy of the valid box. However, with this approach, if you manually set the min and max vectors for the box from the default constructor, it would automatically become valid and combine correctly with other boxes.</p>", "type": "rendered"}, "created_on": "2017-06-13T01:57:23.557241+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-13T02:05:17.567762+00:00", "type": "issue_comment", "id": 37542229}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37574935.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37574935"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "Agree with that, I'd get rid of ``extent`` too. But what do you mean that adding it to another BB would result in a copy of the valid BB? That we could explicitly check for the ``numeric_limits<>`` or ``ignition::math::MAX_D`` instead of using ``extent``?", "markup": "markdown", "html": "<p>Agree with that, I'd get rid of <code>extent</code> too. But what do you mean that adding it to another BB would result in a copy of the valid BB? That we could explicitly check for the <code>numeric_limits&lt;&gt;</code> or <code>ignition::math::MAX_D</code> instead of using <code>extent</code>?</p>", "type": "rendered"}, "created_on": "2017-06-14T07:27:43.232629+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": null, "type": "issue_comment", "id": 37574935}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37593433.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37593433"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "Currently, if += is called on a default-initialized box, the min, max (and extent) of the box are replaced with those of the added box (else case above). All I meant is that if we had a default constructor such as\n```\n#!c++\nBox::Box()\n: dataPtr(new BoxPrivate)\n{\n  this->dataPtr->min.Set(ignition::math::MAX_D, ignition::math::MAX_D, ignition::math::MAX_D);\n  this->dataPtr->max.Set(ignition::math::MIN_D, ignition::math::MIN_D, ignition::math::MIN_D);\n}\n```\nand then did the following\n```\n#!c++\nignition::math::Box defaultBox = ignition::math::Box();\nignition::math::Box box = ignition::math::Box(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);\ndefaultBox+=box;\n```\n`defaultBox` would be the same size as `box`.", "markup": "markdown", "html": "<p>Currently, if += is called on a default-initialized box, the min, max (and extent) of the box are replaced with those of the added box (else case above). All I meant is that if we had a default constructor such as</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">Box</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">()</span>\n<span class=\"o\">:</span> <span class=\"n\">dataPtr</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">BoxPrivate</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">min</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MAX_D</span><span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">dataPtr</span><span class=\"o\">-&gt;</span><span class=\"n\">max</span><span class=\"p\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">MIN_D</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>and then did the following</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span> <span class=\"n\">defaultBox</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">();</span>\n<span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span> <span class=\"n\">box</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"mf\">6.0</span><span class=\"p\">);</span>\n<span class=\"n\">defaultBox</span><span class=\"o\">+=</span><span class=\"n\">box</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p><code>defaultBox</code> would be the same size as <code>box</code>.</p>", "type": "rendered"}, "created_on": "2017-06-14T17:16:14.545467+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": "2017-06-14T17:17:19.816861+00:00", "type": "issue_comment", "id": 37593433}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37595179.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37595179"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "I went ahead and wrote up a potential solution (pull request #172)", "markup": "markdown", "html": "<p>I went ahead and wrote up a potential solution (<a href=\"#!/ignitionrobotics/ign-math/pull-requests/172/remove-box-extent-field\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #172</a>)</p>", "type": "rendered"}, "created_on": "2017-06-14T18:52:20.518130+00:00", "user": {"display_name": "Peter Horak", "uuid": "{c72abe74-c12a-4128-a6fc-94f3844ac8ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bc72abe74-c12a-4128-a6fc-94f3844ac8ef%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a/87d803b7-3e50-40c1-8159-a5c20abd84ea/128"}}, "nickname": "pchorak", "type": "user", "account_id": "557058:451ed60b-3cfa-4a97-b4d3-a3fc34c2b21a"}, "updated_on": null, "type": "issue_comment", "id": 37595179}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37704519.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37704519"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "Thanks for looking into this, your PR looks like a good solution to me. I wasn't sure if the extent may have been used anywhere else and had its purpose, but getting rid of it altogether is ideal.", "markup": "markdown", "html": "<p>Thanks for looking into this, your PR looks like a good solution to me. I wasn't sure if the extent may have been used anywhere else and had its purpose, but getting rid of it altogether is ideal.</p>", "type": "rendered"}, "created_on": "2017-06-20T05:50:04.782067+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": null, "type": "issue_comment", "id": 37704519}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37704626.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37704626"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2017-06-20T05:56:19.293303+00:00", "user": {"display_name": "Jennifer Buehler", "uuid": "{5949baad-8c43-4d52-9a82-bb8c3511fed8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D"}, "html": {"href": "https://bitbucket.org/%7B5949baad-8c43-4d52-9a82-bb8c3511fed8%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b28ae0e95eada6ee16f0860c1fa59fdcd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "JenniferBuehler", "type": "user", "account_id": "557058:96bd489a-ec14-4a06-8d31-7bb6d46d1209"}, "updated_on": null, "type": "issue_comment", "id": 37704626}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/37898002.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-37898002"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "related to issue #53", "markup": "markdown", "html": "<p>related to issue <a href=\"#!/ignitionrobotics/ign-math/issues/53/possible-to-end-up-with-a-finite-box-with\" rel=\"nofollow\" title=\"Possible to end up with a finite box with EXTENT_NULL\" class=\"ap-connect-link\"><s>#53</s></a></p>", "type": "rendered"}, "created_on": "2017-06-28T16:56:38.611244+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 37898002}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72/comments/38098214.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/72#comment-38098214"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/72.json"}}, "type": "issue", "id": 72, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "title": "Box initialized with invalid extent"}, "content": {"raw": "pull request #172", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-math/pull-requests/172/remove-box-extent-field\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #172</a></p>", "type": "rendered"}, "created_on": "2017-07-07T23:35:43.470658+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 38098214}], "page": 1, "size": 8}