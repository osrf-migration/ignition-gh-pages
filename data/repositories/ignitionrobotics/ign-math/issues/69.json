{"priority": "trivial", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/69/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-math/issues/69.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/69/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/issues/69/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/issues/69/redirect-static-initialisation-of"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/issues/69/vote"}}, "reporter": {"display_name": "stonier-tri", "uuid": "{df147a71-ec31-411c-b3b7-3bace0b40d64}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D"}, "html": {"href": "https://bitbucket.org/%7Bdf147a71-ec31-411c-b3b7-3bace0b40d64%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f217cbf9d792ec7a44402d608e607bead=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-6.png"}}, "nickname": "stonier-tri", "type": "user", "account_id": "557058:05412d5e-1422-4161-b075-e8cdfb723072"}, "title": "Redirect static initialisation of random_device", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Something that came up when chasing down a different valgrind problem.\r\n\r\nConstruct on first use rather than doing static initialisation (static initialisation fiasco) here:\r\n #!/ignitionrobotics/ign-math/src/5d674fbadeaf04fca7f588b1b2d9cd46a9785324/src/Rand.cc?at=default&fileviewer=file-view-default#Rand.cc-33.\r\n\r\nShould be easy to do given there is already a Seed() function in a manner suggested at https://isocpp.org/wiki/faq/ctors#static-init-order.\r\n\r\nThis then complies more closely with the google style guide (in particular, [here](https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables)).", "markup": "markdown", "html": "<p>Something that came up when chasing down a different valgrind problem.</p>\n<p>Construct on first use rather than doing static initialisation (static initialisation fiasco) here:\n <a href=\"#!/ignitionrobotics/ign-math/src/5d674fbadeaf04fca7f588b1b2d9cd46a9785324/src/Rand.cc?at=default&amp;fileviewer=file-view-default#Rand.cc-33\" rel=\"nofollow\" class=\"ap-connect-link\">#!/ignitionrobotics/ign-math/src/5d674fbadeaf04fca7f588b1b2d9cd46a9785324/src/Rand.cc?at=default&amp;fileviewer=file-view-default#Rand.cc-33</a>.</p>\n<p>Should be easy to do given there is already a Seed() function in a manner suggested at <a href=\"https://isocpp.org/wiki/faq/ctors#static-init-order\" rel=\"nofollow\" class=\"ap-connect-link\">https://isocpp.org/wiki/faq/ctors#static-init-order</a>.</p>\n<p>This then complies more closely with the google style guide (in particular, <a data-is-external-link=\"true\" href=\"https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables\" rel=\"nofollow\">here</a>).</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2017-05-01T19:04:18.576782+00:00", "milestone": null, "updated_on": "2017-05-13T21:04:58.741365+00:00", "type": "issue", "id": 69}