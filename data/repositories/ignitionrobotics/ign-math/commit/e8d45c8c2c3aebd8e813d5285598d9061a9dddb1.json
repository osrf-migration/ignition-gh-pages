{"rendered": {"message": {"raw": "Change equality helper to work with 387 fp unit\n\nWhen building on i686 without SSE, the ign equality helper uses the extra\nprecision within the x87 floating point module when comparing the difference\nbetween the two arguments to the epsilon value.  This causes the\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\n\nThis patch creates an intermediate value for the difference between the two\narguments to be compared, which gets rid of the extra x87 precision. The\nresulting comparison is then performed without the extra precision, allowing\nthe test to pass.\n\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "markup": "markdown", "html": "<p>Change equality helper to work with 387 fp unit</p>\n<p>When building on i686 without SSE, the ign equality helper uses the extra<br />\nprecision within the x87 floating point module when comparing the difference<br />\nbetween the two arguments to the epsilon value.  This causes the<br />\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001</p>\n<p>This patch creates an intermediate value for the difference between the two<br />\narguments to be compared, which gets rid of the extra x87 precision. The<br />\nresulting comparison is then performed without the extra precision, allowing<br />\nthe test to pass.</p>\n<p>See <a href=\"http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail</a> for a discussion of x87 equality pitfalls.</p>", "type": "rendered"}}, "hash": "e8d45c8c2c3aebd8e813d5285598d9061a9dddb1", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math.json"}, "html": {"href": "#!/ignitionrobotics/ign-math"}, "avatar": {"href": "data/bytebucket.org/ravatar/{18503e50-08ea-4d88-ab99-110fde3c7256}ts=1533305"}}, "type": "repository", "name": "ign-math", "full_name": "ignitionrobotics/ign-math", "uuid": "{18503e50-08ea-4d88-ab99-110fde3c7256}"}, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-math/commit/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/patch/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/diff/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-math/commit/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-math/commit/e8d45c8c2c3aebd8e813d5285598d9061a9dddb1/statuses_page=1.json"}}, "author": {"raw": "Rich Mattes <richmattes@gmail.com>", "type": "author", "user": {"display_name": "Rich Mattes", "uuid": "{1ef6f3dd-b8db-412b-94e9-e430e7aafd23}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D"}, "html": {"href": "https://bitbucket.org/%7B1ef6f3dd-b8db-412b-94e9-e430e7aafd23%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d431baafeedf5d8921cb50a3c9902e16d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRM-0.png"}}, "nickname": "richmattes", "type": "user", "account_id": "557058:a38935e3-9a08-40d9-917a-ff19973e58df"}}, "summary": {"raw": "Change equality helper to work with 387 fp unit\n\nWhen building on i686 without SSE, the ign equality helper uses the extra\nprecision within the x87 floating point module when comparing the difference\nbetween the two arguments to the epsilon value.  This causes the\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\n\nThis patch creates an intermediate value for the difference between the two\narguments to be compared, which gets rid of the extra x87 precision. The\nresulting comparison is then performed without the extra precision, allowing\nthe test to pass.\n\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "markup": "markdown", "html": "<p>Change equality helper to work with 387 fp unit</p>\n<p>When building on i686 without SSE, the ign equality helper uses the extra<br />\nprecision within the x87 floating point module when comparing the difference<br />\nbetween the two arguments to the epsilon value.  This causes the<br />\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001</p>\n<p>This patch creates an intermediate value for the difference between the two<br />\narguments to be compared, which gets rid of the extra x87 precision. The<br />\nresulting comparison is then performed without the extra precision, allowing<br />\nthe test to pass.</p>\n<p>See <a href=\"http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail</a> for a discussion of x87 equality pitfalls.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "6d684eb7c3b669c6db6a18f468d40802e3c60e00", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-math/commit/6d684eb7c3b669c6db6a18f468d40802e3c60e00.json"}, "html": {"href": "#!/ignitionrobotics/ign-math/commits/6d684eb7c3b669c6db6a18f468d40802e3c60e00"}}}], "date": "2015-08-21T01:20:30+00:00", "message": "Change equality helper to work with 387 fp unit\n\nWhen building on i686 without SSE, the ign equality helper uses the extra\nprecision within the x87 floating point module when comparing the difference\nbetween the two arguments to the epsilon value.  This causes the\nLine2Test.CollinearPoint unit test to fail when epsilon is set to .0001\n\nThis patch creates an intermediate value for the difference between the two\narguments to be compared, which gets rid of the extra x87 precision. The\nresulting comparison is then performed without the extra precision, allowing\nthe test to pass.\n\nSee http://stackoverflow.com/questions/16325277/floating-point-equality-test-and-extra-precision-can-this-code-fail for a discussion of x87 equality pitfalls.", "type": "commit", "git_hash": "e79a99d2501b829f2a99f9538ce83a3614e98cae", "tags": null, "branches": "387_equality"}