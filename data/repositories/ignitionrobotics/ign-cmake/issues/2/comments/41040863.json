{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/2/comments/41040863.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/2#comment-41040863"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/2.json"}}, "type": "issue", "id": 2, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Support for version suffixes: ~prerelease ~alpha ~beta"}, "content": {"raw": "One question to address: Do we want to allow users to be able to specifically ask for the prerelease version of a package? In other words, suppose a user has both `ign-math4.2.0` and `ign-math4.2.0~prerelease` installed. The `find_package` function does not allow users to specifically request a prerelease, so when they call `find_package(ignition-math4 4.2.0)`, it's ambiguous whether they want to find `4.2.0` or `4.2.0~prerelease`.\n\nProtobuf has a workaround [which you can see here](https://github.com/google/protobuf/pull/1624). We could also take this approach, but it would require us to maintain our own version compatibility file instead of allowing CMake to autogenerate it.\n\nAlternatively, we could potentially ignore all of these concerns and just allow the suffix to be superficial from the point of view of cmake.\n\nIf this is something that has already been worked out previously in some ignition projects, then I'll gladly copy the behavior from those.", "markup": "markdown", "html": "<p>One question to address: Do we want to allow users to be able to specifically ask for the prerelease version of a package? In other words, suppose a user has both <code>ign-math4.2.0</code> and <code>ign-math4.2.0~prerelease</code> installed. The <code>find_package</code> function does not allow users to specifically request a prerelease, so when they call <code>find_package(ignition-math4 4.2.0)</code>, it's ambiguous whether they want to find <code>4.2.0</code> or <code>4.2.0~prerelease</code>.</p>\n<p>Protobuf has a workaround <a data-is-external-link=\"true\" href=\"https://github.com/google/protobuf/pull/1624\" rel=\"nofollow\">which you can see here</a>. We could also take this approach, but it would require us to maintain our own version compatibility file instead of allowing CMake to autogenerate it.</p>\n<p>Alternatively, we could potentially ignore all of these concerns and just allow the suffix to be superficial from the point of view of cmake.</p>\n<p>If this is something that has already been worked out previously in some ignition projects, then I'll gladly copy the behavior from those.</p>", "type": "rendered"}, "created_on": "2017-11-06T20:43:11.385985+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 41040863}