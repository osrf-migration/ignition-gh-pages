{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/2/comments/41062556.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/2#comment-41062556"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/2.json"}}, "type": "issue", "id": 2, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Support for version suffixes: ~prerelease ~alpha ~beta"}, "content": {"raw": "With respect to the enforce of the `~` , I think that it is a decision from our side as upstream to mark the version suffixes of our software.\n\nNote that upstream versions (versions in source code) and downstream versions (Ubuntu, Debian, Fedora, ...) can be different. The use of the `~` makes Ubuntu/Debian downstream easier so it is not a bad idea to use instead of just append the suffix without a separator or use a different symbol.  I've been using other symbols, concretely the character +, in downstream versions (to mark snapshots of code +date+commit or use the suffix +osrf) but I think that they have no sense in upstream.\n\nSpeaking about how cmake perceive the ~prereleases, ~alpha or ~beta, I think that is is ok to ignore them since most of the times we want third party software to threat them as if they supply the 'stable' version with testing proposes. I only see corner cases in which we want to distinguish between prereleases and stable versions and again, it could be solve at a package level with downstream packaging techniques.", "markup": "markdown", "html": "<p>With respect to the enforce of the <code>~</code> , I think that it is a decision from our side as upstream to mark the version suffixes of our software.</p>\n<p>Note that upstream versions (versions in source code) and downstream versions (Ubuntu, Debian, Fedora, ...) can be different. The use of the <code>~</code> makes Ubuntu/Debian downstream easier so it is not a bad idea to use instead of just append the suffix without a separator or use a different symbol.  I've been using other symbols, concretely the character +, in downstream versions (to mark snapshots of code +date+commit or use the suffix +osrf) but I think that they have no sense in upstream.</p>\n<p>Speaking about how cmake perceive the ~prereleases, ~alpha or ~beta, I think that is is ok to ignore them since most of the times we want third party software to threat them as if they supply the 'stable' version with testing proposes. I only see corner cases in which we want to distinguish between prereleases and stable versions and again, it could be solve at a package level with downstream packaging techniques.</p>", "type": "rendered"}, "created_on": "2017-11-07T17:18:10.714534+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": null, "type": "issue_comment", "id": 41062556}