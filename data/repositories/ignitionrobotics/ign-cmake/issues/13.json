{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/13/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/13/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/13/we-should-explicitly-disable-compiler"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/13/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "We should explicitly disable compiler extensions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It turns out that the compiler flags `-std=c++14` and `-std=gnu++14` do not behave well together in a single compilation call. In most cases the issue won't be noticed, but when numeric literals show up, a [bug is triggered](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=77948).\r\n\r\nWe get the `-std=gnu++14` flag automatically from cmake when we request C++14 features from `target_compile_features(~)`. We can explicitly disable this behavior by setting `CMAKE_CXX_EXTENSIONS` to `off` (by default, it is set to `on`). Turning extensions off will force cmake to use `-std=c++14` instead of `-std=gnu++14`.", "markup": "markdown", "html": "<p>It turns out that the compiler flags <code>-std=c++14</code> and <code>-std=gnu++14</code> do not behave well together in a single compilation call. In most cases the issue won't be noticed, but when numeric literals show up, a <a data-is-external-link=\"true\" href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=77948\" rel=\"nofollow\">bug is triggered</a>.</p>\n<p>We get the <code>-std=gnu++14</code> flag automatically from cmake when we request C++14 features from <code>target_compile_features(~)</code>. We can explicitly disable this behavior by setting <code>CMAKE_CXX_EXTENSIONS</code> to <code>off</code> (by default, it is set to <code>on</code>). Turning extensions off will force cmake to use <code>-std=c++14</code> instead of <code>-std=gnu++14</code>.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-19T20:27:47.631090+00:00", "milestone": null, "updated_on": "2018-05-01T08:45:05.531388+00:00", "type": "issue", "id": 13}