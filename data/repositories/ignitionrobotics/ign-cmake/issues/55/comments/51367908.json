{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55/comments/51367908.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/55#comment-51367908"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55.json"}}, "type": "issue", "id": 55, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Failing to build Target / does not exist"}, "content": {"raw": "Okay, the fact that there are two packages involved makes the issue much much more clear. I didn't realize that the issue was emanating from a package that **transitively** depends on Gazebo rather than a package that depends on Gazebo directly. Now I understand how the issue could be happening.\n\nI think the source of the issue may be the use of old-fashioned `catkin_make` combined with [this check](https://bitbucket.org/osrf/gazebo/src/0cc79a2e3c176cfd3bdf5437918c502eb0c5c59c/cmake/gazebo-config.cmake.in#lines-1) which opts to not re-load the Gazebo config when it's already been loaded.\n\nThe problem is that the first time the Gazebo config-file gets loaded is when it's requested by `vgazebo_plugins`, and it works perfectly fine there. When `action_layer` subsequently tries to load the Gazebo config, the Gazebo config file believes it's already been loaded so it doesn't bother redoing everything. But the previous load of the config-file was in a different cmake scope, so the declarations of the imported targets aren't available in the new scope of `action_layer`.\n\nThis is why `catkin_make_isolated` is recommended instead of `catkin_make`. Personally, I strongly prefer [catkin build](https://catkin-tools.readthedocs.io/en/latest/migration.html) over any of the other catkin options. You can install `catkin build` using `$ sudo apt install python-catkin-tools`.", "markup": "markdown", "html": "<p>Okay, the fact that there are two packages involved makes the issue much much more clear. I didn't realize that the issue was emanating from a package that <strong>transitively</strong> depends on Gazebo rather than a package that depends on Gazebo directly. Now I understand how the issue could be happening.</p>\n<p>I think the source of the issue may be the use of old-fashioned <code>catkin_make</code> combined with <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/0cc79a2e3c176cfd3bdf5437918c502eb0c5c59c/cmake/gazebo-config.cmake.in#lines-1\" rel=\"nofollow\">this check</a> which opts to not re-load the Gazebo config when it's already been loaded.</p>\n<p>The problem is that the first time the Gazebo config-file gets loaded is when it's requested by <code>vgazebo_plugins</code>, and it works perfectly fine there. When <code>action_layer</code> subsequently tries to load the Gazebo config, the Gazebo config file believes it's already been loaded so it doesn't bother redoing everything. But the previous load of the config-file was in a different cmake scope, so the declarations of the imported targets aren't available in the new scope of <code>action_layer</code>.</p>\n<p>This is why <code>catkin_make_isolated</code> is recommended instead of <code>catkin_make</code>. Personally, I strongly prefer <a data-is-external-link=\"true\" href=\"https://catkin-tools.readthedocs.io/en/latest/migration.html\" rel=\"nofollow\">catkin build</a> over any of the other catkin options. You can install <code>catkin build</code> using <code>$ sudo apt install python-catkin-tools</code>.</p>", "type": "rendered"}, "created_on": "2019-03-28T04:05:58.642492+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 51367908}