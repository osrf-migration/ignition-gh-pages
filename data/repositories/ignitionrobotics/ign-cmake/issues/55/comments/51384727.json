{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55/comments/51384727.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/55#comment-51384727"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55.json"}}, "type": "issue", "id": 55, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Failing to build Target / does not exist"}, "content": {"raw": "Fascinating. But isn't gazebo_plugin simply a secondary dependency of action_layer? Will *any* package that has nodes that calls gazebo and has gazebo as a secondary dependency have this issue?\n\nSince `vgazebo_plugins` library only had 2 nodes, I moved them to `action_layer` and made `action_layer` directly dependent on gazebo_plugins, removing the intermediary package vgazebo_plugins completely.  Interestingly, #40 UUID Error came up - I solved that by putting in `ign_import_target(UUID)` as recommended in that thread. What's more interesting now is that there are packages that are dependent on `action_layer` (`another_layer` -> `action_layer` -> `gazebo_plugins`, similar to ... `action_layer` -> `vgazebo_plugins` -> `gazebo_plugins`), but since they don't have any nodes/libraries that call gazebo, they don't give me any errors.\n\nLonger term, `catkin build` seems to be the way to go. Thanks a ton for your help.", "markup": "markdown", "html": "<p>Fascinating. But isn't gazebo_plugin simply a secondary dependency of action_layer? Will <em>any</em> package that has nodes that calls gazebo and has gazebo as a secondary dependency have this issue?</p>\n<p>Since <code>vgazebo_plugins</code> library only had 2 nodes, I moved them to <code>action_layer</code> and made <code>action_layer</code> directly dependent on gazebo_plugins, removing the intermediary package vgazebo_plugins completely.  Interestingly, <a href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\" title=\"Target UUID::UUID does not exist\" class=\"ap-connect-link\">#40</a> UUID Error came up - I solved that by putting in <code>ign_import_target(UUID)</code> as recommended in that thread. What's more interesting now is that there are packages that are dependent on <code>action_layer</code> (<code>another_layer</code> -&gt; <code>action_layer</code> -&gt; <code>gazebo_plugins</code>, similar to ... <code>action_layer</code> -&gt; <code>vgazebo_plugins</code> -&gt; <code>gazebo_plugins</code>), but since they don't have any nodes/libraries that call gazebo, they don't give me any errors.</p>\n<p>Longer term, <code>catkin build</code> seems to be the way to go. Thanks a ton for your help.</p>", "type": "rendered"}, "created_on": "2019-03-28T20:51:22.884555+00:00", "user": {"display_name": "Tarun Uday", "uuid": "{235f5089-e68c-420d-9ee3-c635fc236da2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B235f5089-e68c-420d-9ee3-c635fc236da2%7D"}, "html": {"href": "https://bitbucket.org/%7B235f5089-e68c-420d-9ee3-c635fc236da2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/TU-2.png"}}, "nickname": "tarun.uday", "type": "user", "account_id": "5c93b6f0b44a492c649cfff0"}, "updated_on": "2019-03-28T20:52:22.313729+00:00", "type": "issue_comment", "id": 51384727}