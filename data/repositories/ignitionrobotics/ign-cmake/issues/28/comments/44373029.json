{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/28/comments/44373029.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/28#comment-44373029"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/28.json"}}, "type": "issue", "id": 28, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Branch coverage results hard to interpret"}, "content": {"raw": "According to codecov, yellow lines correspond to partial hits, which [indicates that the source code was not fully executed by the test suite; there are remaining branches that were not executed](https://docs.codecov.io/docs/about-code-coverage).\n\nOn the Filter line you linked, could it be expecting every single template to be tested? I have no clue about the `SignalStats` example, but even my local report identifies that line as having 2 branches, and 1 wasn't taken:\n\n![shortname.png](data/bitbucket.org/repo/Gg8npGe/images/2987665704-shortname.png)\n\nReading through the comments on [this codecov issue](https://github.com/codecov/support/issues/193), it seems we should be able to see specific branch information on the generated `coverage.info` file, but I can't see it - maybe it's on another file, or our file uses a different format? I also tried getting the [build file from the codecov UI](https://codecov.io/bb/ignitionrobotics/ign-math/commit/104b1ae0d17dea43bff72eee79c8698626f89c0a/build) but I'm not being able to open it.\n\nWe could try out the different codecov.yaml configurations mentioned on that issue to ignore branch coverage, but based on the comments I'm not sure any of them will work.", "markup": "markdown", "html": "<p>According to codecov, yellow lines correspond to partial hits, which <a data-is-external-link=\"true\" href=\"https://docs.codecov.io/docs/about-code-coverage\" rel=\"nofollow\">indicates that the source code was not fully executed by the test suite; there are remaining branches that were not executed</a>.</p>\n<p>On the Filter line you linked, could it be expecting every single template to be tested? I have no clue about the <code>SignalStats</code> example, but even my local report identifies that line as having 2 branches, and 1 wasn't taken:</p>\n<p><img alt=\"shortname.png\" src=\"data/bitbucket.org/repo/Gg8npGe/images/2987665704-shortname.png\" /></p>\n<p>Reading through the comments on <a data-is-external-link=\"true\" href=\"https://github.com/codecov/support/issues/193\" rel=\"nofollow\">this codecov issue</a>, it seems we should be able to see specific branch information on the generated <code>coverage.info</code> file, but I can't see it - maybe it's on another file, or our file uses a different format? I also tried getting the <a data-is-external-link=\"true\" href=\"https://codecov.io/bb/ignitionrobotics/ign-math/commit/104b1ae0d17dea43bff72eee79c8698626f89c0a/build\" rel=\"nofollow\">build file from the codecov UI</a> but I'm not being able to open it.</p>\n<p>We could try out the different codecov.yaml configurations mentioned on that issue to ignore branch coverage, but based on the comments I'm not sure any of them will work.</p>", "type": "rendered"}, "created_on": "2018-03-31T11:06:59.691892+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": null, "type": "issue_comment", "id": 44373029}