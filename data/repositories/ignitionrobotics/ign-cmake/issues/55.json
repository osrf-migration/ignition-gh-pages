{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/55/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/55/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/55/failing-to-build-target-does-not-exist"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/55/vote"}}, "reporter": {"display_name": "Tarun Uday", "uuid": "{235f5089-e68c-420d-9ee3-c635fc236da2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B235f5089-e68c-420d-9ee3-c635fc236da2%7D"}, "html": {"href": "https://bitbucket.org/%7B235f5089-e68c-420d-9ee3-c635fc236da2%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/TU-2.png"}}, "nickname": "tarun.uday", "type": "user", "account_id": "5c93b6f0b44a492c649cfff0"}, "title": "Failing to build Target / does not exist", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi,\r\n\r\nI have a issue similar to [#40](#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist):\r\n\r\nI'm running Ubuntu Bionic (18.04), ROS Melodic, Gazebo 9, CMake (3.10.x). Msot of my debug workflow has been centered on the Issue#40 comments\r\n\r\n```\r\n#!bash\r\nCMake Error:\r\n  Error evaluating generator expression:\r\n\r\n    $<TARGET_PROPERTY:protobuf::libprotobuf,INTERFACE_INCLUDE_DIRECTORIES>\r\n\r\n  Target \"protobuf::libprotobuf\" not found.\r\n\r\n\r\nCMake Error:\r\n  Error evaluating generator expression:\r\n\r\n    $<TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES>\r\n\r\n  Target \"ignition-math4::ignition-math4\" not found.\r\n```\r\n`locate FindUUID` gives me 2 instances:\r\n\r\n```\r\n#!bash\r\n/opt/ros/melodic/share/cmake_modules/cmake/Modules/FindUUID.cmake\r\n/usr/lib/x86_64-linux-gnu/cmake/ignition-cmake0/cmake0/FindUUID.cmake\r\n```\r\n\r\nAdding a message after `ign_pkg_check_modules(UUID uuid)` in the second one, shows the message. \r\nBut, if I rename the second one to FindIgnUUID.cmake, and catkin_make, I get the error:\r\n```\r\n#!bash\r\nCMake Error at /usr/share/cmake-3.10/Modules/CMakeFindDependencyMacro.cmake:48 (find_package):\r\n  By not providing \"FindUUID.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"UUID\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"UUID\" with any of\r\n  the following names:\r\n\r\n    UUIDConfig.cmake\r\n    uuid-config.cmake\r\n\r\n  Add the installation prefix of \"UUID\" to CMAKE_PREFIX_PATH or set\r\n  \"UUID_DIR\" to a directory containing one of the above files.  If \"UUID\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  /usr/lib/x86_64-linux-gnu/cmake/ignition-transport4/ignition-transport4-config.cmake:109 (find_dependency)\r\n  /usr/lib/x86_64-linux-gnu/cmake/gazebo/gazebo-config.cmake:191 (find_package)\r\n  original/vgazebo_plugins/CMakeLists.txt:35 (find_package)\r\n```\r\n\r\nI noticed that the error was coming from `/usr/lib/x86_64-linux-gnu/cmake/ignition-common1/ignition-common1-targets.cmake` at line 65 that says:\r\n```\r\n#!bash\r\nset_target_properties(ignition-common1::ignition-common1 PROPERTIES\r\n  INTERFACE_INCLUDE_DIRECTORIES \"${_IMPORT_PREFIX}/include/ignition/common1;\\$<TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES>;\\$<TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES>; [...] \"\r\n  INTERFACE_LINK_LIBRARIES \"[...]\"\r\n)\r\n```\r\n\r\nI rearranged it to see if that was the only issue:\r\n```\r\n#!bash\r\nset_target_properties(ignition-common1::ignition-common1 PROPERTIES\r\n  INTERFACE_INCLUDE_DIRECTORIES \"${_IMPORT_PREFIX}/include/ignition/common1;\\$<TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES>; [...] \\$<TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES> \"\r\n  INTERFACE_LINK_LIBRARIES \"[...]\"\r\n)\r\n```\r\nand now I get:\r\n```\r\n#!bash\r\nCMake Error:\r\n  Error evaluating generator expression:\r\n\r\n    $<TARGET_PROPERTY:protobuf::libprotobuf,INTERFACE_INCLUDE_DIRECTORIES>\r\n\r\n  Target \"protobuf::libprotobuf\" not found.\r\n\r\n\r\nCMake Error:\r\n  Error evaluating generator expression:\r\n\r\n    $<TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES>\r\n\r\n  Target \"UUID::UUID\" not found.\r\n```\r\n\r\nSo rearranging that list of `INTERFACE_INCLUDE_DIRECTORIES` gets me the same error but with whatever is the first TARGET_PROPERTY. At this point, I try @mxgrey 's workaround, and add `ign_import_target(UUID)` to my package's `CMakeLists.txt`, which gives me the error:\r\n\r\n```\r\n#!bash\r\nCMake Error at /usr/lib/x86_64-linux-gnu/cmake/ignition-cmake0/cmake0/IgnImportTarget.cmake:88 (add_library):\r\n  add_library cannot create imported target \"UUID::UUID\" because another\r\n    target with the same name already exists.\r\n    Call Stack (most recent call first):\r\n      original/vgazebo_plugins/CMakeLists.txt:36 (ign_import_target)\r\n\r\n```\r\n\r\nAs mentioned in #40, removing `${GAZEBO_LIBRARIES}` from `target_link_libraries` solves the problem but obviously isn't a workaround. I notice that [this person](https://github.com/jacknlliu/development-issues/issues/31) had the exact issue, and that was over a year ago, before the Issue#40 thread existed. \r\n\r\nAny directions or tips would be helpful.", "markup": "markdown", "html": "<p>Hi,</p>\n<p>I have a issue similar to <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\">#40</a>:</p>\n<p>I'm running Ubuntu Bionic (18.04), ROS Melodic, Gazebo 9, CMake (3.10.x). Msot of my debug workflow has been centered on the Issue<a href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\" title=\"Target UUID::UUID does not exist\" class=\"ap-connect-link\">#40</a> comments</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Error:\n  Error evaluating generator expression:\n\n    $&lt;TARGET_PROPERTY:protobuf::libprotobuf,INTERFACE_INCLUDE_DIRECTORIES&gt;\n\n  Target <span class=\"s2\">&quot;protobuf::libprotobuf&quot;</span> not found.\n\n\nCMake Error:\n  Error evaluating generator expression:\n\n    $&lt;TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES&gt;\n\n  Target <span class=\"s2\">&quot;ignition-math4::ignition-math4&quot;</span> not found.\n</pre></div>\n\n\n<p><code>locate FindUUID</code> gives me 2 instances:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>/opt/ros/melodic/share/cmake_modules/cmake/Modules/FindUUID.cmake\n/usr/lib/x86_64-linux-gnu/cmake/ignition-cmake0/cmake0/FindUUID.cmake\n</pre></div>\n\n\n<p>Adding a message after <code>ign_pkg_check_modules(UUID uuid)</code> in the second one, shows the message. \nBut, if I rename the second one to FindIgnUUID.cmake, and catkin_make, I get the error:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Error at /usr/share/cmake-3.10/Modules/CMakeFindDependencyMacro.cmake:48 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>:\n  By not providing <span class=\"s2\">&quot;FindUUID.cmake&quot;</span> in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by <span class=\"s2\">&quot;UUID&quot;</span>, but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by <span class=\"s2\">&quot;UUID&quot;</span> with any of\n  the following names:\n\n    UUIDConfig.cmake\n    uuid-config.cmake\n\n  Add the installation prefix of <span class=\"s2\">&quot;UUID&quot;</span> to CMAKE_PREFIX_PATH or <span class=\"nb\">set</span>\n  <span class=\"s2\">&quot;UUID_DIR&quot;</span> to a directory containing one of the above files.  If <span class=\"s2\">&quot;UUID&quot;</span>\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack <span class=\"o\">(</span>most recent call first<span class=\"o\">)</span>:\n  /usr/lib/x86_64-linux-gnu/cmake/ignition-transport4/ignition-transport4-config.cmake:109 <span class=\"o\">(</span>find_dependency<span class=\"o\">)</span>\n  /usr/lib/x86_64-linux-gnu/cmake/gazebo/gazebo-config.cmake:191 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>\n  original/vgazebo_plugins/CMakeLists.txt:35 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>I noticed that the error was coming from <code>/usr/lib/x86_64-linux-gnu/cmake/ignition-common1/ignition-common1-targets.cmake</code> at line 65 that says:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>set_target_properties<span class=\"o\">(</span>ignition-common1::ignition-common1 PROPERTIES\n  INTERFACE_INCLUDE_DIRECTORIES <span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">_IMPORT_PREFIX</span><span class=\"si\">}</span><span class=\"s2\">/include/ignition/common1;\\$&lt;TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES&gt;;\\$&lt;TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES&gt;; [...] &quot;</span>\n  INTERFACE_LINK_LIBRARIES <span class=\"s2\">&quot;[...]&quot;</span>\n<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>I rearranged it to see if that was the only issue:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>set_target_properties<span class=\"o\">(</span>ignition-common1::ignition-common1 PROPERTIES\n  INTERFACE_INCLUDE_DIRECTORIES <span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">_IMPORT_PREFIX</span><span class=\"si\">}</span><span class=\"s2\">/include/ignition/common1;\\$&lt;TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES&gt;; [...] \\$&lt;TARGET_PROPERTY:ignition-math4::ignition-math4,INTERFACE_INCLUDE_DIRECTORIES&gt; &quot;</span>\n  INTERFACE_LINK_LIBRARIES <span class=\"s2\">&quot;[...]&quot;</span>\n<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>and now I get:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Error:\n  Error evaluating generator expression:\n\n    $&lt;TARGET_PROPERTY:protobuf::libprotobuf,INTERFACE_INCLUDE_DIRECTORIES&gt;\n\n  Target <span class=\"s2\">&quot;protobuf::libprotobuf&quot;</span> not found.\n\n\nCMake Error:\n  Error evaluating generator expression:\n\n    $&lt;TARGET_PROPERTY:UUID::UUID,INTERFACE_INCLUDE_DIRECTORIES&gt;\n\n  Target <span class=\"s2\">&quot;UUID::UUID&quot;</span> not found.\n</pre></div>\n\n\n<p>So rearranging that list of <code>INTERFACE_INCLUDE_DIRECTORIES</code> gets me the same error but with whatever is the first TARGET_PROPERTY. At this point, I try @mxgrey 's workaround, and add <code>ign_import_target(UUID)</code> to my package's <code>CMakeLists.txt</code>, which gives me the error:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Error at /usr/lib/x86_64-linux-gnu/cmake/ignition-cmake0/cmake0/IgnImportTarget.cmake:88 <span class=\"o\">(</span>add_library<span class=\"o\">)</span>:\n  add_library cannot create imported target <span class=\"s2\">&quot;UUID::UUID&quot;</span> because another\n    target with the same name already exists.\n    Call Stack <span class=\"o\">(</span>most recent call first<span class=\"o\">)</span>:\n      original/vgazebo_plugins/CMakeLists.txt:36 <span class=\"o\">(</span>ign_import_target<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>As mentioned in <a href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\" title=\"Target UUID::UUID does not exist\" class=\"ap-connect-link\">#40</a>, removing <code>${GAZEBO_LIBRARIES}</code> from <code>target_link_libraries</code> solves the problem but obviously isn't a workaround. I notice that <a data-is-external-link=\"true\" href=\"https://github.com/jacknlliu/development-issues/issues/31\" rel=\"nofollow\">this person</a> had the exact issue, and that was over a year ago, before the Issue<a href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\" title=\"Target UUID::UUID does not exist\" class=\"ap-connect-link\">#40</a> thread existed. </p>\n<p>Any directions or tips would be helpful.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-03-21T21:16:39.312876+00:00", "milestone": null, "updated_on": "2019-03-29T04:10:39.882387+00:00", "type": "issue", "id": 55}