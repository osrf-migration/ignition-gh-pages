{"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/9/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/9/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/9/findignprotobuf-could-be-more-specific"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/9/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "FindIgnProtobuf could be more specific when libprotoc-dev is missing", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While cleaning up a docker image based on 16.04 I had installed `libprotobuf-dev` and `protobuf-compiler` but accidentally removed `libprotoc-dev`. \r\n\r\nThe output at generate time is\r\n\r\n```\r\n-- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so (Required is at least version \"2.3.0\") \r\n-- Looking for Protobuf - found\r\n```\r\n\r\nbut the output at build time is \r\n\r\n```\r\n-- Build files have been written to: /workspace/ws_ign/build_isolated/ign_msgs\r\n==> '. /workspace/ws_ign/build_isolated/ign_msgs/cmake__build.sh && /usr/bin/make -j8 -l8' in '/workspace/ws_ign/build_isolated/ign_msgs'\r\nsrc/CMakeFiles/ign_msgs_gen.dir/build.make:120: *** target pattern contains no '%'.  Stop.\r\nCMakeFiles/Makefile2:1186: recipe for target 'src/CMakeFiles/ign_msgs_gen.dir/all' failed\r\n```\r\n\r\nLine 120 in build.make is `src/ign_msgs_gen: protobuf::libprotoc-NOTFOUND`\r\n\r\nI'd like the the generate step to error with \"libprotoc not found\". How could that be accomplished? Does it warrant it's own find module? Or would it fit better as a `COMPONENT` of `FindIgnProtobuf`?", "markup": "markdown", "html": "<p>While cleaning up a docker image based on 16.04 I had installed <code>libprotobuf-dev</code> and <code>protobuf-compiler</code> but accidentally removed <code>libprotoc-dev</code>. </p>\n<p>The output at generate time is</p>\n<div class=\"codehilite\"><pre><span></span>-- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so (Required is at least version &quot;2.3.0&quot;) \n-- Looking for Protobuf - found\n</pre></div>\n\n\n<p>but the output at build time is </p>\n<div class=\"codehilite\"><pre><span></span>-- Build files have been written to: /workspace/ws_ign/build_isolated/ign_msgs\n==&gt; &#39;. /workspace/ws_ign/build_isolated/ign_msgs/cmake__build.sh &amp;&amp; /usr/bin/make -j8 -l8&#39; in &#39;/workspace/ws_ign/build_isolated/ign_msgs&#39;\nsrc/CMakeFiles/ign_msgs_gen.dir/build.make:120: *** target pattern contains no &#39;%&#39;.  Stop.\nCMakeFiles/Makefile2:1186: recipe for target &#39;src/CMakeFiles/ign_msgs_gen.dir/all&#39; failed\n</pre></div>\n\n\n<p>Line 120 in build.make is <code>src/ign_msgs_gen: protobuf::libprotoc-NOTFOUND</code></p>\n<p>I'd like the the generate step to error with \"libprotoc not found\". How could that be accomplished? Does it warrant it's own find module? Or would it fit better as a <code>COMPONENT</code> of <code>FindIgnProtobuf</code>?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2017-12-06T16:47:27.751277+00:00", "milestone": null, "updated_on": "2018-06-04T04:37:44.111610+00:00", "type": "issue", "id": 9}