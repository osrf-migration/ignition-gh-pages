{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/15/comments/42894021.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/15#comment-42894021"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/15.json"}}, "type": "issue", "id": 15, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "<Project>-config.cmake <project>_LIBRARIES should contain absolute paths"}, "content": {"raw": "I just realized an issue that might make the unversioned target a little more vexing.\n\nLet's suppose we had `ign-common1` link to the unversioned target `ignition-math::ignition-math` which is secretly meant to be `ignition-math4::ignition-math4`. If a user does the following:\n\n```\nfind_package(ignition-math5) # the target ignition-math::ignition-math now refers to ignition-math5\nfind_package(ignition-common1) # the target ignition-math::ignition-math still refers to ignition-math5, even though ignition-common1 links to it expecting ignition-math4\n\nadd_executable(foo)\ntarget_link_libraries(foo ignition-math5::ignition-math5)\n\nadd_executable(bar)\ntarget_link_libraries(bar ignition-common1::ignition-common1)\n```\n\nThen even though the user is correctly using the versioned target names, their `bar` executable is going to link against `ignition-math5` even though `ignition-common1` depends on `ignition-math4`, and they will get a linking error. In this simple case, it could be fixed by switching lines 1 and 2, so that the versionless target `ignition-math::ignition-math` gets set to `ignition-math4`, but in more complex cases there might be no solution.\n\nSo in short, **any** libraries that expect to be consumed by other projects **must not** use the versionless targets, or else there is a risk of causing irrecoverable issues for their consumers.", "markup": "markdown", "html": "<p>I just realized an issue that might make the unversioned target a little more vexing.</p>\n<p>Let's suppose we had <code>ign-common1</code> link to the unversioned target <code>ignition-math::ignition-math</code> which is secretly meant to be <code>ignition-math4::ignition-math4</code>. If a user does the following:</p>\n<div class=\"codehilite\"><pre><span></span>find_package(ignition-math5) # the target ignition-math::ignition-math now refers to ignition-math5\nfind_package(ignition-common1) # the target ignition-math::ignition-math still refers to ignition-math5, even though ignition-common1 links to it expecting ignition-math4\n\nadd_executable(foo)\ntarget_link_libraries(foo ignition-math5::ignition-math5)\n\nadd_executable(bar)\ntarget_link_libraries(bar ignition-common1::ignition-common1)\n</pre></div>\n\n\n<p>Then even though the user is correctly using the versioned target names, their <code>bar</code> executable is going to link against <code>ignition-math5</code> even though <code>ignition-common1</code> depends on <code>ignition-math4</code>, and they will get a linking error. In this simple case, it could be fixed by switching lines 1 and 2, so that the versionless target <code>ignition-math::ignition-math</code> gets set to <code>ignition-math4</code>, but in more complex cases there might be no solution.</p>\n<p>So in short, <strong>any</strong> libraries that expect to be consumed by other projects <strong>must not</strong> use the versionless targets, or else there is a risk of causing irrecoverable issues for their consumers.</p>", "type": "rendered"}, "created_on": "2018-01-27T00:57:37.355521+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-01-27T01:02:12.638783+00:00", "type": "issue_comment", "id": 42894021}