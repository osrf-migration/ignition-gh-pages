{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/63/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/63.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/63/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/63/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/63/provide-and-document-option-to-explicitly"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/63/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{47ac260c-4129-4447-b7e9-00a63a2478d6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B47ac260c-4129-4447-b7e9-00a63a2478d6%7D"}, "html": {"href": "https://bitbucket.org/%7B47ac260c-4129-4447-b7e9-00a63a2478d6%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/b43075d6860b6cc554b6aa88ef28b638d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsST-5.png"}}, "nickname": "Silvio Traversaro", "type": "user", "account_id": "5a8c66ead324b531c3d3cf7f"}, "title": "Provide and document option to explicitly disable configuration/compilation/installation of library components", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nSupport for dividing ignition libraries in \u201ccomponents\u201d was added in [#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff](#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff) . However,  at the moment all the components for which the dependencies are installed in the system are always  configured, compiled and installed. It may be handy to have  CMake variables to disable configuration of selected components. \r\n\r\n# Motivation\r\n\r\nI am currently working in adding ports for the ignition libraries in vcpkg, see [https://github.com/microsoft/vcpkg/pull/7781](https://github.com/microsoft/vcpkg/pull/7781) and.  [https://github.com/j-rivero/vcpkg\\_ignition/issues/2](https://github.com/j-rivero/vcpkg_ignition/issues/2) . Vcpkg has support for optionally compiling part of libraries, that is called \u201cfeature packages\u201d, see [https://github.com/microsoft/vcpkg/blob/master/docs/specifications/feature-packages.md](https://github.com/microsoft/vcpkg/blob/master/docs/specifications/feature-packages.md) and [https://devblogs.microsoft.com/cppblog/vcpkg-introducing-installation-options-with-feature-packages/](https://devblogs.microsoft.com/cppblog/vcpkg-introducing-installation-options-with-feature-packages/) . \r\n\r\nPackages features map quite naturally to ign-cmake\u2019s components, but the problem is that at the moment all the components for which the required dependencies are installed are configured. This is a problem for two reason:\r\n\r\n* A user need to spend time compiling some components that he/she did not requested\r\n* The actual components compiled depend  on the state of the packages installed, making the port build not reproducible, unless all the components dependencies are listed as port\u2019s required dependency.\r\n\r\n# Describe alternatives you\u2019ve considered \r\n\r\nIn theory, one could control the environment to make sure that only the dependencies for the desired components are installed. However, this is not always possible, especially in vcpkg.  An alternative option is to always install all the components, but it would be nice to support ignition\u2019s libraries molecularity also at the vcpkg level.", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>Support for dividing ignition libraries in \u201ccomponents\u201d was added in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff\" rel=\"nofollow\">#!/ignitionrobotics/ign-cmake/pull-requests/2/creating-project-components-ready-for/diff</a> . However,  at the moment all the components for which the dependencies are installed in the system are always  configured, compiled and installed. It may be handy to have  CMake variables to disable configuration of selected components. </p>\n<h1 id=\"markdown-header-motivation\">Motivation</h1>\n<p>I am currently working in adding ports for the ignition libraries in vcpkg, see <a data-is-external-link=\"true\" href=\"https://github.com/microsoft/vcpkg/pull/7781\" rel=\"nofollow\">https://github.com/microsoft/vcpkg/pull/7781</a> and.  <a data-is-external-link=\"true\" href=\"https://github.com/j-rivero/vcpkg_ignition/issues/2\" rel=\"nofollow\">https://github.com/j-rivero/vcpkg_ignition/issues/2</a> . Vcpkg has support for optionally compiling part of libraries, that is called \u201cfeature packages\u201d, see <a data-is-external-link=\"true\" href=\"https://github.com/microsoft/vcpkg/blob/master/docs/specifications/feature-packages.md\" rel=\"nofollow\">https://github.com/microsoft/vcpkg/blob/master/docs/specifications/feature-packages.md</a> and <a data-is-external-link=\"true\" href=\"https://devblogs.microsoft.com/cppblog/vcpkg-introducing-installation-options-with-feature-packages/\" rel=\"nofollow\">https://devblogs.microsoft.com/cppblog/vcpkg-introducing-installation-options-with-feature-packages/</a> . </p>\n<p>Packages features map quite naturally to ign-cmake\u2019s components, but the problem is that at the moment all the components for which the required dependencies are installed are configured. This is a problem for two reason:</p>\n<ul>\n<li>A user need to spend time compiling some components that he/she did not requested</li>\n<li>The actual components compiled depend  on the state of the packages installed, making the port build not reproducible, unless all the components dependencies are listed as port\u2019s required dependency.</li>\n</ul>\n<h1 id=\"markdown-header-describe-alternatives-youve-considered\">Describe alternatives you\u2019ve considered</h1>\n<p>In theory, one could control the environment to make sure that only the dependencies for the desired components are installed. However, this is not always possible, especially in vcpkg.  An alternative option is to always install all the components, but it would be nice to support ignition\u2019s libraries molecularity also at the vcpkg level.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-21T08:30:36.528512+00:00", "milestone": null, "updated_on": "2020-03-14T17:48:30.708551+00:00", "type": "issue", "id": 63}