{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/56/comments/51325441.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/56#comment-51325441"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/56.json"}}, "type": "issue", "id": 56, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "[Gazebo9][ign-cmake0] FindOgre.cmake should define OGRE variable names more consistently with OgreConfig.cmake"}, "content": {"raw": "I regret that we ever used the format `Find<Package>.cmake` rather than our new convention of `FindIgn<Package>.cmake`, because these conflicting expectations over what kind of information a cmake find module (or config file) will provide keep biting users when the upstream `<Package>` developers suddenly decide to start providing config-files but those config-files name their variables differently or don't provide exported targets.\n\nMy recommendation would be to add a `FindIgnOGRE.cmake` file to `ign-cmake0` and have all ignition projects (including `gazebo`) that depend on `ign-cmake0` and Ogre update their `ign_find_package(~)` call to look for `IgnOGRE` instead of `OGRE`.\n\nThen we could do a patch release of `libignition-cmake-dev`, `libgazebo-dev`, and any other `-dev` packages that depend on OGRE. I'm not totally clear what the debian release rules would have to say about this, but at least this won't impact API or ABI compatibility, and users for whom everything was already working shouldn't notice any difference as long as all the `-dev` packages get released at once. (Although maybe some `CMakeCache`s will need to get deleted, I'm not sure.)\n\nIf we decide to go that route then I would recommend simultaneously doing the same thing for `UUID` (making a `FindIgnUUID.cmake` file) to resolve issue #40.  And we should audit all the other `Find<Package>.cmake` modules to revise any more potential conflicts before they happen.", "markup": "markdown", "html": "<p>I regret that we ever used the format <code>Find&lt;Package&gt;.cmake</code> rather than our new convention of <code>FindIgn&lt;Package&gt;.cmake</code>, because these conflicting expectations over what kind of information a cmake find module (or config file) will provide keep biting users when the upstream <code>&lt;Package&gt;</code> developers suddenly decide to start providing config-files but those config-files name their variables differently or don't provide exported targets.</p>\n<p>My recommendation would be to add a <code>FindIgnOGRE.cmake</code> file to <code>ign-cmake0</code> and have all ignition projects (including <code>gazebo</code>) that depend on <code>ign-cmake0</code> and Ogre update their <code>ign_find_package(~)</code> call to look for <code>IgnOGRE</code> instead of <code>OGRE</code>.</p>\n<p>Then we could do a patch release of <code>libignition-cmake-dev</code>, <code>libgazebo-dev</code>, and any other <code>-dev</code> packages that depend on OGRE. I'm not totally clear what the debian release rules would have to say about this, but at least this won't impact API or ABI compatibility, and users for whom everything was already working shouldn't notice any difference as long as all the <code>-dev</code> packages get released at once. (Although maybe some <code>CMakeCache</code>s will need to get deleted, I'm not sure.)</p>\n<p>If we decide to go that route then I would recommend simultaneously doing the same thing for <code>UUID</code> (making a <code>FindIgnUUID.cmake</code> file) to resolve issue <a href=\"#!/ignitionrobotics/ign-cmake/issues/40/target-uuid-uuid-does-not-exist\" rel=\"nofollow\" title=\"Target UUID::UUID does not exist\" class=\"ap-connect-link\">#40</a>.  And we should audit all the other <code>Find&lt;Package&gt;.cmake</code> modules to revise any more potential conflicts before they happen.</p>", "type": "rendered"}, "created_on": "2019-03-26T03:20:16.807232+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 51325441}