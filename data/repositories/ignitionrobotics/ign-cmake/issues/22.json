{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/22/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/22.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/22/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/22/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/22/tutorial-documentation-doesnt-parse-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/22/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "Tutorial documentation doesn't parse `///` and `\\`", "component": null, "votes": 0, "watches": 1, "content": {"raw": "*  `//////////////////////////////////////////////////` inside a code block is ignored.\r\n* `\\brief` is extracted from the code block and rendered before the code snippet. Probably because is a Doxygen reserved word.\r\n\r\nHere's the result of generating documentation for this tutorial:\r\n\r\n```\r\n#!python\r\n\r\n\r\n # Test\r\n\r\n Here's a code snippet:\r\n\r\n ```{.cpp}\r\n //////////////////////////////////////////////////\r\n /// \\brief Provide an \"echo\" service.\r\n bool srvEcho(const ignition::msgs::StringMsg &_req,\r\n   ignition::msgs::StringMsg &_rep)\r\n {\r\n   // Set the response's content.\r\n   _rep.set_data(_req.data());\r\n\r\n   // The response succeed.\r\n   return true;\r\n }\r\n ```\r\n```\r\n\r\nAnd this is how it looks:\r\n\r\n![code_snippet_1.png](data/bitbucket.org/repo/Gg8npGe/images/2511738915-code_snippet_1.png)\r\n\r\nHere's the result of generating documentation for this tutorial:\r\n\r\n```\r\n#!python\r\n\r\n\r\n # Test\r\n\r\n The same tutorial without the separator and doxygen tag:\r\n\r\n ```{.cpp}\r\n bool srvEcho(const ignition::msgs::StringMsg &_req,\r\n   ignition::msgs::StringMsg &_rep)\r\n {\r\n   // Set the response's content.\r\n   _rep.set_data(_req.data());\r\n\r\n   // The response succeed.\r\n   return true;\r\n }\r\n ```\r\n```\r\n\r\n![code_snippet_2.png](data/bitbucket.org/repo/Gg8npGe/images/176048270-code_snippet_2.png)", "markup": "markdown", "html": "<ul>\n<li><code>//////////////////////////////////////////////////</code> inside a code block is ignored.</li>\n<li><code>\\brief</code> is extracted from the code block and rendered before the code snippet. Probably because is a Doxygen reserved word.</li>\n</ul>\n<p>Here's the result of generating documentation for this tutorial:</p>\n<div class=\"codehilite language-python\"><pre><span></span> <span class=\"c1\"># Test</span>\n\n <span class=\"n\">Here</span><span class=\"s1\">&#39;s a code snippet:</span>\n\n <span class=\"sb\">``</span><span class=\"err\">`</span><span class=\"p\">{</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"p\">}</span>\n <span class=\"o\">//////////////////////////////////////////////////</span>\n <span class=\"o\">///</span> \\<span class=\"n\">brief</span> <span class=\"n\">Provide</span> <span class=\"n\">an</span> <span class=\"s2\">&quot;echo&quot;</span> <span class=\"n\">service</span><span class=\"o\">.</span>\n <span class=\"nb\">bool</span> <span class=\"n\">srvEcho</span><span class=\"p\">(</span><span class=\"n\">const</span> <span class=\"n\">ignition</span><span class=\"p\">::</span><span class=\"n\">msgs</span><span class=\"p\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span>\n   <span class=\"n\">ignition</span><span class=\"p\">::</span><span class=\"n\">msgs</span><span class=\"p\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">)</span>\n <span class=\"p\">{</span>\n   <span class=\"o\">//</span> <span class=\"n\">Set</span> <span class=\"n\">the</span> <span class=\"n\">response</span><span class=\"s1\">&#39;s content.</span>\n   <span class=\"n\">_rep</span><span class=\"o\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"n\">_req</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">());</span>\n\n   <span class=\"o\">//</span> <span class=\"n\">The</span> <span class=\"n\">response</span> <span class=\"n\">succeed</span><span class=\"o\">.</span>\n   <span class=\"k\">return</span> <span class=\"n\">true</span><span class=\"p\">;</span>\n <span class=\"p\">}</span>\n <span class=\"sb\">``</span><span class=\"err\">`</span>\n</pre></div>\n\n\n<p>And this is how it looks:</p>\n<p><img alt=\"code_snippet_1.png\" src=\"data/bitbucket.org/repo/Gg8npGe/images/2511738915-code_snippet_1.png\" /></p>\n<p>Here's the result of generating documentation for this tutorial:</p>\n<div class=\"codehilite language-python\"><pre><span></span> <span class=\"c1\"># Test</span>\n\n <span class=\"n\">The</span> <span class=\"n\">same</span> <span class=\"n\">tutorial</span> <span class=\"n\">without</span> <span class=\"n\">the</span> <span class=\"n\">separator</span> <span class=\"ow\">and</span> <span class=\"n\">doxygen</span> <span class=\"n\">tag</span><span class=\"p\">:</span>\n\n <span class=\"sb\">``</span><span class=\"err\">`</span><span class=\"p\">{</span><span class=\"o\">.</span><span class=\"n\">cpp</span><span class=\"p\">}</span>\n <span class=\"nb\">bool</span> <span class=\"n\">srvEcho</span><span class=\"p\">(</span><span class=\"n\">const</span> <span class=\"n\">ignition</span><span class=\"p\">::</span><span class=\"n\">msgs</span><span class=\"p\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span>\n   <span class=\"n\">ignition</span><span class=\"p\">::</span><span class=\"n\">msgs</span><span class=\"p\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">)</span>\n <span class=\"p\">{</span>\n   <span class=\"o\">//</span> <span class=\"n\">Set</span> <span class=\"n\">the</span> <span class=\"n\">response</span><span class=\"s1\">&#39;s content.</span>\n   <span class=\"n\">_rep</span><span class=\"o\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"n\">_req</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">());</span>\n\n   <span class=\"o\">//</span> <span class=\"n\">The</span> <span class=\"n\">response</span> <span class=\"n\">succeed</span><span class=\"o\">.</span>\n   <span class=\"k\">return</span> <span class=\"n\">true</span><span class=\"p\">;</span>\n <span class=\"p\">}</span>\n <span class=\"sb\">``</span><span class=\"err\">`</span>\n</pre></div>\n\n\n<p><img alt=\"code_snippet_2.png\" src=\"data/bitbucket.org/repo/Gg8npGe/images/176048270-code_snippet_2.png\" /></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-03-09T17:44:39.147177+00:00", "milestone": null, "updated_on": "2018-03-10T10:33:08.531364+00:00", "type": "issue", "id": 22}