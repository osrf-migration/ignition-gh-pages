{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/59/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/59.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/59/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/59/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/59/finddlcmake-is-not-working-when-cross"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/59/vote"}}, "reporter": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "title": "FindDL.cmake is not working when  cross-compiling to WebAssembly via Emscripten", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When cross-compiling using Emscripten ( https://emscripten.org/ ) `find_package(DL REQUIRED)` should always be successful, as the functions usually contained in the `dlfcn.h` header are already linked without the need of linking any additional library (such as `dl` in Linux). \r\n\r\nHowever, instead the `FindDL.cmake` script currently provided in ignition-cmake fails, for two reasons: \r\n\r\n* It searches for a `dl` library in any non-Windows system, while it should observe the [`CMAKE_DL_LIBS` standard CMake variable](https://cmake.org/cmake/help/latest/variable/CMAKE_DL_LIBS.html) and only search for a library if `CMAKE_DL_LIBS` is non-empty.\r\n\r\n* For some reason, the script fails to find the `dlfcn.h` system header provided by emscripten\r\n\r\nThe solution for the first problem is trivial, but I am not sure what is the reason behind the second problem.", "markup": "markdown", "html": "<p>When cross-compiling using Emscripten ( <a href=\"https://emscripten.org/\" rel=\"nofollow\" class=\"ap-connect-link\">https://emscripten.org/</a> ) <code>find_package(DL REQUIRED)</code> should always be successful, as the functions usually contained in the <code>dlfcn.h</code> header are already linked without the need of linking any additional library (such as <code>dl</code> in Linux). </p>\n<p>However, instead the <code>FindDL.cmake</code> script currently provided in ignition-cmake fails, for two reasons: </p>\n<ul>\n<li>\n<p>It searches for a <code>dl</code> library in any non-Windows system, while it should observe the <a data-is-external-link=\"true\" href=\"https://cmake.org/cmake/help/latest/variable/CMAKE_DL_LIBS.html\" rel=\"nofollow\"><code>CMAKE_DL_LIBS</code> standard CMake variable</a> and only search for a library if <code>CMAKE_DL_LIBS</code> is non-empty.</p>\n</li>\n<li>\n<p>For some reason, the script fails to find the <code>dlfcn.h</code> system header provided by emscripten</p>\n</li>\n</ul>\n<p>The solution for the first problem is trivial, but I am not sure what is the reason behind the second problem.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-04-22T20:19:05.885823+00:00", "milestone": null, "updated_on": "2019-04-22T20:21:52.157520+00:00", "type": "issue", "id": 59}