{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/15/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/15/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/15/configcmake-_libraries-should-contain"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/15/vote"}}, "reporter": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "title": "<Project>-config.cmake <project>_LIBRARIES should contain absolute paths", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Stumbled on some super useful cmake documentation while trying to respond to [ros/console_bridge#52](https://github.com/ros/console_bridge/issues/52).\r\n \r\n* https://cmake.org/cmake/help/v3.0/manual/cmake-packages.7.html#creating-packages\r\n* https://cmake.org/cmake/help/v3.5/manual/cmake-developer.7.html#find-modules\r\n\r\nTakeaways after reading:\r\n\r\n* CMake recommends that project variables (`Xxx_INCLUDE_DIRS`, `Xxx_LIBRARIES`) should only be provided by find modules or `<project>-config.cmake` files that existed before the modern target name approach and are trying to be backwards compatible. Future ignition projects don't need to (and shouldn't) set them at all.\r\n* If ignition-cmake provides \"standard variables\", code we control should not use them. Other ignition projects and Tutorials/examples should use target names.\r\n    * Do `target_link_libraries(ignition-common1 PUBLIC ignition-math4::ignition-math4)`\r\n    * Don't do `target_link_libraries(ignition-common1 PUBLIC ${ignition-math4_LIBRARIES}`\r\n* The variables are quirky. `<project>_LIBRARIES` should contain absolute paths to any libraries,  but ignition-cmake is currently setting them to the imported target name instead.", "markup": "markdown", "html": "<p>Stumbled on some super useful cmake documentation while trying to respond to <a data-is-external-link=\"true\" href=\"https://github.com/ros/console_bridge/issues/52\" rel=\"nofollow\">ros/console_bridge#52</a>.</p>\n<ul>\n<li><a href=\"https://cmake.org/cmake/help/v3.0/manual/cmake-packages.7.html#creating-packages\" rel=\"nofollow\" class=\"ap-connect-link\">https://cmake.org/cmake/help/v3.0/manual/cmake-packages.7.html#creating-packages</a></li>\n<li><a href=\"https://cmake.org/cmake/help/v3.5/manual/cmake-developer.7.html#find-modules\" rel=\"nofollow\" class=\"ap-connect-link\">https://cmake.org/cmake/help/v3.5/manual/cmake-developer.7.html#find-modules</a></li>\n</ul>\n<p>Takeaways after reading:</p>\n<ul>\n<li>CMake recommends that project variables (<code>Xxx_INCLUDE_DIRS</code>, <code>Xxx_LIBRARIES</code>) should only be provided by find modules or <code>&lt;project&gt;-config.cmake</code> files that existed before the modern target name approach and are trying to be backwards compatible. Future ignition projects don't need to (and shouldn't) set them at all.</li>\n<li>If ignition-cmake provides \"standard variables\", code we control should not use them. Other ignition projects and Tutorials/examples should use target names.<ul>\n<li>Do <code>target_link_libraries(ignition-common1 PUBLIC ignition-math4::ignition-math4)</code></li>\n<li>Don't do <code>target_link_libraries(ignition-common1 PUBLIC ${ignition-math4_LIBRARIES}</code></li>\n</ul>\n</li>\n<li>The variables are quirky. <code>&lt;project&gt;_LIBRARIES</code> should contain absolute paths to any libraries,  but ignition-cmake is currently setting them to the imported target name instead.</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "wontfix", "version": null, "edited_on": null, "created_on": "2018-01-25T16:33:00.665956+00:00", "milestone": null, "updated_on": "2018-02-02T22:29:17.871572+00:00", "type": "issue", "id": 15}