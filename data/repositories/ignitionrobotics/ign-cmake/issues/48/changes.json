{"pagelen": 100, "values": [{"changes": {"content": {"new": "# Prerequisites\r\n\r\n* [X] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nIf a package has components with a dependency relationship (such as ign-physics-dartsim-plugin, which depends on ignition-physics-sdf and ignition-physics-mesh), then then all the components must be listed in the `ign_find_package` call and in a proper order. The following is a workaround for this issue in ign-gazebo:\r\n\r\n* #!/ignitionrobotics/ign-gazebo/pull-requests/105/find-mesh-component-of-physics/diff\r\n\r\n# Steps to Reproduce\r\n\r\nI've demonstrated this issue with some examples committed to [branch find_component_order_working](#!/ignitionrobotics/ign-cmake/branch/find_component_order_working) and [branch find_component_order](#!/ignitionrobotics/ign-cmake/branch/find_component_order). The `find_component_order_working` branch creates a package `component_deps` that has two components: `parent` and `child`, and the `child` component links against the `parent`. There is a second package called `use_component_deps1` that makes an `ign_find_package` call for `component_deps` specifying both components `parent child`. This example builds fine:\r\n\r\n1. `hg up find_component_order_working`\r\n2. `mkdir build && cd build && cmake ..`\r\n3. `make` (successful)\r\n\r\nNow on branch [branch find_component_order](#!/ignitionrobotics/ign-cmake/branch/find_component_order), another example named `use_component_deps2 ` is added that differs from `use_component_deps1` only in the order that components are specified in the `ign_find_package` call, but it fails to build:\r\n\r\n1. `hg up find_component_order`\r\n2. `mkdir build && cd build && cmake ..`\r\n3. `make` (unsuccessful)\r\n\r\n**Expected behavior:**  \r\n\r\nI would expect the examples to build regardless of the order in which components are specified. Furthermore, I would that specifying a component would cause dependent components to be included as well (as in the ign-physics example mentioned above).\r\n\r\n**Actual behavior:**\r\n\r\n`ign_find_package` is sensitive to the order of specified components when there is a dependent relationship, and dependent components must all be listed.\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nign-cmake1 and ign-cmake2\r\n\r\n# Additional Information", "old": "# Prerequisites\r\n\r\n* [X] Put an X between the brackets on this line if you have done all of the following:\r\n    * Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nIf a package has components with a dependency relationship (such as ign-physics-dartsim-plugin, which depends on ignition-physics-sdf and ignition-physics-mesh), then then all the components must be listed in the `ign_find_package` call and in a proper order. The following is a workaround for this issue in ign-gazebo:\r\n\r\n* #!/ignitionrobotics/ign-gazebo/pull-requests/105/find-mesh-component-of-physics/diff\r\n\r\n# Steps to Reproduce\r\n\r\nI've demonstrated this issue with some examples committed to [branch find_component_order_working](#!/ignitionrobotics/ign-cmake/branch/find_component_order_working) and [branch find_component_order](#!/ignitionrobotics/ign-cmake/branch/find_component_order). The `find_component_order_working` branch creates a package `component_dependencies` that has two components: `parent` and `child`, and the `child` component links against the `parent`. There is a second package called `use_component_dependencies_ordered` that makes an `ign_find_package` call for `component_dependencies` specifying both components `parent child`. This example builds fine:\r\n\r\n1. `hg up find_component_order_working`\r\n2. `mkdir build && cd build && cmake ..`\r\n3. `make` (successful)\r\n\r\nNow on branch [branch find_component_order](#!/ignitionrobotics/ign-cmake/branch/find_component_order), another example named `use_component_dependencies_unordered ` is added that differs from `use_component_dependencies_ordered` only in the order that components are specified in the `ign_find_package` call, but it fails to build:\r\n\r\n1. `hg up find_component_order`\r\n2. `mkdir build && cd build && cmake ..`\r\n3. `make` (unsuccessful)\r\n\r\n**Expected behavior:**  \r\n\r\nI would expect the examples to build regardless of the order in which components are specified. Furthermore, I would that specifying a component would cause dependent components to be included as well (as in the ign-physics example mentioned above).\r\n\r\n**Actual behavior:**\r\n\r\n`ign_find_package` is sensitive to the order of specified components when there is a dependent relationship, and dependent components must all be listed.\r\n\r\n**Reproduces how often:** \r\n\r\n100%\r\n\r\n# Versions\r\n\r\nign-cmake1 and ign-cmake2\r\n\r\n# Additional Information"}}, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/48/changes/49745866.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/48#comment-49745866"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "finding package with components that have a dependent relationship is tricky"}, "created_on": "2019-01-04T22:54:13.161837+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "message": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "type": "issue_change", "id": 49745866}, {"changes": {"state": {"new": "resolved", "old": "new"}}, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/48/changes/50193917.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/48#comment-50193917"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/48.json"}}, "type": "issue", "id": 48, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "finding package with components that have a dependent relationship is tricky"}, "created_on": "2019-01-22T19:53:58.130596+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "message": {"raw": "pull request #131", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-cmake/pull-requests/131/account-for-inter-component-dependencies\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #131</a></p>", "type": "rendered"}, "type": "issue_change", "id": 50193917}], "page": 1, "size": 2}