{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/69/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/69.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/69/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/69/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/69/convenience-cmake-for-ignition-metapackage"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/issues/69/vote"}}, "reporter": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "title": "Convenience CMake for Ignition Metapackage", "component": null, "votes": 1, "watches": 2, "content": {"raw": "Based off of discussion over on [ros\\_ign github](https://github.com/osrf/ros_ign/pull/60/files/72ee1834ed72e873afa0782d5bd05c5845dd832f#r360498028), it may make sense to create some CMake logic that would allow a one-shot configuration of multiple ignition packages.\r\n\r\nWe could replace logic like this:\r\n\r\n```\r\n  find_package(ignition-gazebo3 REQUIRED)\r\n  set(IGN_GAZEBO_VER ${ignition-gazebo3_VERSION_MAJOR})\r\n\ufffc\r\n\ufffc  find_package(ignition-transport8 REQUIRED)\r\n\ufffc  set(IGN_TRANSPORT_VER ${ignition-transport8_VERSION_MAJOR})\r\n\ufffc\r\n\ufffc  find_package(ignition-msgs5 REQUIRED)\r\n\ufffc  set(IGN_MSGS_VER ${ignition-msgs5_VERSION_MAJOR})\r\n```\r\n\r\nWith something like\r\n\r\n```\r\nfind_package(ignition-citadel REQUIRED COMPONENTS gazebo transport msgs)\r\n```\r\n\r\nWhich would bring in the required packages and populate the necessary versions for downstream use.", "markup": "markdown", "html": "<p>Based off of discussion over on <a data-is-external-link=\"true\" href=\"https://github.com/osrf/ros_ign/pull/60/files/72ee1834ed72e873afa0782d5bd05c5845dd832f#r360498028\" rel=\"nofollow\">ros_ign github</a>, it may make sense to create some CMake logic that would allow a one-shot configuration of multiple ignition packages.</p>\n<p>We could replace logic like this:</p>\n<div class=\"codehilite\"><pre><span></span>  find_package(ignition-gazebo3 REQUIRED)\n  set(IGN_GAZEBO_VER <span class=\"cp\">${</span><span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">gazebo3_VERSION_MAJOR</span><span class=\"cp\">}</span>)\n\ufffc\n\ufffc  find_package(ignition-transport8 REQUIRED)\n\ufffc  set(IGN_TRANSPORT_VER <span class=\"cp\">${</span><span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport8_VERSION_MAJOR</span><span class=\"cp\">}</span>)\n\ufffc\n\ufffc  find_package(ignition-msgs5 REQUIRED)\n\ufffc  set(IGN_MSGS_VER <span class=\"cp\">${</span><span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">msgs5_VERSION_MAJOR</span><span class=\"cp\">}</span>)\n</pre></div>\n\n\n<p>With something like</p>\n<div class=\"codehilite\"><pre><span></span>find_package(ignition-citadel REQUIRED COMPONENTS gazebo transport msgs)\n</pre></div>\n\n\n<p>Which would bring in the required packages and populate the necessary versions for downstream use.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-20T20:35:50.451271+00:00", "milestone": null, "updated_on": "2020-02-12T19:04:39.811695+00:00", "type": "issue", "id": 69}