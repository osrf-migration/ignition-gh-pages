{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/27/comments/44206253.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/issues/27#comment-44206253"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/issues/27.json"}}, "type": "issue", "id": 27, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "title": "Consider providing the code check scripts through ign-cmake"}, "content": {"raw": "I think this issue's scope should be limited to getting what we have (cppcheck) into ign-cmake. It would match the ROS 2 project to put style scripts into a comon spot. ROS2 has [ament/ament_lint](https://github.com/ament/ament_lint) which are cmake packages that turn style checks into tests. \n\nI can make separate tickets for enhancements if this ticket is going to be implemented.\n\nROS2 uses cppcheck too, but they also use a tool called uncrustify. It makes fixing errors super easy. The output includes a diff of the change needed to comply.\n\n```\n5: Code style divergence in file 'src/rcl/arguments.c':\n5: \n5: --- src/rcl/arguments.c\n5: +++ src/rcl/arguments.c.uncrustify\n5: @@ -276 +276 @@\n5: -  if (args_impl-> num_remap_rules > 0) {\n5: +  if (args_impl->num_remap_rules > 0) {\n5: \n5: 1 files with code style divergence\n```\n\nUncrustify doesn't catch everything. There has been some talk about adding support for [clang-format](https://clang.llvm.org/docs/ClangFormat.html).", "markup": "markdown", "html": "<p>I think this issue's scope should be limited to getting what we have (cppcheck) into ign-cmake. It would match the ROS 2 project to put style scripts into a comon spot. ROS2 has <a data-is-external-link=\"true\" href=\"https://github.com/ament/ament_lint\" rel=\"nofollow\">ament/ament_lint</a> which are cmake packages that turn style checks into tests. </p>\n<p>I can make separate tickets for enhancements if this ticket is going to be implemented.</p>\n<p>ROS2 uses cppcheck too, but they also use a tool called uncrustify. It makes fixing errors super easy. The output includes a diff of the change needed to comply.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"n\">Code</span> <span class=\"n\">style</span> <span class=\"n\">divergence</span> <span class=\"k\">in</span> <span class=\"n\">file</span> <span class=\"s1\">&#39;src/rcl/arguments.c&#39;</span><span class=\"o\">:</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> \n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"o\">---</span> <span class=\"n\">src</span><span class=\"sr\">/rcl/</span><span class=\"k\">arguments</span><span class=\"o\">.</span><span class=\"na\">c</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"o\">+++</span> <span class=\"n\">src</span><span class=\"sr\">/rcl/</span><span class=\"k\">arguments</span><span class=\"o\">.</span><span class=\"na\">c</span><span class=\"o\">.</span><span class=\"na\">uncrustify</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">276</span> <span class=\"o\">+</span><span class=\"mi\">276</span> <span class=\"err\">@@</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"o\">-</span>  <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">args_impl</span><span class=\"o\">-&gt;</span> <span class=\"n\">num_remap_rules</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"o\">+</span>  <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">args_impl</span><span class=\"o\">-&gt;</span><span class=\"n\">num_remap_rules</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n<span class=\"mi\">5</span><span class=\"o\">:</span> \n<span class=\"mi\">5</span><span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"n\">files</span> <span class=\"k\">with</span> <span class=\"n\">code</span> <span class=\"n\">style</span> <span class=\"n\">divergence</span>\n</pre></div>\n\n\n<p>Uncrustify doesn't catch everything. There has been some talk about adding support for <a data-is-external-link=\"true\" href=\"https://clang.llvm.org/docs/ClangFormat.html\" rel=\"nofollow\">clang-format</a>.</p>", "type": "rendered"}, "created_on": "2018-03-27T17:31:27.386084+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 44206253}