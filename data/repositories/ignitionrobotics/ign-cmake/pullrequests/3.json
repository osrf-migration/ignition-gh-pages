{"rendered": {"description": {"raw": "Since the ignition projects are using modern C++ features, we need ways to inform dependents about which C++ standard they should be using when compiling against our libraries. The built-in cmake method for this is the \"compile features\" target property. There are certain compile features which are known by cmake, and we can specify which features our program needs, and cmake can infer what flags to pass the compiler so that it provides the features we ask for. For convenience, `ignition-cmake` groups these features into two lists, one for C++11 and one for C++14.\r\n\r\nHowever, there is one feature in each list which Microsoft Visual Studio 2017 C++ compiler does not yet support, so this pull request removes those from the lists and allows us to support MSVC 2017. If we are interested in supporting earlier versions of MSVC, then we may need to do additional tests to see which features those earlier versions do not yet support.\r\n\r\nThis branch of `ign-cmake` has been tested on Windows and is working for `ign-math` (branch: `CMakeRefactor-default`) and `ign-common` (branch: `CMakeRefactor`).", "markup": "markdown", "html": "<p>Since the ignition projects are using modern C++ features, we need ways to inform dependents about which C++ standard they should be using when compiling against our libraries. The built-in cmake method for this is the \"compile features\" target property. There are certain compile features which are known by cmake, and we can specify which features our program needs, and cmake can infer what flags to pass the compiler so that it provides the features we ask for. For convenience, <code>ignition-cmake</code> groups these features into two lists, one for C++11 and one for C++14.</p>\n<p>However, there is one feature in each list which Microsoft Visual Studio 2017 C++ compiler does not yet support, so this pull request removes those from the lists and allows us to support MSVC 2017. If we are interested in supporting earlier versions of MSVC, then we may need to do additional tests to see which features those earlier versions do not yet support.</p>\n<p>This branch of <code>ign-cmake</code> has been tested on Windows and is working for <code>ign-math</code> (branch: <code>CMakeRefactor-default</code>) and <code>ign-common</code> (branch: <code>CMakeRefactor</code>).</p>", "type": "rendered"}, "title": {"raw": "Ignoring C++ features that are not yet supported by MSVC", "markup": "markdown", "html": "<p>Ignoring C++ features that are not yet supported by MSVC</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Since the ignition projects are using modern C++ features, we need ways to inform dependents about which C++ standard they should be using when compiling against our libraries. The built-in cmake method for this is the \"compile features\" target property. There are certain compile features which are known by cmake, and we can specify which features our program needs, and cmake can infer what flags to pass the compiler so that it provides the features we ask for. For convenience, `ignition-cmake` groups these features into two lists, one for C++11 and one for C++14.\r\n\r\nHowever, there is one feature in each list which Microsoft Visual Studio 2017 C++ compiler does not yet support, so this pull request removes those from the lists and allows us to support MSVC 2017. If we are interested in supporting earlier versions of MSVC, then we may need to do additional tests to see which features those earlier versions do not yet support.\r\n\r\nThis branch of `ign-cmake` has been tested on Windows and is working for `ign-math` (branch: `CMakeRefactor-default`) and `ign-common` (branch: `CMakeRefactor`).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diffstat/ignitionrobotics/ign-cmake:c385a6addf5c%0Dd8584288e6af?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/3.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/3/merge"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/3"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:c385a6addf5c%0Dd8584288e6af?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/3/statuses_page=1.json"}}, "title": "Ignoring C++ features that are not yet supported by MSVC", "close_source_branch": true, "reviewers": [], "id": 3, "destination": {"commit": {"hash": "d8584288e6af", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/d8584288e6af.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/d8584288e6af"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "default"}}, "created_on": "2017-10-09T22:51:21.234878+00:00", "summary": {"raw": "Since the ignition projects are using modern C++ features, we need ways to inform dependents about which C++ standard they should be using when compiling against our libraries. The built-in cmake method for this is the \"compile features\" target property. There are certain compile features which are known by cmake, and we can specify which features our program needs, and cmake can infer what flags to pass the compiler so that it provides the features we ask for. For convenience, `ignition-cmake` groups these features into two lists, one for C++11 and one for C++14.\r\n\r\nHowever, there is one feature in each list which Microsoft Visual Studio 2017 C++ compiler does not yet support, so this pull request removes those from the lists and allows us to support MSVC 2017. If we are interested in supporting earlier versions of MSVC, then we may need to do additional tests to see which features those earlier versions do not yet support.\r\n\r\nThis branch of `ign-cmake` has been tested on Windows and is working for `ign-math` (branch: `CMakeRefactor-default`) and `ign-common` (branch: `CMakeRefactor`).", "markup": "markdown", "html": "<p>Since the ignition projects are using modern C++ features, we need ways to inform dependents about which C++ standard they should be using when compiling against our libraries. The built-in cmake method for this is the \"compile features\" target property. There are certain compile features which are known by cmake, and we can specify which features our program needs, and cmake can infer what flags to pass the compiler so that it provides the features we ask for. For convenience, <code>ignition-cmake</code> groups these features into two lists, one for C++11 and one for C++14.</p>\n<p>However, there is one feature in each list which Microsoft Visual Studio 2017 C++ compiler does not yet support, so this pull request removes those from the lists and allows us to support MSVC 2017. If we are interested in supporting earlier versions of MSVC, then we may need to do additional tests to see which features those earlier versions do not yet support.</p>\n<p>This branch of <code>ign-cmake</code> has been tested on Windows and is working for <code>ign-math</code> (branch: <code>CMakeRefactor-default</code>) and <code>ign-common</code> (branch: <code>CMakeRefactor</code>).</p>", "type": "rendered"}, "source": {"commit": {"hash": "88104b5cc647", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/88104b5cc647.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/88104b5cc647"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "msvc_features"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-10-12T15:13:53.982007+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-10T01:05:02.764495+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-10T00:35:36.720733+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2017-10-12T16:36:52.769473+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "c385a6addf5c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/c385a6addf5c.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/c385a6addf5c"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}