{"rendered": {"description": {"raw": "Note that this builds off of pull request #129, so that should be reviewed\\+merged first.\r\n\r\nThis resolves a perplexing build configuration issue that came up when dartsim switched to using imported targets \\(which is a positive development, but it unearthed some weird build system behavior\\).\r\n\r\nBasically our use of `pkg_check_modules(TINYXML2 ...)` was polluting the cmake cache with deceptive variables because `pkg-config` tries to be too smart and leaves `/usr/include` out of the paths that reports as include directories for packages. This left the variable `TINYXML2_INCLUDE_DIRS` as a blank cache entry. Then when dartsim attempted to call `find_path(TINYXML2_INCLUDE_DIRS ...)` in its own find-module, the `find_path(~)` function believed that the include directory was already found, and that it's meant to be an empty string. But when dartsim got back an empty string from `find_path(~)` it gets interpreted as a failure to find `tinyxml2.h`, and then the configuration is believed to have failed.\r\n\r\nThis is a brute force attempt to correct that issue \\(and other potentially similar issues in the future\\) by clearing the `<prefix>_INCLUDE_DIRS` cache variable created by `pkg_check_module(~)` if that variable is blank. I left a TODO for a potentially more elegant way to fix this, but the more elegant way would also be more invasive, so I\u2019m leaving it as future work.", "markup": "markdown", "html": "<p>Note that this builds off of <a href=\"#!/ignitionrobotics/ign-cmake/pull-requests/129/do-not-assume-that-users-want-dsingle\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #129</a>, so that should be reviewed+merged first.</p>\n<p>This resolves a perplexing build configuration issue that came up when dartsim switched to using imported targets (which is a positive development, but it unearthed some weird build system behavior).</p>\n<p>Basically our use of <code>pkg_check_modules(TINYXML2 ...)</code> was polluting the cmake cache with deceptive variables because <code>pkg-config</code> tries to be too smart and leaves <code>/usr/include</code> out of the paths that reports as include directories for packages. This left the variable <code>TINYXML2_INCLUDE_DIRS</code> as a blank cache entry. Then when dartsim attempted to call <code>find_path(TINYXML2_INCLUDE_DIRS ...)</code> in its own find-module, the <code>find_path(~)</code> function believed that the include directory was already found, and that it's meant to be an empty string. But when dartsim got back an empty string from <code>find_path(~)</code> it gets interpreted as a failure to find <code>tinyxml2.h</code>, and then the configuration is believed to have failed.</p>\n<p>This is a brute force attempt to correct that issue (and other potentially similar issues in the future) by clearing the <code>&lt;prefix&gt;_INCLUDE_DIRS</code> cache variable created by <code>pkg_check_module(~)</code> if that variable is blank. I left a TODO for a potentially more elegant way to fix this, but the more elegant way would also be more invasive, so I\u2019m leaving it as future work.</p>", "type": "rendered"}, "title": {"raw": "Unset blank cache variables", "markup": "markdown", "html": "<p>Unset blank cache variables</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Note that this builds off of pull request #129, so that should be reviewed\\+merged first.\r\n\r\nThis resolves a perplexing build configuration issue that came up when dartsim switched to using imported targets \\(which is a positive development, but it unearthed some weird build system behavior\\).\r\n\r\nBasically our use of `pkg_check_modules(TINYXML2 ...)` was polluting the cmake cache with deceptive variables because `pkg-config` tries to be too smart and leaves `/usr/include` out of the paths that reports as include directories for packages. This left the variable `TINYXML2_INCLUDE_DIRS` as a blank cache entry. Then when dartsim attempted to call `find_path(TINYXML2_INCLUDE_DIRS ...)` in its own find-module, the `find_path(~)` function believed that the include directory was already found, and that it's meant to be an empty string. But when dartsim got back an empty string from `find_path(~)` it gets interpreted as a failure to find `tinyxml2.h`, and then the configuration is believed to have failed.\r\n\r\nThis is a brute force attempt to correct that issue \\(and other potentially similar issues in the future\\) by clearing the `<prefix>_INCLUDE_DIRS` cache variable created by `pkg_check_module(~)` if that variable is blank. I left a TODO for a potentially more elegant way to fix this, but the more elegant way would also be more invasive, so I\u2019m leaving it as future work.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/130/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diffstat/ignitionrobotics/ign-cmake:d2d1c7d0383c%0D2f7ac37dfb5d?from_pullrequest_id=130"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/130/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/130.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/130/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/130/merge"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/130"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/130/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:d2d1c7d0383c%0D2f7ac37dfb5d?from_pullrequest_id=130"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/130/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/130/statuses_page=1.json"}}, "title": "Unset blank cache variables", "close_source_branch": true, "reviewers": [], "id": 130, "destination": {"commit": {"hash": "2f7ac37dfb5d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/2f7ac37dfb5d.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/2f7ac37dfb5d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "gz11"}}, "created_on": "2019-01-16T10:01:08.779159+00:00", "summary": {"raw": "Note that this builds off of pull request #129, so that should be reviewed\\+merged first.\r\n\r\nThis resolves a perplexing build configuration issue that came up when dartsim switched to using imported targets \\(which is a positive development, but it unearthed some weird build system behavior\\).\r\n\r\nBasically our use of `pkg_check_modules(TINYXML2 ...)` was polluting the cmake cache with deceptive variables because `pkg-config` tries to be too smart and leaves `/usr/include` out of the paths that reports as include directories for packages. This left the variable `TINYXML2_INCLUDE_DIRS` as a blank cache entry. Then when dartsim attempted to call `find_path(TINYXML2_INCLUDE_DIRS ...)` in its own find-module, the `find_path(~)` function believed that the include directory was already found, and that it's meant to be an empty string. But when dartsim got back an empty string from `find_path(~)` it gets interpreted as a failure to find `tinyxml2.h`, and then the configuration is believed to have failed.\r\n\r\nThis is a brute force attempt to correct that issue \\(and other potentially similar issues in the future\\) by clearing the `<prefix>_INCLUDE_DIRS` cache variable created by `pkg_check_module(~)` if that variable is blank. I left a TODO for a potentially more elegant way to fix this, but the more elegant way would also be more invasive, so I\u2019m leaving it as future work.", "markup": "markdown", "html": "<p>Note that this builds off of <a href=\"#!/ignitionrobotics/ign-cmake/pull-requests/129/do-not-assume-that-users-want-dsingle\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #129</a>, so that should be reviewed+merged first.</p>\n<p>This resolves a perplexing build configuration issue that came up when dartsim switched to using imported targets (which is a positive development, but it unearthed some weird build system behavior).</p>\n<p>Basically our use of <code>pkg_check_modules(TINYXML2 ...)</code> was polluting the cmake cache with deceptive variables because <code>pkg-config</code> tries to be too smart and leaves <code>/usr/include</code> out of the paths that reports as include directories for packages. This left the variable <code>TINYXML2_INCLUDE_DIRS</code> as a blank cache entry. Then when dartsim attempted to call <code>find_path(TINYXML2_INCLUDE_DIRS ...)</code> in its own find-module, the <code>find_path(~)</code> function believed that the include directory was already found, and that it's meant to be an empty string. But when dartsim got back an empty string from <code>find_path(~)</code> it gets interpreted as a failure to find <code>tinyxml2.h</code>, and then the configuration is believed to have failed.</p>\n<p>This is a brute force attempt to correct that issue (and other potentially similar issues in the future) by clearing the <code>&lt;prefix&gt;_INCLUDE_DIRS</code> cache variable created by <code>pkg_check_module(~)</code> if that variable is blank. I left a TODO for a potentially more elegant way to fix this, but the more elegant way would also be more invasive, so I\u2019m leaving it as future work.</p>", "type": "rendered"}, "source": {"commit": {"hash": "e8913dfc6e0a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/e8913dfc6e0a.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/e8913dfc6e0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "unset_blank_cache_variables"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-01-22T22:13:31.339585+00:00", "type": "participant", "approved": true, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, {"role": "PARTICIPANT", "participated_on": "2019-01-23T00:41:34.234006+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2019-01-23T01:33:31.647237+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "d2d1c7d0383c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/d2d1c7d0383c.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/d2d1c7d0383c"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}