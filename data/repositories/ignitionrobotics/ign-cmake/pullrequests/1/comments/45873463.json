{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/1/comments/45873463.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/1/_/diff#comment-45873463"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/1"}}, "title": "First version of ignition-cmake"}, "content": {"raw": "Ignition Transport needs to create some auxiliary binary files for running some of the integration tests. However, these files shouldn't be part of the test suite executed when running `make test`. This is what I'm doing in the Ignition Transport branch that I'm testing for integrating this pull request:\n\n```\n#!python\n\nset(auxiliary_files\n  fastPub_aux\n  pub_aux\n  pub_aux_throttled\n  scopedTopicSubscriber_aux\n  twoProcessesPublisher_aux\n  twoProcessesPubSubSubscriber_aux\n  twoProcessesSrvCallReplier_aux\n  twoProcessesSrvCallReplierIncreasing_aux\n  twoProcessesSrvCallWithoutInputReplier_aux\n  twoProcessesSrvCallWithoutInputReplierIncreasing_aux\n  twoProcessesSrvCallWithoutOutputReplier_aux\n  twoProcessesSrvCallWithoutOutputReplierIncreasing_aux\n)\n\n# Build the auxiliary files.\nforeach(AUX_EXECUTABLE ${auxiliary_files})\n  ign_add_executable(INTEGRATION_${AUX_EXECUTABLE} ${AUX_EXECUTABLE}.cc)\n\n  # Include the interface directories that we always need.\n  ign_target_interface_include_directories(INTEGRATION_${AUX_EXECUTABLE}\n    ${PROJECT_LIBRARY_TARGET_NAME})\n\n  # Link the libraries that we always need.\n  target_link_libraries(INTEGRATION_${AUX_EXECUTABLE}\n    PRIVATE\n      ${PROJECT_LIBRARY_TARGET_NAME}\n      gtest\n      pthread\n  )\nendforeach(AUX_EXECUTABLE)\n```\n\nI'm wondering if it would be possible to integrate this use case within `ign_build_tests` with yet another test type. \n", "markup": "markdown", "html": "<p>Ignition Transport needs to create some auxiliary binary files for running some of the integration tests. However, these files shouldn't be part of the test suite executed when running <code>make test</code>. This is what I'm doing in the Ignition Transport branch that I'm testing for integrating this pull request:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">auxiliary_files</span>\n  <span class=\"n\">fastPub_aux</span>\n  <span class=\"n\">pub_aux</span>\n  <span class=\"n\">pub_aux_throttled</span>\n  <span class=\"n\">scopedTopicSubscriber_aux</span>\n  <span class=\"n\">twoProcessesPublisher_aux</span>\n  <span class=\"n\">twoProcessesPubSubSubscriber_aux</span>\n  <span class=\"n\">twoProcessesSrvCallReplier_aux</span>\n  <span class=\"n\">twoProcessesSrvCallReplierIncreasing_aux</span>\n  <span class=\"n\">twoProcessesSrvCallWithoutInputReplier_aux</span>\n  <span class=\"n\">twoProcessesSrvCallWithoutInputReplierIncreasing_aux</span>\n  <span class=\"n\">twoProcessesSrvCallWithoutOutputReplier_aux</span>\n  <span class=\"n\">twoProcessesSrvCallWithoutOutputReplierIncreasing_aux</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Build the auxiliary files.</span>\n<span class=\"n\">foreach</span><span class=\"p\">(</span><span class=\"n\">AUX_EXECUTABLE</span> <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">auxiliary_files</span><span class=\"p\">})</span>\n  <span class=\"n\">ign_add_executable</span><span class=\"p\">(</span><span class=\"n\">INTEGRATION_</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">AUX_EXECUTABLE</span><span class=\"p\">}</span> <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">AUX_EXECUTABLE</span><span class=\"p\">}</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"p\">)</span>\n\n  <span class=\"c1\"># Include the interface directories that we always need.</span>\n  <span class=\"n\">ign_target_interface_include_directories</span><span class=\"p\">(</span><span class=\"n\">INTEGRATION_</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">AUX_EXECUTABLE</span><span class=\"p\">}</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">PROJECT_LIBRARY_TARGET_NAME</span><span class=\"p\">})</span>\n\n  <span class=\"c1\"># Link the libraries that we always need.</span>\n  <span class=\"n\">target_link_libraries</span><span class=\"p\">(</span><span class=\"n\">INTEGRATION_</span><span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">AUX_EXECUTABLE</span><span class=\"p\">}</span>\n    <span class=\"n\">PRIVATE</span>\n      <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"n\">PROJECT_LIBRARY_TARGET_NAME</span><span class=\"p\">}</span>\n      <span class=\"n\">gtest</span>\n      <span class=\"n\">pthread</span>\n  <span class=\"p\">)</span>\n<span class=\"n\">endforeach</span><span class=\"p\">(</span><span class=\"n\">AUX_EXECUTABLE</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>I'm wondering if it would be possible to integrate this use case within <code>ign_build_tests</code> with yet another test type. </p>", "type": "rendered"}, "created_on": "2017-09-27T00:07:27.776486+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2017-09-27T00:07:27.779019+00:00", "type": "pullrequest_comment", "id": 45873463}