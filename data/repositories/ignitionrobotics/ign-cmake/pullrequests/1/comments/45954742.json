{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/1/comments/45954742.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:0ae12d850f58..d8ed439c5f00?path=cmake%2FIgnUtils.cmake"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/1/_/diff#comment-45954742"}}, "parent": {"id": 45921250, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/1/comments/45921250.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/1/_/diff#comment-45921250"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 1, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/1.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/1"}}, "title": "First version of ignition-cmake"}, "content": {"raw": "Would we have to be concerned about exporting the target?\n\nThe scenario I'm imagining is: (1) We build the package on a machine in our office. (2) We distribute the package to users who never build it. (3) Users try to link against the prebuilt package. Would the users' build systems run into an issue where they can't resolve the generator expression, because they didn't build the package on their machine? I've experienced a few times where CMake can't resolve a generator expression, and then the build just fails spectacularly with a cryptic error message. Perhaps this wouldn't actually be an issue, though.", "markup": "markdown", "html": "<p>Would we have to be concerned about exporting the target?</p>\n<p>The scenario I'm imagining is: (1) We build the package on a machine in our office. (2) We distribute the package to users who never build it. (3) Users try to link against the prebuilt package. Would the users' build systems run into an issue where they can't resolve the generator expression, because they didn't build the package on their machine? I've experienced a few times where CMake can't resolve a generator expression, and then the build just fails spectacularly with a cryptic error message. Perhaps this wouldn't actually be an issue, though.</p>", "type": "rendered"}, "created_on": "2017-09-27T16:29:58.295724+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "cmake/IgnUtils.cmake"}, "updated_on": "2017-09-27T16:29:58.299737+00:00", "type": "pullrequest_comment", "id": 45954742}