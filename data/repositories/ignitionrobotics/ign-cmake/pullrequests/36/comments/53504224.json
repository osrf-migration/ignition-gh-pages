{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/36/comments/53504224.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/36/_/diff#comment-53504224"}}, "parent": {"id": 53485779, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/36/comments/53485779.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/36/_/diff#comment-53485779"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 36, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/36.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/36"}}, "title": "Add FindCURL.cmake"}, "content": {"raw": "One of the key motivations behind `ign_find_package` is to ensure that all of our projects always correctly auto-generate their own `pkg-config` files.\n\nCurrently, we use a custom find-module for each of our dependencies, and each of those custom find-modules fills out the `pkg-config` information for the package that they provide. In this case, we would want our `FindCURL.cmake` to provide us with the `pkg-config` information for `libcurl`.\n\nThere *is* a way to specify the `pkg-config` information without it being provided by the find-module. There are optional arguments `ign_find_package(... PKGCONFIG <module_name> ...)` that would allow us to specify the `pkg-config` information to `ign_find_package` directly, in which case the find-module does not need to provide it, and we could then use the native `FindCURL.cmake` instead.\n\nHowever, this means that each project that depends on `libcurl` will need to fill in this `pkg-config` information. Luckily, `ign_find_package` will emit a warning if the information is not provided, so we don't have to worry about forgetting. Still, I think it's easier to \"set and forget\" this information in a custom `find-module`.\n\nWe have a similar situation with `protobuf`, which also provides a native cmake find-module. The solution there was to create a custom find-module named `FindIgnProtobuf.cmake`, and then our custom find-module can still leverage the native cmake find-module.\n\nSo what I would recommend for this is to name our custom find-module `FindIgnCURL.cmake`, and then have it contain the following:\n\n```\nset(ign_quiet_arg)\nif(IgnCURL_FIND_QUIETLY)\n  set(ign_quiet_arg QUIET)\nendif()\n\nfind_package(CURL ${IgnCURL_VERSION} ${ign_quiet_arg})\n\nset(IgnCURL_FOUND ${CURL_FOUND})\n\ninclude(IgnPkgConfig)\nign_pkg_config_entry(IgnCURL \"libcurl >= ${IgnCURL_VERSION}\")\n```\n\nWe may want to use a different `>=` inequality in `ign_pkg_config_entry` depending on how libcurl does versioning.\n\nThis way we would get the benefit of ensuring that the pkg-config information is generated while still leveraging the native find-module.\n\nNote that from the `CMakeLists.txt` of the ignition project, we'll need to call `ign_find_package(IgnCURL ...)`.", "markup": "markdown", "html": "<p>One of the key motivations behind <code>ign_find_package</code> is to ensure that all of our projects always correctly auto-generate their own <code>pkg-config</code> files.</p>\n<p>Currently, we use a custom find-module for each of our dependencies, and each of those custom find-modules fills out the <code>pkg-config</code> information for the package that they provide. In this case, we would want our <code>FindCURL.cmake</code> to provide us with the <code>pkg-config</code> information for <code>libcurl</code>.</p>\n<p>There <em>is</em> a way to specify the <code>pkg-config</code> information without it being provided by the find-module. There are optional arguments <code>ign_find_package(... PKGCONFIG &lt;module_name&gt; ...)</code> that would allow us to specify the <code>pkg-config</code> information to <code>ign_find_package</code> directly, in which case the find-module does not need to provide it, and we could then use the native <code>FindCURL.cmake</code> instead.</p>\n<p>However, this means that each project that depends on <code>libcurl</code> will need to fill in this <code>pkg-config</code> information. Luckily, <code>ign_find_package</code> will emit a warning if the information is not provided, so we don't have to worry about forgetting. Still, I think it's easier to \"set and forget\" this information in a custom <code>find-module</code>.</p>\n<p>We have a similar situation with <code>protobuf</code>, which also provides a native cmake find-module. The solution there was to create a custom find-module named <code>FindIgnProtobuf.cmake</code>, and then our custom find-module can still leverage the native cmake find-module.</p>\n<p>So what I would recommend for this is to name our custom find-module <code>FindIgnCURL.cmake</code>, and then have it contain the following:</p>\n<div class=\"codehilite\"><pre><span></span>set(ign_quiet_arg)\nif(IgnCURL_FIND_QUIETLY)\n  set(ign_quiet_arg QUIET)\nendif()\n\nfind_package(CURL <span class=\"cp\">${</span><span class=\"n\">IgnCURL_VERSION</span><span class=\"cp\">}</span> <span class=\"cp\">${</span><span class=\"n\">ign_quiet_arg</span><span class=\"cp\">}</span>)\n\nset(IgnCURL_FOUND <span class=\"cp\">${</span><span class=\"n\">CURL_FOUND</span><span class=\"cp\">}</span>)\n\ninclude(IgnPkgConfig)\nign_pkg_config_entry(IgnCURL &quot;libcurl &gt;= <span class=\"cp\">${</span><span class=\"n\">IgnCURL_VERSION</span><span class=\"cp\">}</span>&quot;)\n</pre></div>\n\n\n<p>We may want to use a different <code>&gt;=</code> inequality in <code>ign_pkg_config_entry</code> depending on how libcurl does versioning.</p>\n<p>This way we would get the benefit of ensuring that the pkg-config information is generated while still leveraging the native find-module.</p>\n<p>Note that from the <code>CMakeLists.txt</code> of the ignition project, we'll need to call <code>ign_find_package(IgnCURL ...)</code>.</p>", "type": "rendered"}, "created_on": "2018-01-11T18:26:18.025118+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-01-11T18:26:18.027632+00:00", "type": "pullrequest_comment", "id": 53504224}