{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/60/comments/60801274.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:61847d89595c..c5f1c35a73f6?path=config%2Fignition-cmake-config.cmake.in"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/60/_/diff#comment-60801274"}}, "parent": {"id": 60792123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/60/comments/60792123.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/60/_/diff#comment-60792123"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 60, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/60.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/60"}}, "title": "Adding cppcheck and cpplint with codecheck target"}, "content": {"raw": "This is a good point to bring up, and it's something that I've been meaning to tackle at some point, although it's low priority because the current approach does work, and our packages are *essentially* relocatable.\n\nThe only catch with this current approach is that there are two cases we aren't currently supporting properly:\n\n1. If a user calls `make DESTDIR=/some/other/path install` where `/some/other/path` does not match the `CMAKE_INSTALL_PREFIX` that was set at compile time\n\n2. If someone wants to configure+build on one machine and then install the packages to a different directory on another machine (this is probably effectively the same as [1]).\n\nI think we might be able to fix this by using the `$<INSTALL_PREFIX>` generator expression instead of the `@CMAKE_INSTALL_PREFIX@` variable, and then we would use `file(GENERATE ...)` instead of `configure_file(...)`. I'm guessing that's how cmake internally generates the target export files, but I don't know for sure.\n\nOne of the problems with using relative paths right now is it's difficult to predict what that relative relationship will actually be. Sometimes the `ignition-cmake1-config.cmake` file will be installed into `<prefix>/lib/cmake/ignition-cmake1/`, but other times it may be installed into `<prefix>/lib/<architecture>/cmake/ignition-cmake1/`. That could/should be fixed by consistently installing the config-file into `<prefix>/share/ignition-cmake1/`.\n\nI think this gives us two options:\n\na. Have `ignition-cmake1-config.cmake` install to `<prefix>/share/ignition-cmake1/` and use relative paths\n\nb. Use generator expressions to make our installations more robust\n\nI think (a) is the better approach. The only catch with (a) is that it would be a behavioral change, which could cause some conflicts for users who already have `ignition-cmake1` installed and then try to install the more recent `ignition-cmake1`. If the user doesn't also uninstall or delete the `<prefix>/lib/<architecture>/cmake/ignition-cmake1` directory, then it's hard to predict whether cmake will use the old installation or the new installation. But I think that's a pain we'll just have to bear, unless we're willing to wait until the next major version of `ign-cmake` before making that behavioral change.", "markup": "markdown", "html": "<p>This is a good point to bring up, and it's something that I've been meaning to tackle at some point, although it's low priority because the current approach does work, and our packages are <em>essentially</em> relocatable.</p>\n<p>The only catch with this current approach is that there are two cases we aren't currently supporting properly:</p>\n<ol>\n<li>\n<p>If a user calls <code>make DESTDIR=/some/other/path install</code> where <code>/some/other/path</code> does not match the <code>CMAKE_INSTALL_PREFIX</code> that was set at compile time</p>\n</li>\n<li>\n<p>If someone wants to configure+build on one machine and then install the packages to a different directory on another machine (this is probably effectively the same as [1]).</p>\n</li>\n</ol>\n<p>I think we might be able to fix this by using the <code>$&lt;INSTALL_PREFIX&gt;</code> generator expression instead of the <code>@CMAKE_INSTALL_PREFIX@</code> variable, and then we would use <code>file(GENERATE ...)</code> instead of <code>configure_file(...)</code>. I'm guessing that's how cmake internally generates the target export files, but I don't know for sure.</p>\n<p>One of the problems with using relative paths right now is it's difficult to predict what that relative relationship will actually be. Sometimes the <code>ignition-cmake1-config.cmake</code> file will be installed into <code>&lt;prefix&gt;/lib/cmake/ignition-cmake1/</code>, but other times it may be installed into <code>&lt;prefix&gt;/lib/&lt;architecture&gt;/cmake/ignition-cmake1/</code>. That could/should be fixed by consistently installing the config-file into <code>&lt;prefix&gt;/share/ignition-cmake1/</code>.</p>\n<p>I think this gives us two options:</p>\n<p>a. Have <code>ignition-cmake1-config.cmake</code> install to <code>&lt;prefix&gt;/share/ignition-cmake1/</code> and use relative paths</p>\n<p>b. Use generator expressions to make our installations more robust</p>\n<p>I think (a) is the better approach. The only catch with (a) is that it would be a behavioral change, which could cause some conflicts for users who already have <code>ignition-cmake1</code> installed and then try to install the more recent <code>ignition-cmake1</code>. If the user doesn't also uninstall or delete the <code>&lt;prefix&gt;/lib/&lt;architecture&gt;/cmake/ignition-cmake1</code> directory, then it's hard to predict whether cmake will use the old installation or the new installation. But I think that's a pain we'll just have to bear, unless we're willing to wait until the next major version of <code>ign-cmake</code> before making that behavioral change.</p>", "type": "rendered"}, "created_on": "2018-04-05T18:21:09.424038+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": false, "path": "config/ignition-cmake-config.cmake.in"}, "updated_on": "2018-04-05T18:21:09.431125+00:00", "type": "pullrequest_comment", "id": 60801274}