{"rendered": {"description": {"raw": "We found some fascinating issues that arise when toolchains (which get called before the top-level `cmake_minimum_required(VERSION ~)` call) redefine the native cmake functions or macros. Effectively, none of the cmake policies will be set as desired inside of those macros or functions.\r\n\r\nThis fixes that issue, and also preemptively fixes any possible issues that may arise from a user who may have a lower minimum require version setting than what we expect.\r\n\r\nAt the moment, the minimum required cmake version of a config file will automatically take on the value of the minimum required cmake version of the ignition project it belongs to. We can change that behavior if desired, since the config-file cmake version doesn't necessarily need to be tied to the project's cmake version, but I think we generally intend to use the same cmake version across all projects anyway, so it's probably a moot point.", "markup": "markdown", "html": "<p>We found some fascinating issues that arise when toolchains (which get called before the top-level <code>cmake_minimum_required(VERSION ~)</code> call) redefine the native cmake functions or macros. Effectively, none of the cmake policies will be set as desired inside of those macros or functions.</p>\n<p>This fixes that issue, and also preemptively fixes any possible issues that may arise from a user who may have a lower minimum require version setting than what we expect.</p>\n<p>At the moment, the minimum required cmake version of a config file will automatically take on the value of the minimum required cmake version of the ignition project it belongs to. We can change that behavior if desired, since the config-file cmake version doesn't necessarily need to be tied to the project's cmake version, but I think we generally intend to use the same cmake version across all projects anyway, so it's probably a moot point.</p>", "type": "rendered"}, "title": {"raw": "Explicitly set the cmake_minimum_required policy version for package config files", "markup": "markdown", "html": "<p>Explicitly set the cmake_minimum_required policy version for package config files</p>", "type": "rendered"}}, "type": "pullrequest", "description": "We found some fascinating issues that arise when toolchains (which get called before the top-level `cmake_minimum_required(VERSION ~)` call) redefine the native cmake functions or macros. Effectively, none of the cmake policies will be set as desired inside of those macros or functions.\r\n\r\nThis fixes that issue, and also preemptively fixes any possible issues that may arise from a user who may have a lower minimum require version setting than what we expect.\r\n\r\nAt the moment, the minimum required cmake version of a config file will automatically take on the value of the minimum required cmake version of the ignition project it belongs to. We can change that behavior if desired, since the config-file cmake version doesn't necessarily need to be tied to the project's cmake version, but I think we generally intend to use the same cmake version across all projects anyway, so it's probably a moot point.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diffstat/ignitionrobotics/ign-cmake:c63cda35d05a%0D65a25c48c07d?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/5.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/5/merge"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/5"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:c63cda35d05a%0D65a25c48c07d?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/5/statuses_page=1.json"}}, "title": "Explicitly set the cmake_minimum_required policy version for package config files", "close_source_branch": true, "reviewers": [], "id": 5, "destination": {"commit": {"hash": "65a25c48c07d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/65a25c48c07d.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/65a25c48c07d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "default"}}, "created_on": "2017-10-16T21:05:24.809023+00:00", "summary": {"raw": "We found some fascinating issues that arise when toolchains (which get called before the top-level `cmake_minimum_required(VERSION ~)` call) redefine the native cmake functions or macros. Effectively, none of the cmake policies will be set as desired inside of those macros or functions.\r\n\r\nThis fixes that issue, and also preemptively fixes any possible issues that may arise from a user who may have a lower minimum require version setting than what we expect.\r\n\r\nAt the moment, the minimum required cmake version of a config file will automatically take on the value of the minimum required cmake version of the ignition project it belongs to. We can change that behavior if desired, since the config-file cmake version doesn't necessarily need to be tied to the project's cmake version, but I think we generally intend to use the same cmake version across all projects anyway, so it's probably a moot point.", "markup": "markdown", "html": "<p>We found some fascinating issues that arise when toolchains (which get called before the top-level <code>cmake_minimum_required(VERSION ~)</code> call) redefine the native cmake functions or macros. Effectively, none of the cmake policies will be set as desired inside of those macros or functions.</p>\n<p>This fixes that issue, and also preemptively fixes any possible issues that may arise from a user who may have a lower minimum require version setting than what we expect.</p>\n<p>At the moment, the minimum required cmake version of a config file will automatically take on the value of the minimum required cmake version of the ignition project it belongs to. We can change that behavior if desired, since the config-file cmake version doesn't necessarily need to be tied to the project's cmake version, but I think we generally intend to use the same cmake version across all projects anyway, so it's probably a moot point.</p>", "type": "rendered"}, "source": {"commit": {"hash": "877e1d758cbd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/877e1d758cbd.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/877e1d758cbd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "SpecifyVersionForConfigFiles"}}, "comment_count": 12, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-10-16T21:48:34.459376+00:00", "type": "participant", "approved": true, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-27T18:07:12.051808+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-10-27T17:47:35.046726+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "", "updated_on": "2017-10-31T18:07:34.754335+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "c63cda35d05a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/c63cda35d05a.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/c63cda35d05a"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}