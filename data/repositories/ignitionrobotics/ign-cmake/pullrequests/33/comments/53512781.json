{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/33/comments/53512781.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:5e1fe1a94269..7541a07604ca?path=cmake%2FFindYAML.cmake"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/33/_/diff#comment-53512781"}}, "parent": {"id": 53512045, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/33/comments/53512045.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/33/_/diff#comment-53512045"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/33.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/33"}}, "title": "Add FindYAML.cmake"}, "content": {"raw": "The main thing I don't like about this is it makes it difficult/dangerous for anyone to request a specific version of `libyaml` from the find-module.\n\nMy first instinct would be to say that we should use a variable here, so we'd have `ign_pkg_check_modules(YAML yaml-${YAML_VERSION})`, but then if `ign_find_package(YAML ...)` is called without specifying a version, then we'd be telling `pkg-config` to look for a file named `yaml-.pc` which is obviously wrong. I see two options for making this find-module robust:\n\n1. We could check `if(${YAML_VERSION} VERSION_EQUAL \"0.1\")` and emit a configuration error when that check fails. This would prevent us from misconfiguring our `pkg-config` file, but it would require us to change the find-module in order to fix it.\n\n2. We could set a default `set(ign_yaml_version 0.1)` and then check `if(YAML_VERSION)`, and then set `ign_yaml_version` based on `YAML_VERSION` if something has been specified. The danger there is the user needs to know that they have to provide a `<version>` that matches an existing `yaml-<version>.pc`.", "markup": "markdown", "html": "<p>The main thing I don't like about this is it makes it difficult/dangerous for anyone to request a specific version of <code>libyaml</code> from the find-module.</p>\n<p>My first instinct would be to say that we should use a variable here, so we'd have <code>ign_pkg_check_modules(YAML yaml-${YAML_VERSION})</code>, but then if <code>ign_find_package(YAML ...)</code> is called without specifying a version, then we'd be telling <code>pkg-config</code> to look for a file named <code>yaml-.pc</code> which is obviously wrong. I see two options for making this find-module robust:</p>\n<ol>\n<li>\n<p>We could check <code>if(${YAML_VERSION} VERSION_EQUAL \"0.1\")</code> and emit a configuration error when that check fails. This would prevent us from misconfiguring our <code>pkg-config</code> file, but it would require us to change the find-module in order to fix it.</p>\n</li>\n<li>\n<p>We could set a default <code>set(ign_yaml_version 0.1)</code> and then check <code>if(YAML_VERSION)</code>, and then set <code>ign_yaml_version</code> based on <code>YAML_VERSION</code> if something has been specified. The danger there is the user needs to know that they have to provide a <code>&lt;version&gt;</code> that matches an existing <code>yaml-&lt;version&gt;.pc</code>.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2018-01-11T20:17:41.529741+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "cmake/FindYAML.cmake"}, "updated_on": "2018-01-11T20:17:41.533928+00:00", "type": "pullrequest_comment", "id": 53512781}