{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/101/comments/70640587.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/101/_/diff#comment-70640587"}}, "parent": {"id": 70640275, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/101/comments/70640275.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/101/_/diff#comment-70640275"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 101, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/101.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/101"}}, "title": "Warning suppression utility"}, "content": {"raw": "Yeah, jenkins doesn't catch the `static_assert` tests in other repos either\n\n* https://build.osrfoundation.org/view/os_homebrew/job/ignition_common-ci-default-homebrew-amd64/112/testReport/(root)/\n\nthe only thing that really notices them is the pipelines, which are only ubuntu, so nothing was flagging that the test was failing on homebrew.\n\nI generate junit files for the examples tests here in ign-cmake but using `configure_file` to create pass and fail files. The `test_results` folder initially has the \"failure\" file, and then the test copies the \"pass\" file if it succeeds. gtest makes it  a lot easier", "markup": "markdown", "html": "<p>Yeah, jenkins doesn't catch the <code>static_assert</code> tests in other repos either</p>\n<ul>\n<li><a href=\"https://build.osrfoundation.org/view/os_homebrew/job/ignition_common-ci-default-homebrew-amd64/112/testReport/(root)/\" rel=\"nofollow\" class=\"ap-connect-link\">https://build.osrfoundation.org/view/os_homebrew/job/ignition_common-ci-default-homebrew-amd64/112/testReport/(root)/</a></li>\n</ul>\n<p>the only thing that really notices them is the pipelines, which are only ubuntu, so nothing was flagging that the test was failing on homebrew.</p>\n<p>I generate junit files for the examples tests here in ign-cmake but using <code>configure_file</code> to create pass and fail files. The <code>test_results</code> folder initially has the \"failure\" file, and then the test copies the \"pass\" file if it succeeds. gtest makes it  a lot easier</p>", "type": "rendered"}, "created_on": "2018-07-21T07:53:45.392755+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2018-07-21T07:53:45.399281+00:00", "type": "pullrequest_comment", "id": 70640587}