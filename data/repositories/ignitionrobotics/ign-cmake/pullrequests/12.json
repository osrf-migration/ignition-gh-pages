{"rendered": {"description": {"raw": "This pull request is the culmination of several days' worth of research and experimentation to understand the nuances of building libraries on Windows.\r\n\r\n[I've created a diagram that lays out my findings.](https://docs.google.com/presentation/d/14Ags6mV-xQbN6OIfVOPcvDOW9M2WlgwGls-QYhZe2GQ/edit?usp=sharing) The basic conclusion is as follows:\r\n\r\n- Using the dynamic runtimes (`/MDd` or `/MD`) allows us to have a robust and comprehensive plugin-based framework which would be prohibitive or impossible if we were to use the static runtimes (`/MTd` or `/MT`).\r\n\r\n- The choice between compiling static libraries (`.lib`) vs dynamic libraries (`.dll`) only really affects the way we (or users) want to distribute the binary files. That choice has no impact on the features that we are able to support.\r\n\r\n- I suggest that our CI choose the debug dynamic runtime `/MDd` and compile dynamic libraries (`.dll`) because those choices will be the most informative in the event of a CI failure (specifically, if we forgot to apply visibility macros to any classes, that is something which may get caught when the CI is compiling `.dll`s, but it would be completely missed if the CI compiled static `.lib`s).\r\n\r\n- I suggest that when it comes time to distribute the libraries as binaries on Windows (...if this is even something we intend to do...) we should distribute them as static libraries (`.lib`).\r\n\r\nThis pull request doesn't do very much, but it might provide a useful forum for discussing these findings, especially if anyone has questions or concerns.", "markup": "markdown", "html": "<p>This pull request is the culmination of several days' worth of research and experimentation to understand the nuances of building libraries on Windows.</p>\n<p><a data-is-external-link=\"true\" href=\"https://docs.google.com/presentation/d/14Ags6mV-xQbN6OIfVOPcvDOW9M2WlgwGls-QYhZe2GQ/edit?usp=sharing\" rel=\"nofollow\">I've created a diagram that lays out my findings.</a> The basic conclusion is as follows:</p>\n<ul>\n<li>\n<p>Using the dynamic runtimes (<code>/MDd</code> or <code>/MD</code>) allows us to have a robust and comprehensive plugin-based framework which would be prohibitive or impossible if we were to use the static runtimes (<code>/MTd</code> or <code>/MT</code>).</p>\n</li>\n<li>\n<p>The choice between compiling static libraries (<code>.lib</code>) vs dynamic libraries (<code>.dll</code>) only really affects the way we (or users) want to distribute the binary files. That choice has no impact on the features that we are able to support.</p>\n</li>\n<li>\n<p>I suggest that our CI choose the debug dynamic runtime <code>/MDd</code> and compile dynamic libraries (<code>.dll</code>) because those choices will be the most informative in the event of a CI failure (specifically, if we forgot to apply visibility macros to any classes, that is something which may get caught when the CI is compiling <code>.dll</code>s, but it would be completely missed if the CI compiled static <code>.lib</code>s).</p>\n</li>\n<li>\n<p>I suggest that when it comes time to distribute the libraries as binaries on Windows (...if this is even something we intend to do...) we should distribute them as static libraries (<code>.lib</code>).</p>\n</li>\n</ul>\n<p>This pull request doesn't do very much, but it might provide a useful forum for discussing these findings, especially if anyone has questions or concerns.</p>", "type": "rendered"}, "title": {"raw": "Finalize settings for Windows", "markup": "markdown", "html": "<p>Finalize settings for Windows</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request is the culmination of several days' worth of research and experimentation to understand the nuances of building libraries on Windows.\r\n\r\n[I've created a diagram that lays out my findings.](https://docs.google.com/presentation/d/14Ags6mV-xQbN6OIfVOPcvDOW9M2WlgwGls-QYhZe2GQ/edit?usp=sharing) The basic conclusion is as follows:\r\n\r\n- Using the dynamic runtimes (`/MDd` or `/MD`) allows us to have a robust and comprehensive plugin-based framework which would be prohibitive or impossible if we were to use the static runtimes (`/MTd` or `/MT`).\r\n\r\n- The choice between compiling static libraries (`.lib`) vs dynamic libraries (`.dll`) only really affects the way we (or users) want to distribute the binary files. That choice has no impact on the features that we are able to support.\r\n\r\n- I suggest that our CI choose the debug dynamic runtime `/MDd` and compile dynamic libraries (`.dll`) because those choices will be the most informative in the event of a CI failure (specifically, if we forgot to apply visibility macros to any classes, that is something which may get caught when the CI is compiling `.dll`s, but it would be completely missed if the CI compiled static `.lib`s).\r\n\r\n- I suggest that when it comes time to distribute the libraries as binaries on Windows (...if this is even something we intend to do...) we should distribute them as static libraries (`.lib`).\r\n\r\nThis pull request doesn't do very much, but it might provide a useful forum for discussing these findings, especially if anyone has questions or concerns.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diffstat/ignitionrobotics/ign-cmake:e0abf972dcd8%0Ddccbae051758?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/12.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/12/merge"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/pull-requests/12"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/diff/ignitionrobotics/ign-cmake:e0abf972dcd8%0Ddccbae051758?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-cmake/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-cmake/pullrequests/12/statuses_page=1.json"}}, "title": "Finalize settings for Windows", "close_source_branch": true, "reviewers": [], "id": 12, "destination": {"commit": {"hash": "dccbae051758", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/dccbae051758.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/dccbae051758"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "default"}}, "created_on": "2017-11-16T02:18:04.992845+00:00", "summary": {"raw": "This pull request is the culmination of several days' worth of research and experimentation to understand the nuances of building libraries on Windows.\r\n\r\n[I've created a diagram that lays out my findings.](https://docs.google.com/presentation/d/14Ags6mV-xQbN6OIfVOPcvDOW9M2WlgwGls-QYhZe2GQ/edit?usp=sharing) The basic conclusion is as follows:\r\n\r\n- Using the dynamic runtimes (`/MDd` or `/MD`) allows us to have a robust and comprehensive plugin-based framework which would be prohibitive or impossible if we were to use the static runtimes (`/MTd` or `/MT`).\r\n\r\n- The choice between compiling static libraries (`.lib`) vs dynamic libraries (`.dll`) only really affects the way we (or users) want to distribute the binary files. That choice has no impact on the features that we are able to support.\r\n\r\n- I suggest that our CI choose the debug dynamic runtime `/MDd` and compile dynamic libraries (`.dll`) because those choices will be the most informative in the event of a CI failure (specifically, if we forgot to apply visibility macros to any classes, that is something which may get caught when the CI is compiling `.dll`s, but it would be completely missed if the CI compiled static `.lib`s).\r\n\r\n- I suggest that when it comes time to distribute the libraries as binaries on Windows (...if this is even something we intend to do...) we should distribute them as static libraries (`.lib`).\r\n\r\nThis pull request doesn't do very much, but it might provide a useful forum for discussing these findings, especially if anyone has questions or concerns.", "markup": "markdown", "html": "<p>This pull request is the culmination of several days' worth of research and experimentation to understand the nuances of building libraries on Windows.</p>\n<p><a data-is-external-link=\"true\" href=\"https://docs.google.com/presentation/d/14Ags6mV-xQbN6OIfVOPcvDOW9M2WlgwGls-QYhZe2GQ/edit?usp=sharing\" rel=\"nofollow\">I've created a diagram that lays out my findings.</a> The basic conclusion is as follows:</p>\n<ul>\n<li>\n<p>Using the dynamic runtimes (<code>/MDd</code> or <code>/MD</code>) allows us to have a robust and comprehensive plugin-based framework which would be prohibitive or impossible if we were to use the static runtimes (<code>/MTd</code> or <code>/MT</code>).</p>\n</li>\n<li>\n<p>The choice between compiling static libraries (<code>.lib</code>) vs dynamic libraries (<code>.dll</code>) only really affects the way we (or users) want to distribute the binary files. That choice has no impact on the features that we are able to support.</p>\n</li>\n<li>\n<p>I suggest that our CI choose the debug dynamic runtime <code>/MDd</code> and compile dynamic libraries (<code>.dll</code>) because those choices will be the most informative in the event of a CI failure (specifically, if we forgot to apply visibility macros to any classes, that is something which may get caught when the CI is compiling <code>.dll</code>s, but it would be completely missed if the CI compiled static <code>.lib</code>s).</p>\n</li>\n<li>\n<p>I suggest that when it comes time to distribute the libraries as binaries on Windows (...if this is even something we intend to do...) we should distribute them as static libraries (<code>.lib</code>).</p>\n</li>\n</ul>\n<p>This pull request doesn't do very much, but it might provide a useful forum for discussing these findings, especially if anyone has questions or concerns.</p>", "type": "rendered"}, "source": {"commit": {"hash": "b6ac2cb06608", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/b6ac2cb06608.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/b6ac2cb06608"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3e77bcf7-f260-4cec-a1a0-116b8e298901}ts=default"}}, "type": "repository", "name": "ign-cmake", "full_name": "ignitionrobotics/ign-cmake", "uuid": "{3e77bcf7-f260-4cec-a1a0-116b8e298901}"}, "branch": {"name": "FixSettingsForWindows"}}, "comment_count": 21, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-11-20T23:18:41.200523+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-28T02:23:04.559121+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-27T21:26:47.174452+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}, {"role": "PARTICIPANT", "participated_on": "2017-11-23T08:36:21.805377+00:00", "type": "participant", "approved": false, "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}}], "reason": "", "updated_on": "2017-11-28T08:48:08.539674+00:00", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "merge_commit": {"hash": "e0abf972dcd8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-cmake/commit/e0abf972dcd8.json"}, "html": {"href": "#!/ignitionrobotics/ign-cmake/commits/e0abf972dcd8"}}}, "closed_by": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}