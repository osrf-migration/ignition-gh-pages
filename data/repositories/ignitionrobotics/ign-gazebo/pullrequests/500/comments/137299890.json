{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/500/comments/137299890.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:d6936203b2c3..0d5ffcd1597a?path=src%2Fcmd%2Fign.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/500/_/diff#comment-137299890"}}, "parent": {"id": 136879394, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/500/comments/136879394.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/500/_/diff#comment-136879394"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 500, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/500.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/500"}}, "title": "Log compress"}, "content": {"raw": "9bb7af8 & 95c56bf\n\nSo I ended up replacing the `common::unique*()` calls with the line of logic from `unique*()`. That fixed the problem. It was needed because having two `unique()` calls separately on the directory and the file didn\u2019t let us control the counter. So we ended up with things like `(2)(1)`.\n\nPreviously, the problem could be reproduced by:\n\n```\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --log-overwrite --record-path '/tmp/log'\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --record-path '/tmp/log'\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --record-path '/tmp/log'\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --record-path '/tmp/log'\n```\n\nwhich produces:\n\n```\n$ ls /tmp\n'log(1).zip'\n'log(2)'\n'log(2)(1).zip'\n log.zip\n```\n\nThe `log(2)(1).zip` is the annoying part.  \nHow this happened:\n\n1. log.zip exists, rename to log\\(1\\).zip, re-rename directory to log\\(1\\).\n2. log\\(1\\).zip exists, rename zip to log\\(2\\).zip, re-rename directory to log\\(2\\)\n3. log\\(2\\)/ exists, rename to log\\(2\\)\\(1\\)/, update zip to log\\(2\\)\\(1\\).zip\n4. This passes and they become the final names.\n\nPreferably, we want log\\(3\\). But that wasn\u2019t going to happen, because `uniqueDirectoryName()` always starts with 1, and then increments from there. If we strip the suffix in step 3 and pass in `log`, then it will go in an infinite loop starting from step 1. If we don\u2019t strip the suffix and pass in `log(2)`, then it will give us `log(2)(1)`.\n\nSo instead of calling `unique` twice, I think we need to control the counter in `ign.cc`. Now it gives us `(3)` ,`(4)`, etc, on subsequent calls, which is better. It\u2019s not as nice as using the utility functions in `common::`, but\u2026 it\u2019s much cleaner. Now the directory looks like:\n\n```\n$ ls /tmp\n'log(1).zip'\n'log(2)'\n'log(3).zip'\n log.zip\n```\n\n\u200c", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-gazebo/commits/9bb7af8\" rel=\"nofollow\" class=\"ap-connect-link\">9bb7af8</a> &amp; <a href=\"#!/ignitionrobotics/ign-gazebo/commits/95c56bf\" rel=\"nofollow\" class=\"ap-connect-link\">95c56bf</a></p>\n<p>So I ended up replacing the <code>common::unique*()</code> calls with the line of logic from <code>unique*()</code>. That fixed the problem. It was needed because having two <code>unique()</code> calls separately on the directory and the file didn\u2019t let us control the counter. So we ended up with things like <code>(2)(1)</code>.</p>\n<p>Previously, the problem could be reproduced by:</p>\n<div class=\"codehilite\"><pre><span></span>ign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --log-overwrite --record-path &#39;/tmp/log&#39;\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --record-path &#39;/tmp/log&#39;\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --record-path &#39;/tmp/log&#39;\nign gazebo -v 4 -r ../examples/worlds/log_record_dbl_pendulum.sdf --log-compress --record-path &#39;/tmp/log&#39;\n</pre></div>\n\n\n<p>which produces:</p>\n<div class=\"codehilite\"><pre><span></span>$ ls /tmp\n<span class=\"s1\">&#39;log(1).zip&#39;</span>\n<span class=\"s1\">&#39;log(2)&#39;</span>\n<span class=\"s1\">&#39;log(2)(1).zip&#39;</span>\n log.zip\n</pre></div>\n\n\n<p>The <code>log(2)(1).zip</code> is the annoying part.<br />\nHow this happened:</p>\n<ol>\n<li>log.zip exists, rename to log(1).zip, re-rename directory to log(1).</li>\n<li>log(1).zip exists, rename zip to log(2).zip, re-rename directory to log(2)</li>\n<li>log(2)/ exists, rename to log(2)(1)/, update zip to log(2)(1).zip</li>\n<li>This passes and they become the final names.</li>\n</ol>\n<p>Preferably, we want log(3). But that wasn\u2019t going to happen, because <code>uniqueDirectoryName()</code> always starts with 1, and then increments from there. If we strip the suffix in step 3 and pass in <code>log</code>, then it will go in an infinite loop starting from step 1. If we don\u2019t strip the suffix and pass in <code>log(2)</code>, then it will give us <code>log(2)(1)</code>.</p>\n<p>So instead of calling <code>unique</code> twice, I think we need to control the counter in <code>ign.cc</code>. Now it gives us <code>(3)</code> ,<code>(4)</code>, etc, on subsequent calls, which is better. It\u2019s not as nice as using the utility functions in <code>common::</code>, but\u2026 it\u2019s much cleaner. Now the directory looks like:</p>\n<div class=\"codehilite\"><pre><span></span>$ ls /tmp\n<span class=\"s1\">&#39;log(1).zip&#39;</span>\n<span class=\"s1\">&#39;log(2)&#39;</span>\n<span class=\"s1\">&#39;log(3).zip&#39;</span>\n log.zip\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-02-25T07:03:27.821686+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {"to": 166, "from": null, "outdated": true, "path": "src/cmd/ign.cc"}, "updated_on": "2020-02-25T19:06:56.213207+00:00", "type": "pullrequest_comment", "id": 137299890}