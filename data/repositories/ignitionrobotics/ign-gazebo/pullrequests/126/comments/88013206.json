{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/126/comments/88013206.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/126/_/diff#comment-88013206"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 126, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/126.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/126"}}, "title": "Add Altimeter system"}, "content": {"raw": "Some questions and observations:\n\n* Is it possible to contribute ign-gazebo systems from another repository? Then ign-sensors could be a collection of systems.\n* SensorManager is not being used\u2026 Can we guaranteed that all sensors can be updated at the same time with the same data? If so, I am fine without a sensor manager, IMHO. We can then convert ign-sensors to a group of classes that are used in ign-gazebo\u2019s systems. In that case we would need to move the specifics implementation methods there, leaving the definition of the systems here. If not we have the risk of re implement everything inside of ign-gazebo. This options is not mutually excluded with the previous one. We can have the ign-gazebo\u2019s systems defined in ign-sensors, but the sensor implementation are inside their own classes and could be used without ign-gazebo\u2019s systems.\n* Physics shouldn\u2019t set explicitly the Altimeter data as Ian commented here. Sensor manager could be the one updating the components used by each sensor\u2026 Or maybe simulation runner should be on charge of that? In theory something should update the components used by each system, it doesn\u2019t matter if it is a sensor or not.\n* SDF processing should be done in ign-gazebo or in ign-sensors? I think that depends how we eventually want to define sensors modifiers.\n\nI would say that the function of ignition sensors should be to modify and expose sensor data coming from the simulation simulating real life sensors. I think that modifiers as noise, update rate changes, delays, etc, should be implemented in that library. If the raw data is going to go through ign-gazebo or not it should be defined on how physics and rendering expose that information.", "markup": "markdown", "html": "<p>Some questions and observations:</p>\n<ul>\n<li>Is it possible to contribute ign-gazebo systems from another repository? Then ign-sensors could be a collection of systems.</li>\n<li>SensorManager is not being used\u2026 Can we guaranteed that all sensors can be updated at the same time with the same data? If so, I am fine without a sensor manager, IMHO. We can then convert ign-sensors to a group of classes that are used in ign-gazebo\u2019s systems. In that case we would need to move the specifics implementation methods there, leaving the definition of the systems here. If not we have the risk of re implement everything inside of ign-gazebo. This options is not mutually excluded with the previous one. We can have the ign-gazebo\u2019s systems defined in ign-sensors, but the sensor implementation are inside their own classes and could be used without ign-gazebo\u2019s systems.</li>\n<li>Physics shouldn\u2019t set explicitly the Altimeter data as Ian commented here. Sensor manager could be the one updating the components used by each sensor\u2026 Or maybe simulation runner should be on charge of that? In theory something should update the components used by each system, it doesn\u2019t matter if it is a sensor or not.</li>\n<li>SDF processing should be done in ign-gazebo or in ign-sensors? I think that depends how we eventually want to define sensors modifiers.</li>\n</ul>\n<p>I would say that the function of ignition sensors should be to modify and expose sensor data coming from the simulation simulating real life sensors. I think that modifiers as noise, update rate changes, delays, etc, should be implemented in that library. If the raw data is going to go through ign-gazebo or not it should be defined on how physics and rendering expose that information.</p>", "type": "rendered"}, "created_on": "2019-01-14T21:35:24.849680+00:00", "user": {"display_name": "Javier Iv\u00e1n Choclin", "uuid": "{745acb37-6a3b-4169-8ba9-2c142a7408fb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D"}, "html": {"href": "https://bitbucket.org/%7B745acb37-6a3b-4169-8ba9-2c142a7408fb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2279399d-3c75-4e1e-b818-4fb8339b2939/26f5815d-5477-4106-ba9b-ac56ee23e175/128"}}, "nickname": "Javier Choclin", "type": "user", "account_id": "557058:2279399d-3c75-4e1e-b818-4fb8339b2939"}, "updated_on": "2019-01-14T21:42:17.368933+00:00", "type": "pullrequest_comment", "id": 88013206}