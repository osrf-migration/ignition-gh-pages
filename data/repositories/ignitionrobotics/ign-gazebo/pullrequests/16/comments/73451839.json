{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/16/comments/73451839.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/16/_/diff#comment-73451839"}}, "parent": {"id": 73450181, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/16/comments/73450181.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/16/_/diff#comment-73450181"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 16, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/16.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/16"}}, "title": "World stats system"}, "content": {"raw": "I think that if you use a different cast, it actually won\u2019t perform the copy.  Here\u2019s a scratch to demonstrate:\n\n[https://godbolt.org/z/bJQarj](https://godbolt.org/z/bJQarj)\n\nThe emitted assembly from the second and third variants don\u2019t use the copy constructor.\n\n    const TestStruct& t1 = std::any_cast<TestStruct>(var);\n    const TestStruct& t2 = std::any_cast<TestStruct&>(var);\n    TestStruct* t3 = std::any_cast<TestStruct>(&var);", "markup": "markdown", "html": "<p>I think that if you use a different cast, it actually won\u2019t perform the copy.  Here\u2019s a scratch to demonstrate:</p>\n<p><a data-is-external-link=\"true\" href=\"https://godbolt.org/z/bJQarj\" rel=\"nofollow\">https://godbolt.org/z/bJQarj</a></p>\n<p>The emitted assembly from the second and third variants don\u2019t use the copy constructor.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">const</span> <span class=\"nt\">TestStruct</span><span class=\"o\">&amp;</span> <span class=\"nt\">t1</span> <span class=\"o\">=</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">any_cast</span><span class=\"o\">&lt;</span><span class=\"nt\">TestStruct</span><span class=\"o\">&gt;(</span><span class=\"nt\">var</span><span class=\"o\">);</span>\n<span class=\"nt\">const</span> <span class=\"nt\">TestStruct</span><span class=\"o\">&amp;</span> <span class=\"nt\">t2</span> <span class=\"o\">=</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">any_cast</span><span class=\"o\">&lt;</span><span class=\"nt\">TestStruct</span><span class=\"o\">&amp;&gt;(</span><span class=\"nt\">var</span><span class=\"o\">);</span>\n<span class=\"nt\">TestStruct</span><span class=\"o\">*</span> <span class=\"nt\">t3</span> <span class=\"o\">=</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">any_cast</span><span class=\"o\">&lt;</span><span class=\"nt\">TestStruct</span><span class=\"o\">&gt;(&amp;</span><span class=\"nt\">var</span><span class=\"o\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-08-20T16:03:06.250796+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2018-08-20T16:03:06.264484+00:00", "type": "pullrequest_comment", "id": 73451839}