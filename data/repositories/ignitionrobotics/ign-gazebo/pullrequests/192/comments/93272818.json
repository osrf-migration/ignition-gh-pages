{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/192/comments/93272818.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/192/_/diff#comment-93272818"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 192, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/192.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/192"}}, "title": "Working on a version issue"}, "content": {"raw": "An alternative solution to this is to use `ign-plugin` **aliases**. You can give plugins alias names, e.g. by putting this in your code:\n\n```\nIGNITION_ADD_PLUGIN_ALIAS(ignition::gazebo::systems::v0::Physics, \"ignition::gazebo::systems::Physics\");\n```\n\nYou could even use the alias `\"Physics System\"` if you wanted to; there are \\(virtually\\) no restrictions on alias names. The only thing to note is that if any two plugins are loaded that share an alias, then that alias can no longer be used to load either of them, and then you need to either use an alias that\u2019s unique to the plugin that you want, or you need to use the exact \\(demangled\\) type name of the plugin that you want. Also if a plugin has an alias that matches the type name of another plugin that\u2019s loaded, then using that string will load the plugin that has it as a type name and ignore the one that has it as an alias.", "markup": "markdown", "html": "<p>An alternative solution to this is to use <code>ign-plugin</code> <strong>aliases</strong>. You can give plugins alias names, e.g. by putting this in your code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">IGNITION_ADD_PLUGIN_ALIAS</span><span class=\"o\">(</span><span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">systems</span><span class=\"p\">::</span><span class=\"nd\">v0</span><span class=\"p\">::</span><span class=\"nd\">Physics</span><span class=\"o\">,</span> <span class=\"s2\">&quot;ignition::gazebo::systems::Physics&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>You could even use the alias <code>\"Physics System\"</code> if you wanted to; there are (virtually) no restrictions on alias names. The only thing to note is that if any two plugins are loaded that share an alias, then that alias can no longer be used to load either of them, and then you need to either use an alias that\u2019s unique to the plugin that you want, or you need to use the exact (demangled) type name of the plugin that you want. Also if a plugin has an alias that matches the type name of another plugin that\u2019s loaded, then using that string will load the plugin that has it as a type name and ignore the one that has it as an alias.</p>", "type": "rendered"}, "created_on": "2019-02-28T08:05:39.371911+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-02-28T08:05:39.382077+00:00", "type": "pullrequest_comment", "id": 93272818}