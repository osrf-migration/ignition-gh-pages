{"pagelen": 50, "values": [{"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fdbd5652f9cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fdbd5652f9cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fdbd5652f9cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "67d48258342a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/67d48258342a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/67d48258342a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "MERGED", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-05-01T00:03:56.723674+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100539174.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100539174"}}, "parent": {"id": 100537750, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100537750.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100537750"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Thank you for the fix!", "markup": "markdown", "html": "<p>Thank you for the fix!</p>", "type": "rendered"}, "created_on": "2019-05-01T00:02:11.118488+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-05-01T00:02:11.134254+00:00", "type": "pullrequest_comment", "id": 100539174}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"approval": {"date": "2019-04-30T23:33:09.272416+00:00", "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100537750.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100537750"}}, "parent": {"id": 100513611, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100513611.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100513611"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "ok, with the changes in pull request #301, I think this is looking better", "markup": "markdown", "html": "<p>ok, with the changes in <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/301/simpler-state-of-charge-computation-pull\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #301</a>, I think this is looking better</p>", "type": "rendered"}, "created_on": "2019-04-30T23:32:14.219053+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-30T23:32:14.231194+00:00", "type": "pullrequest_comment", "id": 100537750}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fdbd5652f9cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fdbd5652f9cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fdbd5652f9cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "67d48258342a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/67d48258342a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/67d48258342a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-30T22:14:14.044336+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fdbd5652f9cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fdbd5652f9cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fdbd5652f9cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "34d00d82daa7", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/34d00d82daa7.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/34d00d82daa7"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-04-30T21:46:49.922206+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100513611.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100513611"}}, "parent": {"id": 100381304, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100381304.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100381304"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I'm not sure the `q` computation as it is now is correct... The numbers look weird. It's always nearly 0, even though it's initialized to 1.1665 by `<initial_charge>` in `linear_battery_demo.sdf`. I didn't change the equation. The only difference there could be from classic Gazebo is `dt`, which I believe should be in seconds, because they then divide by 3600 to convert to hours in the computation of `q`.\n\n`q / c` is also almost nearly 0 \\(e.g. -0.00133 when the SOC as computed currently is 0.86698\\). The SOC numbers at least do decrease from 1 to 0 gradually.", "markup": "markdown", "html": "<p>I'm not sure the <code>q</code> computation as it is now is correct... The numbers look weird. It's always nearly 0, even though it's initialized to 1.1665 by <code>&lt;initial_charge&gt;</code> in <code>linear_battery_demo.sdf</code>. I didn't change the equation. The only difference there could be from classic Gazebo is <code>dt</code>, which I believe should be in seconds, because they then divide by 3600 to convert to hours in the computation of <code>q</code>.</p>\n<p><code>q / c</code> is also almost nearly 0 (e.g. -0.00133 when the SOC as computed currently is 0.86698). The SOC numbers at least do decrease from 1 to 0 gradually.</p>", "type": "rendered"}, "created_on": "2019-04-30T18:37:44.631177+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-04-30T18:38:18.791405+00:00", "type": "pullrequest_comment", "id": 100513611}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100381304.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100381304"}}, "parent": {"id": 100381196, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100381196.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100381196"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I think it's still nice to report the state-of-charge, since it's a ratio from `1` (full charge) to `0` (empty), but we could just make an accessor that computes it from `q` and `c`", "markup": "markdown", "html": "<p>I think it's still nice to report the state-of-charge, since it's a ratio from <code>1</code> (full charge) to <code>0</code> (empty), but we could just make an accessor that computes it from <code>q</code> and <code>c</code></p>", "type": "rendered"}, "created_on": "2019-04-29T22:57:20.869268+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-29T22:57:20.879973+00:00", "type": "pullrequest_comment", "id": 100381304}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100381196.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100381196"}}, "parent": {"id": 99912199, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99912199.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99912199"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I think the battery charge `q` in Amp-hours keeps track of the state of charge well enough. Sorry I didn't notice this variable earlier. To estimate state of charge, I would just use the current charge `q` and the battery capacity `c` with `SOC = q / c`", "markup": "markdown", "html": "<p>I think the battery charge <code>q</code> in Amp-hours keeps track of the state of charge well enough. Sorry I didn't notice this variable earlier. To estimate state of charge, I would just use the current charge <code>q</code> and the battery capacity <code>c</code> with <code>SOC = q / c</code></p>", "type": "rendered"}, "created_on": "2019-04-29T22:55:35.818145+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-29T22:55:35.831179+00:00", "type": "pullrequest_comment", "id": 100381196}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100216292.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100216292"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I updated the homebrew bottle for ignition-common3 and the homebrew build for this branch is now :yellow_heart:  with just some flaky tests", "markup": "markdown", "html": "<p>I updated the homebrew bottle for ignition-common3 and the homebrew build for this branch is now <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f49b.png\" alt=\"\ud83d\udc9b\" title=\":yellow_heart:\" data-emoji-short-name=\":yellow_heart:\" />  with just some flaky tests</p>", "type": "rendered"}, "created_on": "2019-04-27T11:52:17.237252+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-27T11:52:28.812850+00:00", "type": "pullrequest_comment", "id": 100216292}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fdbd5652f9cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fdbd5652f9cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fdbd5652f9cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "7f1cb01a7679", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/7f1cb01a7679.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/7f1cb01a7679"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-04-27T11:37:59.174818+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fdbd5652f9cb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fdbd5652f9cb.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fdbd5652f9cb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "6cf83ed12555", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/6cf83ed12555.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/6cf83ed12555"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-27T04:28:45.299200+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/100212040.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-100212040"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I've read through the code, comparing to the osrf/gazebo plugins, and it looks like a straightforward port. I'll test it on Monday and check the new SOC calculation.", "markup": "markdown", "html": "<p>I've read through the code, comparing to the <a href=\"https://bitbucket.org/osrf/gazebo\" rel=\"nofollow\" class=\"ap-connect-link\">osrf/gazebo</a> plugins, and it looks like a straightforward port. I'll test it on Monday and check the new SOC calculation.</p>", "type": "rendered"}, "created_on": "2019-04-27T01:19:24.890286+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2019-04-27T01:19:24.900332+00:00", "type": "pullrequest_comment", "id": 100212040}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "0ba5dce374ea", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0ba5dce374ea.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0ba5dce374ea"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "40e10c1d3aff", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/40e10c1d3aff.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/40e10c1d3aff"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-25T00:28:49.478544+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99912199.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99912199"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "State of charge is now estimated in 0d0ba55, using equation from [here](https://www.researchgate.net/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition), or direct link to equation image [here](https://www.researchgate.net/profile/Hamed_Hanifi/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition/attachment/59d6356179197b8077992f4d/AS%3A384034527039488%401468572374707/download/SOc.jpg), slightly augmented to:\n\nSOC\\_t = SOC\\_\\{t-1\\} - integral\\_\\{t-100\\}^t\\(I\\_t dt\\) / capacity\n\nAt t=0, SOC\\_0 is initialized to 100%. \n\nIt\u2019s similar to the instantaneous charge `q` already calculated in the original plugin, except based on the integral sum over a historic time window \\(currently 100 iterations\\) of currents I\\_t and time interval dt, instead of the instantaneous current.", "markup": "markdown", "html": "<p>State of charge is now estimated in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/0d0ba55\" rel=\"nofollow\" class=\"ap-connect-link\">0d0ba55</a>, using equation from <a data-is-external-link=\"true\" href=\"https://www.researchgate.net/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition\" rel=\"nofollow\">here</a>, or direct link to equation image <a data-is-external-link=\"true\" href=\"https://www.researchgate.net/profile/Hamed_Hanifi/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition/attachment/59d6356179197b8077992f4d/AS%3A384034527039488%401468572374707/download/SOc.jpg\" rel=\"nofollow\">here</a>, slightly augmented to:</p>\n<p>SOC_t = SOC_{t-1} - integral_{t-100}^t(I_t dt) / capacity</p>\n<p>At t=0, SOC_0 is initialized to 100%. </p>\n<p>It\u2019s similar to the instantaneous charge <code>q</code> already calculated in the original plugin, except based on the integral sum over a historic time window (currently 100 iterations) of currents I_t and time interval dt, instead of the instantaneous current.</p>", "type": "rendered"}, "created_on": "2019-04-25T00:14:22.410205+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-04-25T00:16:54.928893+00:00", "type": "pullrequest_comment", "id": 99912199}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "0ba5dce374ea", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0ba5dce374ea.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0ba5dce374ea"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "ae31092febc8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ae31092febc8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ae31092febc8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-25T00:11:14.400442+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "0ba5dce374ea", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0ba5dce374ea.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0ba5dce374ea"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "0d0ba55ceea0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0d0ba55ceea0.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0d0ba55ceea0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-24T23:58:15.506127+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99884545.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99884545"}}, "parent": {"id": 99575816, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575816.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575816"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 1af199b", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/1af199b\" rel=\"nofollow\" class=\"ap-connect-link\">1af199b</a></p>", "type": "rendered"}, "created_on": "2019-04-24T18:12:06.074853+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-24T18:12:06.087475+00:00", "type": "pullrequest_comment", "id": 99884545}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99884540.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99884540"}}, "parent": {"id": 99575759, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575759.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575759"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 1af199b", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/1af199b\" rel=\"nofollow\" class=\"ap-connect-link\">1af199b</a></p>", "type": "rendered"}, "created_on": "2019-04-24T18:12:02.682224+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-24T18:12:02.700656+00:00", "type": "pullrequest_comment", "id": 99884540}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99884535.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99884535"}}, "parent": {"id": 99575725, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575725.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575725"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 1af199b", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/1af199b\" rel=\"nofollow\" class=\"ap-connect-link\">1af199b</a></p>", "type": "rendered"}, "created_on": "2019-04-24T18:11:59.219245+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-24T18:11:59.232757+00:00", "type": "pullrequest_comment", "id": 99884535}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99884529.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99884529"}}, "parent": {"id": 99575678, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575678.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575678"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 1af199b", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/1af199b\" rel=\"nofollow\" class=\"ap-connect-link\">1af199b</a></p>", "type": "rendered"}, "created_on": "2019-04-24T18:11:55.555618+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-24T18:11:55.570630+00:00", "type": "pullrequest_comment", "id": 99884529}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99884513.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99884513"}}, "parent": {"id": 99575518, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575518.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575518"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 1af199b", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/1af199b\" rel=\"nofollow\" class=\"ap-connect-link\">1af199b</a></p>", "type": "rendered"}, "created_on": "2019-04-24T18:11:50.973759+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-24T18:11:50.983128+00:00", "type": "pullrequest_comment", "id": 99884513}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "3baefe7c6b25", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3baefe7c6b25.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3baefe7c6b25"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "1af199b46393", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1af199b46393.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1af199b46393"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-24T18:11:27.304597+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575816.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575816"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Maybe you want to skip the update if `_info.paused`?", "markup": "markdown", "html": "<p>Maybe you want to skip the update if <code>_info.paused</code>?</p>", "type": "rendered"}, "created_on": "2019-04-23T01:10:00.850145+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-04-23T01:10:00.859799+00:00", "type": "pullrequest_comment", "id": 99575816}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575759.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575759"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Do we need a separate function for `Init`? It's only called here.", "markup": "markdown", "html": "<p>Do we need a separate function for <code>Init</code>? It's only called here.</p>", "type": "rendered"}, "created_on": "2019-04-23T01:08:49.653403+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-04-23T01:08:49.668565+00:00", "type": "pullrequest_comment", "id": 99575759}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575725.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575725"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Since this will be the only mesage visible with verbosity == 3, we could print the battery name here too", "markup": "markdown", "html": "<p>Since this will be the only mesage visible with verbosity == 3, we could print the battery name here too</p>", "type": "rendered"}, "created_on": "2019-04-23T01:07:51.545906+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-04-23T01:07:51.560380+00:00", "type": "pullrequest_comment", "id": 99575725}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575678.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575678"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I think you don't need to keep `batteryCompKey`. You already have the `batteryEntity`, so you could just use that, i.e.:\n\n`auto batteryComp = _ecm.Component<components::BatterySoC>(this->dataPtr->batteryEntity);`", "markup": "markdown", "html": "<p>I think you don't need to keep <code>batteryCompKey</code>. You already have the <code>batteryEntity</code>, so you could just use that, i.e.:</p>\n<p><code>auto batteryComp = _ecm.Component&lt;components::BatterySoC&gt;(this-&gt;dataPtr-&gt;batteryEntity);</code></p>", "type": "rendered"}, "created_on": "2019-04-23T01:06:25.524180+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-04-23T01:06:25.535086+00:00", "type": "pullrequest_comment", "id": 99575678}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99575518.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99575518"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Can we initialize all these in their declarations?", "markup": "markdown", "html": "<p>Can we initialize all these in their declarations?</p>", "type": "rendered"}, "created_on": "2019-04-23T01:02:28.819847+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2019-04-23T01:02:28.829347+00:00", "type": "pullrequest_comment", "id": 99575518}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "71b9dc1c07ad", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/71b9dc1c07ad.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/71b9dc1c07ad"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T21:53:58.010633+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99545892.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99545892"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Simplifications from group discussion have been implemented in the latest commit.\n\n* 1 battery per Model \\(as opposed to per Link, because it is unclear in the case of a joint having multiple child links, if the battery runs out for one link but not another, it is unclear how to disable the joint such that it turns off one link without turning off the other\\)\n* `components::BatterySoC` added, maintains a `double`. Currently this is just the voltage. In the future it can be [capacity computed from the voltage](https://batteryuniversity.com/learn/article/how_to_measure_state_of_charge).\n* Physics system checks battery state. When battery drains \\(voltage < 0 currently\\), turn off all joints of that Model \\(set force to 0. Currently also set velocity to 0 because diff\\_drive does not use JointForceCmd yet, otherwise vehicle continues gliding.\\)\n* Removed `<battery>` tag from anywhere in SDF \\([this PR in sdformat](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff) can be scrapped\\). Battery only specified in `<plugin>` under `<model>`\n\n", "markup": "markdown", "html": "<p>Simplifications from group discussion have been implemented in the latest commit.</p>\n<ul>\n<li>1 battery per Model (as opposed to per Link, because it is unclear in the case of a joint having multiple child links, if the battery runs out for one link but not another, it is unclear how to disable the joint such that it turns off one link without turning off the other)</li>\n<li><code>components::BatterySoC</code> added, maintains a <code>double</code>. Currently this is just the voltage. In the future it can be <a data-is-external-link=\"true\" href=\"https://batteryuniversity.com/learn/article/how_to_measure_state_of_charge\" rel=\"nofollow\">capacity computed from the voltage</a>.</li>\n<li>Physics system checks battery state. When battery drains (voltage &lt; 0 currently), turn off all joints of that Model (set force to 0. Currently also set velocity to 0 because diff_drive does not use JointForceCmd yet, otherwise vehicle continues gliding.)</li>\n<li>Removed <code>&lt;battery&gt;</code> tag from anywhere in SDF (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff\" rel=\"nofollow\">this PR in sdformat</a> can be scrapped). Battery only specified in <code>&lt;plugin&gt;</code> under <code>&lt;model&gt;</code></li>\n</ul>", "type": "rendered"}, "created_on": "2019-04-22T18:05:49.715374+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-04-22T21:29:19.101254+00:00", "type": "pullrequest_comment", "id": 99545892}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on ~~sdformat add\\_battery branch \\(~~[~~this PR~~](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)~~\\) for new type sdf::Battery, and~~ ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0. Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "1942bfe8bed8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1942bfe8bed8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1942bfe8bed8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T21:28:05.250788+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0.  Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "1942bfe8bed8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1942bfe8bed8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1942bfe8bed8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T18:12:18.357078+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0.  Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "ea9a53de5142", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ea9a53de5142.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ea9a53de5142"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T17:57:10.884495+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)  \r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)  \r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\n~~Integration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.~~\r\n\r\nTwo batteries are currently considered the same if they ~~their <link><battery name=\"foo\"><voltage>12.0</voltage></battery></link> tags in the SDF~~ have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has t~~w~~o <link>s consuming the same battery.~~ **Update:** This file has a battery `<plugin>` under a `<model>`. Power load is set to 500 to drain quickly for testing effect. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nWhen battery drains, joint forces in the model are set to 0.  Currently diff\\_drive does not use JointForceCmd, so joint velocities are also set to 0, to make diff\\_drive work.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.\r\n\r\nSample output:\r\n\r\n```\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.282894\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.231637\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.168065\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: 0.0787631\r\n[Dbg] [LinearBatteryPlugin.cc:284] PowerLoads().size(): 1\r\n[Dbg] [LinearBatteryPlugin.cc:286] voltage: -0.116923\r\n[Wrn] [LinearBatteryPlugin.cc:289] Model vehicle_blue out of battery.\r\n```\r\n\r\n~~At component creation time of component::Battery, whose Data\\(\\) is a common::BatteryPtr , SdfEntityCreator.cc checks that if two links are to consume the same battery, instead of creating a new common::Battery, it points to the existing common::BatteryPtr in an existing components::Battery. A new Entity and a new Component will still be created, just the common::BatteryPtr is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in test/worlds used for integration tests, for comparing drainage between single and multiple links/batteries.~~", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "d0cfe0eee058", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d0cfe0eee058.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d0cfe0eee058"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T17:52:57.091108+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~  **Update:** This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in~~ `test/worlds` ~~used for integration tests, for comparing drainage between single and multiple links/batteries.~~\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "d0cfe0eee058", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d0cfe0eee058.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d0cfe0eee058"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T17:43:54.304582+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\n# Keyboard control\r\ncd ign-gazebo/examples/standalone/keyboard/build\r\n./keyboard ../keyboard.sdf\r\n# Diff drive, left vehicle has battery. Once voltage drops < 0, it stops.\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~  **Update:** This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed entirely from SDF. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ **Update:** Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. As a result, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\n~~More SDF files for testing are in~~ `test/worlds` ~~used for integration tests, for comparing drainage between single and multiple links/batteries.~~\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "e1e932b19d10", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/e1e932b19d10.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/e1e932b19d10"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-22T17:29:35.952007+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~ Update: This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ Update: Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. Therefore, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "e1e932b19d10", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/e1e932b19d10.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/e1e932b19d10"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T08:10:36.791061+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~ Update: This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ Update: Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. Therefore, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "405a05c40954", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/405a05c40954.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/405a05c40954"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T07:54:30.751503+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~ Update: This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ Update: Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. Therefore, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "adfdfd1e91cc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/adfdfd1e91cc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/adfdfd1e91cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T06:44:57.422961+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~ Update: This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ Update: Batteries, including `common::Battery` and `components::BatterySoC` \\(state of charge\\), are created and updated in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. Therefore, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "3238341de5d3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3238341de5d3.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3238341de5d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T06:06:27.903242+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\n~~This file has two~~ `<link>`~~s consuming the same battery.~~ Update: This file has a battery `<plugin>` under a `<model>`. `<battery>` tag has been removed. Battery is specified only in `<plugin>` and nowhere else.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\n~~At component creation time of~~ `component::Battery`~~, whose~~ `Data()` ~~is a~~ `common::BatteryPtr` ~~,~~ `SdfEntityCreator.cc` ~~checks that if two links are to consume the same battery, instead of creating a new~~ `common::Battery`~~, it points to the existing~~ `common::BatteryPtr` ~~in an existing~~ `components::Battery`~~. A new~~ `Entity` ~~and a new~~ `Component` ~~will still be created, just the~~ `common::BatteryPtr` ~~is the same, so that it can have multiple consumers and drain accordingly.~~ Update: Batteries are created and maintained in `LinearBatteryPlugin.cc`. For simplicity of turning off joints when battery drains completely, only one consumer \\(a model\\) per battery \\(a model plugin\\) is currently supported. Therefore, this plugin currently also serves as the consumer - consumer needs access to `common::Battery` object to `AddConsumer()` and `SetPowerLoad()`.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "3238341de5d3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3238341de5d3.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3238341de5d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T06:05:10.601212+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "1d0bac4f2219", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1d0bac4f2219.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1d0bac4f2219"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "3238341de5d3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3238341de5d3.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3238341de5d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-20T05:58:55.494537+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "fc10993fbb2a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fc10993fbb2a.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fc10993fbb2a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "3030cb191b23", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3030cb191b23.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3030cb191b23"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-19T21:38:07.399002+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "cd75b041f395", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/cd75b041f395.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/cd75b041f395"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "50768100ec5d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/50768100ec5d.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/50768100ec5d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2019-04-19T15:28:45.337659+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "8e9e805ce1a3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8e9e805ce1a3.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8e9e805ce1a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "999042e86b08", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/999042e86b08.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/999042e86b08"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-15T17:22:38.355854+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "5cfd0b3297d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/5cfd0b3297d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/5cfd0b3297d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "c4701f6dbebc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/c4701f6dbebc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/c4701f6dbebc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-02T22:49:10.066326+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/97339155.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-97339155"}}, "parent": {"id": 97177919, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/97177919.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-97177919"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "Fixed in 2feb334", "markup": "markdown", "html": "<p>Fixed in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/2feb334\" rel=\"nofollow\" class=\"ap-connect-link\">2feb334</a></p>", "type": "rendered"}, "created_on": "2019-04-02T21:30:46.342523+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "inline": {}, "updated_on": "2019-04-02T21:30:46.359356+00:00", "type": "pullrequest_comment", "id": 97339155}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "5cfd0b3297d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/5cfd0b3297d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/5cfd0b3297d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "2feb3347f579", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/2feb3347f579.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/2feb3347f579"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-02T21:30:20.899959+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"update": {"description": "Depends on sdformat add\\_battery branch \\([this PR](https://bitbucket.org/osrf/sdformat/pull-requests/513/add-battery-tag-under-link/diff)\\) for new type `sdf::Battery`, and ign-common battery\\_plugin branch \\([this PR](#!/ignitionrobotics/ign-common/pull-requests/186/battery-additions-for-plugin-port/diff)\\) for additions to `common::Battery`.\r\n\r\nThis PR ports LinearBatteryPlugin from Gazebo classic:\r\n\r\n[LinearBatteryPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryPlugin.cc?at=default)\r\n\r\n[LinearBatteryConsumerPlugin.hh](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.hh?at=default&fileviewer=file-view-default)\r\n\r\n[LinearBatteryConsumerPlugin.cc](https://bitbucket.org/osrf/gazebo/src/42d7d20dbf5075936965afaef40c8e3d08124b88/plugins/LinearBatteryConsumerPlugin.cc?at=default)\r\n\r\nIntegration tests are added for single link consuming single battery, multiple links consuming the same battery, single link consuming multiple batteries, multiple links consuming multiple batteries, and links of the same name under different models consuming different batteries.\r\n\r\n## Testing\r\n\r\n```\r\ncd ign-gazebo/examples/worlds\r\nign-gazebo -f linear_battery_demo.sdf -v 4 -r\r\n```\r\n\r\nThis file has two `<link>`s consuming the same battery.\r\n\r\nTwo batteries are currently considered the same if their `<link><battery name=\"foo\"><voltage>12.0</voltage></battery></link>` tags in the SDF have the same name and same initial voltage \\(checked by `common::Battery::operator==()` \\).\r\n\r\nAt component creation time of `component::Battery`, whose `Data()` is a `common::BatteryPtr` , `SdfEntityCreator.cc` checks that if two links are to consume the same battery, instead of creating a new `common::Battery`, it points to the existing `common::BatteryPtr` in an existing `components::Battery`. A new `Entity` and a new `Component` will still be created, just the `common::BatteryPtr` is the same, so that it can have multiple consumers and drain accordingly.\r\n\r\nMore SDF files for testing are in `test/worlds` used for integration tests, for comparing drainage between single and multiple links/batteries.\r\n\r\nThere's some debug printouts right now to see the voltage and number of consumers \\( `PowerLoads().size()` \\) - these are printed in the plugin and will be removed, but for now, there's no other way of telling how much is left in the battery.", "title": "[Acropolis] Port battery plugin from Gazebo classic", "destination": {"commit": {"hash": "5cfd0b3297d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/5cfd0b3297d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/5cfd0b3297d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "reason": "", "source": {"commit": {"hash": "d5533aa5effe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d5533aa5effe.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d5533aa5effe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "battery_plugin"}}, "state": "OPEN", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "date": "2019-04-02T21:16:30.071695+00:00"}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/97179724.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-97179724"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I just took a high level look at this PR to see if I can make a suggestion on how to avoid the shared pointer component. An idea would be to:\n\n* Keep `sdf::Battery` in `components::Battery` instead of `common::Battery`\n* Have a single system, `BatterySystem`\n* The `BatterySystem` has a container of `common::Battery`s\n* At `BatterySystem::Configure`, create `common::Battery`s for each `components::Battery` and register the relevant update functions\n* At `BatterySystem::PostUpdate`, update each battery in the container by calling `battery->Update(dt)`\n\nI may be missing some important detail, this is just a high-level suggestion. This is roughly similar to how sensors work right now. Let me know what you think.", "markup": "markdown", "html": "<p>I just took a high level look at this PR to see if I can make a suggestion on how to avoid the shared pointer component. An idea would be to:</p>\n<ul>\n<li>Keep <code>sdf::Battery</code> in <code>components::Battery</code> instead of <code>common::Battery</code></li>\n<li>Have a single system, <code>BatterySystem</code></li>\n<li>The <code>BatterySystem</code> has a container of <code>common::Battery</code>s</li>\n<li>At <code>BatterySystem::Configure</code>, create <code>common::Battery</code>s for each <code>components::Battery</code> and register the relevant update functions</li>\n<li>At <code>BatterySystem::PostUpdate</code>, update each battery in the container by calling <code>battery-&gt;Update(dt)</code></li>\n</ul>\n<p>I may be missing some important detail, this is just a high-level suggestion. This is roughly similar to how sensors work right now. Let me know what you think.</p>", "type": "rendered"}, "created_on": "2019-04-02T02:04:08.518867+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-04-02T02:04:08.526060+00:00", "type": "pullrequest_comment", "id": 97179724}, "pull_request": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}}], "next": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/activity_ctx=6EsqtyUb.json"}