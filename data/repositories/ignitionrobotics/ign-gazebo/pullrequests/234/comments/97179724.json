{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/97179724.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-97179724"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "I just took a high level look at this PR to see if I can make a suggestion on how to avoid the shared pointer component. An idea would be to:\n\n* Keep `sdf::Battery` in `components::Battery` instead of `common::Battery`\n* Have a single system, `BatterySystem`\n* The `BatterySystem` has a container of `common::Battery`s\n* At `BatterySystem::Configure`, create `common::Battery`s for each `components::Battery` and register the relevant update functions\n* At `BatterySystem::PostUpdate`, update each battery in the container by calling `battery->Update(dt)`\n\nI may be missing some important detail, this is just a high-level suggestion. This is roughly similar to how sensors work right now. Let me know what you think.", "markup": "markdown", "html": "<p>I just took a high level look at this PR to see if I can make a suggestion on how to avoid the shared pointer component. An idea would be to:</p>\n<ul>\n<li>Keep <code>sdf::Battery</code> in <code>components::Battery</code> instead of <code>common::Battery</code></li>\n<li>Have a single system, <code>BatterySystem</code></li>\n<li>The <code>BatterySystem</code> has a container of <code>common::Battery</code>s</li>\n<li>At <code>BatterySystem::Configure</code>, create <code>common::Battery</code>s for each <code>components::Battery</code> and register the relevant update functions</li>\n<li>At <code>BatterySystem::PostUpdate</code>, update each battery in the container by calling <code>battery-&gt;Update(dt)</code></li>\n</ul>\n<p>I may be missing some important detail, this is just a high-level suggestion. This is roughly similar to how sensors work right now. Let me know what you think.</p>", "type": "rendered"}, "created_on": "2019-04-02T02:04:08.518867+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-04-02T02:04:08.526060+00:00", "type": "pullrequest_comment", "id": 97179724}