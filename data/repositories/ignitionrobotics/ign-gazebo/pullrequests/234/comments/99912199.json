{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234/comments/99912199.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234/_/diff#comment-99912199"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 234, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/234.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/234"}}, "title": "[Acropolis] Port battery plugin from Gazebo classic"}, "content": {"raw": "State of charge is now estimated in 0d0ba55, using equation from [here](https://www.researchgate.net/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition), or direct link to equation image [here](https://www.researchgate.net/profile/Hamed_Hanifi/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition/attachment/59d6356179197b8077992f4d/AS%3A384034527039488%401468572374707/download/SOc.jpg), slightly augmented to:\n\nSOC\\_t = SOC\\_\\{t-1\\} - integral\\_\\{t-100\\}^t\\(I\\_t dt\\) / capacity\n\nAt t=0, SOC\\_0 is initialized to 100%. \n\nIt\u2019s similar to the instantaneous charge `q` already calculated in the original plugin, except based on the integral sum over a historic time window \\(currently 100 iterations\\) of currents I\\_t and time interval dt, instead of the instantaneous current.", "markup": "markdown", "html": "<p>State of charge is now estimated in <a href=\"#!/ignitionrobotics/ign-gazebo/commits/0d0ba55\" rel=\"nofollow\" class=\"ap-connect-link\">0d0ba55</a>, using equation from <a data-is-external-link=\"true\" href=\"https://www.researchgate.net/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition\" rel=\"nofollow\">here</a>, or direct link to equation image <a data-is-external-link=\"true\" href=\"https://www.researchgate.net/profile/Hamed_Hanifi/post/How_can_we_calculate_the_state_of_Charge_SOC_of_the_battery_in_on_load_condition/attachment/59d6356179197b8077992f4d/AS%3A384034527039488%401468572374707/download/SOc.jpg\" rel=\"nofollow\">here</a>, slightly augmented to:</p>\n<p>SOC_t = SOC_{t-1} - integral_{t-100}^t(I_t dt) / capacity</p>\n<p>At t=0, SOC_0 is initialized to 100%. </p>\n<p>It\u2019s similar to the instantaneous charge <code>q</code> already calculated in the original plugin, except based on the integral sum over a historic time window (currently 100 iterations) of currents I_t and time interval dt, instead of the instantaneous current.</p>", "type": "rendered"}, "created_on": "2019-04-25T00:14:22.410205+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-04-25T00:16:54.928893+00:00", "type": "pullrequest_comment", "id": 99912199}