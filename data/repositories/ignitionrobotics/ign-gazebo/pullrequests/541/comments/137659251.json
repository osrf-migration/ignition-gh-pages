{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/541/comments/137659251.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:c64a99c0106c..0d5ffcd1597a?path=tutorials%2Fphysics.md"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/541/_/diff#comment-137659251"}}, "parent": {"id": 137647563, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/541/comments/137647563.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/541/_/diff#comment-137647563"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 541, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/541.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/541"}}, "title": "Find custom physics engines"}, "content": {"raw": "> struct MinimumFeatureList\n\nI would actually like to make the required features depend on the type of world and models that are loaded at run-time; there would still be a smaller set of minimum features (like `GetEntities`), but if there are no meshes, then we wouldn't need to require that feature. this makes the order of operations difficult as the sdf world file needs to be analyzed before loading the physics engine, and spawning a model dynamically after loading the physics engine could require a feature not provided by the current physics engine. also plugins might require specific features, so those would have to be serialized into the SDFormat xml tags somehow\n\nbut yes, we should document the MinimumFeatureList and treat it like part of the API with respect to semantic versioning", "markup": "markdown", "html": "<blockquote>\n<p>struct MinimumFeatureList</p>\n</blockquote>\n<p>I would actually like to make the required features depend on the type of world and models that are loaded at run-time; there would still be a smaller set of minimum features (like <code>GetEntities</code>), but if there are no meshes, then we wouldn't need to require that feature. this makes the order of operations difficult as the sdf world file needs to be analyzed before loading the physics engine, and spawning a model dynamically after loading the physics engine could require a feature not provided by the current physics engine. also plugins might require specific features, so those would have to be serialized into the SDFormat xml tags somehow</p>\n<p>but yes, we should document the MinimumFeatureList and treat it like part of the API with respect to semantic versioning</p>", "type": "rendered"}, "created_on": "2020-02-26T19:32:26.159577+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 14, "from": null, "outdated": true, "path": "tutorials/physics.md"}, "updated_on": "2020-02-26T19:32:26.174693+00:00", "type": "pullrequest_comment", "id": 137659251}