{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/573/comments/144929424.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/573/_/diff#comment-144929424"}}, "parent": {"id": 144863367, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/573/comments/144863367.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/573/_/diff#comment-144863367"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 573, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/573.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/573"}}, "title": "Optional physics features"}, "content": {"raw": "The biggest downside is it will increase compilation times. The best practice for the sake of compilation times is to only specify the features that you need. If the implementation of the joint removal ever changes in the future and you need more of the features, it\u2019s okay to expand the feature list as needed; that won\u2019t have any negative consequences, as long as the object isn\u2019t being exposed in a public API.\n\nThere\u2019s also some very slight increase in the amount of time it might take to cast the entity type, but that will be completely unnoticeable if the casted entities are being cached.\n\nSo mostly it comes down to a trade off between developer expediency and compilation times, much like using `#include` to pull in a \u201cmaster\u201d header that aggregates other headers that you don\u2019t really need.", "markup": "markdown", "html": "<p>The biggest downside is it will increase compilation times. The best practice for the sake of compilation times is to only specify the features that you need. If the implementation of the joint removal ever changes in the future and you need more of the features, it\u2019s okay to expand the feature list as needed; that won\u2019t have any negative consequences, as long as the object isn\u2019t being exposed in a public API.</p>\n<p>There\u2019s also some very slight increase in the amount of time it might take to cast the entity type, but that will be completely unnoticeable if the casted entities are being cached.</p>\n<p>So mostly it comes down to a trade off between developer expediency and compilation times, much like using <code>#include</code> to pull in a \u201cmaster\u201d header that aggregates other headers that you don\u2019t really need.</p>", "type": "rendered"}, "created_on": "2020-04-14T03:28:24.727121+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2020-04-14T03:29:13.995121+00:00", "type": "pullrequest_comment", "id": 144929424}