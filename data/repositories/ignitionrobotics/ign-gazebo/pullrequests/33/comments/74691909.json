{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/comments/74691909.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/33/_/diff#comment-74691909"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 33, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/33"}}, "title": "Refactor stats and support play / pause / step"}, "content": {"raw": "Disclaimer: I'm not familiar with `ign-gazebo` yet but wanted to mention this because was relevant during Delphyne development. Feel free to ignore this comment if already works like that.\n\nI think that the default Ign-gui behavior when pausing/stepping/resuming is to publish a message with the new world state and change the GUI widget accordingly. This is fine when you only have one GUI client, but if you have multiple ones, the others might not receive any update. What I\u2019ve done in the past is to update the GUI based on a notification sent from the server. In this way, the server needs to process all the incoming requests \\(e.g.: pause\\), update its state, and then, notify state updates that will be received by the GUI clients. This is also useful when you change the state of the simulation from the CLI.", "markup": "markdown", "html": "<p>Disclaimer: I'm not familiar with <code>ign-gazebo</code> yet but wanted to mention this because was relevant during Delphyne development. Feel free to ignore this comment if already works like that.</p>\n<p>I think that the default Ign-gui behavior when pausing/stepping/resuming is to publish a message with the new world state and change the GUI widget accordingly. This is fine when you only have one GUI client, but if you have multiple ones, the others might not receive any update. What I\u2019ve done in the past is to update the GUI based on a notification sent from the server. In this way, the server needs to process all the incoming requests (e.g.: pause), update its state, and then, notify state updates that will be received by the GUI clients. This is also useful when you change the state of the simulation from the CLI.</p>", "type": "rendered"}, "created_on": "2018-08-31T16:29:04.733596+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2018-08-31T16:29:04.741209+00:00", "type": "pullrequest_comment", "id": 74691909}