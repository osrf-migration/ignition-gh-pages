{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/130/comments/89699243.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/130/_/diff#comment-89699243"}}, "parent": {"id": 89694251, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/130/comments/89694251.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/130/_/diff#comment-89694251"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 130, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/130.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/130"}}, "title": "[A-6] Entity graph + factory"}, "content": {"raw": "Classes like `Factory` and `Model` were created to give plugin developers more intuitive interfaces than interacting with entities and components directly.\n\nSome of the earlier commits in pull request #98 (the design doc) described the rationale in more detail, going from a pure ECM approach to the final interfaces, but as the pull request evolved I ended up removing important points. I'll make a new PR adding that back, but hopefully the document's [current state](#!/ignitionrobotics/ign-gazebo/src/3c4cb4f48bbfa61e8e3ed0acc1868a005e663671/doc/architecture_design.md?at=default&fileviewer=file-view-default#markdown-header-plugin-interfaces) gives you a bit more context for now.\n\nSo, to address your points:\n\n1. It's meant to be installed and used by systems\n1. The functionality could be added directly to the ECM, but then the ECM wouldn't be component-agnostic any more and no longer would have the single responsibility of managing arbitrary entities and components. Keeping the interfaces in separate classes gives users what they need when they need it. I'd like to encourage downstream developers to also create such interfaces for their custom components.\n1. Perhaps the `Factory` name is misleading? Do you think it would make sense to keep spawn/delete functionality in the same class, but maybe give it a different name? This could also make it clearer for users who assume `Factory` has the classical meaning of creating objects, as you assumed.", "markup": "markdown", "html": "<p>Classes like <code>Factory</code> and <code>Model</code> were created to give plugin developers more intuitive interfaces than interacting with entities and components directly.</p>\n<p>Some of the earlier commits in <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/98/design-doc-beginning-of-plugin-interface\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #98</a> (the design doc) described the rationale in more detail, going from a pure ECM approach to the final interfaces, but as the pull request evolved I ended up removing important points. I'll make a new PR adding that back, but hopefully the document's <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/3c4cb4f48bbfa61e8e3ed0acc1868a005e663671/doc/architecture_design.md?at=default&amp;fileviewer=file-view-default#markdown-header-plugin-interfaces\" rel=\"nofollow\">current state</a> gives you a bit more context for now.</p>\n<p>So, to address your points:</p>\n<ol>\n<li>It's meant to be installed and used by systems</li>\n<li>The functionality could be added directly to the ECM, but then the ECM wouldn't be component-agnostic any more and no longer would have the single responsibility of managing arbitrary entities and components. Keeping the interfaces in separate classes gives users what they need when they need it. I'd like to encourage downstream developers to also create such interfaces for their custom components.</li>\n<li>Perhaps the <code>Factory</code> name is misleading? Do you think it would make sense to keep spawn/delete functionality in the same class, but maybe give it a different name? This could also make it clearer for users who assume <code>Factory</code> has the classical meaning of creating objects, as you assumed.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-01-29T16:26:17.423789+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-29T16:26:17.469544+00:00", "type": "pullrequest_comment", "id": 89699243}