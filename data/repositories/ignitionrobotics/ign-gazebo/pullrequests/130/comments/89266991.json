{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/130/comments/89266991.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/130/_/diff#comment-89266991"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 130, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/130.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/130"}}, "title": "[A-6] Entity graph + factory"}, "content": {"raw": "I added another big-ish change to this PR. Now instead of reusing entities, they will be unique. I did this because when entities are deleted and inserted repeatedly very fast, possibly in the same iteration, it becomes difficult for systems to keep track of whether an entity is the same old one, or if it's a new one reusing that ID. That happens for example when levels are being loaded and unloaded.\n\nI changed the entity type from `int` to `uint64_t`, so hopefully it will be difficult for simulations to reach that number. I suggest we revisit this in the future if the limit becomes an issue. If that ever happens, I'd suggest using up the whole range of possible entities before going back to the lower numbers - that will hopefully minimize the chance that the old and new entities overlap.\n\n@nkoenig, I believe you were the one who originally implemented the entity reuse. Do you see any problem with this? All the adjacent memory tests are still passing.\n\n", "markup": "markdown", "html": "<p>I added another big-ish change to this PR. Now instead of reusing entities, they will be unique. I did this because when entities are deleted and inserted repeatedly very fast, possibly in the same iteration, it becomes difficult for systems to keep track of whether an entity is the same old one, or if it's a new one reusing that ID. That happens for example when levels are being loaded and unloaded.</p>\n<p>I changed the entity type from <code>int</code> to <code>uint64_t</code>, so hopefully it will be difficult for simulations to reach that number. I suggest we revisit this in the future if the limit becomes an issue. If that ever happens, I'd suggest using up the whole range of possible entities before going back to the lower numbers - that will hopefully minimize the chance that the old and new entities overlap.</p>\n<p>@nkoenig, I believe you were the one who originally implemented the entity reuse. Do you see any problem with this? All the adjacent memory tests are still passing.</p>", "type": "rendered"}, "created_on": "2019-01-24T23:17:07.075020+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-01-24T23:17:07.090240+00:00", "type": "pullrequest_comment", "id": 89266991}