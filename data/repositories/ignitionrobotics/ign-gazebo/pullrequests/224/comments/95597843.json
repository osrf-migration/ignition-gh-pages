{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/224/comments/95597843.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/224/_/diff#comment-95597843"}}, "parent": {"id": 95463185, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/224/comments/95463185.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/224/_/diff#comment-95463185"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 224, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/224.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/224"}}, "title": "[Acropolis][WIP] Mutex to protect systems added on demand"}, "content": {"raw": "I agree with adding new systems to a queue, much like we do entities.\n\nIf we are thinking about making an entity for each system that is added, we may be able to keep it as a single method that dispatches accordingly?", "markup": "markdown", "html": "<p>I agree with adding new systems to a queue, much like we do entities.</p>\n<p>If we are thinking about making an entity for each system that is added, we may be able to keep it as a single method that dispatches accordingly?</p>", "type": "rendered"}, "created_on": "2019-03-19T17:30:09.000485+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2019-03-19T17:30:09.056208+00:00", "type": "pullrequest_comment", "id": 95597843}