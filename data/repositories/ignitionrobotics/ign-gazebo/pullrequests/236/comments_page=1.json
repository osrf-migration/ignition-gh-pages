{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96462899.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96462899"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Interesting (but not fun at all): the custom components are not being loaded at all on homebrew (`[Dbg] [EntityComponentManager.cc:544] Using components of type [14713202922772426720] / [ModelPluginComponent].` is not printed). Gotta debug some more.", "markup": "markdown", "html": "<p>Interesting (but not fun at all): the custom components are not being loaded at all on homebrew (<code>[Dbg] [EntityComponentManager.cc:544] Using components of type [14713202922772426720] / [ModelPluginComponent].</code> is not printed). Gotta debug some more.</p>", "type": "rendered"}, "created_on": "2019-03-26T19:10:38.596733+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-26T19:10:38.605989+00:00", "type": "pullrequest_comment", "id": 96462899}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96494067.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96494067"}}, "parent": {"id": 96462899, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96462899.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96462899"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I think this will fix it, the `ModelPluginComponent` didn't have a unique class tag: c626758", "markup": "markdown", "html": "<p>I think this will fix it, the <code>ModelPluginComponent</code> didn't have a unique class tag: <a href=\"#!/ignitionrobotics/ign-gazebo/commits/c626758\" rel=\"nofollow\" class=\"ap-connect-link\">c626758</a></p>", "type": "rendered"}, "created_on": "2019-03-27T01:26:57.149336+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T01:26:57.157615+00:00", "type": "pullrequest_comment", "id": 96494067}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96587232.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96587232"}}, "parent": {"id": 96494067, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96494067.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96494067"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Looks like it was only the TouchPlugin that caused the failures.", "markup": "markdown", "html": "<p>Looks like it was only the TouchPlugin that caused the failures.</p>", "type": "rendered"}, "created_on": "2019-03-27T14:01:25.996119+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2019-03-27T14:01:26.050049+00:00", "type": "pullrequest_comment", "id": 96587232}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96627966.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96627966"}}, "parent": {"id": 96587232, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96587232.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96587232"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Yeah I'd expect it only to fail on homebrew though", "markup": "markdown", "html": "<p>Yeah I'd expect it only to fail on homebrew though</p>", "type": "rendered"}, "created_on": "2019-03-27T17:13:49.032520+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T17:13:49.051713+00:00", "type": "pullrequest_comment", "id": 96627966}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96633197.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96633197"}}, "parent": {"id": 96627966, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96627966.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96627966"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Oh I see, that is unexpected.  Does it fail for you locally?", "markup": "markdown", "html": "<p>Oh I see, that is unexpected.  Does it fail for you locally?</p>", "type": "rendered"}, "created_on": "2019-03-27T17:48:17.989642+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2019-03-27T17:48:18.005565+00:00", "type": "pullrequest_comment", "id": 96633197}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96633388.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96633388"}}, "parent": {"id": 96633197, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96633197.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96633197"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "No, I'm updating my workspace to see if I can reproduce it. Pipelines and Jenkins Ubuntu failed at the exact same spot, so I don't think it's spurious.", "markup": "markdown", "html": "<p>No, I'm updating my workspace to see if I can reproduce it. Pipelines and Jenkins Ubuntu failed at the exact same spot, so I don't think it's spurious.</p>", "type": "rendered"}, "created_on": "2019-03-27T17:49:39.652482+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T17:49:39.663715+00:00", "type": "pullrequest_comment", "id": 96633388}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96642354.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96642354"}}, "parent": {"id": 96633388, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96633388.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96633388"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I can't reproduce it locally. My guess is that the problem may be the same one as homebrew is having, but I'm not sure why this PR would surface it for Ubuntu CI.", "markup": "markdown", "html": "<p>I can't reproduce it locally. My guess is that the problem may be the same one as homebrew is having, but I'm not sure why this PR would surface it for Ubuntu CI.</p>", "type": "rendered"}, "created_on": "2019-03-27T18:59:24.118984+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T18:59:24.131035+00:00", "type": "pullrequest_comment", "id": 96642354}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96647550.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96647550"}}, "parent": {"id": 96642354, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96642354.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96642354"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I'm able to reproduce the segfault locally. I did a build where all the dependencies came from debs.\n\nHere's the backtrace. \n```\n#0  0x00007ffff75b0284 in ignition::gazebo::v1::SimulationRunner::UpdateSystems (this=0x55555636cac0) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/SimulationRunner.cc:300\n#1  0x00007ffff75b163d in ignition::gazebo::v1::SimulationRunner::Run (this=0x55555636cac0, _iterations=100) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/SimulationRunner.cc:440\n#2  0x00007ffff7593c2e in ignition::gazebo::v1::ServerPrivate::Run (this=0x555555aab480, _iterations=100, _cond=std::optional<std::condition_variable *> [no contained value]) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/ServerPrivate.cc:114\n#3  0x00007ffff7581062 in ignition::gazebo::v1::Server::Run (this=0x555555923300, _blocking=true, _iterations=100, _paused=false) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/Server.cc:221\n#4  0x00005555555d9cf9 in TouchPluginTest_SpawnedEntities_Test::<lambda(const string&, const string&)>::operator()(const std::__cxx11::string &, const std::__cxx11::string &) const (__closure=0x7fffffffd1d0,\n    _box1=\"\\n  <?xml version=\\\"1.0\\\" ?>\\n  <sdf version=\\\"1.6\\\">\\n      <model name=\\\"white_box\\\">\\n        <pose>0 0 4 0 0 0</pose>\\n        <link name=\\\"link\\\">\\n          <collision name=\\\"collision\\\">\\n\", ' ' <repeats 12 times>, \"<geometry>\"...,\n    _box2=\"\\n  <?xml version=\\\"1.0\\\" ?>\\n  <sdf version=\\\"1.6\\\">\\n      <model name=\\\"green_box_for_white\\\">\\n        <static>1</static>\\n        <pose>0 0 0.5 0 0 0</pose>\\n        <link name=\\\"link\\\">\\n          <collision n\"...)\n    at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/integration/touch_plugin.cc:307\n#5  0x00005555555db602 in TouchPluginTest_SpawnedEntities_Test::TestBody (this=0x55555593a790) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/integration/touch_plugin.cc:338\n#6  0x00005555556610e4 in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void> (object=0x55555593a790, method=&virtual testing::Test::TestBody(), location=0x55555567fe4b \"the test body\") at ../../test/gtest/src/gtest.cc:2079\n#7  0x0000555555655a33 in testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void> (object=0x55555593a790, method=&virtual testing::Test::TestBody(), location=0x55555567fe4b \"the test body\") at ../../test/gtest/src/gtest.cc:2115\n#8  0x00005555556190cc in testing::Test::Run (this=0x55555593a790) at ../../test/gtest/src/gtest.cc:2151\n#9  0x000055555561a3a6 in testing::TestInfo::Run (this=0x555555a464a0) at ../../test/gtest/src/gtest.cc:2327\n#10 0x000055555561b08b in testing::TestCase::Run (this=0x555555a228b0) at ../../test/gtest/src/gtest.cc:2445\n#11 0x000055555562ad09 in testing::internal::UnitTestImpl::RunAllTests (this=0x55555595ed20) at ../../test/gtest/src/gtest.cc:4316\n#12 0x000055555566341f in testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x55555595ed20,\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55555562a792 <testing::internal::UnitTestImpl::RunAllTests() at ../../test/gtest/src/gtest.cc:4223>,\n    location=0x555555680658 \"auxiliary test code (environments or event listeners)\") at ../../test/gtest/src/gtest.cc:2079\n#13 0x0000555555657bb3 in testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (object=0x55555595ed20,\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55555562a792 <testing::internal::UnitTestImpl::RunAllTests() at ../../test/gtest/src/gtest.cc:4223>,\n    location=0x555555680658 \"auxiliary test code (environments or event listeners)\") at ../../test/gtest/src/gtest.cc:2115\n#14 0x000055555562822f in testing::UnitTest::Run (this=0x5555558f2e00 <testing::UnitTest::GetInstance()::instance>) at ../../test/gtest/src/gtest.cc:3927\n#15 0x000055555567b0c6 in RUN_ALL_TESTS () at ../../test/gtest/include/gtest/gtest.h:2288\n#16 0x000055555567af7c in main (argc=1, argv=0x7fffffffd788) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/gtest/src/gtest_main.cc:37\n```\n\nIt looks like the same problem as the homebrew segfault where the system pointer is corrupt.\n```\n297       {\n298         IGN_PROFILE(\"PreUpdate\");\n299         for (auto& system : this->systemsPreupdate)\n300           system->PreUpdate(this->currentInfo, this->entityCompMgr);\n301       }\n```\n", "markup": "markdown", "html": "<p>I'm able to reproduce the segfault locally. I did a build where all the dependencies came from debs.</p>\n<p>Here's the backtrace. </p>\n<div class=\"codehilite\"><pre><span></span>#0  0x00007ffff75b0284 in ignition::gazebo::v1::SimulationRunner::UpdateSystems (this=0x55555636cac0) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/SimulationRunner.cc:300\n#1  0x00007ffff75b163d in ignition::gazebo::v1::SimulationRunner::Run (this=0x55555636cac0, _iterations=100) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/SimulationRunner.cc:440\n#2  0x00007ffff7593c2e in ignition::gazebo::v1::ServerPrivate::Run (this=0x555555aab480, _iterations=100, _cond=std::optional&lt;std::condition_variable *&gt; [no contained value]) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/ServerPrivate.cc:114\n#3  0x00007ffff7581062 in ignition::gazebo::v1::Server::Run (this=0x555555923300, _blocking=true, _iterations=100, _paused=false) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/src/Server.cc:221\n#4  0x00005555555d9cf9 in TouchPluginTest_SpawnedEntities_Test::&lt;lambda(const string&amp;, const string&amp;)&gt;::operator()(const std::__cxx11::string &amp;, const std::__cxx11::string &amp;) const (__closure=0x7fffffffd1d0,\n    _box1=&quot;\\n  &lt;?xml version=\\&quot;1.0\\&quot; ?&gt;\\n  &lt;sdf version=\\&quot;1.6\\&quot;&gt;\\n      &lt;model name=\\&quot;white_box\\&quot;&gt;\\n        &lt;pose&gt;0 0 4 0 0 0&lt;/pose&gt;\\n        &lt;link name=\\&quot;link\\&quot;&gt;\\n          &lt;collision name=\\&quot;collision\\&quot;&gt;\\n&quot;, &#39; &#39; &lt;repeats 12 times&gt;, &quot;&lt;geometry&gt;&quot;...,\n    _box2=&quot;\\n  &lt;?xml version=\\&quot;1.0\\&quot; ?&gt;\\n  &lt;sdf version=\\&quot;1.6\\&quot;&gt;\\n      &lt;model name=\\&quot;green_box_for_white\\&quot;&gt;\\n        &lt;static&gt;1&lt;/static&gt;\\n        &lt;pose&gt;0 0 0.5 0 0 0&lt;/pose&gt;\\n        &lt;link name=\\&quot;link\\&quot;&gt;\\n          &lt;collision n&quot;...)\n    at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/integration/touch_plugin.cc:307\n#5  0x00005555555db602 in TouchPluginTest_SpawnedEntities_Test::TestBody (this=0x55555593a790) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/integration/touch_plugin.cc:338\n#6  0x00005555556610e4 in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (object=0x55555593a790, method=&amp;virtual testing::Test::TestBody(), location=0x55555567fe4b &quot;the test body&quot;) at ../../test/gtest/src/gtest.cc:2079\n#7  0x0000555555655a33 in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (object=0x55555593a790, method=&amp;virtual testing::Test::TestBody(), location=0x55555567fe4b &quot;the test body&quot;) at ../../test/gtest/src/gtest.cc:2115\n#8  0x00005555556190cc in testing::Test::Run (this=0x55555593a790) at ../../test/gtest/src/gtest.cc:2151\n#9  0x000055555561a3a6 in testing::TestInfo::Run (this=0x555555a464a0) at ../../test/gtest/src/gtest.cc:2327\n#10 0x000055555561b08b in testing::TestCase::Run (this=0x555555a228b0) at ../../test/gtest/src/gtest.cc:2445\n#11 0x000055555562ad09 in testing::internal::UnitTestImpl::RunAllTests (this=0x55555595ed20) at ../../test/gtest/src/gtest.cc:4316\n#12 0x000055555566341f in testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x55555595ed20,\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55555562a792 &lt;testing::internal::UnitTestImpl::RunAllTests() at ../../test/gtest/src/gtest.cc:4223&gt;,\n    location=0x555555680658 &quot;auxiliary test code (environments or event listeners)&quot;) at ../../test/gtest/src/gtest.cc:2079\n#13 0x0000555555657bb3 in testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (object=0x55555595ed20,\n    method=(bool (testing::internal::UnitTestImpl::*)(testing::internal::UnitTestImpl * const)) 0x55555562a792 &lt;testing::internal::UnitTestImpl::RunAllTests() at ../../test/gtest/src/gtest.cc:4223&gt;,\n    location=0x555555680658 &quot;auxiliary test code (environments or event listeners)&quot;) at ../../test/gtest/src/gtest.cc:2115\n#14 0x000055555562822f in testing::UnitTest::Run (this=0x5555558f2e00 &lt;testing::UnitTest::GetInstance()::instance&gt;) at ../../test/gtest/src/gtest.cc:3927\n#15 0x000055555567b0c6 in RUN_ALL_TESTS () at ../../test/gtest/include/gtest/gtest.h:2288\n#16 0x000055555567af7c in main (argc=1, argv=0x7fffffffd788) at /home/addisu/ws/ign-gazebo/src/ign_gazebo/test/gtest/src/gtest_main.cc:37\n</pre></div>\n\n\n<p>It looks like the same problem as the homebrew segfault where the system pointer is corrupt.</p>\n<div class=\"codehilite\"><pre><span></span>297       {\n298         IGN_PROFILE(&quot;PreUpdate&quot;);\n299         for (auto&amp; system : this-&gt;systemsPreupdate)\n300           system-&gt;PreUpdate(this-&gt;currentInfo, this-&gt;entityCompMgr);\n301       }\n</pre></div>", "type": "rendered"}, "created_on": "2019-03-27T19:45:41.492251+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-03-27T19:45:41.504236+00:00", "type": "pullrequest_comment", "id": 96647550}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96650120.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96650120"}}, "parent": {"id": 96647550, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96647550.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96647550"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Nice! I wonder why it consistently fails on this branch but is consistently successful without this PR.", "markup": "markdown", "html": "<p>Nice! I wonder why it consistently fails on this branch but is consistently successful without this PR.</p>", "type": "rendered"}, "created_on": "2019-03-27T20:08:10.029582+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T20:08:10.048624+00:00", "type": "pullrequest_comment", "id": 96650120}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96663709.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96663709"}}, "parent": {"id": 96650120, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96650120.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96650120"}}, "depth": 9}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I compared the two and here's what I found. When a new system is added to `systemsPreupdate`, if the vector has reached it's capacity, it deallocates it's current memory and allocates a larger memory at a different address. Well, the deallocation doesn't actually clear the memory so it still contains \"good\" data until someone else allocates memory at that address. This is why this has been intermittent. The segfault does not occur if the for loop finishes before someone allocates memory at the address where `systemsPreupdate` used to be.", "markup": "markdown", "html": "<p>I compared the two and here's what I found. When a new system is added to <code>systemsPreupdate</code>, if the vector has reached it's capacity, it deallocates it's current memory and allocates a larger memory at a different address. Well, the deallocation doesn't actually clear the memory so it still contains \"good\" data until someone else allocates memory at that address. This is why this has been intermittent. The segfault does not occur if the for loop finishes before someone allocates memory at the address where <code>systemsPreupdate</code> used to be.</p>", "type": "rendered"}, "created_on": "2019-03-27T22:32:22.786459+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-03-27T22:32:22.795779+00:00", "type": "pullrequest_comment", "id": 96663709}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96664429.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96664429"}}, "parent": {"id": 96663709, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96663709.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96663709"}}, "depth": 10}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "That's some fine detective work :smile: \n\nSo I think the solution you're working on for homebrew will also fix ubuntu. I'm fine putting this PR on hold until that fix is in.", "markup": "markdown", "html": "<p>That's some fine detective work <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f604.png\" alt=\"\ud83d\ude04\" title=\":smile:\" data-emoji-short-name=\":smile:\" /> </p>\n<p>So I think the solution you're working on for homebrew will also fix ubuntu. I'm fine putting this PR on hold until that fix is in.</p>", "type": "rendered"}, "created_on": "2019-03-27T22:41:59.308437+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T22:41:59.319934+00:00", "type": "pullrequest_comment", "id": 96664429}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96665031.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96665031"}}, "parent": {"id": 96664429, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96664429.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96664429"}}, "depth": 11}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Thanks! Do you mind if I put you as a reviewer on pull request #241?", "markup": "markdown", "html": "<p>Thanks! Do you mind if I put you as a reviewer on <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/241/add-systems-to-queue-before-actually\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #241</a>?</p>", "type": "rendered"}, "created_on": "2019-03-27T22:50:06.475222+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-03-27T22:50:06.483500+00:00", "type": "pullrequest_comment", "id": 96665031}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96665935.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96665935"}}, "parent": {"id": 96665031, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96665031.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96665031"}}, "depth": 12}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I'm on it! :ok_hand: ", "markup": "markdown", "html": "<p>I'm on it! <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f44c.png\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" data-emoji-short-name=\":ok_hand:\" /> </p>", "type": "rendered"}, "created_on": "2019-03-27T23:03:36.769917+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-27T23:03:36.779068+00:00", "type": "pullrequest_comment", "id": 96665935}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96810285.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96810285"}}, "parent": {"id": 96665935, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/96665935.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-96665935"}}, "depth": 13}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "Awesome, that fixed it, thanks much!", "markup": "markdown", "html": "<p>Awesome, that fixed it, thanks much!</p>", "type": "rendered"}, "created_on": "2019-03-28T17:59:19.732161+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-03-28T17:59:19.746545+00:00", "type": "pullrequest_comment", "id": 96810285}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97109726.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:fe492c195741..f07f8f6f2dee?path=examples%2Fplugin%2Fcustom_component%2FREADME.md"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97109726"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "library", "markup": "markdown", "html": "<p>library</p>", "type": "rendered"}, "created_on": "2019-04-01T14:36:34.850349+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "inline": {"to": 23, "from": null, "path": "examples/plugin/custom_component/README.md"}, "updated_on": "2019-04-01T14:36:34.883645+00:00", "type": "pullrequest_comment", "id": 97109726}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97133437.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:e110e4cc904c..f07f8f6f2dee?path=examples%2Fplugin%2Fcustom_component%2FREADME.md"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97133437"}}, "parent": {"id": 97109726, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97109726.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97109726"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "e110e4c", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-gazebo/commits/e110e4c\" rel=\"nofollow\" class=\"ap-connect-link\">e110e4c</a></p>", "type": "rendered"}, "created_on": "2019-04-01T16:53:06.655840+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 23, "from": null, "path": "examples/plugin/custom_component/README.md"}, "updated_on": "2019-04-01T16:53:06.671253+00:00", "type": "pullrequest_comment", "id": 97133437}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97112705.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:fe492c195741..f07f8f6f2dee?path=include%2Fignition%2Fgazebo%2Fcomponents%2FFactory.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97112705"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "I don\u2019t think I\u2019m clear on the reasoning for static/non-static here?", "markup": "markdown", "html": "<p>I don\u2019t think I\u2019m clear on the reasoning for static/non-static here?</p>", "type": "rendered"}, "created_on": "2019-04-01T14:51:13.922938+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "inline": {"to": 301, "from": null, "path": "include/ignition/gazebo/components/Factory.hh"}, "updated_on": "2019-04-01T14:51:13.964686+00:00", "type": "pullrequest_comment", "id": 97112705}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97133292.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:fe492c195741..f07f8f6f2dee?path=include%2Fignition%2Fgazebo%2Fcomponents%2FFactory.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97133292"}}, "parent": {"id": 97112705, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97112705.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97112705"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "`static` is ABI compatible, but it should be ok (although not strictly necessary) to make it non-static on version 2.", "markup": "markdown", "html": "<p><code>static</code> is ABI compatible, but it should be ok (although not strictly necessary) to make it non-static on version 2.</p>", "type": "rendered"}, "created_on": "2019-04-01T16:51:43.168897+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 301, "from": null, "path": "include/ignition/gazebo/components/Factory.hh"}, "updated_on": "2019-04-01T16:51:43.186554+00:00", "type": "pullrequest_comment", "id": 97133292}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236/comments/97171261.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236/_/diff#comment-97171261"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 236, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/236.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/236"}}, "title": "[Acropolis] Enforce component type uniqueness"}, "content": {"raw": "`UNIT_NetworkManager_TEST` segfaulted on pipelines. I haven't seen this before, but it doesn't seem related to this PR either.", "markup": "markdown", "html": "<p><code>UNIT_NetworkManager_TEST</code> segfaulted on pipelines. I haven't seen this before, but it doesn't seem related to this PR either.</p>", "type": "rendered"}, "created_on": "2019-04-01T23:13:09.391822+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2019-04-01T23:13:09.398251+00:00", "type": "pullrequest_comment", "id": 97171261}], "page": 1, "size": 19}