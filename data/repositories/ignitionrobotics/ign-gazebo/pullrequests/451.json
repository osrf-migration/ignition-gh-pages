{"rendered": {"description": {"raw": "## Summary\r\n\r\n* Add `--gui-config` option\r\n* Change the destination of files saved with `Save configuration` to `~/.ignition/gazebo/gui.config`\r\n* Copy the installed config file `install/share/ignition/ignition-gazebo2/gui/gui.config` to `~/.ignition/gazebo/gui.config` in case that doesn't exist\r\n* The default SDF file loaded with `ign gazebo` doesn't have GUI embedded into it anymore. It will use the default config file instead.\r\n* Added an example world that doesn't have `<gui>`, so loading it will use the default config\r\n\r\n## Overview\r\n\r\nThere are a few places where the GUI configuration can come from. When Ignition Gazebo's GUI is started, the following happens:\r\n\r\n1. If the user passed a configuration file from the command line using `--gui-config`, use that file and ignore the `<gui>` element from the SDF. Otherwise:\r\n1. Use the `<gui>` element from the SDF. But in case that doesn't have any plugins:\r\n1. Load the default config file at `~/.ignition/gazebo/gui.config`. If this file doesn't exist, the `gui.config` file installed with Ignition Gazebo is copied there first.\r\n\r\nWhen the user chooses `Save client configuration`, that will save the current configuration to `~/.ignition/gazebo/gui.config`, essentially setting that to the current view.\r\n\r\n## Example usage\r\n\r\n### Default config\r\n\r\nYou can change default plugins and style :art:. For example:\r\n\r\n1. Start `ign gazebo` as usual - it doesn't have an entity tree and uses a light theme\r\n1. Insert the `EntityTree` from the plugin's menu\r\n1. `Style settings` -> change to dark theme\r\n1. `Save client configuration` from the left menu\r\n1. Close Gazebo\r\n1. Start `ign gazebo` -> now it has an entity tree and uses the dark theme by default.\r\n\r\nTo restore the default configuration, delete the default file:\r\n\r\n`rm ~/.ignition/gazebo/gui.config`\r\n\r\nThe new world `default.sdf` serves as an example of how users can create worlds that don't have their own GUIs and use the default one instead. Try:\r\n\r\n`ign gazebo default.sdf`\r\n\r\n### Custom configs\r\n\r\nTo change the config to be used with a specific world:\r\n\r\n1. Load the world, for example: `ign gazebo shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/shapes.config`\r\n1. Close Gazebo\r\n1. Start the same world, but using the saved config: `ign gazebo shapes.sdf --gui-config /tmp/shapes.config`\r\n\r\n### Load configs\r\n\r\nYou can load saved configs at runtime, but that currently has a few caveats:\r\n\r\n* Ogre 1 scenes get distorted after reload\r\n* Ogre 2 scenes don't get properly reloaded\r\n* Trying to mix Ogre 1 and 2 is a disaster (crash :boom:)\r\n\r\n1. Load the world, for example: `ign gazebo rolling_shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/rolling_shapes.config`\r\n1. Close Gazebo\r\n1. Load the world with the SDF's config again, i.e.: `ign gazebo rolling_shapes.sdf`\r\n1. `Load client configuration`: `/tmp/rolling_shapes.config` - all plugins get reloaded, but the 3D scene needs work.\r\n\r\n\r\n## Known issues\r\n\r\n* :warning: **The config files usually have the world name hardcoded in them.** This means that things will not work if the world name in the SDF doesn't match the config.\r\n* Loading configs at runtime usually breaks the rendering scene. I started looking into it, but I think it falls outside the scope of this PR.\r\n\r\nOnce the scene reload issues are sorted out, we should write a tutorial about all this.", "markup": "markdown", "html": "<h2 id=\"markdown-header-summary\">Summary</h2>\n<ul>\n<li>Add <code>--gui-config</code> option</li>\n<li>Change the destination of files saved with <code>Save configuration</code> to <code>~/.ignition/gazebo/gui.config</code></li>\n<li>Copy the installed config file <code>install/share/ignition/ignition-gazebo2/gui/gui.config</code> to <code>~/.ignition/gazebo/gui.config</code> in case that doesn't exist</li>\n<li>The default SDF file loaded with <code>ign gazebo</code> doesn't have GUI embedded into it anymore. It will use the default config file instead.</li>\n<li>Added an example world that doesn't have <code>&lt;gui&gt;</code>, so loading it will use the default config</li>\n</ul>\n<h2 id=\"markdown-header-overview\">Overview</h2>\n<p>There are a few places where the GUI configuration can come from. When Ignition Gazebo's GUI is started, the following happens:</p>\n<ol>\n<li>If the user passed a configuration file from the command line using <code>--gui-config</code>, use that file and ignore the <code>&lt;gui&gt;</code> element from the SDF. Otherwise:</li>\n<li>Use the <code>&lt;gui&gt;</code> element from the SDF. But in case that doesn't have any plugins:</li>\n<li>Load the default config file at <code>~/.ignition/gazebo/gui.config</code>. If this file doesn't exist, the <code>gui.config</code> file installed with Ignition Gazebo is copied there first.</li>\n</ol>\n<p>When the user chooses <code>Save client configuration</code>, that will save the current configuration to <code>~/.ignition/gazebo/gui.config</code>, essentially setting that to the current view.</p>\n<h2 id=\"markdown-header-example-usage\">Example usage</h2>\n<h3 id=\"markdown-header-default-config\">Default config</h3>\n<p>You can change default plugins and style <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f3a8.png\" alt=\"\ud83c\udfa8\" title=\":art:\" data-emoji-short-name=\":art:\" />. For example:</p>\n<ol>\n<li>Start <code>ign gazebo</code> as usual - it doesn't have an entity tree and uses a light theme</li>\n<li>Insert the <code>EntityTree</code> from the plugin's menu</li>\n<li><code>Style settings</code> -&gt; change to dark theme</li>\n<li><code>Save client configuration</code> from the left menu</li>\n<li>Close Gazebo</li>\n<li>Start <code>ign gazebo</code> -&gt; now it has an entity tree and uses the dark theme by default.</li>\n</ol>\n<p>To restore the default configuration, delete the default file:</p>\n<p><code>rm ~/.ignition/gazebo/gui.config</code></p>\n<p>The new world <code>default.sdf</code> serves as an example of how users can create worlds that don't have their own GUIs and use the default one instead. Try:</p>\n<p><code>ign gazebo default.sdf</code></p>\n<h3 id=\"markdown-header-custom-configs\">Custom configs</h3>\n<p>To change the config to be used with a specific world:</p>\n<ol>\n<li>Load the world, for example: <code>ign gazebo shapes.sdf</code></li>\n<li>Resize the window, remove and add plugins</li>\n<li><code>Save client configuration as...</code> file name <code>/tmp/shapes.config</code></li>\n<li>Close Gazebo</li>\n<li>Start the same world, but using the saved config: <code>ign gazebo shapes.sdf --gui-config /tmp/shapes.config</code></li>\n</ol>\n<h3 id=\"markdown-header-load-configs\">Load configs</h3>\n<p>You can load saved configs at runtime, but that currently has a few caveats:</p>\n<ul>\n<li>Ogre 1 scenes get distorted after reload</li>\n<li>Ogre 2 scenes don't get properly reloaded</li>\n<li>Trying to mix Ogre 1 and 2 is a disaster (crash <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f4a5.png\" alt=\"\ud83d\udca5\" title=\":boom:\" data-emoji-short-name=\":boom:\" />)</li>\n</ul>\n<ol>\n<li>Load the world, for example: <code>ign gazebo rolling_shapes.sdf</code></li>\n<li>Resize the window, remove and add plugins</li>\n<li><code>Save client configuration as...</code> file name <code>/tmp/rolling_shapes.config</code></li>\n<li>Close Gazebo</li>\n<li>Load the world with the SDF's config again, i.e.: <code>ign gazebo rolling_shapes.sdf</code></li>\n<li><code>Load client configuration</code>: <code>/tmp/rolling_shapes.config</code> - all plugins get reloaded, but the 3D scene needs work.</li>\n</ol>\n<h2 id=\"markdown-header-known-issues\">Known issues</h2>\n<ul>\n<li><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/26a0.png\" alt=\"\u26a0\" title=\":warning:\" data-emoji-short-name=\":warning:\" /> <strong>The config files usually have the world name hardcoded in them.</strong> This means that things will not work if the world name in the SDF doesn't match the config.</li>\n<li>Loading configs at runtime usually breaks the rendering scene. I started looking into it, but I think it falls outside the scope of this PR.</li>\n</ul>\n<p>Once the scene reload issues are sorted out, we should write a tutorial about all this.</p>", "type": "rendered"}, "title": {"raw": "Improvements to GUI configuration", "markup": "markdown", "html": "<p>Improvements to GUI configuration</p>", "type": "rendered"}}, "type": "pullrequest", "description": "## Summary\r\n\r\n* Add `--gui-config` option\r\n* Change the destination of files saved with `Save configuration` to `~/.ignition/gazebo/gui.config`\r\n* Copy the installed config file `install/share/ignition/ignition-gazebo2/gui/gui.config` to `~/.ignition/gazebo/gui.config` in case that doesn't exist\r\n* The default SDF file loaded with `ign gazebo` doesn't have GUI embedded into it anymore. It will use the default config file instead.\r\n* Added an example world that doesn't have `<gui>`, so loading it will use the default config\r\n\r\n## Overview\r\n\r\nThere are a few places where the GUI configuration can come from. When Ignition Gazebo's GUI is started, the following happens:\r\n\r\n1. If the user passed a configuration file from the command line using `--gui-config`, use that file and ignore the `<gui>` element from the SDF. Otherwise:\r\n1. Use the `<gui>` element from the SDF. But in case that doesn't have any plugins:\r\n1. Load the default config file at `~/.ignition/gazebo/gui.config`. If this file doesn't exist, the `gui.config` file installed with Ignition Gazebo is copied there first.\r\n\r\nWhen the user chooses `Save client configuration`, that will save the current configuration to `~/.ignition/gazebo/gui.config`, essentially setting that to the current view.\r\n\r\n## Example usage\r\n\r\n### Default config\r\n\r\nYou can change default plugins and style :art:. For example:\r\n\r\n1. Start `ign gazebo` as usual - it doesn't have an entity tree and uses a light theme\r\n1. Insert the `EntityTree` from the plugin's menu\r\n1. `Style settings` -> change to dark theme\r\n1. `Save client configuration` from the left menu\r\n1. Close Gazebo\r\n1. Start `ign gazebo` -> now it has an entity tree and uses the dark theme by default.\r\n\r\nTo restore the default configuration, delete the default file:\r\n\r\n`rm ~/.ignition/gazebo/gui.config`\r\n\r\nThe new world `default.sdf` serves as an example of how users can create worlds that don't have their own GUIs and use the default one instead. Try:\r\n\r\n`ign gazebo default.sdf`\r\n\r\n### Custom configs\r\n\r\nTo change the config to be used with a specific world:\r\n\r\n1. Load the world, for example: `ign gazebo shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/shapes.config`\r\n1. Close Gazebo\r\n1. Start the same world, but using the saved config: `ign gazebo shapes.sdf --gui-config /tmp/shapes.config`\r\n\r\n### Load configs\r\n\r\nYou can load saved configs at runtime, but that currently has a few caveats:\r\n\r\n* Ogre 1 scenes get distorted after reload\r\n* Ogre 2 scenes don't get properly reloaded\r\n* Trying to mix Ogre 1 and 2 is a disaster (crash :boom:)\r\n\r\n1. Load the world, for example: `ign gazebo rolling_shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/rolling_shapes.config`\r\n1. Close Gazebo\r\n1. Load the world with the SDF's config again, i.e.: `ign gazebo rolling_shapes.sdf`\r\n1. `Load client configuration`: `/tmp/rolling_shapes.config` - all plugins get reloaded, but the 3D scene needs work.\r\n\r\n\r\n## Known issues\r\n\r\n* :warning: **The config files usually have the world name hardcoded in them.** This means that things will not work if the world name in the SDF doesn't match the config.\r\n* Loading configs at runtime usually breaks the rendering scene. I started looking into it, but I think it falls outside the scope of this PR.\r\n\r\nOnce the scene reload issues are sorted out, we should write a tutorial about all this.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:937f186fd5fc%0Dadf27078e820?from_pullrequest_id=451"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/451.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/451"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:937f186fd5fc%0Dadf27078e820?from_pullrequest_id=451"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/451/statuses_page=1.json"}}, "title": "Improvements to GUI configuration", "close_source_branch": true, "reviewers": [], "id": 451, "destination": {"commit": {"hash": "adf27078e820", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/adf27078e820.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/adf27078e820"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo2"}}, "created_on": "2019-11-09T01:37:39.177790+00:00", "summary": {"raw": "## Summary\r\n\r\n* Add `--gui-config` option\r\n* Change the destination of files saved with `Save configuration` to `~/.ignition/gazebo/gui.config`\r\n* Copy the installed config file `install/share/ignition/ignition-gazebo2/gui/gui.config` to `~/.ignition/gazebo/gui.config` in case that doesn't exist\r\n* The default SDF file loaded with `ign gazebo` doesn't have GUI embedded into it anymore. It will use the default config file instead.\r\n* Added an example world that doesn't have `<gui>`, so loading it will use the default config\r\n\r\n## Overview\r\n\r\nThere are a few places where the GUI configuration can come from. When Ignition Gazebo's GUI is started, the following happens:\r\n\r\n1. If the user passed a configuration file from the command line using `--gui-config`, use that file and ignore the `<gui>` element from the SDF. Otherwise:\r\n1. Use the `<gui>` element from the SDF. But in case that doesn't have any plugins:\r\n1. Load the default config file at `~/.ignition/gazebo/gui.config`. If this file doesn't exist, the `gui.config` file installed with Ignition Gazebo is copied there first.\r\n\r\nWhen the user chooses `Save client configuration`, that will save the current configuration to `~/.ignition/gazebo/gui.config`, essentially setting that to the current view.\r\n\r\n## Example usage\r\n\r\n### Default config\r\n\r\nYou can change default plugins and style :art:. For example:\r\n\r\n1. Start `ign gazebo` as usual - it doesn't have an entity tree and uses a light theme\r\n1. Insert the `EntityTree` from the plugin's menu\r\n1. `Style settings` -> change to dark theme\r\n1. `Save client configuration` from the left menu\r\n1. Close Gazebo\r\n1. Start `ign gazebo` -> now it has an entity tree and uses the dark theme by default.\r\n\r\nTo restore the default configuration, delete the default file:\r\n\r\n`rm ~/.ignition/gazebo/gui.config`\r\n\r\nThe new world `default.sdf` serves as an example of how users can create worlds that don't have their own GUIs and use the default one instead. Try:\r\n\r\n`ign gazebo default.sdf`\r\n\r\n### Custom configs\r\n\r\nTo change the config to be used with a specific world:\r\n\r\n1. Load the world, for example: `ign gazebo shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/shapes.config`\r\n1. Close Gazebo\r\n1. Start the same world, but using the saved config: `ign gazebo shapes.sdf --gui-config /tmp/shapes.config`\r\n\r\n### Load configs\r\n\r\nYou can load saved configs at runtime, but that currently has a few caveats:\r\n\r\n* Ogre 1 scenes get distorted after reload\r\n* Ogre 2 scenes don't get properly reloaded\r\n* Trying to mix Ogre 1 and 2 is a disaster (crash :boom:)\r\n\r\n1. Load the world, for example: `ign gazebo rolling_shapes.sdf`\r\n1. Resize the window, remove and add plugins\r\n1. `Save client configuration as...` file name `/tmp/rolling_shapes.config`\r\n1. Close Gazebo\r\n1. Load the world with the SDF's config again, i.e.: `ign gazebo rolling_shapes.sdf`\r\n1. `Load client configuration`: `/tmp/rolling_shapes.config` - all plugins get reloaded, but the 3D scene needs work.\r\n\r\n\r\n## Known issues\r\n\r\n* :warning: **The config files usually have the world name hardcoded in them.** This means that things will not work if the world name in the SDF doesn't match the config.\r\n* Loading configs at runtime usually breaks the rendering scene. I started looking into it, but I think it falls outside the scope of this PR.\r\n\r\nOnce the scene reload issues are sorted out, we should write a tutorial about all this.", "markup": "markdown", "html": "<h2 id=\"markdown-header-summary\">Summary</h2>\n<ul>\n<li>Add <code>--gui-config</code> option</li>\n<li>Change the destination of files saved with <code>Save configuration</code> to <code>~/.ignition/gazebo/gui.config</code></li>\n<li>Copy the installed config file <code>install/share/ignition/ignition-gazebo2/gui/gui.config</code> to <code>~/.ignition/gazebo/gui.config</code> in case that doesn't exist</li>\n<li>The default SDF file loaded with <code>ign gazebo</code> doesn't have GUI embedded into it anymore. It will use the default config file instead.</li>\n<li>Added an example world that doesn't have <code>&lt;gui&gt;</code>, so loading it will use the default config</li>\n</ul>\n<h2 id=\"markdown-header-overview\">Overview</h2>\n<p>There are a few places where the GUI configuration can come from. When Ignition Gazebo's GUI is started, the following happens:</p>\n<ol>\n<li>If the user passed a configuration file from the command line using <code>--gui-config</code>, use that file and ignore the <code>&lt;gui&gt;</code> element from the SDF. Otherwise:</li>\n<li>Use the <code>&lt;gui&gt;</code> element from the SDF. But in case that doesn't have any plugins:</li>\n<li>Load the default config file at <code>~/.ignition/gazebo/gui.config</code>. If this file doesn't exist, the <code>gui.config</code> file installed with Ignition Gazebo is copied there first.</li>\n</ol>\n<p>When the user chooses <code>Save client configuration</code>, that will save the current configuration to <code>~/.ignition/gazebo/gui.config</code>, essentially setting that to the current view.</p>\n<h2 id=\"markdown-header-example-usage\">Example usage</h2>\n<h3 id=\"markdown-header-default-config\">Default config</h3>\n<p>You can change default plugins and style <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f3a8.png\" alt=\"\ud83c\udfa8\" title=\":art:\" data-emoji-short-name=\":art:\" />. For example:</p>\n<ol>\n<li>Start <code>ign gazebo</code> as usual - it doesn't have an entity tree and uses a light theme</li>\n<li>Insert the <code>EntityTree</code> from the plugin's menu</li>\n<li><code>Style settings</code> -&gt; change to dark theme</li>\n<li><code>Save client configuration</code> from the left menu</li>\n<li>Close Gazebo</li>\n<li>Start <code>ign gazebo</code> -&gt; now it has an entity tree and uses the dark theme by default.</li>\n</ol>\n<p>To restore the default configuration, delete the default file:</p>\n<p><code>rm ~/.ignition/gazebo/gui.config</code></p>\n<p>The new world <code>default.sdf</code> serves as an example of how users can create worlds that don't have their own GUIs and use the default one instead. Try:</p>\n<p><code>ign gazebo default.sdf</code></p>\n<h3 id=\"markdown-header-custom-configs\">Custom configs</h3>\n<p>To change the config to be used with a specific world:</p>\n<ol>\n<li>Load the world, for example: <code>ign gazebo shapes.sdf</code></li>\n<li>Resize the window, remove and add plugins</li>\n<li><code>Save client configuration as...</code> file name <code>/tmp/shapes.config</code></li>\n<li>Close Gazebo</li>\n<li>Start the same world, but using the saved config: <code>ign gazebo shapes.sdf --gui-config /tmp/shapes.config</code></li>\n</ol>\n<h3 id=\"markdown-header-load-configs\">Load configs</h3>\n<p>You can load saved configs at runtime, but that currently has a few caveats:</p>\n<ul>\n<li>Ogre 1 scenes get distorted after reload</li>\n<li>Ogre 2 scenes don't get properly reloaded</li>\n<li>Trying to mix Ogre 1 and 2 is a disaster (crash <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f4a5.png\" alt=\"\ud83d\udca5\" title=\":boom:\" data-emoji-short-name=\":boom:\" />)</li>\n</ul>\n<ol>\n<li>Load the world, for example: <code>ign gazebo rolling_shapes.sdf</code></li>\n<li>Resize the window, remove and add plugins</li>\n<li><code>Save client configuration as...</code> file name <code>/tmp/rolling_shapes.config</code></li>\n<li>Close Gazebo</li>\n<li>Load the world with the SDF's config again, i.e.: <code>ign gazebo rolling_shapes.sdf</code></li>\n<li><code>Load client configuration</code>: <code>/tmp/rolling_shapes.config</code> - all plugins get reloaded, but the 3D scene needs work.</li>\n</ol>\n<h2 id=\"markdown-header-known-issues\">Known issues</h2>\n<ul>\n<li><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/26a0.png\" alt=\"\u26a0\" title=\":warning:\" data-emoji-short-name=\":warning:\" /> <strong>The config files usually have the world name hardcoded in them.</strong> This means that things will not work if the world name in the SDF doesn't match the config.</li>\n<li>Loading configs at runtime usually breaks the rendering scene. I started looking into it, but I think it falls outside the scope of this PR.</li>\n</ul>\n<p>Once the scene reload issues are sorted out, we should write a tutorial about all this.</p>", "type": "rendered"}, "source": {"commit": {"hash": "da749a692f4c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/da749a692f4c.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/da749a692f4c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "gui_config"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-11-23T01:13:31.832167+00:00", "type": "participant", "approved": false, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, {"role": "PARTICIPANT", "participated_on": "2019-11-25T22:41:16.755075+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2019-11-21T15:33:53.159099+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2019-11-25T22:41:16.755075+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "937f186fd5fc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/937f186fd5fc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/937f186fd5fc"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}