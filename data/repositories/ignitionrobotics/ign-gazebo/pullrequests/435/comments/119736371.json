{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/435/comments/119736371.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/435/_/diff#comment-119736371"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 435, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/435.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/435"}}, "title": "Add mutex to protect views from potential concurrent access"}, "content": {"raw": "Here's my opinion: I don't believe the ECM is generally thread safe. By that I mean, if we allowed concurrent access to the ECM in any of the `*Update` steps of systems, we would have a number of race conditions. So, I think the best thing to do right now is to keep only the `PostUpdate` step thread safe. With that being said, I believe this PR helps achieve thread safety in `PostUpdate`, but I think the `viewsMutex` is locked in more places than necessary. I think we only need to lock it in `FindView` and `AddView`. The other places it is locked (`ClearNewlyCreatedEntities`, `ProcessRemoveEntityRequests`, `UpdateViews`, `RebuildViews`) don't seem to be necessary right now because they should not get called in the `PostUpdate` step.\n\nWith this line of reasoning, I would say `entityRemoveMutex` and `entityCreatedMutex` are not necessary either until we tackle thread safety in general. But that's probably a discussion for another time. Thoughts?", "markup": "markdown", "html": "<p>Here's my opinion: I don't believe the ECM is generally thread safe. By that I mean, if we allowed concurrent access to the ECM in any of the <code>*Update</code> steps of systems, we would have a number of race conditions. So, I think the best thing to do right now is to keep only the <code>PostUpdate</code> step thread safe. With that being said, I believe this PR helps achieve thread safety in <code>PostUpdate</code>, but I think the <code>viewsMutex</code> is locked in more places than necessary. I think we only need to lock it in <code>FindView</code> and <code>AddView</code>. The other places it is locked (<code>ClearNewlyCreatedEntities</code>, <code>ProcessRemoveEntityRequests</code>, <code>UpdateViews</code>, <code>RebuildViews</code>) don't seem to be necessary right now because they should not get called in the <code>PostUpdate</code> step.</p>\n<p>With this line of reasoning, I would say <code>entityRemoveMutex</code> and <code>entityCreatedMutex</code> are not necessary either until we tackle thread safety in general. But that's probably a discussion for another time. Thoughts?</p>", "type": "rendered"}, "created_on": "2019-10-07T15:02:44.708639+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2019-10-07T15:03:10.490770+00:00", "type": "pullrequest_comment", "id": 119736371}