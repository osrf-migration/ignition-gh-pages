{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/493/comments/134500359.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:b7a2f0193a50..71bcd586cfdc?path=src%2Fgui%2Fplugins%2Fscene3d%2FScene3D.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/493/_/diff#comment-134500359"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 493, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/493.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/493"}}, "title": "Add custom user snapping"}, "content": {"raw": "How about clipping it to `1e-4`? Changing to 1 could be a bit confusing, since smaller values are supported.\n\nYou could do something like `snapVals.X() = std::max(1e-4, snapVals.X());`", "markup": "markdown", "html": "<p>How about clipping it to <code>1e-4</code>? Changing to 1 could be a bit confusing, since smaller values are supported.</p>\n<p>You could do something like <code>snapVals.X() = std::max(1e-4, snapVals.X());</code></p>", "type": "rendered"}, "created_on": "2020-02-04T23:14:20.223705+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 907, "from": null, "outdated": true, "path": "src/gui/plugins/scene3d/Scene3D.cc"}, "updated_on": "2020-02-04T23:14:20.228702+00:00", "type": "pullrequest_comment", "id": 134500359}