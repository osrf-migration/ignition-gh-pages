{"rendered": {"description": {"raw": "Move time handling to `SimulationRunner`, which means:\r\n\r\n* Remove `WorldStatistics` component and system\r\n* `World` component now is just an identifier like `components::Model` or `components::Link`\r\n* Systems receive `UpdateInfo` at the update callback, which contains info about time and iterations.\r\n* World statistics are published by `SimulationRunner`\r\n* World controls service is provided by `SimulationRunner`\r\n\r\n---\r\n\r\n# Concepts\r\n\r\nSome important ideas, which are open to discussion, are:\r\n\r\n* ECS systems are updated even while paused. This is important for interacting with the GUI.\r\n* While paused, sim iterations and sim time don't increase.\r\n* While paused, the step size (`dt`) passed to each system is zero. Right now, it is up to the system to check that and behave accordingly.\r\n* The step size is 10ms by default (placeholder) and can be overridden from the SDF (`<max_step_size>`).\r\n* The ECS period is calculated based on the step size and the desired RTF, see calculation comments on `SimulationRunner.cc`; it can be overridden from the command line with `-z`\r\n\r\nThe image below summarizes some of these ideas:\r\n\r\n![ECSRTF.png](data/bitbucket.org/repo/8zodKzn/images/1055788081-ECSRTF.png)\r\n\r\n---\r\n\r\n# Demo\r\n\r\n`ign-gazebo -f test/worlds/shapes.sdf  -v 4 -z 3`\r\n\r\n![playpause_pot.gif](data/bitbucket.org/repo/8zodKzn/images/4020974896-playpause_pot.gif)\r\n\r\n---\r\n\r\n---\r\n\r\n# Future work\r\n\r\n* Even if I try to run faster than real time, with `-z 10000` for example, the maximum RTF I get is less than 160%. It would be good to port `gazebo_experimental`'s [DiagnosticsManager](https://bitbucket.org/osrf/gazebo_experimental/src/d828f7845f99ecb5da097f1c89b32da809bd9fd9/include/gazebo/util/DiagnosticsManager.hh?fileviewer=file-view-default) here to see what's going on\r\n* Add command line option to start paused\r\n* `--iterations` should set sim iterations, not ECS (usually only relevant if you start paused)", "markup": "markdown", "html": "<p>Move time handling to <code>SimulationRunner</code>, which means:</p>\n<ul>\n<li>Remove <code>WorldStatistics</code> component and system</li>\n<li><code>World</code> component now is just an identifier like <code>components::Model</code> or <code>components::Link</code></li>\n<li>Systems receive <code>UpdateInfo</code> at the update callback, which contains info about time and iterations.</li>\n<li>World statistics are published by <code>SimulationRunner</code></li>\n<li>World controls service is provided by <code>SimulationRunner</code></li>\n</ul>\n<hr />\n<h1 id=\"markdown-header-concepts\">Concepts</h1>\n<p>Some important ideas, which are open to discussion, are:</p>\n<ul>\n<li>ECS systems are updated even while paused. This is important for interacting with the GUI.</li>\n<li>While paused, sim iterations and sim time don't increase.</li>\n<li>While paused, the step size (<code>dt</code>) passed to each system is zero. Right now, it is up to the system to check that and behave accordingly.</li>\n<li>The step size is 10ms by default (placeholder) and can be overridden from the SDF (<code>&lt;max_step_size&gt;</code>).</li>\n<li>The ECS period is calculated based on the step size and the desired RTF, see calculation comments on <code>SimulationRunner.cc</code>; it can be overridden from the command line with <code>-z</code></li>\n</ul>\n<p>The image below summarizes some of these ideas:</p>\n<p><img alt=\"ECSRTF.png\" src=\"data/bitbucket.org/repo/8zodKzn/images/1055788081-ECSRTF.png\" /></p>\n<hr />\n<h1 id=\"markdown-header-demo\">Demo</h1>\n<p><code>ign-gazebo -f test/worlds/shapes.sdf  -v 4 -z 3</code></p>\n<p><img alt=\"playpause_pot.gif\" src=\"data/bitbucket.org/repo/8zodKzn/images/4020974896-playpause_pot.gif\" /></p>\n<hr />\n<hr />\n<h1 id=\"markdown-header-future-work\">Future work</h1>\n<ul>\n<li>Even if I try to run faster than real time, with <code>-z 10000</code> for example, the maximum RTF I get is less than 160%. It would be good to port <code>gazebo_experimental</code>'s <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo_experimental/src/d828f7845f99ecb5da097f1c89b32da809bd9fd9/include/gazebo/util/DiagnosticsManager.hh?fileviewer=file-view-default\" rel=\"nofollow\">DiagnosticsManager</a> here to see what's going on</li>\n<li>Add command line option to start paused</li>\n<li><code>--iterations</code> should set sim iterations, not ECS (usually only relevant if you start paused)</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Refactor stats and support play / pause / step", "markup": "markdown", "html": "<p>Refactor stats and support play / pause / step</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Move time handling to `SimulationRunner`, which means:\r\n\r\n* Remove `WorldStatistics` component and system\r\n* `World` component now is just an identifier like `components::Model` or `components::Link`\r\n* Systems receive `UpdateInfo` at the update callback, which contains info about time and iterations.\r\n* World statistics are published by `SimulationRunner`\r\n* World controls service is provided by `SimulationRunner`\r\n\r\n---\r\n\r\n# Concepts\r\n\r\nSome important ideas, which are open to discussion, are:\r\n\r\n* ECS systems are updated even while paused. This is important for interacting with the GUI.\r\n* While paused, sim iterations and sim time don't increase.\r\n* While paused, the step size (`dt`) passed to each system is zero. Right now, it is up to the system to check that and behave accordingly.\r\n* The step size is 10ms by default (placeholder) and can be overridden from the SDF (`<max_step_size>`).\r\n* The ECS period is calculated based on the step size and the desired RTF, see calculation comments on `SimulationRunner.cc`; it can be overridden from the command line with `-z`\r\n\r\nThe image below summarizes some of these ideas:\r\n\r\n![ECSRTF.png](data/bitbucket.org/repo/8zodKzn/images/1055788081-ECSRTF.png)\r\n\r\n---\r\n\r\n# Demo\r\n\r\n`ign-gazebo -f test/worlds/shapes.sdf  -v 4 -z 3`\r\n\r\n![playpause_pot.gif](data/bitbucket.org/repo/8zodKzn/images/4020974896-playpause_pot.gif)\r\n\r\n---\r\n\r\n---\r\n\r\n# Future work\r\n\r\n* Even if I try to run faster than real time, with `-z 10000` for example, the maximum RTF I get is less than 160%. It would be good to port `gazebo_experimental`'s [DiagnosticsManager](https://bitbucket.org/osrf/gazebo_experimental/src/d828f7845f99ecb5da097f1c89b32da809bd9fd9/include/gazebo/util/DiagnosticsManager.hh?fileviewer=file-view-default) here to see what's going on\r\n* Add command line option to start paused\r\n* `--iterations` should set sim iterations, not ECS (usually only relevant if you start paused)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:d82a353d7e0e%0D704323aad6f3?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/33"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:d82a353d7e0e%0D704323aad6f3?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/33/statuses_page=1.json"}}, "title": "Refactor stats and support play / pause / step", "close_source_branch": true, "reviewers": [], "id": 33, "destination": {"commit": {"hash": "704323aad6f3", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/704323aad6f3.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/704323aad6f3"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "created_on": "2018-08-29T00:33:39.977511+00:00", "summary": {"raw": "Move time handling to `SimulationRunner`, which means:\r\n\r\n* Remove `WorldStatistics` component and system\r\n* `World` component now is just an identifier like `components::Model` or `components::Link`\r\n* Systems receive `UpdateInfo` at the update callback, which contains info about time and iterations.\r\n* World statistics are published by `SimulationRunner`\r\n* World controls service is provided by `SimulationRunner`\r\n\r\n---\r\n\r\n# Concepts\r\n\r\nSome important ideas, which are open to discussion, are:\r\n\r\n* ECS systems are updated even while paused. This is important for interacting with the GUI.\r\n* While paused, sim iterations and sim time don't increase.\r\n* While paused, the step size (`dt`) passed to each system is zero. Right now, it is up to the system to check that and behave accordingly.\r\n* The step size is 10ms by default (placeholder) and can be overridden from the SDF (`<max_step_size>`).\r\n* The ECS period is calculated based on the step size and the desired RTF, see calculation comments on `SimulationRunner.cc`; it can be overridden from the command line with `-z`\r\n\r\nThe image below summarizes some of these ideas:\r\n\r\n![ECSRTF.png](data/bitbucket.org/repo/8zodKzn/images/1055788081-ECSRTF.png)\r\n\r\n---\r\n\r\n# Demo\r\n\r\n`ign-gazebo -f test/worlds/shapes.sdf  -v 4 -z 3`\r\n\r\n![playpause_pot.gif](data/bitbucket.org/repo/8zodKzn/images/4020974896-playpause_pot.gif)\r\n\r\n---\r\n\r\n---\r\n\r\n# Future work\r\n\r\n* Even if I try to run faster than real time, with `-z 10000` for example, the maximum RTF I get is less than 160%. It would be good to port `gazebo_experimental`'s [DiagnosticsManager](https://bitbucket.org/osrf/gazebo_experimental/src/d828f7845f99ecb5da097f1c89b32da809bd9fd9/include/gazebo/util/DiagnosticsManager.hh?fileviewer=file-view-default) here to see what's going on\r\n* Add command line option to start paused\r\n* `--iterations` should set sim iterations, not ECS (usually only relevant if you start paused)", "markup": "markdown", "html": "<p>Move time handling to <code>SimulationRunner</code>, which means:</p>\n<ul>\n<li>Remove <code>WorldStatistics</code> component and system</li>\n<li><code>World</code> component now is just an identifier like <code>components::Model</code> or <code>components::Link</code></li>\n<li>Systems receive <code>UpdateInfo</code> at the update callback, which contains info about time and iterations.</li>\n<li>World statistics are published by <code>SimulationRunner</code></li>\n<li>World controls service is provided by <code>SimulationRunner</code></li>\n</ul>\n<hr />\n<h1 id=\"markdown-header-concepts\">Concepts</h1>\n<p>Some important ideas, which are open to discussion, are:</p>\n<ul>\n<li>ECS systems are updated even while paused. This is important for interacting with the GUI.</li>\n<li>While paused, sim iterations and sim time don't increase.</li>\n<li>While paused, the step size (<code>dt</code>) passed to each system is zero. Right now, it is up to the system to check that and behave accordingly.</li>\n<li>The step size is 10ms by default (placeholder) and can be overridden from the SDF (<code>&lt;max_step_size&gt;</code>).</li>\n<li>The ECS period is calculated based on the step size and the desired RTF, see calculation comments on <code>SimulationRunner.cc</code>; it can be overridden from the command line with <code>-z</code></li>\n</ul>\n<p>The image below summarizes some of these ideas:</p>\n<p><img alt=\"ECSRTF.png\" src=\"data/bitbucket.org/repo/8zodKzn/images/1055788081-ECSRTF.png\" /></p>\n<hr />\n<h1 id=\"markdown-header-demo\">Demo</h1>\n<p><code>ign-gazebo -f test/worlds/shapes.sdf  -v 4 -z 3</code></p>\n<p><img alt=\"playpause_pot.gif\" src=\"data/bitbucket.org/repo/8zodKzn/images/4020974896-playpause_pot.gif\" /></p>\n<hr />\n<hr />\n<h1 id=\"markdown-header-future-work\">Future work</h1>\n<ul>\n<li>Even if I try to run faster than real time, with <code>-z 10000</code> for example, the maximum RTF I get is less than 160%. It would be good to port <code>gazebo_experimental</code>'s <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo_experimental/src/d828f7845f99ecb5da097f1c89b32da809bd9fd9/include/gazebo/util/DiagnosticsManager.hh?fileviewer=file-view-default\" rel=\"nofollow\">DiagnosticsManager</a> here to see what's going on</li>\n<li>Add command line option to start paused</li>\n<li><code>--iterations</code> should set sim iterations, not ECS (usually only relevant if you start paused)</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "fd218cfbc2a4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fd218cfbc2a4.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fd218cfbc2a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "runner_stats"}}, "comment_count": 25, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-08-31T16:29:04.741209+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2018-09-06T15:29:34.428975+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2018-09-06T17:01:38.474799+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2018-09-06T17:01:38.566191+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "d82a353d7e0e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d82a353d7e0e.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d82a353d7e0e"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}