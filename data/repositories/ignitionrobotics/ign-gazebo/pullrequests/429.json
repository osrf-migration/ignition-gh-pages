{"rendered": {"description": {"raw": "![log_control.gif](data/bitbucket.org/repo/8zodKzn/images/3945315640-log_control.gif)\r\n\r\nDifferences from Gazebo classic:\r\n\r\n* Seeking used to also update the iteration number. Now it resets iterations to zero.\r\n* It's not possible to set `forward` for logs\r\n* `LogPlaybackControl` and `WorldControl` messages work interchangeably. I'm considering adding a new message type, maybe `TimeControl`, which combines both, and deprecating the other 2.\r\n* There's nothing preventing users from rewinding and seeking during regular simulation mode. I've added warnings to all the systems which I thought could be affected by jumps back in time. Jumping forward has no warning, and systems just treat it as a really large time step. The idea is that we can implement rewind and seek for these systems in the future, and we don't want to prevent users from supporting this on their systems.\r\n\r\n## Command line\r\n\r\nTry it out:\r\n\r\n* While playing back a log (or not!), rewind:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'rewind: true'`\r\n\r\n* Seek:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'seek: {sec: 140}, pause: true'`\r\n\r\n\r\n## Systems\r\n\r\nSystems can detect rewinds by checking:\r\n\r\n* `if (_info.simTime == std::chrono::steady_clock::duration::zero())`\r\n* `if (_info.dt < std::chrono::steady_clock::duration::zero())`\r\n\r\nTo detect pause:\r\n\r\n* `if (_info.paused)`\r\n\r\nTo detect time jump while paused (`dt` is zero during regular pause):\r\n\r\n* `if (_info.paused && _info.dt != std::chrono::steady_clock::duration::zero())`\r\n\r\n---\r\n\r\nNeeds [this ign-cmake PR](#!/ignitionrobotics/ign-cmake/pull-requests/172/) to clear cppcheck.", "markup": "markdown", "html": "<p><img alt=\"log_control.gif\" src=\"data/bitbucket.org/repo/8zodKzn/images/3945315640-log_control.gif\" /></p>\n<p>Differences from Gazebo classic:</p>\n<ul>\n<li>Seeking used to also update the iteration number. Now it resets iterations to zero.</li>\n<li>It's not possible to set <code>forward</code> for logs</li>\n<li><code>LogPlaybackControl</code> and <code>WorldControl</code> messages work interchangeably. I'm considering adding a new message type, maybe <code>TimeControl</code>, which combines both, and deprecating the other 2.</li>\n<li>There's nothing preventing users from rewinding and seeking during regular simulation mode. I've added warnings to all the systems which I thought could be affected by jumps back in time. Jumping forward has no warning, and systems just treat it as a really large time step. The idea is that we can implement rewind and seek for these systems in the future, and we don't want to prevent users from supporting this on their systems.</li>\n</ul>\n<h2 id=\"markdown-header-command-line\">Command line</h2>\n<p>Try it out:</p>\n<ul>\n<li>While playing back a log (or not!), rewind:</li>\n</ul>\n<p><code>ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'rewind: true'</code></p>\n<ul>\n<li>Seek:</li>\n</ul>\n<p><code>ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'seek: {sec: 140}, pause: true'</code></p>\n<h2 id=\"markdown-header-systems\">Systems</h2>\n<p>Systems can detect rewinds by checking:</p>\n<ul>\n<li><code>if (_info.simTime == std::chrono::steady_clock::duration::zero())</code></li>\n<li><code>if (_info.dt &lt; std::chrono::steady_clock::duration::zero())</code></li>\n</ul>\n<p>To detect pause:</p>\n<ul>\n<li><code>if (_info.paused)</code></li>\n</ul>\n<p>To detect time jump while paused (<code>dt</code> is zero during regular pause):</p>\n<ul>\n<li><code>if (_info.paused &amp;&amp; _info.dt != std::chrono::steady_clock::duration::zero())</code></li>\n</ul>\n<hr />\n<p>Needs <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/pull-requests/172/\" rel=\"nofollow\">this ign-cmake PR</a> to clear cppcheck.</p>", "type": "rendered"}, "title": {"raw": "Rewind / reset and seek", "markup": "markdown", "html": "<p>Rewind / reset and seek</p>", "type": "rendered"}}, "type": "pullrequest", "description": "![log_control.gif](data/bitbucket.org/repo/8zodKzn/images/3945315640-log_control.gif)\r\n\r\nDifferences from Gazebo classic:\r\n\r\n* Seeking used to also update the iteration number. Now it resets iterations to zero.\r\n* It's not possible to set `forward` for logs\r\n* `LogPlaybackControl` and `WorldControl` messages work interchangeably. I'm considering adding a new message type, maybe `TimeControl`, which combines both, and deprecating the other 2.\r\n* There's nothing preventing users from rewinding and seeking during regular simulation mode. I've added warnings to all the systems which I thought could be affected by jumps back in time. Jumping forward has no warning, and systems just treat it as a really large time step. The idea is that we can implement rewind and seek for these systems in the future, and we don't want to prevent users from supporting this on their systems.\r\n\r\n## Command line\r\n\r\nTry it out:\r\n\r\n* While playing back a log (or not!), rewind:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'rewind: true'`\r\n\r\n* Seek:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'seek: {sec: 140}, pause: true'`\r\n\r\n\r\n## Systems\r\n\r\nSystems can detect rewinds by checking:\r\n\r\n* `if (_info.simTime == std::chrono::steady_clock::duration::zero())`\r\n* `if (_info.dt < std::chrono::steady_clock::duration::zero())`\r\n\r\nTo detect pause:\r\n\r\n* `if (_info.paused)`\r\n\r\nTo detect time jump while paused (`dt` is zero during regular pause):\r\n\r\n* `if (_info.paused && _info.dt != std::chrono::steady_clock::duration::zero())`\r\n\r\n---\r\n\r\nNeeds [this ign-cmake PR](#!/ignitionrobotics/ign-cmake/pull-requests/172/) to clear cppcheck.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:a5d9d4b4a0cf%0D524ff20a71da?from_pullrequest_id=429"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/429.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/429"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:a5d9d4b4a0cf%0D524ff20a71da?from_pullrequest_id=429"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/429/statuses_page=1.json"}}, "title": "Rewind / reset and seek", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}], "id": 429, "destination": {"commit": {"hash": "524ff20a71da", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/524ff20a71da.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/524ff20a71da"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo2"}}, "created_on": "2019-09-11T23:17:21.323587+00:00", "summary": {"raw": "![log_control.gif](data/bitbucket.org/repo/8zodKzn/images/3945315640-log_control.gif)\r\n\r\nDifferences from Gazebo classic:\r\n\r\n* Seeking used to also update the iteration number. Now it resets iterations to zero.\r\n* It's not possible to set `forward` for logs\r\n* `LogPlaybackControl` and `WorldControl` messages work interchangeably. I'm considering adding a new message type, maybe `TimeControl`, which combines both, and deprecating the other 2.\r\n* There's nothing preventing users from rewinding and seeking during regular simulation mode. I've added warnings to all the systems which I thought could be affected by jumps back in time. Jumping forward has no warning, and systems just treat it as a really large time step. The idea is that we can implement rewind and seek for these systems in the future, and we don't want to prevent users from supporting this on their systems.\r\n\r\n## Command line\r\n\r\nTry it out:\r\n\r\n* While playing back a log (or not!), rewind:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'rewind: true'`\r\n\r\n* Seek:\r\n\r\n`ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'seek: {sec: 140}, pause: true'`\r\n\r\n\r\n## Systems\r\n\r\nSystems can detect rewinds by checking:\r\n\r\n* `if (_info.simTime == std::chrono::steady_clock::duration::zero())`\r\n* `if (_info.dt < std::chrono::steady_clock::duration::zero())`\r\n\r\nTo detect pause:\r\n\r\n* `if (_info.paused)`\r\n\r\nTo detect time jump while paused (`dt` is zero during regular pause):\r\n\r\n* `if (_info.paused && _info.dt != std::chrono::steady_clock::duration::zero())`\r\n\r\n---\r\n\r\nNeeds [this ign-cmake PR](#!/ignitionrobotics/ign-cmake/pull-requests/172/) to clear cppcheck.", "markup": "markdown", "html": "<p><img alt=\"log_control.gif\" src=\"data/bitbucket.org/repo/8zodKzn/images/3945315640-log_control.gif\" /></p>\n<p>Differences from Gazebo classic:</p>\n<ul>\n<li>Seeking used to also update the iteration number. Now it resets iterations to zero.</li>\n<li>It's not possible to set <code>forward</code> for logs</li>\n<li><code>LogPlaybackControl</code> and <code>WorldControl</code> messages work interchangeably. I'm considering adding a new message type, maybe <code>TimeControl</code>, which combines both, and deprecating the other 2.</li>\n<li>There's nothing preventing users from rewinding and seeking during regular simulation mode. I've added warnings to all the systems which I thought could be affected by jumps back in time. Jumping forward has no warning, and systems just treat it as a really large time step. The idea is that we can implement rewind and seek for these systems in the future, and we don't want to prevent users from supporting this on their systems.</li>\n</ul>\n<h2 id=\"markdown-header-command-line\">Command line</h2>\n<p>Try it out:</p>\n<ul>\n<li>While playing back a log (or not!), rewind:</li>\n</ul>\n<p><code>ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'rewind: true'</code></p>\n<ul>\n<li>Seek:</li>\n</ul>\n<p><code>ign service -s /world/shapes/playback/control --reqtype ignition.msgs.LogPlaybackControl --reptype ignition.msgs.Boolean --timeout 5000 --req 'seek: {sec: 140}, pause: true'</code></p>\n<h2 id=\"markdown-header-systems\">Systems</h2>\n<p>Systems can detect rewinds by checking:</p>\n<ul>\n<li><code>if (_info.simTime == std::chrono::steady_clock::duration::zero())</code></li>\n<li><code>if (_info.dt &lt; std::chrono::steady_clock::duration::zero())</code></li>\n</ul>\n<p>To detect pause:</p>\n<ul>\n<li><code>if (_info.paused)</code></li>\n</ul>\n<p>To detect time jump while paused (<code>dt</code> is zero during regular pause):</p>\n<ul>\n<li><code>if (_info.paused &amp;&amp; _info.dt != std::chrono::steady_clock::duration::zero())</code></li>\n</ul>\n<hr />\n<p>Needs <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-cmake/pull-requests/172/\" rel=\"nofollow\">this ign-cmake PR</a> to clear cppcheck.</p>", "type": "rendered"}, "source": {"commit": {"hash": "5e1ae20c01ba", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/5e1ae20c01ba.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/5e1ae20c01ba"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "rewind_seek"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-09-12T21:52:27.684322+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-12T05:57:59.513558+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-18T01:02:41.359448+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2019-09-18T01:01:28.446207+00:00", "type": "participant", "approved": true, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}], "reason": "", "updated_on": "2019-09-18T04:26:24.666681+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "a5d9d4b4a0cf", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/a5d9d4b4a0cf.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/a5d9d4b4a0cf"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}