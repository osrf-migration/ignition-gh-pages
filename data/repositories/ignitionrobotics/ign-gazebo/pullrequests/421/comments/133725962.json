{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421/comments/133725962.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:48501daf432c..ad8a6ce72565?path=src%2Fsystems%2Fphysics%2FPhysics.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421/_/diff#comment-133725962"}}, "parent": {"id": 133540158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421/comments/133540158.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421/_/diff#comment-133540158"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 421, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421"}}, "title": "Support simulation with bullet physics engine"}, "content": {"raw": "> users can specify an ordered priority queue of the physics engines that they like, and ign-gazebo can choose the highest priority physics engine that matches the required components.\n\nThat's an interesting idea. Do you think it will be common for users to have several engines available, but they don't know whether they fit their current simulation, and they will be ok just loading the first one that matches?\n\n> enforcing a policy about how the physics engine plugins get installed. For example, we could require that physics engine plugins install a metadata file into ${CMAKE_INSTALL_LIBDIR}/ign-physics/engine/${ENGINE_NAME}\n\nI think this can be problematic when mixing debian packages with user plugins. A plugin coming from a ROS package, or from a local workspace, shouldn't be installed under `/usr` together with `ign-physics`' debs . Neither the plugin nor its metadata. That will require using `sudo` and prevent users from having self-contained workspaces.\n\nAlternatively, I'd be ok if we supported a canonical location somewhere under `$HOME`, like `~/.ignition/physics/plugins`. But we still need a way for users to provide alternative paths that match their workspace layout, and environment variables are a familiar for Gazebo-classic and ROS users to do that. \n\n> I would hope that we can leverage the feature flexibility of ign-physics into a single physics system that can be used across all out-of-the-box physics engines that we support\n\nI agree that this would be ideal. We can look into this in the coming weeks, at least with the goal of supporting known physics engines at first.\n\n> I\u2019d say this depends on how we\u2019re defining \u201cphysics engine\u201d. I think it would be fine to support additional \u201cphysics systems\u201d that add new features or modify the behavior of an underlying physics system.\n\nYeah I was referring to `ign-gazebo` systems that are setup to drive the `Update` loop. Currently we only have `Physics` and `LogPlayback` playing that role. I agree that there's room for supporting plugins that modify the physics engine directly, I'm just not sure whether they should be `ign-gazebo` systems. But that's a bit outside the scope of this conversation.\n", "markup": "markdown", "html": "<blockquote>\n<p>users can specify an ordered priority queue of the physics engines that they like, and ign-gazebo can choose the highest priority physics engine that matches the required components.</p>\n</blockquote>\n<p>That's an interesting idea. Do you think it will be common for users to have several engines available, but they don't know whether they fit their current simulation, and they will be ok just loading the first one that matches?</p>\n<blockquote>\n<p>enforcing a policy about how the physics engine plugins get installed. For example, we could require that physics engine plugins install a metadata file into ${CMAKE_INSTALL_LIBDIR}/ign-physics/engine/${ENGINE_NAME}</p>\n</blockquote>\n<p>I think this can be problematic when mixing debian packages with user plugins. A plugin coming from a ROS package, or from a local workspace, shouldn't be installed under <code>/usr</code> together with <code>ign-physics</code>' debs . Neither the plugin nor its metadata. That will require using <code>sudo</code> and prevent users from having self-contained workspaces.</p>\n<p>Alternatively, I'd be ok if we supported a canonical location somewhere under <code>$HOME</code>, like <code>~/.ignition/physics/plugins</code>. But we still need a way for users to provide alternative paths that match their workspace layout, and environment variables are a familiar for Gazebo-classic and ROS users to do that. </p>\n<blockquote>\n<p>I would hope that we can leverage the feature flexibility of ign-physics into a single physics system that can be used across all out-of-the-box physics engines that we support</p>\n</blockquote>\n<p>I agree that this would be ideal. We can look into this in the coming weeks, at least with the goal of supporting known physics engines at first.</p>\n<blockquote>\n<p>I\u2019d say this depends on how we\u2019re defining \u201cphysics engine\u201d. I think it would be fine to support additional \u201cphysics systems\u201d that add new features or modify the behavior of an underlying physics system.</p>\n</blockquote>\n<p>Yeah I was referring to <code>ign-gazebo</code> systems that are setup to drive the <code>Update</code> loop. Currently we only have <code>Physics</code> and <code>LogPlayback</code> playing that role. I agree that there's room for supporting plugins that modify the physics engine directly, I'm just not sure whether they should be <code>ign-gazebo</code> systems. But that's a bit outside the scope of this conversation.</p>", "type": "rendered"}, "created_on": "2020-01-30T00:16:19.558596+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 268, "from": null, "outdated": true, "path": "src/systems/physics/Physics.cc"}, "updated_on": "2020-01-30T00:16:19.567673+00:00", "type": "pullrequest_comment", "id": 133725962}