{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421/comments/133739018.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:48501daf432c..ad8a6ce72565?path=src%2Fsystems%2Fphysics%2FPhysics.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421/_/diff#comment-133739018"}}, "parent": {"id": 133725962, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421/comments/133725962.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421/_/diff#comment-133725962"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 421, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/421.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/421"}}, "title": "Support simulation with bullet physics engine"}, "content": {"raw": "> Do you think it will be common for users to have several engines available, but they don't know whether they fit their current simulation, and they will be ok just loading the first one that matches?\n\nTruthfully I have no idea; it might be a completely ludicrous feature concept. But I wouldn\u2019t be too surprised if the community and/or us might recommend an ordered list of recommended physics engines, and users just copy/paste that list into their configuration with the hope that at least one thing on that list will suit their needs.\n\n> A plugin coming from a ROS package, or from a local workspace, shouldn't be installed under `/usr` together with `ign-physics`' debs . Neither the plugin nor its metadata\n\nOf course. For SOSS plugins what we do is look at the `LD_LIBRARY_PATH` environment variable and use any paths inside that variable as a prefix for our search. That covers the use case of anyone who is using a build tool like colcon. In addition, users can specify other application-specific environment variables, for example we could have a `IGN_PHYSICS_ENGINE_PATH` which could be a list of paths that can be used as prefixes for the physics engine metadata lookup. We could also support passing in path prefixes through the command line. The [SOSS Search class that I linked to before](https://github.com/osrf/soss/blob/1fff22320be0067955b227a98aa5b5fee4e02b0e/packages/core/include/soss/Search.hpp) does all of this, and I think it\u2019s worked quite well for us, so I recommend taking a look at the documentation for that class to see what I mean \\(but be warned that it\u2019s more complicated than what we need for physics engines, because it differentiates between two different categories of plugins\\).\n\n> Alternatively, I'd be ok if we supported a canonical location somewhere under `$HOME`, like `~/.ignition/physics/plugins`. But we still need a way for users to provide alternative paths that match their workspace layout, and environment variables are a familiar for Gazebo-classic and ROS users to do that.\n\nIndeed the SOSS `Search` class also supports searching relative to the home directory. The workspace layout can be handled using `LD_LIBRARY_PATH` as mentioned above.", "markup": "markdown", "html": "<blockquote>\n<p>Do you think it will be common for users to have several engines available, but they don't know whether they fit their current simulation, and they will be ok just loading the first one that matches?</p>\n</blockquote>\n<p>Truthfully I have no idea; it might be a completely ludicrous feature concept. But I wouldn\u2019t be too surprised if the community and/or us might recommend an ordered list of recommended physics engines, and users just copy/paste that list into their configuration with the hope that at least one thing on that list will suit their needs.</p>\n<blockquote>\n<p>A plugin coming from a ROS package, or from a local workspace, shouldn't be installed under <code>/usr</code> together with <code>ign-physics</code>' debs . Neither the plugin nor its metadata</p>\n</blockquote>\n<p>Of course. For SOSS plugins what we do is look at the <code>LD_LIBRARY_PATH</code> environment variable and use any paths inside that variable as a prefix for our search. That covers the use case of anyone who is using a build tool like colcon. In addition, users can specify other application-specific environment variables, for example we could have a <code>IGN_PHYSICS_ENGINE_PATH</code> which could be a list of paths that can be used as prefixes for the physics engine metadata lookup. We could also support passing in path prefixes through the command line. The <a data-is-external-link=\"true\" href=\"https://github.com/osrf/soss/blob/1fff22320be0067955b227a98aa5b5fee4e02b0e/packages/core/include/soss/Search.hpp\" rel=\"nofollow\">SOSS Search class that I linked to before</a> does all of this, and I think it\u2019s worked quite well for us, so I recommend taking a look at the documentation for that class to see what I mean (but be warned that it\u2019s more complicated than what we need for physics engines, because it differentiates between two different categories of plugins).</p>\n<blockquote>\n<p>Alternatively, I'd be ok if we supported a canonical location somewhere under <code>$HOME</code>, like <code>~/.ignition/physics/plugins</code>. But we still need a way for users to provide alternative paths that match their workspace layout, and environment variables are a familiar for Gazebo-classic and ROS users to do that.</p>\n</blockquote>\n<p>Indeed the SOSS <code>Search</code> class also supports searching relative to the home directory. The workspace layout can be handled using <code>LD_LIBRARY_PATH</code> as mentioned above.</p>", "type": "rendered"}, "created_on": "2020-01-30T04:14:56.284961+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 268, "from": null, "outdated": true, "path": "src/systems/physics/Physics.cc"}, "updated_on": "2020-01-30T04:14:56.292894+00:00", "type": "pullrequest_comment", "id": 133739018}