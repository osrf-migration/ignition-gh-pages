{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147/comments/89925658.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:c352b5da7bb6..06efe3b5ad0f?path=include%2Fignition%2Fgazebo%2Fdetail%2FEntityComponentManager.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147/_/diff#comment-89925658"}}, "parent": {"id": 89921703, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147/comments/89921703.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147/_/diff#comment-89921703"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 147, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147"}}, "title": "[A-4] Component factory"}, "content": {"raw": "In all of the implementations that we support \\(GCC, Clang, MSVC\\), any collisions that could happen between the `typeid(T).name()` of different `T` classes would also result in a multiple definition error \\(in other words, one of those classes will collide with the other in the linker because they would share the same symbol name\\).\n\nThe standard doesn't make any guarantees about this, but the supported implementations always produce different `typeid(T).name()` values for different symbol names \\(in fact, Clang and GCC literally return the symbol name itself\\).", "markup": "markdown", "html": "<p>In all of the implementations that we support (GCC, Clang, MSVC), any collisions that could happen between the <code>typeid(T).name()</code> of different <code>T</code> classes would also result in a multiple definition error (in other words, one of those classes will collide with the other in the linker because they would share the same symbol name).</p>\n<p>The standard doesn't make any guarantees about this, but the supported implementations always produce different <code>typeid(T).name()</code> values for different symbol names (in fact, Clang and GCC literally return the symbol name itself).</p>", "type": "rendered"}, "created_on": "2019-01-31T03:33:16.049086+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": 38, "from": null, "outdated": true, "path": "include/ignition/gazebo/detail/EntityComponentManager.hh"}, "updated_on": "2019-01-31T03:34:55.475208+00:00", "type": "pullrequest_comment", "id": 89925658}