{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147/comments/89929433.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:c352b5da7bb6..06efe3b5ad0f?path=include%2Fignition%2Fgazebo%2Fdetail%2FEntityComponentManager.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147/_/diff#comment-89929433"}}, "parent": {"id": 89929072, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147/comments/89929072.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147/_/diff#comment-89929072"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 147, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/147.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/147"}}, "title": "[A-4] Component factory"}, "content": {"raw": "I was also thinking that we could annotate components with our own stable hash function.\n\nI took a quick stab at making the murmur2 hash a `constexpr`, so it can be evaluated completely at compile-time: [https://godbolt.org/z/KtJuMV](https://godbolt.org/z/KtJuMV) \\(based on [http://szelei.me/constexpr-murmurhash/](http://szelei.me/constexpr-murmurhash/)\\)\n\nIt seems to check out against a known-good implementation \\(the ign-common impl has a small bug\\).\n\nNote: that this would only work with c\\+\\+14 and up \\(not an issue as far as our current platforms\\)\n\nAlso note: murmurhash2 has some limitations, so the constexpr version does too?\n\n    // Note - This code makes a few assumptions about how your machine behaves -\n    \n    // 1. We can read a 4-byte value from any address without crashing\n    // 2. sizeof(int) == 4\n    \n    // And it has a few limitations -\n    \n    // 1. It will not work incrementally.\n    // 2. It will not produce the same results on little-endian and big-endian\n    //    machines.", "markup": "markdown", "html": "<p>I was also thinking that we could annotate components with our own stable hash function.</p>\n<p>I took a quick stab at making the murmur2 hash a <code>constexpr</code>, so it can be evaluated completely at compile-time: <a data-is-external-link=\"true\" href=\"https://godbolt.org/z/KtJuMV\" rel=\"nofollow\">https://godbolt.org/z/KtJuMV</a> (based on <a data-is-external-link=\"true\" href=\"http://szelei.me/constexpr-murmurhash/\" rel=\"nofollow\">http://szelei.me/constexpr-murmurhash/</a>)</p>\n<p>It seems to check out against a known-good implementation (the ign-common impl has a small bug).</p>\n<p>Note: that this would only work with c++14 and up (not an issue as far as our current platforms)</p>\n<p>Also note: murmurhash2 has some limitations, so the constexpr version does too?</p>\n<div class=\"codehilite\"><pre><span></span>// Note - This code makes a few assumptions about how your machine behaves -\n\n// 1. We can read a 4-byte value from any address without crashing\n// 2. sizeof(int) == 4\n\n// And it has a few limitations -\n\n// 1. It will not work incrementally.\n// 2. It will not produce the same results on little-endian and big-endian\n//    machines.\n</pre></div>", "type": "rendered"}, "created_on": "2019-01-31T04:49:44.561767+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "inline": {"to": 38, "from": null, "outdated": true, "path": "include/ignition/gazebo/detail/EntityComponentManager.hh"}, "updated_on": "2019-01-31T04:55:33.871734+00:00", "type": "pullrequest_comment", "id": 89929433}