{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/414/comments/112810604.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/mingfeisun/ign-gazebo:d9d17b04d669..736f7a248438?path=examples%2Fworlds%2Factor.sdf"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/414/_/diff#comment-112810604"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 414, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/414.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/414"}}, "title": "rendering and animating Actor"}, "content": {"raw": "We need to remove these hardcoded paths. In fact, they cause the simulation to crash for me. This fixes the crash:\n\n~~~\ndiff -r d9d17b04d669 src/rendering/SceneManager.cc\n--- a/src/rendering/SceneManager.cc     Thu Aug 08 17:23:49 2019 +0800\n+++ b/src/rendering/SceneManager.cc     Mon Aug 12 11:39:16 2019 -0700\n@@ -477,7 +477,21 @@\n   descriptor.meshName = _actor.SkinFilename();\n   common::MeshManager *meshManager = common::MeshManager::Instance();\n   descriptor.mesh = meshManager->Load(descriptor.meshName);\n+  if (nullptr == descriptor.mesh)\n+  {\n+    ignerr << \"Actor skin mesh [\" << _actor.SkinFilename() << \"] not found.\"\n+           << std::endl;\n+    return rendering::VisualPtr();\n+  }\n+\n   common::SkeletonPtr meshSkel = descriptor.mesh->MeshSkeleton();\n+  if (nullptr == meshSkel)\n+  {\n+    ignerr << \"Actor skin mesh [\" << _actor.SkinFilename() << \"] not found.\"\n+           << std::endl;\n+    return rendering::VisualPtr();\n+  }\n+\n   rendering::MeshPtr actorMesh = this->dataPtr->scene->CreateMesh(descriptor);\n   if (nullptr == actorMesh)\n   {\n~~~\n\nTo remove the hardcoded path, we'll need [this PR](#!/ignitionrobotics/ign-fuel-tools/pull-requests/101/support-actors/diff) on Ignition Fuel. With that PR, I can load [this actor](https://app.ignitionrobotics.org/chapulina/fuel/models/Walking%20actor) like this:\n\n~~~\n    <include>\n      <pose>0 0 1.3 0 0 0</pose>\n      <uri>https://fuel.ignitionrobotics.org/1.0/chapulina/models/Walking actor</uri>\n    </include>\n~~~\n\nUnfortunately, we don't support Fuel URLs directly on `<filename>` yet. So I think the best way for you to test custom models would be to create an account on Fuel and upload different models as you need them. Feel free to upload the DAE files from Gazebo classic and the BVH files from the CMU database.", "markup": "markdown", "html": "<p>We need to remove these hardcoded paths. In fact, they cause the simulation to crash for me. This fixes the crash:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r d9d17b04d669 src/rendering/SceneManager.cc</span>\n<span class=\"gd\">--- a/src/rendering/SceneManager.cc     Thu Aug 08 17:23:49 2019 +0800</span>\n<span class=\"gi\">+++ b/src/rendering/SceneManager.cc     Mon Aug 12 11:39:16 2019 -0700</span>\n<span class=\"gu\">@@ -477,7 +477,21 @@</span>\n   descriptor.meshName = _actor.SkinFilename();\n   common::MeshManager *meshManager = common::MeshManager::Instance();\n   descriptor.mesh = meshManager-&gt;Load(descriptor.meshName);\n<span class=\"gi\">+  if (nullptr == descriptor.mesh)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    ignerr &lt;&lt; &quot;Actor skin mesh [&quot; &lt;&lt; _actor.SkinFilename() &lt;&lt; &quot;] not found.&quot;</span>\n<span class=\"gi\">+           &lt;&lt; std::endl;</span>\n<span class=\"gi\">+    return rendering::VisualPtr();</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   common::SkeletonPtr meshSkel = descriptor.mesh-&gt;MeshSkeleton();\n<span class=\"gi\">+  if (nullptr == meshSkel)</span>\n<span class=\"gi\">+  {</span>\n<span class=\"gi\">+    ignerr &lt;&lt; &quot;Actor skin mesh [&quot; &lt;&lt; _actor.SkinFilename() &lt;&lt; &quot;] not found.&quot;</span>\n<span class=\"gi\">+           &lt;&lt; std::endl;</span>\n<span class=\"gi\">+    return rendering::VisualPtr();</span>\n<span class=\"gi\">+  }</span>\n<span class=\"gi\">+</span>\n   rendering::MeshPtr actorMesh = this-&gt;dataPtr-&gt;scene-&gt;CreateMesh(descriptor);\n   if (nullptr == actorMesh)\n   {\n</pre></div>\n\n\n<p>To remove the hardcoded path, we'll need <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-fuel-tools/pull-requests/101/support-actors/diff\" rel=\"nofollow\">this PR</a> on Ignition Fuel. With that PR, I can load <a data-is-external-link=\"true\" href=\"https://app.ignitionrobotics.org/chapulina/fuel/models/Walking%20actor\" rel=\"nofollow\">this actor</a> like this:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0 0 1.3 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;uri&gt;</span>https://fuel.ignitionrobotics.org/1.0/chapulina/models/Walking actor<span class=\"nt\">&lt;/uri&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>\n\n\n<p>Unfortunately, we don't support Fuel URLs directly on <code>&lt;filename&gt;</code> yet. So I think the best way for you to test custom models would be to create an account on Fuel and upload different models as you need them. Feel free to upload the DAE files from Gazebo classic and the BVH files from the CMU database.</p>", "type": "rendered"}, "created_on": "2019-08-12T18:46:25.861215+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 145, "from": null, "outdated": true, "path": "examples/worlds/actor.sdf"}, "updated_on": "2019-08-12T18:46:25.872309+00:00", "type": "pullrequest_comment", "id": 112810604}