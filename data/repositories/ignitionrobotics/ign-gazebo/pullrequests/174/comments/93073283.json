{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/174/comments/93073283.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:4bd69e9c83cb..b1f6ef6b4ba7?path=src%2Fsystems%2Fcontact%2FContact.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/174/_/diff#comment-93073283"}}, "parent": {"id": 93071842, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/174/comments/93071842.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/174/_/diff#comment-93071842"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 174, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/174.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/174"}}, "title": "[Acropolis] Add contact sensor"}, "content": {"raw": "So I did a quick test on SDF, and it seems that `HasElement` is doing the right thing, but `Get` isn't doing what I would expect, see the following test:\n\n~~~\ndiff -r 301cecc99c22 src/Root_TEST.cc\n--- a/src/Root_TEST.cc  Thu Jan 31 20:37:41 2019 +0000\n+++ b/src/Root_TEST.cc  Tue Feb 26 18:10:10 2019 -0800\n@@ -23,6 +23,7 @@\n #include \"sdf/Light.hh\"\n #include \"sdf/Model.hh\"\n #include \"sdf/Root.hh\"\n+#include \"sdf/Sensor.hh\"\n \n /////////////////////////////////////////////////\n TEST(DOMRoot, Construction)\n@@ -63,6 +64,13 @@\n     \"           </box>\"\n     \"         </geometry>\"\n     \"       </collision>\"\n+    \"       <sensor name='sensor_contact' type='contact'>\"\n+    \"         <contact>\"\n+    \"           <collision>box_col</collision>\"\n+    \"         </contact>\"\n+    \"         <always_on>1</always_on>\"\n+    \"         <update_rate>100</update_rate>\"\n+    \"       </sensor>\"\n     \"     </link>\"\n     \"   </model>\"\n     \"   <light type='directional' name='sun'>\"\n@@ -95,6 +103,16 @@\n   EXPECT_NE(nullptr, collision->Element());\n   EXPECT_EQ(\"box_col\", collision->Name());\n \n+  const sdf::Sensor *sensor = link->SensorByIndex(0);\n+  ASSERT_NE(nullptr, sensor);\n+  EXPECT_EQ(\"sensor_contact\", sensor->Name());\n+  ASSERT_NE(nullptr, sensor->Element());\n+  EXPECT_TRUE(sensor->Element()->HasElement(\"always_on\"));\n+  EXPECT_FALSE(sensor->Element()->HasElement(\"topic\"));\n+  auto [topic, success] = sensor->Element()->Get<std::string>(\"topic\", \"default_value\");\n+  EXPECT_EQ(\"default_value\", topic);\n+  EXPECT_FALSE(success);\n+\n   EXPECT_TRUE(root.LightNameExists(\"sun\"));\n   EXPECT_EQ(1u, root.LightCount());\n   const sdf::Light *light = root.LightByIndex(0);\n~~~\n\nFails for `Get`, but not for `HasElement`:\n\n~~~\n[ RUN      ] DOMRoot.StringParse\n/home/developer/sdformat/src/Root_TEST.cc:113: Failure\nExpected equality of these values:\n  \"default_value\"\n  topic\n    Which is: \"__default__\"\n/home/developer/sdformat/src/Root_TEST.cc:114: Failure\nValue of: success\n  Actual: true\nExpected: false\n[  FAILED  ] DOMRoot.StringParse (44 ms)\n~~~", "markup": "markdown", "html": "<p>So I did a quick test on SDF, and it seems that <code>HasElement</code> is doing the right thing, but <code>Get</code> isn't doing what I would expect, see the following test:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 301cecc99c22 src/Root_TEST.cc</span>\n<span class=\"gd\">--- a/src/Root_TEST.cc  Thu Jan 31 20:37:41 2019 +0000</span>\n<span class=\"gi\">+++ b/src/Root_TEST.cc  Tue Feb 26 18:10:10 2019 -0800</span>\n<span class=\"gu\">@@ -23,6 +23,7 @@</span>\n #include &quot;sdf/Light.hh&quot;\n #include &quot;sdf/Model.hh&quot;\n #include &quot;sdf/Root.hh&quot;\n<span class=\"gi\">+#include &quot;sdf/Sensor.hh&quot;</span>\n\n /////////////////////////////////////////////////\n TEST(DOMRoot, Construction)\n<span class=\"gu\">@@ -63,6 +64,13 @@</span>\n     &quot;           &lt;/box&gt;&quot;\n     &quot;         &lt;/geometry&gt;&quot;\n     &quot;       &lt;/collision&gt;&quot;\n<span class=\"gi\">+    &quot;       &lt;sensor name=&#39;sensor_contact&#39; type=&#39;contact&#39;&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;contact&gt;&quot;</span>\n<span class=\"gi\">+    &quot;           &lt;collision&gt;box_col&lt;/collision&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;/contact&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;always_on&gt;1&lt;/always_on&gt;&quot;</span>\n<span class=\"gi\">+    &quot;         &lt;update_rate&gt;100&lt;/update_rate&gt;&quot;</span>\n<span class=\"gi\">+    &quot;       &lt;/sensor&gt;&quot;</span>\n     &quot;     &lt;/link&gt;&quot;\n     &quot;   &lt;/model&gt;&quot;\n     &quot;   &lt;light type=&#39;directional&#39; name=&#39;sun&#39;&gt;&quot;\n<span class=\"gu\">@@ -95,6 +103,16 @@</span>\n   EXPECT_NE(nullptr, collision-&gt;Element());\n   EXPECT_EQ(&quot;box_col&quot;, collision-&gt;Name());\n\n<span class=\"gi\">+  const sdf::Sensor *sensor = link-&gt;SensorByIndex(0);</span>\n<span class=\"gi\">+  ASSERT_NE(nullptr, sensor);</span>\n<span class=\"gi\">+  EXPECT_EQ(&quot;sensor_contact&quot;, sensor-&gt;Name());</span>\n<span class=\"gi\">+  ASSERT_NE(nullptr, sensor-&gt;Element());</span>\n<span class=\"gi\">+  EXPECT_TRUE(sensor-&gt;Element()-&gt;HasElement(&quot;always_on&quot;));</span>\n<span class=\"gi\">+  EXPECT_FALSE(sensor-&gt;Element()-&gt;HasElement(&quot;topic&quot;));</span>\n<span class=\"gi\">+  auto [topic, success] = sensor-&gt;Element()-&gt;Get&lt;std::string&gt;(&quot;topic&quot;, &quot;default_value&quot;);</span>\n<span class=\"gi\">+  EXPECT_EQ(&quot;default_value&quot;, topic);</span>\n<span class=\"gi\">+  EXPECT_FALSE(success);</span>\n<span class=\"gi\">+</span>\n   EXPECT_TRUE(root.LightNameExists(&quot;sun&quot;));\n   EXPECT_EQ(1u, root.LightCount());\n   const sdf::Light *light = root.LightByIndex(0);\n</pre></div>\n\n\n<p>Fails for <code>Get</code>, but not for <code>HasElement</code>:</p>\n<div class=\"codehilite\"><pre><span></span>[ RUN      ] DOMRoot.StringParse\n/home/developer/sdformat/src/Root_TEST.cc:113: Failure\nExpected equality of these values:\n  &quot;default_value&quot;\n  topic\n    Which is: &quot;__default__&quot;\n/home/developer/sdformat/src/Root_TEST.cc:114: Failure\nValue of: success\n  Actual: true\nExpected: false\n[  FAILED  ] DOMRoot.StringParse (44 ms)\n</pre></div>", "type": "rendered"}, "created_on": "2019-02-27T02:12:41.406362+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 115, "from": null, "outdated": true, "path": "src/systems/contact/Contact.cc"}, "updated_on": "2019-02-27T02:12:41.415142+00:00", "type": "pullrequest_comment", "id": 93073283}