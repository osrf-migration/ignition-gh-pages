{"rendered": {"description": {"raw": "`EachNew` gets all entities that have been created since the last simulation step. Likewise, `EachErased` gets all entities that are scheduled to be erased. These methods can be used by a system to get notified when new entities are created or existing entities are erased. The notification is synchronized with simulation cycles, i.e, these are not events. Entities that qualify for `EachNew` or `EachErased` are cleared at the end of a simulation step. Thus an entity is \"new\" or \"erased\" for only one simulation step.\r\n\r\nThis also means that if an entity is created in the \"Update\" phase, systems in the next \"PreUpdate\" phase will not be notified of the new entity because the next \"PreUpdate\" occurs in a new simulation step. Same applied for entities scheduled to be erased.\r\n\r\n`EachNew` does not return existing (not new) entities if a new component is added to them. We could add another function for doing that, but I just wanted to make it clear that `EachNew` gets only newly created entities.", "markup": "markdown", "html": "<p><code>EachNew</code> gets all entities that have been created since the last simulation step. Likewise, <code>EachErased</code> gets all entities that are scheduled to be erased. These methods can be used by a system to get notified when new entities are created or existing entities are erased. The notification is synchronized with simulation cycles, i.e, these are not events. Entities that qualify for <code>EachNew</code> or <code>EachErased</code> are cleared at the end of a simulation step. Thus an entity is \"new\" or \"erased\" for only one simulation step.</p>\n<p>This also means that if an entity is created in the \"Update\" phase, systems in the next \"PreUpdate\" phase will not be notified of the new entity because the next \"PreUpdate\" occurs in a new simulation step. Same applied for entities scheduled to be erased.</p>\n<p><code>EachNew</code> does not return existing (not new) entities if a new component is added to them. We could add another function for doing that, but I just wanted to make it clear that <code>EachNew</code> gets only newly created entities.</p>", "type": "rendered"}, "title": {"raw": "EachNew and EachErased", "markup": "markdown", "html": "<p>EachNew and EachErased</p>", "type": "rendered"}}, "type": "pullrequest", "description": "`EachNew` gets all entities that have been created since the last simulation step. Likewise, `EachErased` gets all entities that are scheduled to be erased. These methods can be used by a system to get notified when new entities are created or existing entities are erased. The notification is synchronized with simulation cycles, i.e, these are not events. Entities that qualify for `EachNew` or `EachErased` are cleared at the end of a simulation step. Thus an entity is \"new\" or \"erased\" for only one simulation step.\r\n\r\nThis also means that if an entity is created in the \"Update\" phase, systems in the next \"PreUpdate\" phase will not be notified of the new entity because the next \"PreUpdate\" occurs in a new simulation step. Same applied for entities scheduled to be erased.\r\n\r\n`EachNew` does not return existing (not new) entities if a new component is added to them. We could add another function for doing that, but I just wanted to make it clear that `EachNew` gets only newly created entities.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:5046c52c25aa%0Da64683299255?from_pullrequest_id=92"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/92.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/92"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:5046c52c25aa%0Da64683299255?from_pullrequest_id=92"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/92/statuses_page=1.json"}}, "title": "EachNew and EachErased", "close_source_branch": true, "reviewers": [{"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}], "id": 92, "destination": {"commit": {"hash": "a64683299255", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/a64683299255.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/a64683299255"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "created_on": "2018-12-07T17:49:03.766758+00:00", "summary": {"raw": "`EachNew` gets all entities that have been created since the last simulation step. Likewise, `EachErased` gets all entities that are scheduled to be erased. These methods can be used by a system to get notified when new entities are created or existing entities are erased. The notification is synchronized with simulation cycles, i.e, these are not events. Entities that qualify for `EachNew` or `EachErased` are cleared at the end of a simulation step. Thus an entity is \"new\" or \"erased\" for only one simulation step.\r\n\r\nThis also means that if an entity is created in the \"Update\" phase, systems in the next \"PreUpdate\" phase will not be notified of the new entity because the next \"PreUpdate\" occurs in a new simulation step. Same applied for entities scheduled to be erased.\r\n\r\n`EachNew` does not return existing (not new) entities if a new component is added to them. We could add another function for doing that, but I just wanted to make it clear that `EachNew` gets only newly created entities.", "markup": "markdown", "html": "<p><code>EachNew</code> gets all entities that have been created since the last simulation step. Likewise, <code>EachErased</code> gets all entities that are scheduled to be erased. These methods can be used by a system to get notified when new entities are created or existing entities are erased. The notification is synchronized with simulation cycles, i.e, these are not events. Entities that qualify for <code>EachNew</code> or <code>EachErased</code> are cleared at the end of a simulation step. Thus an entity is \"new\" or \"erased\" for only one simulation step.</p>\n<p>This also means that if an entity is created in the \"Update\" phase, systems in the next \"PreUpdate\" phase will not be notified of the new entity because the next \"PreUpdate\" occurs in a new simulation step. Same applied for entities scheduled to be erased.</p>\n<p><code>EachNew</code> does not return existing (not new) entities if a new component is added to them. We could add another function for doing that, but I just wanted to make it clear that <code>EachNew</code> gets only newly created entities.</p>", "type": "rendered"}, "source": {"commit": {"hash": "3910c9f35296", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3910c9f35296.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3910c9f35296"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "each_new_erased"}}, "comment_count": 18, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-12-07T18:02:41.910025+00:00", "type": "participant", "approved": false, "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}}, {"role": "PARTICIPANT", "participated_on": "2018-12-17T23:23:04.459216+00:00", "type": "participant", "approved": false, "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}}, {"role": "PARTICIPANT", "participated_on": "2018-12-07T18:07:18.978915+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2018-12-18T01:47:17.945502+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2018-12-19T01:40:18.676382+00:00", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "merge_commit": {"hash": "5046c52c25aa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/5046c52c25aa.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/5046c52c25aa"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}