{"rendered": {"description": {"raw": "Distributed simulation will make use of levels to tell when performers should be simulated in the same secondary, so this PR turns levels on every time distributed simulation is on.\r\n\r\nSimulation still runs if levels are not specified, which is the same case if you set `--levels` but don't define `<level>`s in the SDF, and the user sees a printed error.\r\n\r\n---\r\n\r\nI'm updating the design document, but the rough mechanism will be:\r\n\r\n1. Primary distributes performers across secondaries making sure performers in the same level end up in the same secondary.\r\n2. Secondaries stick with these performers even if they change levels...\r\n3. ... unless a performer enter a level which is being simulated by another secondary. In this case, the primary decides which secondary should stay with that level, and transfers the performer's state accordingly.\r\n\r\n---\r\n\r\nI also updated the distributed demos to run as fast as possible \\(you know... that's the whole point...\\), and added standalone examples so that it's easy to compare distributed vs standalone.\r\n\r\nHere's roughly the RTF I'm currently getting. I'm running all instances in the same machine though, so it's not the intended use case.\r\n\r\n| Example | Distributed | Standalone |\r\n| --- | --- | --- |\r\n| `distributed` | 300~400% | 1100~1200% |\r\n| `distributed_levels` | 300~400% | 600~700% |", "markup": "markdown", "html": "<p>Distributed simulation will make use of levels to tell when performers should be simulated in the same secondary, so this PR turns levels on every time distributed simulation is on.</p>\n<p>Simulation still runs if levels are not specified, which is the same case if you set <code>--levels</code> but don't define <code>&lt;level&gt;</code>s in the SDF, and the user sees a printed error.</p>\n<hr />\n<p>I'm updating the design document, but the rough mechanism will be:</p>\n<ol>\n<li>Primary distributes performers across secondaries making sure performers in the same level end up in the same secondary.</li>\n<li>Secondaries stick with these performers even if they change levels...</li>\n<li>... unless a performer enter a level which is being simulated by another secondary. In this case, the primary decides which secondary should stay with that level, and transfers the performer's state accordingly.</li>\n</ol>\n<hr />\n<p>I also updated the distributed demos to run as fast as possible (you know... that's the whole point...), and added standalone examples so that it's easy to compare distributed vs standalone.</p>\n<p>Here's roughly the RTF I'm currently getting. I'm running all instances in the same machine though, so it's not the intended use case.</p>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th>Distributed</th>\n<th>Standalone</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>distributed</code></td>\n<td>300~400%</td>\n<td>1100~1200%</td>\n</tr>\n<tr>\n<td><code>distributed_levels</code></td>\n<td>300~400%</td>\n<td>600~700%</td>\n</tr>\n</tbody>\n</table>", "type": "rendered"}, "title": {"raw": "[Acropolis] Distributed implies levels", "markup": "markdown", "html": "<p>[Acropolis] Distributed implies levels</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Distributed simulation will make use of levels to tell when performers should be simulated in the same secondary, so this PR turns levels on every time distributed simulation is on.\r\n\r\nSimulation still runs if levels are not specified, which is the same case if you set `--levels` but don't define `<level>`s in the SDF, and the user sees a printed error.\r\n\r\n---\r\n\r\nI'm updating the design document, but the rough mechanism will be:\r\n\r\n1. Primary distributes performers across secondaries making sure performers in the same level end up in the same secondary.\r\n2. Secondaries stick with these performers even if they change levels...\r\n3. ... unless a performer enter a level which is being simulated by another secondary. In this case, the primary decides which secondary should stay with that level, and transfers the performer's state accordingly.\r\n\r\n---\r\n\r\nI also updated the distributed demos to run as fast as possible \\(you know... that's the whole point...\\), and added standalone examples so that it's easy to compare distributed vs standalone.\r\n\r\nHere's roughly the RTF I'm currently getting. I'm running all instances in the same machine though, so it's not the intended use case.\r\n\r\n| Example | Distributed | Standalone |\r\n| --- | --- | --- |\r\n| `distributed` | 300~400% | 1100~1200% |\r\n| `distributed_levels` | 300~400% | 600~700% |", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:99701d2c08e8%0D0a020ccbb69d?from_pullrequest_id=243"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/243.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/243"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:99701d2c08e8%0D0a020ccbb69d?from_pullrequest_id=243"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/243/statuses_page=1.json"}}, "title": "[Acropolis] Distributed implies levels", "close_source_branch": true, "reviewers": [{"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}], "id": 243, "destination": {"commit": {"hash": "0a020ccbb69d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0a020ccbb69d.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0a020ccbb69d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo1"}}, "created_on": "2019-03-29T02:29:11.250933+00:00", "summary": {"raw": "Distributed simulation will make use of levels to tell when performers should be simulated in the same secondary, so this PR turns levels on every time distributed simulation is on.\r\n\r\nSimulation still runs if levels are not specified, which is the same case if you set `--levels` but don't define `<level>`s in the SDF, and the user sees a printed error.\r\n\r\n---\r\n\r\nI'm updating the design document, but the rough mechanism will be:\r\n\r\n1. Primary distributes performers across secondaries making sure performers in the same level end up in the same secondary.\r\n2. Secondaries stick with these performers even if they change levels...\r\n3. ... unless a performer enter a level which is being simulated by another secondary. In this case, the primary decides which secondary should stay with that level, and transfers the performer's state accordingly.\r\n\r\n---\r\n\r\nI also updated the distributed demos to run as fast as possible \\(you know... that's the whole point...\\), and added standalone examples so that it's easy to compare distributed vs standalone.\r\n\r\nHere's roughly the RTF I'm currently getting. I'm running all instances in the same machine though, so it's not the intended use case.\r\n\r\n| Example | Distributed | Standalone |\r\n| --- | --- | --- |\r\n| `distributed` | 300~400% | 1100~1200% |\r\n| `distributed_levels` | 300~400% | 600~700% |", "markup": "markdown", "html": "<p>Distributed simulation will make use of levels to tell when performers should be simulated in the same secondary, so this PR turns levels on every time distributed simulation is on.</p>\n<p>Simulation still runs if levels are not specified, which is the same case if you set <code>--levels</code> but don't define <code>&lt;level&gt;</code>s in the SDF, and the user sees a printed error.</p>\n<hr />\n<p>I'm updating the design document, but the rough mechanism will be:</p>\n<ol>\n<li>Primary distributes performers across secondaries making sure performers in the same level end up in the same secondary.</li>\n<li>Secondaries stick with these performers even if they change levels...</li>\n<li>... unless a performer enter a level which is being simulated by another secondary. In this case, the primary decides which secondary should stay with that level, and transfers the performer's state accordingly.</li>\n</ol>\n<hr />\n<p>I also updated the distributed demos to run as fast as possible (you know... that's the whole point...), and added standalone examples so that it's easy to compare distributed vs standalone.</p>\n<p>Here's roughly the RTF I'm currently getting. I'm running all instances in the same machine though, so it's not the intended use case.</p>\n<table>\n<thead>\n<tr>\n<th>Example</th>\n<th>Distributed</th>\n<th>Standalone</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>distributed</code></td>\n<td>300~400%</td>\n<td>1100~1200%</td>\n</tr>\n<tr>\n<td><code>distributed_levels</code></td>\n<td>300~400%</td>\n<td>600~700%</td>\n</tr>\n</tbody>\n</table>", "type": "rendered"}, "source": {"commit": {"hash": "ee00b1d6bdc2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ee00b1d6bdc2.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ee00b1d6bdc2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "distributed_always_levels"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-04-02T15:31:17.240005+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}}], "reason": "", "updated_on": "2019-04-02T16:45:18.751138+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "99701d2c08e8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/99701d2c08e8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/99701d2c08e8"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}