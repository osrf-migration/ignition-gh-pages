{"rendered": {"reason": {"raw": "Declining this for now, we'll revisit later", "markup": "markdown", "html": "<p>Declining this for now, we'll revisit later</p>", "type": "rendered"}, "description": {"raw": "This is the beginning of the feature that allows transplanting the state of a performer from one secondary to another.\r\n\r\n## Try it out\r\n\r\nRun the `distributed_levels` demo:\r\n\r\nhttps://youtu.be/3plWn3Riizw\r\n\r\n* The top terminal has the primary\r\n* The middle terminal has the secondary which is simulating the green sphere (performer 2)\r\n* The bottom terminal has the secondary which is simulating the yellow box (performer 3)\r\n* Once the green sphere enters level 10, the primary detects that both entities are in the same level, so it needs to transplant one of them\r\n* Since moving either entity would require transplanting the same number of entities (1), the exact choice is undefined - the yellow box gets picked.\r\n* The box is transplanted from the bottom to the middle, and the bottom is left idle\r\n* By the time the shapes reach the bottom of the slope, they're in separate levels again. **TODO** transplant one of them to the idle secondary.\r\n\r\n## TODO\r\n\r\nBefore merging:\r\n\r\n* Tests! The current logic is a bit clunky so I imagine there are many corner cases not covered yet.\r\n\r\nFuture:\r\n\r\n* Redistribute performers to idle secondaries.\r\n* Primary shouldn't need to wait for idle secondaries when stepping\r\n* Keep velocity and acceleration in components, and set them as the entity is spawned into a new secondary. Currently it's visible that the yellow box slows down when it is transplanted.", "markup": "markdown", "html": "<p>This is the beginning of the feature that allows transplanting the state of a performer from one secondary to another.</p>\n<h2 id=\"markdown-header-try-it-out\">Try it out</h2>\n<p>Run the <code>distributed_levels</code> demo:</p>\n<p><a href=\"https://youtu.be/3plWn3Riizw\" rel=\"nofollow\" class=\"ap-connect-link\">https://youtu.be/3plWn3Riizw</a></p>\n<ul>\n<li>The top terminal has the primary</li>\n<li>The middle terminal has the secondary which is simulating the green sphere (performer 2)</li>\n<li>The bottom terminal has the secondary which is simulating the yellow box (performer 3)</li>\n<li>Once the green sphere enters level 10, the primary detects that both entities are in the same level, so it needs to transplant one of them</li>\n<li>Since moving either entity would require transplanting the same number of entities (1), the exact choice is undefined - the yellow box gets picked.</li>\n<li>The box is transplanted from the bottom to the middle, and the bottom is left idle</li>\n<li>By the time the shapes reach the bottom of the slope, they're in separate levels again. <strong>TODO</strong> transplant one of them to the idle secondary.</li>\n</ul>\n<h2 id=\"markdown-header-todo\">TODO</h2>\n<p>Before merging:</p>\n<ul>\n<li>Tests! The current logic is a bit clunky so I imagine there are many corner cases not covered yet.</li>\n</ul>\n<p>Future:</p>\n<ul>\n<li>Redistribute performers to idle secondaries.</li>\n<li>Primary shouldn't need to wait for idle secondaries when stepping</li>\n<li>Keep velocity and acceleration in components, and set them as the entity is spawned into a new secondary. Currently it's visible that the yellow box slows down when it is transplanted.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "[Blueprint] [WIP] Entity transplant in distributed sim", "markup": "markdown", "html": "<p>[Blueprint] [WIP] Entity transplant in distributed sim</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This is the beginning of the feature that allows transplanting the state of a performer from one secondary to another.\r\n\r\n## Try it out\r\n\r\nRun the `distributed_levels` demo:\r\n\r\nhttps://youtu.be/3plWn3Riizw\r\n\r\n* The top terminal has the primary\r\n* The middle terminal has the secondary which is simulating the green sphere (performer 2)\r\n* The bottom terminal has the secondary which is simulating the yellow box (performer 3)\r\n* Once the green sphere enters level 10, the primary detects that both entities are in the same level, so it needs to transplant one of them\r\n* Since moving either entity would require transplanting the same number of entities (1), the exact choice is undefined - the yellow box gets picked.\r\n* The box is transplanted from the bottom to the middle, and the bottom is left idle\r\n* By the time the shapes reach the bottom of the slope, they're in separate levels again. **TODO** transplant one of them to the idle secondary.\r\n\r\n## TODO\r\n\r\nBefore merging:\r\n\r\n* Tests! The current logic is a bit clunky so I imagine there are many corner cases not covered yet.\r\n\r\nFuture:\r\n\r\n* Redistribute performers to idle secondaries.\r\n* Primary shouldn't need to wait for idle secondaries when stepping\r\n* Keep velocity and acceleration in components, and set them as the entity is spawned into a new secondary. Currently it's visible that the yellow box slows down when it is transplanted.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:cb42cf0fd664%0D937f186fd5fc?from_pullrequest_id=294"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/294.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/294"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:cb42cf0fd664%0D937f186fd5fc?from_pullrequest_id=294"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/294/statuses_page=1.json"}}, "title": "[Blueprint] [WIP] Entity transplant in distributed sim", "close_source_branch": false, "reviewers": [], "id": 294, "destination": {"commit": {"hash": "937f186fd5fc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/937f186fd5fc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/937f186fd5fc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ign-gazebo2"}}, "created_on": "2019-04-26T18:16:08.847954+00:00", "summary": {"raw": "This is the beginning of the feature that allows transplanting the state of a performer from one secondary to another.\r\n\r\n## Try it out\r\n\r\nRun the `distributed_levels` demo:\r\n\r\nhttps://youtu.be/3plWn3Riizw\r\n\r\n* The top terminal has the primary\r\n* The middle terminal has the secondary which is simulating the green sphere (performer 2)\r\n* The bottom terminal has the secondary which is simulating the yellow box (performer 3)\r\n* Once the green sphere enters level 10, the primary detects that both entities are in the same level, so it needs to transplant one of them\r\n* Since moving either entity would require transplanting the same number of entities (1), the exact choice is undefined - the yellow box gets picked.\r\n* The box is transplanted from the bottom to the middle, and the bottom is left idle\r\n* By the time the shapes reach the bottom of the slope, they're in separate levels again. **TODO** transplant one of them to the idle secondary.\r\n\r\n## TODO\r\n\r\nBefore merging:\r\n\r\n* Tests! The current logic is a bit clunky so I imagine there are many corner cases not covered yet.\r\n\r\nFuture:\r\n\r\n* Redistribute performers to idle secondaries.\r\n* Primary shouldn't need to wait for idle secondaries when stepping\r\n* Keep velocity and acceleration in components, and set them as the entity is spawned into a new secondary. Currently it's visible that the yellow box slows down when it is transplanted.", "markup": "markdown", "html": "<p>This is the beginning of the feature that allows transplanting the state of a performer from one secondary to another.</p>\n<h2 id=\"markdown-header-try-it-out\">Try it out</h2>\n<p>Run the <code>distributed_levels</code> demo:</p>\n<p><a href=\"https://youtu.be/3plWn3Riizw\" rel=\"nofollow\" class=\"ap-connect-link\">https://youtu.be/3plWn3Riizw</a></p>\n<ul>\n<li>The top terminal has the primary</li>\n<li>The middle terminal has the secondary which is simulating the green sphere (performer 2)</li>\n<li>The bottom terminal has the secondary which is simulating the yellow box (performer 3)</li>\n<li>Once the green sphere enters level 10, the primary detects that both entities are in the same level, so it needs to transplant one of them</li>\n<li>Since moving either entity would require transplanting the same number of entities (1), the exact choice is undefined - the yellow box gets picked.</li>\n<li>The box is transplanted from the bottom to the middle, and the bottom is left idle</li>\n<li>By the time the shapes reach the bottom of the slope, they're in separate levels again. <strong>TODO</strong> transplant one of them to the idle secondary.</li>\n</ul>\n<h2 id=\"markdown-header-todo\">TODO</h2>\n<p>Before merging:</p>\n<ul>\n<li>Tests! The current logic is a bit clunky so I imagine there are many corner cases not covered yet.</li>\n</ul>\n<p>Future:</p>\n<ul>\n<li>Redistribute performers to idle secondaries.</li>\n<li>Primary shouldn't need to wait for idle secondaries when stepping</li>\n<li>Keep velocity and acceleration in components, and set them as the entity is spawned into a new secondary. Currently it's visible that the yellow box slows down when it is transplanted.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "cb42cf0fd664", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/cb42cf0fd664.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/cb42cf0fd664"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "distributed_transfer"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [], "reason": "Declining this for now, we'll revisit later", "updated_on": "2019-11-21T19:54:32.789420+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": null, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}