{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/109/comments/87321647.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/109/_/diff#comment-87321647"}}, "parent": {"id": 86835229, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/109/comments/86835229.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/109/_/diff#comment-86835229"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 109, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/109.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/109"}}, "title": "[WIP] Mesh support"}, "content": {"raw": "I looked into the performance issue. What I found on my computer is that the low RTF is only happening during unstable phases of collision, i.e. the LCP solver is dealing with a lot of shifting contact points on curved surfaces, which makes for a difficult LCP to resolve.\n\nOnce the ducks have both settled and are at rest on the plane, the RTF goes back to 100% for me.\n\nI think this is reasonable behavior for collisions with a relatively fine mesh. If the temporary performance drop is a pressing concern, I can look into tuning some of the parameters that affect collision performance, like the max number of contact points. But I think that kind of tuning is going to be very situation-dependent, so rather than trying to search for an \u201cideal\u201d default, we should focus on exposing the parameters to the end-users so they can be easily tuned for each scenario.", "markup": "markdown", "html": "<p>I looked into the performance issue. What I found on my computer is that the low RTF is only happening during unstable phases of collision, i.e. the LCP solver is dealing with a lot of shifting contact points on curved surfaces, which makes for a difficult LCP to resolve.</p>\n<p>Once the ducks have both settled and are at rest on the plane, the RTF goes back to 100% for me.</p>\n<p>I think this is reasonable behavior for collisions with a relatively fine mesh. If the temporary performance drop is a pressing concern, I can look into tuning some of the parameters that affect collision performance, like the max number of contact points. But I think that kind of tuning is going to be very situation-dependent, so rather than trying to search for an \u201cideal\u201d default, we should focus on exposing the parameters to the end-users so they can be easily tuned for each scenario.</p>", "type": "rendered"}, "created_on": "2019-01-08T09:13:15.256020+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-01-08T09:13:15.271641+00:00", "type": "pullrequest_comment", "id": 87321647}