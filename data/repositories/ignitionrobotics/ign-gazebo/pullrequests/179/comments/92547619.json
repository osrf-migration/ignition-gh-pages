{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/179/comments/92547619.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:7860f89687d7..347c38a0a61c?path=src%2Fsystems%2Fphysics%2FPhysics.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/179/_/diff#comment-92547619"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 179, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/179.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/179"}}, "title": "[Acropolis] Bounding box info"}, "content": {"raw": "This would be a nice use case for [asynchronous service responses](#!/ignitionrobotics/ign-transport/issues/40/support-service-responses-beyond-the). We would also need to treat the component as optional, which is already possible.\n\nSo we could do something like this:\n\n1. Simulation starts, no models have `BoundingBox` components yet, so `Physics` doesn't calculate them.\n1. User sends request, providing a callback to be called on response.\n1. `SceneBroadcaster` receives the request, but doesn't call the response callback yet. Instead, it creates a new `BoundingBox` component for the given model.\n1. `Physics` sees there's now a BB component and fills it.\n1. `SceneBroadcaster` gets the info from the component, publishes the response to the user, and deletes the component.\n1. The model doesn't have a BB anymore, so physics will not fill it from now on.", "markup": "markdown", "html": "<p>This would be a nice use case for <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/issues/40/support-service-responses-beyond-the\" rel=\"nofollow\">asynchronous service responses</a>. We would also need to treat the component as optional, which is already possible.</p>\n<p>So we could do something like this:</p>\n<ol>\n<li>Simulation starts, no models have <code>BoundingBox</code> components yet, so <code>Physics</code> doesn't calculate them.</li>\n<li>User sends request, providing a callback to be called on response.</li>\n<li><code>SceneBroadcaster</code> receives the request, but doesn't call the response callback yet. Instead, it creates a new <code>BoundingBox</code> component for the given model.</li>\n<li><code>Physics</code> sees there's now a BB component and fills it.</li>\n<li><code>SceneBroadcaster</code> gets the info from the component, publishes the response to the user, and deletes the component.</li>\n<li>The model doesn't have a BB anymore, so physics will not fill it from now on.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-02-22T01:31:55.958380+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 581, "from": null, "outdated": true, "path": "src/systems/physics/Physics.cc"}, "updated_on": "2019-02-22T01:31:55.964546+00:00", "type": "pullrequest_comment", "id": 92547619}