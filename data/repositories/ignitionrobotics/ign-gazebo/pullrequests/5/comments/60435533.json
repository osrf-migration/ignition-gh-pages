{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/5/comments/60435533.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/5/_/diff#comment-60435533"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/5"}}, "title": "Server"}, "content": {"raw": "I've figured out the cause of the linking error that I mentioned during today's meeting.\n\nI have `sdf4` installed, which depends on `ign-math2`. However, `ign-msgs1` uses `ign-math4` which introduced the versioned inline namespace `v4`.\n\nSince `sdf4` has the include directory `ignition/math2/` as part of its interface compile flags, this project was looking for `ign-math` headers in the `ign-math2` include directories. This means that `ignition::msgs::Set(..., ignition::math::Pose3d)` in the `ign-msgs` header was being interpreted as using the `Pose3d` class that's defined in `ign-msgs2`, but the actual `ign-msgs1` library only defines a function `ignition::msgs::Set(..., ignition::math::v4::Pose3d)`.\n\nThis is actually a good failure which resulted from our addition of inline namespaces. Without the inline namespace, it probably would have compiled and linked without any complaints, but if the definition of the class had changed between `ign-math2` and `ign-math4`, then we'd have errors, data corruption, or undefined behavior during runtime.", "markup": "markdown", "html": "<p>I've figured out the cause of the linking error that I mentioned during today's meeting.</p>\n<p>I have <code>sdf4</code> installed, which depends on <code>ign-math2</code>. However, <code>ign-msgs1</code> uses <code>ign-math4</code> which introduced the versioned inline namespace <code>v4</code>.</p>\n<p>Since <code>sdf4</code> has the include directory <code>ignition/math2/</code> as part of its interface compile flags, this project was looking for <code>ign-math</code> headers in the <code>ign-math2</code> include directories. This means that <code>ignition::msgs::Set(..., ignition::math::Pose3d)</code> in the <code>ign-msgs</code> header was being interpreted as using the <code>Pose3d</code> class that's defined in <code>ign-msgs2</code>, but the actual <code>ign-msgs1</code> library only defines a function <code>ignition::msgs::Set(..., ignition::math::v4::Pose3d)</code>.</p>\n<p>This is actually a good failure which resulted from our addition of inline namespaces. Without the inline namespace, it probably would have compiled and linked without any complaints, but if the definition of the class had changed between <code>ign-math2</code> and <code>ign-math4</code>, then we'd have errors, data corruption, or undefined behavior during runtime.</p>", "type": "rendered"}, "created_on": "2018-04-02T19:17:07.645880+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-04-02T19:47:04.518422+00:00", "type": "pullrequest_comment", "id": 60435533}