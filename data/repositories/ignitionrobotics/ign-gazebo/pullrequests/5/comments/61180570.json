{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/5/comments/61180570.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:8731b17ae241..33c66560ff24?path=src%2FServerPrivate.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/5/_/diff#comment-61180570"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/5.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/5"}}, "title": "Server"}, "content": {"raw": "I'm curious why we're unlocking before updating the systems and then locking again, do we not want the mutex to be locked while the systems are being updated? Right now it looks like the mutex is only protecting the `running` variable, but since that's atomic, it shouldn't need protecting, right?", "markup": "markdown", "html": "<p>I'm curious why we're unlocking before updating the systems and then locking again, do we not want the mutex to be locked while the systems are being updated? Right now it looks like the mutex is only protecting the <code>running</code> variable, but since that's atomic, it shouldn't need protecting, right?</p>", "type": "rendered"}, "created_on": "2018-04-10T18:09:20.669880+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 70, "from": null, "outdated": true, "path": "src/ServerPrivate.cc"}, "updated_on": "2018-04-10T18:09:20.673799+00:00", "type": "pullrequest_comment", "id": 61180570}