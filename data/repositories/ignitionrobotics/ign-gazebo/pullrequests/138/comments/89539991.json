{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/138/comments/89539991.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/138/_/diff#comment-89539991"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 138, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/138.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/138"}}, "title": "[A-3] Dockerfile and supporting scripts for building ign-gazebo"}, "content": {"raw": "Some thoughts about these changes:\n\n* I'm not a big fan of hosting infra stuff in the software repositories. I know is pretty convenient for the people using them but is a hell to maintain. It's true that the use of pipelines is already doing it, I would like to reduce the code hosted in pipelines instead of adding more. A possible solution would be to move chunks of code to release-tools \\(or any other centralized place\\) and use the code from there, depending on the flexibility of the pipelines. I'm speaking for example of coding `common_deps` \\(or other dependencies\\) inside this repo instead of a centralized place.\n*  The way of easily using a docker container for development or distributing code has been explored lately at least in two places: the gazebo developers tool  [[https://github.com/osrf/gzdev/](https://github.com/osrf/gzdev/)](https://github.com/osrf/gzdev) \\(work in progress, not yet ready\\) or rocker [https://github.com/osrf/rocker](https://github.com/osrf/rocker) . I think that both approaches \\(pretty similar both, probably should be merged\\) are a good way to provide convenient working/testing/CI environments for users.\n* Caching dependencies to speed up things in CI is something we are doing, limited to per-computer cache \\(not sharing docker images across machines using a docker hub account\\). From my experience I would say that although it offers big gains in time you need to be careful and have a plan to get updates \\(ubuntu releases new versions rarely but we release new versions of ignition libraries very often\\). There is [some code in release-tools](https://bitbucket.org/osrf/release-tools/src/4b34dd59e8785acac4578a1d222af98521ef0114/jenkins-scripts/docker/lib/docker_generate_dockerfile.bash#lines-242) \\(lines 242..261\\) specifically dealing with the problem of caching.\n\n", "markup": "markdown", "html": "<p>Some thoughts about these changes:</p>\n<ul>\n<li>I'm not a big fan of hosting infra stuff in the software repositories. I know is pretty convenient for the people using them but is a hell to maintain. It's true that the use of pipelines is already doing it, I would like to reduce the code hosted in pipelines instead of adding more. A possible solution would be to move chunks of code to release-tools (or any other centralized place) and use the code from there, depending on the flexibility of the pipelines. I'm speaking for example of coding <code>common_deps</code> (or other dependencies) inside this repo instead of a centralized place.</li>\n<li>The way of easily using a docker container for development or distributing code has been explored lately at least in two places: the gazebo developers tool  <a data-is-external-link=\"true\" href=\"https://github.com/osrf/gzdev\" rel=\"nofollow\">[https://github.com/osrf/gzdev/](https://github.com/osrf/gzdev/)</a> (work in progress, not yet ready) or rocker <a data-is-external-link=\"true\" href=\"https://github.com/osrf/rocker\" rel=\"nofollow\">https://github.com/osrf/rocker</a> . I think that both approaches (pretty similar both, probably should be merged) are a good way to provide convenient working/testing/CI environments for users.</li>\n<li>Caching dependencies to speed up things in CI is something we are doing, limited to per-computer cache (not sharing docker images across machines using a docker hub account). From my experience I would say that although it offers big gains in time you need to be careful and have a plan to get updates (ubuntu releases new versions rarely but we release new versions of ignition libraries very often). There is <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/release-tools/src/4b34dd59e8785acac4578a1d222af98521ef0114/jenkins-scripts/docker/lib/docker_generate_dockerfile.bash#lines-242\" rel=\"nofollow\">some code in release-tools</a> (lines 242..261) specifically dealing with the problem of caching.</li>\n</ul>", "type": "rendered"}, "created_on": "2019-01-28T17:26:54.782063+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2019-01-28T17:26:54.796507+00:00", "type": "pullrequest_comment", "id": 89539991}