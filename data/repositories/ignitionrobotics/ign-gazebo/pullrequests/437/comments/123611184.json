{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437/comments/123611184.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437/_/diff#comment-123611184"}}, "parent": {"id": 122929590, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437/comments/122929590.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437/_/diff#comment-122929590"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 437, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437"}}, "title": "JointPositionReset and JointVelocityReset components"}, "content": {"raw": "I completely agree with this outlook.\n\nThere are valid use cases for directly setting the position and velocity states of entities within the physics engine, typically for initialization or re-initialization. Using a controller to drive the entities towards these states would not be desirable for those use cases \\(even if that controller is a very aggressive built-in controller\\).\n\nAt the same time, it\u2019s important that the ability to directly set the state is not also used as a method to control the dynamics of a simulation, which is what the role of a `Joint[Position|Velocity]Cmd` API would be.\n\nThe most important thing is that it\u2019s clear to users what the role of each component is and when it should \\(or should not\\) be used. I think designating them as `*Reset` and `*Cmd` would do a good job of making that clear to users.", "markup": "markdown", "html": "<p>I completely agree with this outlook.</p>\n<p>There are valid use cases for directly setting the position and velocity states of entities within the physics engine, typically for initialization or re-initialization. Using a controller to drive the entities towards these states would not be desirable for those use cases (even if that controller is a very aggressive built-in controller).</p>\n<p>At the same time, it\u2019s important that the ability to directly set the state is not also used as a method to control the dynamics of a simulation, which is what the role of a <code>Joint[Position|Velocity]Cmd</code> API would be.</p>\n<p>The most important thing is that it\u2019s clear to users what the role of each component is and when it should (or should not) be used. I think designating them as <code>*Reset</code> and <code>*Cmd</code> would do a good job of making that clear to users.</p>", "type": "rendered"}, "created_on": "2019-11-06T04:32:20.288256+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-11-06T04:33:22.655990+00:00", "type": "pullrequest_comment", "id": 123611184}