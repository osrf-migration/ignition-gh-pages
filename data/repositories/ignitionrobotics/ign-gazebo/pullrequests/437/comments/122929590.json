{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437/comments/122929590.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437/_/diff#comment-122929590"}}, "parent": {"id": 122915231, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437/comments/122915231.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437/_/diff#comment-122915231"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 437, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/437.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/437"}}, "title": "JointPositionReset and JointVelocityReset components"}, "content": {"raw": "The operation behind the `JointVelocityCmd` is a bit singular in my opinion. At the moment it can be used only in DART and its introduction in the physics engine is also very recent. However, a real position / velocity reset that changes the state of the simulator is different in nature, and users are typically more familiar with it rather than the current logic behind `JointVelocityCmd`.\n\nAs you said, there\u2019s no position reset at the moment. To keep a consistent naming with the components and the logic behind them, I would rather call the real reset components differently. I do not exclude that in the future a new `JointPositionCmd` component will be introduced that, similarly to the logic to create a force that would result to a given velocity, would apply the same logic for the position. I suspect that the majority of the other physics engines that will be wrapped with the physics interfaces will use these `*Reset` components. I have the fear that having the `JointVelocityCmd` that applies a force and the `JointPositionCmd` that, instead, resets the engine state, would just confuse users. What do you think? Of course, using these components responsibly is users duty, and it has to be properly documented.", "markup": "markdown", "html": "<p>The operation behind the <code>JointVelocityCmd</code> is a bit singular in my opinion. At the moment it can be used only in DART and its introduction in the physics engine is also very recent. However, a real position / velocity reset that changes the state of the simulator is different in nature, and users are typically more familiar with it rather than the current logic behind <code>JointVelocityCmd</code>.</p>\n<p>As you said, there\u2019s no position reset at the moment. To keep a consistent naming with the components and the logic behind them, I would rather call the real reset components differently. I do not exclude that in the future a new <code>JointPositionCmd</code> component will be introduced that, similarly to the logic to create a force that would result to a given velocity, would apply the same logic for the position. I suspect that the majority of the other physics engines that will be wrapped with the physics interfaces will use these <code>*Reset</code> components. I have the fear that having the <code>JointVelocityCmd</code> that applies a force and the <code>JointPositionCmd</code> that, instead, resets the engine state, would just confuse users. What do you think? Of course, using these components responsibly is users duty, and it has to be properly documented.</p>", "type": "rendered"}, "created_on": "2019-10-31T07:33:04.387828+00:00", "user": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "updated_on": "2019-10-31T07:33:04.734790+00:00", "type": "pullrequest_comment", "id": 122929590}