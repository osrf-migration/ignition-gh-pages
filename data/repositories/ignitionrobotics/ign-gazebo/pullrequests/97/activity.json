{"pagelen": 50, "values": [{"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "6264cbd5eccc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/6264cbd5eccc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/6264cbd5eccc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "I'm closing this PR for the time being. We'll revisit this when we start running systems in parallel.", "source": {"commit": {"hash": "eb7f16ecc552", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/eb7f16ecc552.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/eb7f16ecc552"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "DECLINED", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-22T23:42:41.074204+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "f5b28d44f6ef", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/f5b28d44f6ef.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/f5b28d44f6ef"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "eb7f16ecc552", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/eb7f16ecc552.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/eb7f16ecc552"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2019-01-09T18:56:47.766023+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "bcc9cc2031f2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/bcc9cc2031f2.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/bcc9cc2031f2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3ac6cf16bac1", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/3ac6cf16bac1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/3ac6cf16bac1"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-07T22:11:42.927353+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "26a42a7b0d40", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/26a42a7b0d40.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/26a42a7b0d40"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "92c3a10ef057", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/92c3a10ef057.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/92c3a10ef057"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-05T14:56:20.223192+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "26a42a7b0d40", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/26a42a7b0d40.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/26a42a7b0d40"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f812e4da86f2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/f812e4da86f2.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/f812e4da86f2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "date": "2019-01-05T05:01:23.959217+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/86906588.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-86906588"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "@azeey , FYI there is a conflict to resolve here.", "markup": "markdown", "html": "<p>@azeey , FYI there is a conflict to resolve here.</p>", "type": "rendered"}, "created_on": "2019-01-02T18:57:12.710801+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2019-01-02T18:57:12.797163+00:00", "type": "pullrequest_comment", "id": 86906588}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85650056.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85650056"}}, "parent": {"id": 85648382, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648382.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648382"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "Seems reasonable to me!", "markup": "markdown", "html": "<p>Seems reasonable to me!</p>", "type": "rendered"}, "created_on": "2018-12-13T22:12:43.845224+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2018-12-13T22:12:43.858612+00:00", "type": "pullrequest_comment", "id": 85650056}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85649152.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85649152"}}, "parent": {"id": 85648815, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648815.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648815"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "I don't have a strong preference, so I'll leave it up to you. I just thought that it would be nice to keep consistency across repos.\n\nIf you decide to keep it, it would be nice to add a bit of documentation about it in the readme.", "markup": "markdown", "html": "<p>I don't have a strong preference, so I'll leave it up to you. I just thought that it would be nice to keep consistency across repos.</p>\n<p>If you decide to keep it, it would be nice to add a bit of documentation about it in the readme.</p>", "type": "rendered"}, "created_on": "2018-12-13T22:01:34.728071+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-13T22:01:34.739220+00:00", "type": "pullrequest_comment", "id": 85649152}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648815.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648815"}}, "parent": {"id": 85648519, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648519.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648519"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "I thought other sanitzer tests (memory, address, etc.) could go in there. I'm okay with putting it in `integration`. ", "markup": "markdown", "html": "<p>I thought other sanitzer tests (memory, address, etc.) could go in there. I'm okay with putting it in <code>integration</code>. </p>", "type": "rendered"}, "created_on": "2018-12-13T21:57:05.681196+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2018-12-13T21:57:05.690883+00:00", "type": "pullrequest_comment", "id": 85648815}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648519.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648519"}}, "parent": {"id": 85648172, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648172.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648172"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "I mean, I think the tests could be in the `integration` directory, but still only run if `ENABLE_TSAN` is set. We've had such flags in the past to enable tests in certain platforms, or if there's a display...", "markup": "markdown", "html": "<p>I mean, I think the tests could be in the <code>integration</code> directory, but still only run if <code>ENABLE_TSAN</code> is set. We've had such flags in the past to enable tests in certain platforms, or if there's a display...</p>", "type": "rendered"}, "created_on": "2018-12-13T21:53:39.782300+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-13T21:53:39.792120+00:00", "type": "pullrequest_comment", "id": 85648519}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648382.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648382"}}, "parent": {"id": 85617966, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85617966.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85617966"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "Possibly. I think it's the simplest and least error prone solution though. Assuming that most systems interact with the ECS via `Each` calls, I deliberately avoided locking the mutex when invoking the callbacks. I would hope that helps avoid some contention. The next step would be to remove mutable access to components and provide a way to update components without locks. ", "markup": "markdown", "html": "<p>Possibly. I think it's the simplest and least error prone solution though. Assuming that most systems interact with the ECS via <code>Each</code> calls, I deliberately avoided locking the mutex when invoking the callbacks. I would hope that helps avoid some contention. The next step would be to remove mutable access to components and provide a way to update components without locks. </p>", "type": "rendered"}, "created_on": "2018-12-13T21:52:09.941953+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2018-12-13T21:52:09.952498+00:00", "type": "pullrequest_comment", "id": 85648382}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "a29aa272fd54", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/a29aa272fd54.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/a29aa272fd54"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fbb747b64d4e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fbb747b64d4e.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fbb747b64d4e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2018-12-13T21:50:22.948997+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85648172.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85648172"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "What kind of tests should go into this new directory? I think none of our repos has such a folder", "markup": "markdown", "html": "<p>What kind of tests should go into this new directory? I think none of our repos has such a folder</p>", "type": "rendered"}, "created_on": "2018-12-13T21:49:53.081344+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2018-12-13T21:49:53.088587+00:00", "type": "pullrequest_comment", "id": 85648172}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97/comments/85617966.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97/_/diff#comment-85617966"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}, "content": {"raw": "Do you think that a single mutex for the entire database could end up with a contention problem?", "markup": "markdown", "html": "<p>Do you think that a single mutex for the entire database could end up with a contention problem?</p>", "type": "rendered"}, "created_on": "2018-12-13T17:08:14.305326+00:00", "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}, "updated_on": "2018-12-13T17:08:14.313521+00:00", "type": "pullrequest_comment", "id": 85617966}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "2864b37447d0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/2864b37447d0.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/2864b37447d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ea5e90859aab", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ea5e90859aab.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ea5e90859aab"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-13T16:49:57.829908+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}, {"update": {"description": "This PR refactors the `EntityComponentManager` class to be more thread safe, or at the very least, start a discussion on how we intend to avoid race condition between systems running in parallel. It came to my attention as I was working on pull request #92 that only entity erasures are currently thread safe. \r\n\r\nIn this refactor, all public member functions that access the entity database variables directly or indirectly must lock the `entityMutex`. All private member functions assume that whoever called them already has a lock. This requires\r\nthat we break up some member functions so that all they do is lock a mutex and call a private implementation. It is also critical that member functions avoid calling other public member functions because they might try to lock the mutex again. eg. call `EntityMatchesImpl` instead of `EntityMatches` inside a member function.\r\n\r\nI have added a test using the compiler's thread sanitizer. It needs a cmake arg `-DENABLE_TSAN=ON` to be enabled.\r\n\r\nThis PR does not handle the race condition on accessing and mutating components through `Each` and `Component` calls. I'm working on a separate PR for that.", "title": "Refactor EntityComponentManager to be more thread safe", "destination": {"commit": {"hash": "2864b37447d0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/2864b37447d0.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/2864b37447d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ea5e90859aab", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ea5e90859aab.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ea5e90859aab"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "ecm_race_cond"}}, "state": "OPEN", "author": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "date": "2018-12-13T16:49:57.739007+00:00"}, "pull_request": {"type": "pullrequest", "id": 97, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/97.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/97"}}, "title": "Refactor EntityComponentManager to be more thread safe"}}]}