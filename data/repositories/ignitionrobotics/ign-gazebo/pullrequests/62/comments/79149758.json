{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/62/comments/79149758.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:52be49ec7f2f..14a619f929f7?path=src%2FSimulationRunner.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/62/_/diff#comment-79149758"}}, "parent": {"id": 79148520, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/62/comments/79148520.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/62/_/diff#comment-79148520"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 62, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/62.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/62"}}, "title": "Erase entity [Ready for review]"}, "content": {"raw": "It just feels to me that we're giving special treatment to a specific component, and manipulating it from outside a system, thus \"breaking\" the ECS abstraction. The server is also aware of the component's internals, like how it contains a string.\n\nI also wasn't sure of the use case, and it's still not clear to me if this will be useful for developers/users in the long run. But I can wait until we get a clear picture of how they will be expected to delete entities.\n\nFinally, a more generic alternative could be a templated function which erases any component type by value.\n\nIn any case, as you said, this doesn't \"break\" anything concrete, so I think we can leave it in the way it is - but we may want at least to make it delete all entities which have the given name, for completeness.\n\n", "markup": "markdown", "html": "<p>It just feels to me that we're giving special treatment to a specific component, and manipulating it from outside a system, thus \"breaking\" the ECS abstraction. The server is also aware of the component's internals, like how it contains a string.</p>\n<p>I also wasn't sure of the use case, and it's still not clear to me if this will be useful for developers/users in the long run. But I can wait until we get a clear picture of how they will be expected to delete entities.</p>\n<p>Finally, a more generic alternative could be a templated function which erases any component type by value.</p>\n<p>In any case, as you said, this doesn't \"break\" anything concrete, so I think we can leave it in the way it is - but we may want at least to make it delete all entities which have the given name, for completeness.</p>", "type": "rendered"}, "created_on": "2018-10-15T23:35:07.219143+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 605, "from": null, "outdated": true, "path": "src/SimulationRunner.cc"}, "updated_on": "2018-10-15T23:35:07.230817+00:00", "type": "pullrequest_comment", "id": 79149758}