{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39/comments/75383680.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:9e5f56497711..ec4c6df1bf7e?path=src%2Fsystems%2FRendering.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39/_/diff#comment-75383680"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39"}}, "title": "[WIP] Rendering system"}, "content": {"raw": "mm how does the Render system work with the Scene3D plugin? \n\nIn Scene3D, there\u2019s [logic for managing the opengl context](#!/ignitionrobotics/ign-gui/src/df7598268ad4f3d7c27bf45dc4cf3617c193da1b/src/plugins/Scene3D.cc#lines-215). The render window context needs to be activated before any ign-rendering calls and deactivated afterwards so it does not interfere with Qt. We also need to make sure all the ign-rendering calls happen in the same thread. \n\nIt\u2019s kind of inconvenient but it seems like it\u2019s the way to go for getting ogre to work with QtQuick", "markup": "markdown", "html": "<p>mm how does the Render system work with the Scene3D plugin? </p>\n<p>In Scene3D, there\u2019s <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gui/src/df7598268ad4f3d7c27bf45dc4cf3617c193da1b/src/plugins/Scene3D.cc#lines-215\" rel=\"nofollow\">logic for managing the opengl context</a>. The render window context needs to be activated before any ign-rendering calls and deactivated afterwards so it does not interfere with Qt. We also need to make sure all the ign-rendering calls happen in the same thread. </p>\n<p>It\u2019s kind of inconvenient but it seems like it\u2019s the way to go for getting ogre to work with QtQuick</p>", "type": "rendered"}, "created_on": "2018-09-08T04:33:47.287380+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {"to": 74, "from": null, "path": "src/systems/Rendering.cc"}, "updated_on": "2018-09-08T04:33:47.293629+00:00", "type": "pullrequest_comment", "id": 75383680}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39/comments/75503408.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:9e5f56497711..ec4c6df1bf7e?path=src%2Fsystems%2FRendering.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39/_/diff#comment-75503408"}}, "parent": {"id": 75383680, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39/comments/75383680.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39/_/diff#comment-75383680"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39"}}, "title": "[WIP] Rendering system"}, "content": {"raw": "The intention was that the rendering system would create and update the scene, while all the `Scene3D` plugin would do is paint the a camera view onto a window.\n\nSo just to be sure, absolutely all ign-rendering API must always be called from the same thread? Does that include both \"read\" (getting current camera image) and \"write\" (creating/modifying scene) operations? If this is something we only need to do for the GUI, then is it ok to use various threads for the sensor's scene?\n", "markup": "markdown", "html": "<p>The intention was that the rendering system would create and update the scene, while all the <code>Scene3D</code> plugin would do is paint the a camera view onto a window.</p>\n<p>So just to be sure, absolutely all ign-rendering API must always be called from the same thread? Does that include both \"read\" (getting current camera image) and \"write\" (creating/modifying scene) operations? If this is something we only need to do for the GUI, then is it ok to use various threads for the sensor's scene?</p>", "type": "rendered"}, "created_on": "2018-09-10T16:59:47.053283+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": null, "path": "src/systems/Rendering.cc"}, "updated_on": "2018-09-10T16:59:47.063711+00:00", "type": "pullrequest_comment", "id": 75503408}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39/comments/75550206.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39/_/diff#comment-75550206"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 39, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/39.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/39"}}, "title": "[WIP] Rendering system"}, "content": {"raw": "Issues:\n\n* All Ogre 1.9 calls must be made from the same thread\n* Moreover, all ign-rendering calls must be made from the Qt thread\n* So we'd need the rendering system to be aware of all this\n\nThis will likely be fixed / improved when we move to Ogre 2.1 - we will revisit this PR then.\n\nFor now, there will be a `ScenePublisher` system publishing scene messages to be consumed by an ign-gui plugin which extends `ignition::gui::plugins::Scene3D`. See pull request #41 for the first PR.", "markup": "markdown", "html": "<p>Issues:</p>\n<ul>\n<li>All Ogre 1.9 calls must be made from the same thread</li>\n<li>Moreover, all ign-rendering calls must be made from the Qt thread</li>\n<li>So we'd need the rendering system to be aware of all this</li>\n</ul>\n<p>This will likely be fixed / improved when we move to Ogre 2.1 - we will revisit this PR then.</p>\n<p>For now, there will be a <code>ScenePublisher</code> system publishing scene messages to be consumed by an ign-gui plugin which extends <code>ignition::gui::plugins::Scene3D</code>. See <a href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/41/new-system-scene-broadcaster\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #41</a> for the first PR.</p>", "type": "rendered"}, "created_on": "2018-09-11T05:14:25.087192+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-09-11T05:14:25.093303+00:00", "type": "pullrequest_comment", "id": 75550206}], "page": 1, "size": 3}