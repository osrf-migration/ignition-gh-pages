{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/537/comments/143915412.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:8af45088683a..2f6015245cd0?path=include%2Fignition%2Fgazebo%2FServerConfig.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/537/_/diff#comment-143915412"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 537, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/537.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/537"}}, "title": "Fallback to default plugin configuration"}, "content": {"raw": "`clang-tidy` doesn't like these:\n\n```\nign-gazebo/include/ignition/gazebo/ServerConfig.hh:339:5: warning: invalid case style for global function 'ParsePluginsFromString' [readability-identifier-naming]\n    ParsePluginsFromString(const std::string &_str);\n    ^~~~~~~~~~~~~~~~~~~~~~~\n    parsePluginsFromString\n```\n\nIn the interest of parsing the entire server config in the future, instead of just the plugins, some other ideas would be:\n\n* Return the entire config: `ServerConfig ParseFromFile(const std::string &_fname);`\n* Update an existing config: `bool ParseFromFile(ServerConfig &_config, const std::string &_fname);`\n* Implement as a member function: `bool ServerConfig::ParseFromFile(const std::string &_fname);`", "markup": "markdown", "html": "<p><code>clang-tidy</code> doesn't like these:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">ign-gazebo</span><span class=\"o\">/</span><span class=\"nt\">include</span><span class=\"o\">/</span><span class=\"nt\">ignition</span><span class=\"o\">/</span><span class=\"nt\">gazebo</span><span class=\"o\">/</span><span class=\"nt\">ServerConfig</span><span class=\"p\">.</span><span class=\"nc\">hh</span><span class=\"p\">:</span><span class=\"nd\">339</span><span class=\"p\">:</span><span class=\"nd\">5</span><span class=\"o\">:</span> <span class=\"nt\">warning</span><span class=\"o\">:</span> <span class=\"nt\">invalid</span> <span class=\"nt\">case</span> <span class=\"nt\">style</span> <span class=\"nt\">for</span> <span class=\"nt\">global</span> <span class=\"nt\">function</span> <span class=\"s1\">&#39;ParsePluginsFromString&#39;</span> <span class=\"cp\">[</span><span class=\"nx\">readability</span><span class=\"na\">-identifier-naming</span><span class=\"cp\">]</span>\n    <span class=\"nt\">ParsePluginsFromString</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span> <span class=\"o\">&amp;</span><span class=\"nt\">_str</span><span class=\"o\">);</span>\n    <span class=\"o\">^~~~~~~~~~~~~~~~~~~~~~~</span>\n    <span class=\"nt\">parsePluginsFromString</span>\n</pre></div>\n\n\n<p>In the interest of parsing the entire server config in the future, instead of just the plugins, some other ideas would be:</p>\n<ul>\n<li>Return the entire config: <code>ServerConfig ParseFromFile(const std::string &amp;_fname);</code></li>\n<li>Update an existing config: <code>bool ParseFromFile(ServerConfig &amp;_config, const std::string &amp;_fname);</code></li>\n<li>Implement as a member function: <code>bool ServerConfig::ParseFromFile(const std::string &amp;_fname);</code></li>\n</ul>", "type": "rendered"}, "created_on": "2020-04-06T22:06:19.839343+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 339, "from": null, "outdated": false, "path": "include/ignition/gazebo/ServerConfig.hh"}, "updated_on": "2020-04-06T22:06:19.842169+00:00", "type": "pullrequest_comment", "id": 143915412}