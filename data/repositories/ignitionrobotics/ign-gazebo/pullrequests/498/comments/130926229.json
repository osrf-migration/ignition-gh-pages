{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/498/comments/130926229.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/498/_/diff#comment-130926229"}}, "parent": {"id": 130623557, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/498/comments/130623557.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/498/_/diff#comment-130623557"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 498, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/498.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/498"}}, "title": "Use Actuator component to communicate between MulticopterVelocityControl and MulticopterMotorModel systems"}, "content": {"raw": "Looks like it's not working. Right now in the `MulticopterMotorModel` system, if an `Actuator` message has been received, it takes precedence over the `Actuator` component. I'm convinced that this is problematic and can lead to confusion. This was an attempt to allow publishing motor speed to `MulticopterMotorModel` while, at the same time, allowing twists messages to be published to `MulticopterVelocityControl`. Instead, I think if `MulticopterVelocityControl` is instantiated, it should have complete control of the motor speed. So I propose that if the `Actuator` component is available, we ignore any motor speed messages received over a the `motor_speed` topic. This will then mean that the `motor_speed` topic won't work for the `quadcopter.sdf` example. So, to fix that, I will remove the `MulticopterVelocityControl` system and create another example SDF file that contains both systems. Does that seem reasonable?", "markup": "markdown", "html": "<p>Looks like it's not working. Right now in the <code>MulticopterMotorModel</code> system, if an <code>Actuator</code> message has been received, it takes precedence over the <code>Actuator</code> component. I'm convinced that this is problematic and can lead to confusion. This was an attempt to allow publishing motor speed to <code>MulticopterMotorModel</code> while, at the same time, allowing twists messages to be published to <code>MulticopterVelocityControl</code>. Instead, I think if <code>MulticopterVelocityControl</code> is instantiated, it should have complete control of the motor speed. So I propose that if the <code>Actuator</code> component is available, we ignore any motor speed messages received over a the <code>motor_speed</code> topic. This will then mean that the <code>motor_speed</code> topic won't work for the <code>quadcopter.sdf</code> example. So, to fix that, I will remove the <code>MulticopterVelocityControl</code> system and create another example SDF file that contains both systems. Does that seem reasonable?</p>", "type": "rendered"}, "created_on": "2020-01-08T21:04:09.476861+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "updated_on": "2020-01-08T21:04:09.485462+00:00", "type": "pullrequest_comment", "id": 130926229}