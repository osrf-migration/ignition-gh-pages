{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/264/comments/101554296.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:eebbefe8e069..677d02b99e6b?path=src%2FLevelManager.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/264/_/diff#comment-101554296"}}, "parent": {"id": 101551726, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/264/comments/101551726.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/264/_/diff#comment-101551726"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 264, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/264.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/264"}}, "title": "[Blueprint] Service to add performers at runtime"}, "content": {"raw": "> If I (as a user) wanted to set a new performer via this service, then I would expect to know immediately if the operation was successful or not. I can always call the service again.\n\nOk, I see. I thought the intention was to prevent a race condition when the performer is set just before the model is spawned.\n\nIn any case, true is being returned even though we're not sure that the performer has been added.\n\n> I think an \"action\" would be more appropriate if we wanted to wait for the model to be spawned.\n\nOne thing I'm experimenting with on the state service is actually [blocking on the service callback](#!/ignitionrobotics/ign-gazebo/src/677d02b99e6b8a17ec2ef427b601a3437afba1b8/src/systems/scene_broadcaster/SceneBroadcaster.cc#lines-407) until the service is successful. This shouldn't block anything else besides that transport thread, and we can return true to the user only when the performer has really been set.", "markup": "markdown", "html": "<blockquote>\n<p>If I (as a user) wanted to set a new performer via this service, then I would expect to know immediately if the operation was successful or not. I can always call the service again.</p>\n</blockquote>\n<p>Ok, I see. I thought the intention was to prevent a race condition when the performer is set just before the model is spawned.</p>\n<p>In any case, true is being returned even though we're not sure that the performer has been added.</p>\n<blockquote>\n<p>I think an \"action\" would be more appropriate if we wanted to wait for the model to be spawned.</p>\n</blockquote>\n<p>One thing I'm experimenting with on the state service is actually <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/677d02b99e6b8a17ec2ef427b601a3437afba1b8/src/systems/scene_broadcaster/SceneBroadcaster.cc#lines-407\" rel=\"nofollow\">blocking on the service callback</a> until the service is successful. This shouldn't block anything else besides that transport thread, and we can return true to the user only when the performer has really been set.</p>", "type": "rendered"}, "created_on": "2019-05-10T05:28:26.409904+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 214, "from": null, "outdated": true, "path": "src/LevelManager.cc"}, "updated_on": "2019-05-10T05:28:26.420783+00:00", "type": "pullrequest_comment", "id": 101554296}