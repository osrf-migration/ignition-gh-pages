{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/128/comments/88305968.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:85d0928b4727..2449115ae0f7?path=include%2Fignition%2Fgazebo%2FEntityComponentManager.hh"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/128/_/diff#comment-88305968"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 128, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/128.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/128"}}, "title": "Clean up a few clang-tidy checks"}, "content": {"raw": "I believe `const auto iter` is not the same as ` std::map<ComponentId, int>::const_iterator`. Maybe we could do `auto iter = std::as_const(this->idMap).find(_id)`", "markup": "markdown", "html": "<p>I believe <code>const auto iter</code> is not the same as <code>std::map&lt;ComponentId, int&gt;::const_iterator</code>. Maybe we could do <code>auto iter = std::as_const(this-&gt;idMap).find(_id)</code></p>", "type": "rendered"}, "created_on": "2019-01-16T18:41:19.348211+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": null, "from": 290, "outdated": true, "path": "include/ignition/gazebo/EntityComponentManager.hh"}, "updated_on": "2019-01-16T18:41:19.357490+00:00", "type": "pullrequest_comment", "id": 88305968}