{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/397/comments/116915468.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/397/_/diff#comment-116915468"}}, "parent": {"id": 116734423, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/397/comments/116734423.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/397/_/diff#comment-116734423"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/397.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/397"}}, "title": "[Blueprint] Logging meshes and materials"}, "content": {"raw": "The above items, other than the `model://` one, have been implemented as of 66f80e7.\n\nSince now there is a `--compress` flag, a zip file will be created even if we\u2019re not recording resources. This is to make the flag\u2019s behavior clean.\n\nTwo general behaviors I\u2019m unsure about:\n\n1. If `--record` is specified, but no `--record-path` is specified, and a `<path></path>` is specified in the SDF LogRecord plugin, then ServerConfig creates a timestamped directory, instead of using the one in `<path></path>`. Is this desired?  \n  This means if I run `$ ign gazebo -v 4 -r examples/worlds/log_record_resources.sdf --record`, and the SDF says `<path>/tmp/log</path>`, it will still record to a default timestamped directory `~/.ignition/gazebo/log/<timestamp>`.\n2. This one is really weird. If `--record-path '/tmp/log'` is specified, even if I `rm /tmp/log -r` right before the run, for some reason, the directory is already created before it gets to the check of `common::exists(this->logPath)` inside the LogRecord plugin.  \n  To reproduce:\n\n    `$ ign gazebo -v 4 -r examples/worlds/log_record_resources.sdf --overwrite --record-path '/tmp/log' ... [Wrn] [LogRecord.cc:292] Log path already exists on disk! Existing files will be overwritten. [Msg] Overwriting existing path [/tmp/log] [Msg] Recording to log file [/tmp/log/state.tlog] ...`\n\n\n\n    The \u201cOverwriting\u2026\u201d line shouldn\u2019t happen, because the directory shouldn\u2019t exist yet.  \n    But if I only specify the `<path>` in the SDF and don\u2019t specify `--record-path`, then it only prints:\n\n\n\n    `[Msg] Recording to log file [/tmp/log/state.tlog]`\n\n\n\n    which is correct.  \n    Could it be that if both `<path>` and `--record-path` are specified, there are two LogRecord plugins running? I can\u2019t find where that directory could have been created before the plugin does the check - [ServerConfig.cc](http://ServerConfig.cc) doesn\u2019t create any directories.\n\n\n\n\u200c", "markup": "markdown", "html": "<p>The above items, other than the <code>model://</code> one, have been implemented as of <a href=\"#!/ignitionrobotics/ign-gazebo/commits/66f80e7\" rel=\"nofollow\" class=\"ap-connect-link\">66f80e7</a>.</p>\n<p>Since now there is a <code>--compress</code> flag, a zip file will be created even if we\u2019re not recording resources. This is to make the flag\u2019s behavior clean.</p>\n<p>Two general behaviors I\u2019m unsure about:</p>\n<ol>\n<li>If <code>--record</code> is specified, but no <code>--record-path</code> is specified, and a <code>&lt;path&gt;&lt;/path&gt;</code> is specified in the SDF LogRecord plugin, then ServerConfig creates a timestamped directory, instead of using the one in <code>&lt;path&gt;&lt;/path&gt;</code>. Is this desired?<br />\n  This means if I run <code>$ ign gazebo -v 4 -r examples/worlds/log_record_resources.sdf --record</code>, and the SDF says <code>&lt;path&gt;/tmp/log&lt;/path&gt;</code>, it will still record to a default timestamped directory <code>~/.ignition/gazebo/log/&lt;timestamp&gt;</code>.</li>\n<li>\n<p>This one is really weird. If <code>--record-path '/tmp/log'</code> is specified, even if I <code>rm /tmp/log -r</code> right before the run, for some reason, the directory is already created before it gets to the check of <code>common::exists(this-&gt;logPath)</code> inside the LogRecord plugin.<br />\n  To reproduce:</p>\n<p><code>$ ign gazebo -v 4 -r examples/worlds/log_record_resources.sdf --overwrite --record-path '/tmp/log' ... [Wrn] [LogRecord.cc:292] Log path already exists on disk! Existing files will be overwritten. [Msg] Overwriting existing path [/tmp/log] [Msg] Recording to log file [/tmp/log/state.tlog] ...</code></p>\n<p>The \u201cOverwriting\u2026\u201d line shouldn\u2019t happen, because the directory shouldn\u2019t exist yet.<br />\nBut if I only specify the <code>&lt;path&gt;</code> in the SDF and don\u2019t specify <code>--record-path</code>, then it only prints:</p>\n<p><code>[Msg] Recording to log file [/tmp/log/state.tlog]</code></p>\n<p>which is correct.<br />\nCould it be that if both <code>&lt;path&gt;</code> and <code>--record-path</code> are specified, there are two LogRecord plugins running? I can\u2019t find where that directory could have been created before the plugin does the check - <a data-is-external-link=\"true\" href=\"http://ServerConfig.cc\" rel=\"nofollow\">ServerConfig.cc</a> doesn\u2019t create any directories.</p>\n</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2019-09-15T05:38:12.020908+00:00", "user": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "updated_on": "2019-09-15T05:40:31.110381+00:00", "type": "pullrequest_comment", "id": 116915468}