{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/397/comments/117475583.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:c0389b9b167a..a5d9d4b4a0cf?path=src%2FServerPrivate.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/397/_/diff#comment-117475583"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 397, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/397.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/397"}}, "title": "[Blueprint] Logging meshes and materials"}, "content": {"raw": "I just realized this has been adding an attribute all along, when it should actually be adding an element. It's working because `_sdf->Get<std::string>(\"path\")` checks both attributes and elements, but I think we should be consistent in case someone tries to access the elements in a different way.\n\nThe example world is using elements:\n\n```\n    <plugin\n      filename=\"libignition-gazebo-log-system.so\"\n      name=\"ignition::gazebo::systems::LogRecord\">\n      <path>/tmp/log</path>\n      <record_resources>0</record_resources>\n      <overwrite>0</overwrite>\n      <compress>0</compress>\n    </plugin>\n```\n\nAnd the server is using attributes:\n\n```\n    <plugin\n      filename=\"libignition-gazebo-log-system.so\"\n      name=\"ignition::gazebo::systems::LogRecord\"\n      path=\"/tmp/log\"\n      record_resources=false\n      overwrite=false\n      compress=false/>\n```", "markup": "markdown", "html": "<p>I just realized this has been adding an attribute all along, when it should actually be adding an element. It's working because <code>_sdf-&gt;Get&lt;std::string&gt;(\"path\")</code> checks both attributes and elements, but I think we should be consistent in case someone tries to access the elements in a different way.</p>\n<p>The example world is using elements:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;plugin</span>\n      <span class=\"na\">filename=</span><span class=\"s\">&quot;libignition-gazebo-log-system.so&quot;</span>\n      <span class=\"na\">name=</span><span class=\"s\">&quot;ignition::gazebo::systems::LogRecord&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;path&gt;</span>/tmp/log<span class=\"nt\">&lt;/path&gt;</span>\n      <span class=\"nt\">&lt;record_resources&gt;</span>0<span class=\"nt\">&lt;/record_resources&gt;</span>\n      <span class=\"nt\">&lt;overwrite&gt;</span>0<span class=\"nt\">&lt;/overwrite&gt;</span>\n      <span class=\"nt\">&lt;compress&gt;</span>0<span class=\"nt\">&lt;/compress&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>And the server is using attributes:</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;plugin\n      filename=&quot;libignition-gazebo-log-system.so&quot;\n      name=&quot;ignition::gazebo::systems::LogRecord&quot;\n      path=&quot;/tmp/log&quot;\n      record_resources=false\n      overwrite=false\n      compress=false/&gt;\n</pre></div>", "type": "rendered"}, "created_on": "2019-09-19T00:16:18.367889+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": null, "from": 242, "outdated": true, "path": "src/ServerPrivate.cc"}, "updated_on": "2019-09-19T00:16:34.557354+00:00", "type": "pullrequest_comment", "id": 117475583}