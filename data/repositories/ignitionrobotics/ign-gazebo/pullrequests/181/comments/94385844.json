{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/181/comments/94385844.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:6c3c2400c565..b643ab332817?path=src%2Fsystems%2Flog%2FLogPlayback.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/181/_/diff#comment-94385844"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 181, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/181.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/181"}}, "title": "[Acropolis] Add logging"}, "content": {"raw": "Ideally we would use `pose.id()` instead of name, because IDs are unique. This way it should be possible to playback links from different models even if they're all called `link`.\n\nOne caveat here though is that we have no way to be sure that the recorded IDs match the playback IDs, since the playback is not controlling the creation of entities.\n\nUntil we have a better solution than saving the whole SDF file and loading it back, here are some alternatives I can think of:\n\n* Assume that the entities in log and playback will be the same and use IDs. We can do some rough checks to make sure they match, like also checking the name and just fail if they don't.\n* Keep a map of the IDs from the log file to the playback. This will need to be updated for all newly created entities. I feel like in the long run we should be playing back with the same IDs as when the file was recorded though, for repeatability.\n\nMaybe there's some other alternative?", "markup": "markdown", "html": "<p>Ideally we would use <code>pose.id()</code> instead of name, because IDs are unique. This way it should be possible to playback links from different models even if they're all called <code>link</code>.</p>\n<p>One caveat here though is that we have no way to be sure that the recorded IDs match the playback IDs, since the playback is not controlling the creation of entities.</p>\n<p>Until we have a better solution than saving the whole SDF file and loading it back, here are some alternatives I can think of:</p>\n<ul>\n<li>Assume that the entities in log and playback will be the same and use IDs. We can do some rough checks to make sure they match, like also checking the name and just fail if they don't.</li>\n<li>Keep a map of the IDs from the log file to the playback. This will need to be updated for all newly created entities. I feel like in the long run we should be playing back with the same IDs as when the file was recorded though, for repeatability.</li>\n</ul>\n<p>Maybe there's some other alternative?</p>", "type": "rendered"}, "created_on": "2019-03-08T23:48:06.832487+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 113, "from": null, "outdated": true, "path": "src/systems/log/LogPlayback.cc"}, "updated_on": "2019-03-08T23:48:06.841176+00:00", "type": "pullrequest_comment", "id": 94385844}