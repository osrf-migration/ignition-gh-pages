{"pagelen": 50, "values": [{"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "9f12bd9187e8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/9f12bd9187e8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/9f12bd9187e8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4afddd724ba6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/4afddd724ba6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/4afddd724ba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "MERGED", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2020-04-09T23:41:40.500866+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "9f12bd9187e8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/9f12bd9187e8.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/9f12bd9187e8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4afddd724ba6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/4afddd724ba6.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/4afddd724ba6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2020-04-09T22:29:50.777808+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/144410713.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-144410713"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "cleaned up sensors on exit. [726a7c5](#!/ignitionrobotics/ign-gazebo/commits/726a7c5b6947eceb9fff5aca4f4ee866bae0f3a0)\n\n[ubuntu build](https://build.osrfoundation.org/job/ignition_gazebo-ci-pr_any-ubuntu_auto-amd64/2921/) is now clean", "markup": "markdown", "html": "<p>cleaned up sensors on exit. <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/commits/726a7c5b6947eceb9fff5aca4f4ee866bae0f3a0\" rel=\"nofollow\">726a7c5</a></p>\n<p><a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_gazebo-ci-pr_any-ubuntu_auto-amd64/2921/\" rel=\"nofollow\">ubuntu build</a> is now clean</p>", "type": "rendered"}, "created_on": "2020-04-09T04:36:23.277680+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-04-09T04:36:23.280296+00:00", "type": "pullrequest_comment", "id": 144410713}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "726a7c5b6947", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/726a7c5b6947.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/726a7c5b6947"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "date": "2020-04-09T04:08:02.702810+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143641481.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143641481"}}, "parent": {"id": 143528772, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143528772.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143528772"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "thanks! changes merged forward to `default` in ign-rendering. I don\u2019t get the crash any more with ogre2 gpu rays. \n\nI get segfault with ogre1 like you mentioned but it\u2019s happening on exit even without removing a sensor. I think it\u2019s an existing problem and I\u2019ve ticketed an [issue](#!/ignitionrobotics/ign-rendering/issues/61/crash-on-ogre1-camera-sensor-cleanup) for this ", "markup": "markdown", "html": "<p>thanks! changes merged forward to <code>default</code> in ign-rendering. I don\u2019t get the crash any more with ogre2 gpu rays. </p>\n<p>I get segfault with ogre1 like you mentioned but it\u2019s happening on exit even without removing a sensor. I think it\u2019s an existing problem and I\u2019ve ticketed an <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/issues/61/crash-on-ogre1-camera-sensor-cleanup\" rel=\"nofollow\">issue</a> for this </p>", "type": "rendered"}, "created_on": "2020-04-03T22:17:10.626894+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-04-03T22:17:10.630823+00:00", "type": "pullrequest_comment", "id": 143641481}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "692c1fd068fd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/692c1fd068fd.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/692c1fd068fd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-03T11:14:31.263989+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143528772.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143528772"}}, "parent": {"id": 143406572, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143406572.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143406572"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "OK! I opened a small PR in ign-rendering to cleanup the rest of the resources in the Ogre2GpuRay Destroy\\(\\) function \\(and avoid the Ogre2 exception that was happening before\\): [#!/ignitionrobotics/ign-rendering/pull-requests/258](#!/ignitionrobotics/ign-rendering/pull-requests/258)\n\nThe Ogre1 segmentation faults are a bit tougher to debug, I didn\u2019t get any since I introduced cleanup of the [activeSensors structure](#!/ignitionrobotics/ign-gazebo/commits/0997a31f75bd4b06afa4e053c7b723635e521242), but even before that they were not happening 100% of the times \\(the segfault was on accessing [sensor here](#!/ignitionrobotics/ign-gazebo/src/0997a31f75bd4b06afa4e053c7b723635e521242/src/systems/sensors/Sensors.cc#lines-220), probably due to a dangling pointer\\).\n\nWhile merging the latest default I tried it on the thermal camera and it also worked with no changes, the nice thing about the callback approach is that there is no need to add manual EachRemoved functions. For testing reasons I added it to the sensors\\_demo.sdf world.", "markup": "markdown", "html": "<p>OK! I opened a small PR in ign-rendering to cleanup the rest of the resources in the Ogre2GpuRay Destroy() function (and avoid the Ogre2 exception that was happening before): <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/258\" rel=\"nofollow\">#!/ignitionrobotics/ign-rendering/pull-requests/258</a></p>\n<p>The Ogre1 segmentation faults are a bit tougher to debug, I didn\u2019t get any since I introduced cleanup of the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/commits/0997a31f75bd4b06afa4e053c7b723635e521242\" rel=\"nofollow\">activeSensors structure</a>, but even before that they were not happening 100% of the times (the segfault was on accessing <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/0997a31f75bd4b06afa4e053c7b723635e521242/src/systems/sensors/Sensors.cc#lines-220\" rel=\"nofollow\">sensor here</a>, probably due to a dangling pointer).</p>\n<p>While merging the latest default I tried it on the thermal camera and it also worked with no changes, the nice thing about the callback approach is that there is no need to add manual EachRemoved functions. For testing reasons I added it to the sensors_demo.sdf world.</p>", "type": "rendered"}, "created_on": "2020-04-03T10:53:47.492971+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-04-03T10:53:47.498923+00:00", "type": "pullrequest_comment", "id": 143528772}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "70289ff5c71c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/70289ff5c71c.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/70289ff5c71c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-03T10:48:44.640571+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8a6e121b5a84", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8a6e121b5a84.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8a6e121b5a84"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-03T10:35:47.435737+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "18bc963d070f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/18bc963d070f.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/18bc963d070f"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-03T10:34:24.799319+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "8064b9eb40be", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/8064b9eb40be.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/8064b9eb40be"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "0997a31f75bd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/0997a31f75bd.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/0997a31f75bd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-03T09:51:40.871848+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143406572.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143406572"}}, "parent": {"id": 143285406, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143285406.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143285406"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "some info about the Destroy functions: there were always some problems with cleaning up objects in ign-rendering. Mainly when the shared pointers go out of scope either in a non-rendering thread or after the engine has been shut down, and this led to crashes. We started adding Destroy functions so we can explicitly clean up objects. We also reused this function in the destructor, e.g. for cases such as temporary objects naturally going out of scope. As the result, we end up with the situation that you run into where the function gets called twice. We started making Destroy functions safe to call multiple times as issues come up. So long story short, setting the pointers null  after deletion is probably good for now as it may not be an easy fix", "markup": "markdown", "html": "<p>some info about the Destroy functions: there were always some problems with cleaning up objects in ign-rendering. Mainly when the shared pointers go out of scope either in a non-rendering thread or after the engine has been shut down, and this led to crashes. We started adding Destroy functions so we can explicitly clean up objects. We also reused this function in the destructor, e.g. for cases such as temporary objects naturally going out of scope. As the result, we end up with the situation that you run into where the function gets called twice. We started making Destroy functions safe to call multiple times as issues come up. So long story short, setting the pointers null  after deletion is probably good for now as it may not be an easy fix</p>", "type": "rendered"}, "created_on": "2020-04-02T18:18:32.078147+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-04-02T18:23:54.965919+00:00", "type": "pullrequest_comment", "id": 143406572}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143285406.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143285406"}}, "parent": {"id": 142998879, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142998879.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142998879"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Bit of an update from my findings, the Destroy function is called [here](#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/GpuLidarSensor.cc#lines-91) from the BaseStore class \\(as shown in the stack trace\\) and [here](#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/GpuLidarSensor.cc#lines-93) \\(shared pointer reset\\(\\) call\\).\n\nA simple fix is to make sure that all the pointers get reset to nullptr \\(i.e. [here](#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-170), which is done already in the Ogre1 version [here](#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre/src/OgreGpuRays.cc#lines-179)\\). **However!** This might fix the crash but it doesn\u2019t fix the root issue which is the destroy function being called twice \\(it just doesn\u2019t do anything in the second run\\).\n\nAlso while Ogre2 behaves OK with this fix Ogre1 still goes into random segmentation faults even when removing normal cameras, so this will be quite hairy to fix.", "markup": "markdown", "html": "<p>Bit of an update from my findings, the Destroy function is called <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/GpuLidarSensor.cc#lines-91\" rel=\"nofollow\">here</a> from the BaseStore class (as shown in the stack trace) and <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/GpuLidarSensor.cc#lines-93\" rel=\"nofollow\">here</a> (shared pointer reset() call).</p>\n<p>A simple fix is to make sure that all the pointers get reset to nullptr (i.e. <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-170\" rel=\"nofollow\">here</a>, which is done already in the Ogre1 version <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre/src/OgreGpuRays.cc#lines-179\" rel=\"nofollow\">here</a>). <strong>However!</strong> This might fix the crash but it doesn\u2019t fix the root issue which is the destroy function being called twice (it just doesn\u2019t do anything in the second run).</p>\n<p>Also while Ogre2 behaves OK with this fix Ogre1 still goes into random segmentation faults even when removing normal cameras, so this will be quite hairy to fix.</p>", "type": "rendered"}, "created_on": "2020-04-02T09:36:44.499775+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-04-02T09:36:44.514898+00:00", "type": "pullrequest_comment", "id": 143285406}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142998879.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142998879"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Ok in an effort to remove all the different types of sensors I changed the approach to be callback based.  \nI\u2019m getting a segmentation fault on removal of Ogre2 GPU lidars \\(at least\\), the issue is due to a double freeing of the Ogre2GpuRays object.\n\nSpecifically, the Ogre2GpuRay Destroy function is called twice, once on destruction of the actual object \\(it is being tracked through a unique\\_ptr hence it is destructed on deletion of the pointer\\) and once with this backtrace:\n\n```\n(gdb) where\n#0  ignition::rendering::v4::Ogre2GpuRays::Destroy() () at /home/luca/ws_citadel/src/ign-rendering/ogre2/src/Ogre2GpuRays.cc:147\n#1  0x00007fffc04aea23 in ignition::rendering::v4::BaseStore<ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor>::DestroyImpl (this=<optimized out>, _iter=...) at /home/luca/ws_citadel/src/ign-rendering/include/ignition/rendering/base/BaseStorage.hh:953\n#2  0x00007fffc04ae7d0 in ignition::rendering::v4::BaseStore<ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor>::Destroy (this=0x7fffbc415790, _object=...) at /usr/include/c++/8/bits/shared_ptr_base.h:1167\n#3  0x00007fffc14535dd in ignition::rendering::v4::BaseScene::DestroySensor(std::shared_ptr<ignition::rendering::v4::Sensor>, bool) ()\n    at /usr/include/c++/8/ext/atomicity.h:96\n#4  0x00007fffa0f86403 in ignition::sensors::v4::GpuLidarSensor::RemoveGpuRays(std::shared_ptr<ignition::rendering::v4::Scene>) ()\n    at /usr/include/c++/8/ext/atomicity.h:96\n#5  0x00007fffa0f86fb4 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=<optimized out>)\n    at /home/luca/ws_citadel/src/ign-sensors/src/GpuLidarSensor.cc:59\n#6  0x00007fffa0f872b9 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=<optimized out>)\n    at /home/luca/ws_citadel/src/ign-sensors/src/GpuLidarSensor.cc:57\n#7  0x00007fffc167a563 in std::default_delete<ignition::sensors::v4::Sensor>::operator() (this=0x7fffbc45cd00, __ptr=<optimized out>)\n    at /usr/include/c++/8/bits/unique_ptr.h:350\n#8  std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> >::~unique_ptr (this=0x7fffbc45cd00, \n    __in_chrg=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:277\n#9  std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >::~pair (this=0x7fffbc45ccf8, __in_chrg=<optimized out>) at /usr/include/c++/8/bits/stl_pair.h:208\n#10 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> >::destroy<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > (this=<optimized out>, __p=0x7fffbc45ccf8)\n    at /usr/include/c++/8/ext/new_allocator.h:140\n#11 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> > >::destroy<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > (__a=..., __p=0x7fffbc45ccf8)\n    at /usr/include/c++/8/bits/alloc_traits.h:487\n#12 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> > >::_M_deallocate_node (__n=0x7fffbc45ccf0, \n    this=<optimized out>) at /usr/include/c++/8/bits/hashtable_policy.h:2111\n#13 0x00007fffc167ae91 in std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase (__n=<optimized out>, __prev_n=<optimized out>, __bkt=<optimized out>, this=0x55555705a070)\n    at /usr/include/c++/8/bits/hashtable_policy.h:341\n#14 std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase (this=0x55555705a070, __k=@0x7fffc14189f8: 2) at /usr/include/c++/8/bits/hashtable.h:1929\n#15 0x00007fffc167ab6e in std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase (__k=@0x7fffc14189f8: 2, this=<optimized out>) at /usr/include/c++/8/bits/hashtable.h:765\n#16 std::unordered_map<unsigned long, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> >, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > >::erase (__x=@0x7fffc14189f8: 2, this=<optimized out>)\n    at /usr/include/c++/8/bits/unordered_map.h:815\n#17 ignition::sensors::v4::Manager::Remove(unsigned long) () at /home/luca/ws_citadel/src/ign-sensors/src/Manager.cc:96\n#18 0x00007fffc1f6c5cc in ignition::gazebo::v4::systems::Sensors::RemoveSensor(unsigned long const&) ()\n    at /usr/include/c++/8/bits/unique_ptr.h:345\n#19 0x00007fffc1d02ff9 in std::function<void (unsigned long const&)>::operator()(unsigned long const&) const (\n    __args#0=@0x7fffb40012a0: 17, this=<optimized out>) at /usr/include/c++/8/bits/std_function.h:682\n#20 ignition::gazebo::v4::RenderUtil::Update() () at /home/luca/ws_citadel/src/ign-gazebo/src/rendering/RenderUtil.cc:308\n#21 0x00007fffc1f6dd99 in ignition::gazebo::v4::systems::SensorsPrivate::RunOnce() ()\n    at /home/luca/ws_citadel/src/ign-gazebo/src/systems/sensors/Sensors.cc:206\n#22 0x00007fffc1f6e0a8 in ignition::gazebo::v4::systems::SensorsPrivate::RenderThread() ()\n    at /home/luca/ws_citadel/src/ign-gazebo/src/systems/sensors/Sensors.cc:264\n#23 0x00007ffff11f26df in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#24 0x00007ffff731b6db in start_thread (arg=0x7fffc1419700) at pthread_create.c:463\n#25 0x00007ffff765488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\n\nBasically when we reach the [Remove](#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/Manager.cc#lines-91) function in the ign-sensor Manager the Ogre2GpuRays is freed once through a manual call to Destroy\\(\\) \\(based on the above stack trace, pointing to the GpuLidarSensor destructor\\) and once through the actual [overridden destructor](#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-124), creating the issue mentioned above.\n\nI\u2019m not too familiar with ign-sensors so open to suggestions on how to deal with the issue", "markup": "markdown", "html": "<p>Ok in an effort to remove all the different types of sensors I changed the approach to be callback based.<br />\nI\u2019m getting a segmentation fault on removal of Ogre2 GPU lidars (at least), the issue is due to a double freeing of the Ogre2GpuRays object.</p>\n<p>Specifically, the Ogre2GpuRay Destroy function is called twice, once on destruction of the actual object (it is being tracked through a unique_ptr hence it is destructed on deletion of the pointer) and once with this backtrace:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">where</span>\n<span class=\"cp\">#0  ignition::rendering::v4::Ogre2GpuRays::Destroy() () at /home/luca/ws_citadel/src/ign-rendering/ogre2/src/Ogre2GpuRays.cc:147</span>\n<span class=\"cp\">#1  0x00007fffc04aea23 in ignition::rendering::v4::BaseStore&lt;ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor&gt;::DestroyImpl (this=&lt;optimized out&gt;, _iter=...) at /home/luca/ws_citadel/src/ign-rendering/include</span><span class=\"cpf\">/ignition/rendering/base/BaseStorage.hh:953</span><span class=\"cp\"></span>\n<span class=\"cp\">#2  0x00007fffc04ae7d0 in ignition::rendering::v4::BaseStore&lt;ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor&gt;::Destroy (this=0x7fffbc415790, _object=...) at /usr/include</span><span class=\"cpf\">/c++/8/bits/shared_ptr_base.h:1167</span><span class=\"cp\"></span>\n<span class=\"cp\">#3  0x00007fffc14535dd in ignition::rendering::v4::BaseScene::DestroySensor(std::shared_ptr&lt;ignition::rendering::v4::Sensor&gt;, bool) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">atomicity</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">96</span>\n<span class=\"cp\">#4  0x00007fffa0f86403 in ignition::sensors::v4::GpuLidarSensor::RemoveGpuRays(std::shared_ptr&lt;ignition::rendering::v4::Scene&gt;) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">atomicity</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">96</span>\n<span class=\"cp\">#5  0x00007fffa0f86fb4 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">GpuLidarSensor</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">59</span>\n<span class=\"cp\">#6  0x00007fffa0f872b9 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">GpuLidarSensor</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">57</span>\n<span class=\"cp\">#7  0x00007fffc167a563 in std::default_delete&lt;ignition::sensors::v4::Sensor&gt;::operator() (this=0x7fffbc45cd00, __ptr=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">350</span>\n<span class=\"cp\">#8  std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt;::~unique_ptr (this=0x7fffbc45cd00, </span>\n    <span class=\"n\">__in_chrg</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">277</span>\n<span class=\"cp\">#9  std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;::~pair (this=0x7fffbc45ccf8, __in_chrg=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/c++/8/bits/stl_pair.h:208</span><span class=\"cp\"></span>\n<span class=\"cp\">#10 __gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; (this=&lt;optimized out&gt;, __p=0x7fffbc45ccf8)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">new_allocator</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">140</span>\n<span class=\"cp\">#11 std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; (__a=..., __p=0x7fffbc45ccf8)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">alloc_traits</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">487</span>\n<span class=\"cp\">#12 std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (__n=0x7fffbc45ccf0, </span>\n    <span class=\"n\">this</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">hashtable_policy</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">2111</span>\n<span class=\"cp\">#13 0x00007fffc167ae91 in std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (__n=&lt;optimized out&gt;, __prev_n=&lt;optimized out&gt;, __bkt=&lt;optimized out&gt;, this=0x55555705a070)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">hashtable_policy</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">341</span>\n<span class=\"cp\">#14 std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (this=0x55555705a070, __k=@0x7fffc14189f8: 2) at /usr/include</span><span class=\"cpf\">/c++/8/bits/hashtable.h:1929</span><span class=\"cp\"></span>\n<span class=\"cp\">#15 0x00007fffc167ab6e in std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (__k=@0x7fffc14189f8: 2, this=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/c++/8/bits/hashtable.h:765</span><span class=\"cp\"></span>\n<span class=\"cp\">#16 std::unordered_map&lt;unsigned long, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; &gt;::erase (__x=@0x7fffc14189f8: 2, this=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unordered_map</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">815</span>\n<span class=\"cp\">#17 ignition::sensors::v4::Manager::Remove(unsigned long) () at /home/luca/ws_citadel/src/ign-sensors/src/Manager.cc:96</span>\n<span class=\"cp\">#18 0x00007fffc1f6c5cc in ignition::gazebo::v4::systems::Sensors::RemoveSensor(unsigned long const&amp;) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">345</span>\n<span class=\"cp\">#19 0x00007fffc1d02ff9 in std::function&lt;void (unsigned long const&amp;)&gt;::operator()(unsigned long const&amp;) const (</span>\n    <span class=\"n\">__args</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"o\">=</span><span class=\"mh\">@0x7fffb40012a0</span><span class=\"o\">:</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">std_function</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">682</span>\n<span class=\"cp\">#20 ignition::gazebo::v4::RenderUtil::Update() () at /home/luca/ws_citadel/src/ign-gazebo/src/rendering/RenderUtil.cc:308</span>\n<span class=\"cp\">#21 0x00007fffc1f6dd99 in ignition::gazebo::v4::systems::SensorsPrivate::RunOnce() ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">systems</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">Sensors</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">206</span>\n<span class=\"cp\">#22 0x00007fffc1f6e0a8 in ignition::gazebo::v4::systems::SensorsPrivate::RenderThread() ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">systems</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">Sensors</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">264</span>\n<span class=\"cp\">#23 0x00007ffff11f26df in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#24 0x00007ffff731b6db in start_thread (arg=0x7fffc1419700) at pthread_create.c:463</span>\n<span class=\"cp\">#25 0x00007ffff765488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n</pre></div>\n\n\n<p>Basically when we reach the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/Manager.cc#lines-91\" rel=\"nofollow\">Remove</a> function in the ign-sensor Manager the Ogre2GpuRays is freed once through a manual call to Destroy() (based on the above stack trace, pointing to the GpuLidarSensor destructor) and once through the actual <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-124\" rel=\"nofollow\">overridden destructor</a>, creating the issue mentioned above.</p>\n<p>I\u2019m not too familiar with ign-sensors so open to suggestions on how to deal with the issue</p>", "type": "rendered"}, "created_on": "2020-04-01T04:55:12.326132+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-04-01T04:55:12.334279+00:00", "type": "pullrequest_comment", "id": 142998879}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "d3e37dde63c5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d3e37dde63c5.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d3e37dde63c5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fedcadddba99", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/fedcadddba99.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/fedcadddba99"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-04-01T04:35:55.334433+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142785898.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142785898"}}, "parent": {"id": 142749680, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142749680.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142749680"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Ok I updated the Sensors file and the sample world to make it easier to test, you can run the example world, remove the entities through the gui and confirm that they have been removed by listing the topics \\(without the PR they are still there, with the PR they are removed\\).\n\nI _sometimes_ get a segmentation fault when removing objects in this way, but I don\u2019t know if it is a known issue of removing entities or if it\u2019s a regression I should look into. Also the cone removal doesn\u2019t quite work making me think there is something sketchy there.\n\nNow there is starting to be a lot of repeated calls to EachRemoved so I think it might make sense to move it  to RenderUtil, I\u2019ll have a look at what it looks like.", "markup": "markdown", "html": "<p>Ok I updated the Sensors file and the sample world to make it easier to test, you can run the example world, remove the entities through the gui and confirm that they have been removed by listing the topics (without the PR they are still there, with the PR they are removed).</p>\n<p>I <em>sometimes</em> get a segmentation fault when removing objects in this way, but I don\u2019t know if it is a known issue of removing entities or if it\u2019s a regression I should look into. Also the cone removal doesn\u2019t quite work making me think there is something sketchy there.</p>\n<p>Now there is starting to be a lot of repeated calls to EachRemoved so I think it might make sense to move it  to RenderUtil, I\u2019ll have a look at what it looks like.</p>", "type": "rendered"}, "created_on": "2020-03-31T07:33:07.792553+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-31T07:33:07.801494+00:00", "type": "pullrequest_comment", "id": 142785898}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "d3e37dde63c5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/d3e37dde63c5.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/d3e37dde63c5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "653c41af236b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/653c41af236b.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/653c41af236b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-31T07:23:34.125947+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142749680.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142749680"}}, "parent": {"id": 142749451, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142749451.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142749451"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "`sensors_demo.sdf` has a bunch of them. \n\nIf this turns out to be complicated, we can leave it for later. It would be good to leave a `TODO` though.", "markup": "markdown", "html": "<p><code>sensors_demo.sdf</code> has a bunch of them. </p>\n<p>If this turns out to be complicated, we can leave it for later. It would be good to leave a <code>TODO</code> though.</p>", "type": "rendered"}, "created_on": "2020-03-31T02:00:04.525142+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2020-03-31T02:00:04.529908+00:00", "type": "pullrequest_comment", "id": 142749680}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142749613.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142749613"}}, "parent": {"id": 142748512, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142748512.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142748512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Got it, I didn't realize it would be that complicated. I'm ok with the current implementation. We may want to add a comment near the other `EachRemoved` and/or the `EachNew(Camera)` calls just so people know to look for these other `EachRemoved` calls.", "markup": "markdown", "html": "<p>Got it, I didn't realize it would be that complicated. I'm ok with the current implementation. We may want to add a comment near the other <code>EachRemoved</code> and/or the <code>EachNew(Camera)</code> calls just so people know to look for these other <code>EachRemoved</code> calls.</p>", "type": "rendered"}, "created_on": "2020-03-31T01:59:03.301194+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2020-03-31T01:59:03.305651+00:00", "type": "pullrequest_comment", "id": 142749613}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142749451.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142749451"}}, "parent": {"id": 142731352, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142731352.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142731352"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Regarding the other sensors I don\u2019t mind having a look at it, I don\u2019t know how to deal with the stereo cameras case \\(as I mentioned in the PR description\\) though. Do you have any example worlds where I can test the rest of the sensors?", "markup": "markdown", "html": "<p>Regarding the other sensors I don\u2019t mind having a look at it, I don\u2019t know how to deal with the stereo cameras case (as I mentioned in the PR description) though. Do you have any example worlds where I can test the rest of the sensors?</p>", "type": "rendered"}, "created_on": "2020-03-31T01:56:32.736945+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-31T01:56:32.741293+00:00", "type": "pullrequest_comment", "id": 142749451}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142748512.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142748512"}}, "parent": {"id": 142731352, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142731352.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142731352"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "The main reason why I put it in the Sensors system is that we need access to the sensors::Manager class to signal ign-sensor to delete the removed sensor.\n\nThe alternative would probably be to register a callback to be called when a sensor is deleted, similar to what is done by the RenderUtil::SetEnableSensors function. From what I can see the callback can either be called [here](#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-287) \\(in which case I would probably need to introduce a new variable to keep track which entity has a sensor associated with it\\) or [here](#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-889) \\(where the variable wouldn\u2019t be needed but I\u2019m not sure it\u2019s the right place to put it\\).\n\nI don\u2019t have strong feelings either way, I can go for the callback approach if you think it\u2019s cleaner / better.", "markup": "markdown", "html": "<p>The main reason why I put it in the Sensors system is that we need access to the sensors::Manager class to signal ign-sensor to delete the removed sensor.</p>\n<p>The alternative would probably be to register a callback to be called when a sensor is deleted, similar to what is done by the RenderUtil::SetEnableSensors function. From what I can see the callback can either be called <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-287\" rel=\"nofollow\">here</a> (in which case I would probably need to introduce a new variable to keep track which entity has a sensor associated with it) or <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-889\" rel=\"nofollow\">here</a> (where the variable wouldn\u2019t be needed but I\u2019m not sure it\u2019s the right place to put it).</p>\n<p>I don\u2019t have strong feelings either way, I can go for the callback approach if you think it\u2019s cleaner / better.</p>", "type": "rendered"}, "created_on": "2020-03-31T01:41:31.224352+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-31T01:41:31.229437+00:00", "type": "pullrequest_comment", "id": 142748512}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142731352.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142731352"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Is there a reason for this to be here instead of `RenderUtil`? All the `EachRemoved` calls are there, as well as the `EachNew` which creates the sensors.\n\nAlso, would it be too much extra work to also remove the other rendering sensors in this PR? If it is, I think it's fine to start with `Camera` only.", "markup": "markdown", "html": "<p>Is there a reason for this to be here instead of <code>RenderUtil</code>? All the <code>EachRemoved</code> calls are there, as well as the <code>EachNew</code> which creates the sensors.</p>\n<p>Also, would it be too much extra work to also remove the other rendering sensors in this PR? If it is, I think it's fine to start with <code>Camera</code> only.</p>", "type": "rendered"}, "created_on": "2020-03-30T22:01:08.266078+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2020-03-30T22:01:08.269135+00:00", "type": "pullrequest_comment", "id": 142731352}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142730775.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142730775"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "How about `unordered_map`? :wink: ", "markup": "markdown", "html": "<p>How about <code>unordered_map</code>? <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f609.png\" alt=\"\ud83d\ude09\" title=\":wink:\" data-emoji-short-name=\":wink:\" /> </p>", "type": "rendered"}, "created_on": "2020-03-30T21:55:36.339953+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2020-03-30T21:55:36.345028+00:00", "type": "pullrequest_comment", "id": 142730775}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"approval": {"date": "2020-03-30T17:00:01.944883+00:00", "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142510851.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142510851"}}, "parent": {"id": 142479321, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142479321.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142479321"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Looks good! Merged with a few formatting changes \\(I put the code into code tags and indented them\\).", "markup": "markdown", "html": "<p>Looks good! Merged with a few formatting changes (I put the code into code tags and indented them).</p>", "type": "rendered"}, "created_on": "2020-03-30T01:19:18.655615+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-30T01:19:18.659946+00:00", "type": "pullrequest_comment", "id": 142510851}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "dd4ff2a4c111", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/dd4ff2a4c111.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/dd4ff2a4c111"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "6b8cf229c7f4", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/6b8cf229c7f4.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/6b8cf229c7f4"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-30T01:18:02.024998+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142479322.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142479322"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "works good to me, just one minor comment\n\n\u200c", "markup": "markdown", "html": "<p>works good to me, just one minor comment</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-03-28T23:51:35.299552+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-03-28T23:51:35.304794+00:00", "type": "pullrequest_comment", "id": 142479322}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142479321.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142479321"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "The CreateSensor function is private in the sensors system so should be fine. Here are some minor suggestions in the [remove\\_sensors\\_migration](#!/ignitionrobotics/ign-gazebo/commits/e17b7bde269a479320dc7f302793bdbb0e6b656e) branch, mainly just to list out API change in a format similar to [gazebo\u2019s migration guide](https://bitbucket.org/osrf/gazebo/src/gazebo11/Migration.md). Can you take a look and merge if that looks good to you? thanks", "markup": "markdown", "html": "<p>The CreateSensor function is private in the sensors system so should be fine. Here are some minor suggestions in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/commits/e17b7bde269a479320dc7f302793bdbb0e6b656e\" rel=\"nofollow\">remove_sensors_migration</a> branch, mainly just to list out API change in a format similar to <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/gazebo11/Migration.md\" rel=\"nofollow\">gazebo\u2019s migration guide</a>. Can you take a look and merge if that looks good to you? thanks</p>", "type": "rendered"}, "created_on": "2020-03-28T23:51:22.151042+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2020-03-28T23:51:22.153370+00:00", "type": "pullrequest_comment", "id": 142479321}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/141088942.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-141088942"}}, "parent": {"id": 140413468, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140413468.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140413468"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Done [#!/ignitionrobotics/ign-gazebo/commits/1dae1d0aa660bf6f82a18687f1495e70c898eb41](#!/ignitionrobotics/ign-gazebo/commits/1dae1d0aa660bf6f82a18687f1495e70c898eb41)", "markup": "markdown", "html": "<p>Done <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/commits/1dae1d0aa660bf6f82a18687f1495e70c898eb41\" rel=\"nofollow\">#!/ignitionrobotics/ign-gazebo/commits/1dae1d0aa660bf6f82a18687f1495e70c898eb41</a></p>", "type": "rendered"}, "created_on": "2020-03-20T06:16:53.925029+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-20T06:16:53.933586+00:00", "type": "pullrequest_comment", "id": 141088942}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "dd4ff2a4c111", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/dd4ff2a4c111.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/dd4ff2a4c111"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1dae1d0aa660", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/1dae1d0aa660.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/1dae1d0aa660"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-20T06:15:14.070379+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/141088092.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-141088092"}}, "parent": {"id": 140371975, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140371975.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140371975"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "I see, I\u2019m not quite familiar enough with the ECM so I won\u2019t update the documentation, but I think it might be good to do from someone who knows more.", "markup": "markdown", "html": "<p>I see, I\u2019m not quite familiar enough with the ECM so I won\u2019t update the documentation, but I think it might be good to do from someone who knows more.</p>", "type": "rendered"}, "created_on": "2020-03-20T06:07:02.552842+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-20T06:07:02.560414+00:00", "type": "pullrequest_comment", "id": 141088092}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140413468.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140413468"}}, "parent": {"id": 140384061, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140384061.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140384061"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "hmm I see. That\u2019s a tricky one. Maybe we\u2019ll just have to document this change in the [migration guide](#!/ignitionrobotics/ign-gazebo/src/default/Migration.md) so that the users are aware. ", "markup": "markdown", "html": "<p>hmm I see. That\u2019s a tricky one. Maybe we\u2019ll just have to document this change in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/default/Migration.md\" rel=\"nofollow\">migration guide</a> so that the users are aware. </p>", "type": "rendered"}, "created_on": "2020-03-17T08:08:03.545300+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2020-03-17T08:08:03.557679+00:00", "type": "pullrequest_comment", "id": 140413468}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140384061.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140384061"}}, "parent": {"id": 140126773, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140126773.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140126773"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "I\u2019m having some trouble in figuring out this one, since we are using std::move on the function argument I can\u2019t find any non-naive way to have both functions working at the same time \\(where the naive way would be to also duplicate the createSensorCb object\\).  \nI thought about creating a new std::function that works as a bridge \\(i.e. calls the newer one with a default argument for the gazebo Entity\\) but that would make it impossible to use std::move.", "markup": "markdown", "html": "<p>I\u2019m having some trouble in figuring out this one, since we are using std::move on the function argument I can\u2019t find any non-naive way to have both functions working at the same time (where the naive way would be to also duplicate the createSensorCb object).<br />\nI thought about creating a new std::function that works as a bridge (i.e. calls the newer one with a default argument for the gazebo Entity) but that would make it impossible to use std::move.</p>", "type": "rendered"}, "created_on": "2020-03-17T03:22:06.319838+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-17T03:22:06.329765+00:00", "type": "pullrequest_comment", "id": 140384061}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140371975.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140371975"}}, "parent": {"id": 140169157, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140169157.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140169157"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "I think that might be an error in the documentation. It should actually be the reverse. Calling `EachRemoved` inside `PreUpdate` is not guaranteed to return the same set of entities for every system because systems can modify the ECM in the `PreUpdate` functions. [These comments](#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/test/integration/each_new_removed.cc#lines-178) agree with that.", "markup": "markdown", "html": "<p>I think that might be an error in the documentation. It should actually be the reverse. Calling <code>EachRemoved</code> inside <code>PreUpdate</code> is not guaranteed to return the same set of entities for every system because systems can modify the ECM in the <code>PreUpdate</code> functions. <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/test/integration/each_new_removed.cc#lines-178\" rel=\"nofollow\">These comments</a> agree with that.</p>", "type": "rendered"}, "created_on": "2020-03-16T23:56:54.722075+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {}, "updated_on": "2020-03-16T23:56:54.728861+00:00", "type": "pullrequest_comment", "id": 140371975}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "dd4ff2a4c111", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/dd4ff2a4c111.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/dd4ff2a4c111"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc58f6c679ad", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/cc58f6c679ad.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/cc58f6c679ad"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-16T05:30:23.554565+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140169157.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140169157"}}, "parent": {"id": 140126719, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140126719.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140126719"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "I like the EachRemoved idea and saw that it has been used before as well so might go for that.  \nA question though, I noticed that in the [documentation of the function definition](#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/include/ignition/gazebo/EntityComponentManager.hh#lines-398) it says that it should only be called in the PreUpdate system function \\(so was planning to override it and add it there\\), but I noticed with a quick grep through the source that all the sensor systems have it in the [PostUpdate](#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/src/systems/altimeter/Altimeter.cc#lines-114), which is the right way?", "markup": "markdown", "html": "<p>I like the EachRemoved idea and saw that it has been used before as well so might go for that.<br />\nA question though, I noticed that in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/include/ignition/gazebo/EntityComponentManager.hh#lines-398\" rel=\"nofollow\">documentation of the function definition</a> it says that it should only be called in the PreUpdate system function (so was planning to override it and add it there), but I noticed with a quick grep through the source that all the sensor systems have it in the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/src/systems/altimeter/Altimeter.cc#lines-114\" rel=\"nofollow\">PostUpdate</a>, which is the right way?</p>", "type": "rendered"}, "created_on": "2020-03-16T03:06:11.099683+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {}, "updated_on": "2020-03-16T03:06:11.108302+00:00", "type": "pullrequest_comment", "id": 140169157}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140126773.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140126773"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "I think this can be considered a breaking change. So we\u2019ll need to create a new overloaded `SetEnableSensors` function and deprecate this one.", "markup": "markdown", "html": "<p>I think this can be considered a breaking change. So we\u2019ll need to create a new overloaded <code>SetEnableSensors</code> function and deprecate this one.</p>", "type": "rendered"}, "created_on": "2020-03-14T00:17:32.673506+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2020-03-14T00:17:32.678489+00:00", "type": "pullrequest_comment", "id": 140126773}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/140126719.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-140126719"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "instead of looping through all sensors and checking every iteration, a couple of ideas are:\n\n* Use `EachRemoved` to check for entities that are removed in the `Sensors.cc` , [example](#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/src/rendering/RenderUtil.cc#lines-889)\n* pass another function callback, e.g. `removeSensorCb`, on `SetEnableSensors`. We could then invoke that function when entities are removed in `SceneManager`\n\n\u200c", "markup": "markdown", "html": "<p>instead of looping through all sensors and checking every iteration, a couple of ideas are:</p>\n<ul>\n<li>Use <code>EachRemoved</code> to check for entities that are removed in the <code>Sensors.cc</code> , <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/dd4ff2a4c1112a8727c12a2e927e87ca64392611/src/rendering/RenderUtil.cc#lines-889\" rel=\"nofollow\">example</a></li>\n<li>pass another function callback, e.g. <code>removeSensorCb</code>, on <code>SetEnableSensors</code>. We could then invoke that function when entities are removed in <code>SceneManager</code></li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-03-14T00:14:27.931112+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "inline": {}, "updated_on": "2020-03-14T00:14:27.938111+00:00", "type": "pullrequest_comment", "id": 140126719}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "dd4ff2a4c111", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/dd4ff2a4c111.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/dd4ff2a4c111"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a1dc5399e7cc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/a1dc5399e7cc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/a1dc5399e7cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-13T08:24:13.298055+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}, {"update": {"description": "This PR adds support for removing sensor at runtime. I found the need for this feature while working on the ModelPropShop plugin porting \\(since I couldn\u2019t find a way to pause the camera and prevent it from creating additional images I thought I would delete it once all the images have been taken\\).\r\n\r\nThe idea behind the implementation is that we will keep a map that maps ignition::sensor sensor Ids to their corresponding gazebo entities. At each PostUpdate call we iterate through the map and make sure that each entity still exists. If it doesn\u2019t we trigger cleanup of _most_ resources \\(I still didn\u2019t find a good way to cleanup the cameras structure, I might need to introduce an additional map\\).\r\n\r\nIt can be tested with my _very ugly hacky wip branch_ model\\_propshop, by running\r\n\r\n```\r\nign gazebo propshop.sdf -v 4 -r\r\n```\r\n\r\nWithout the PR merged the thumbnails directory will keep getting populated with invalid images \\(and the camera topic will keep being visible in the Image display plugin\\).\r\n\r\nWith the PR, the thumbnails will stop being generated and the topic will stop being shown.\r\n\r\nNow the parts where I\u2019d be happy to get some input:\r\n\r\n* Cleaning up the cameras structure is a bit tricky. I could change the cameras structure to a map <string, vector<Cameras> and keep the first entry of the vector as the parent and all the rest of the cameras as the children, then delete the entry only when all the cameras have been deleted. This however creates the issue, what should we do if only the parent camera of a set is deleted? Do we find a new parent? Delete the whole set? I wouldn\u2019t even know what behavior would be acceptable in that case.\r\n* Is the implementation idea generally OK? My first implementation iterated over the sensor list only once in the PostUpdate function but made the code in there a bit of a mess so decided to split into a separate function. Also I couldn\u2019t find a way to do it without breaking API and introducing the new map / changing the function signature.\r\n\r\n    \r\n\r\n\r\n\r\n\u200c", "title": "Added support for removing sensors at runtime", "destination": {"commit": {"hash": "dd4ff2a4c111", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/dd4ff2a4c111.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/dd4ff2a4c111"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a1dc5399e7cc", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/a1dc5399e7cc.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/a1dc5399e7cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "remove_sensors"}}, "state": "OPEN", "author": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "date": "2020-03-13T08:24:13.261886+00:00"}, "pull_request": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}}]}