{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143528772.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143528772"}}, "parent": {"id": 143406572, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143406572.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143406572"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "OK! I opened a small PR in ign-rendering to cleanup the rest of the resources in the Ogre2GpuRay Destroy\\(\\) function \\(and avoid the Ogre2 exception that was happening before\\): [#!/ignitionrobotics/ign-rendering/pull-requests/258](#!/ignitionrobotics/ign-rendering/pull-requests/258)\n\nThe Ogre1 segmentation faults are a bit tougher to debug, I didn\u2019t get any since I introduced cleanup of the [activeSensors structure](#!/ignitionrobotics/ign-gazebo/commits/0997a31f75bd4b06afa4e053c7b723635e521242), but even before that they were not happening 100% of the times \\(the segfault was on accessing [sensor here](#!/ignitionrobotics/ign-gazebo/src/0997a31f75bd4b06afa4e053c7b723635e521242/src/systems/sensors/Sensors.cc#lines-220), probably due to a dangling pointer\\).\n\nWhile merging the latest default I tried it on the thermal camera and it also worked with no changes, the nice thing about the callback approach is that there is no need to add manual EachRemoved functions. For testing reasons I added it to the sensors\\_demo.sdf world.", "markup": "markdown", "html": "<p>OK! I opened a small PR in ign-rendering to cleanup the rest of the resources in the Ogre2GpuRay Destroy() function (and avoid the Ogre2 exception that was happening before): <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/pull-requests/258\" rel=\"nofollow\">#!/ignitionrobotics/ign-rendering/pull-requests/258</a></p>\n<p>The Ogre1 segmentation faults are a bit tougher to debug, I didn\u2019t get any since I introduced cleanup of the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/commits/0997a31f75bd4b06afa4e053c7b723635e521242\" rel=\"nofollow\">activeSensors structure</a>, but even before that they were not happening 100% of the times (the segfault was on accessing <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/0997a31f75bd4b06afa4e053c7b723635e521242/src/systems/sensors/Sensors.cc#lines-220\" rel=\"nofollow\">sensor here</a>, probably due to a dangling pointer).</p>\n<p>While merging the latest default I tried it on the thermal camera and it also worked with no changes, the nice thing about the callback approach is that there is no need to add manual EachRemoved functions. For testing reasons I added it to the sensors_demo.sdf world.</p>", "type": "rendered"}, "created_on": "2020-04-03T10:53:47.492971+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-04-03T10:53:47.498923+00:00", "type": "pullrequest_comment", "id": 143528772}