{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142748512.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:6b8cf229c7f4..dd4ff2a4c111?path=src%2Fsystems%2Fsensors%2FSensors.cc"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142748512"}}, "parent": {"id": 142731352, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142731352.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142731352"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "The main reason why I put it in the Sensors system is that we need access to the sensors::Manager class to signal ign-sensor to delete the removed sensor.\n\nThe alternative would probably be to register a callback to be called when a sensor is deleted, similar to what is done by the RenderUtil::SetEnableSensors function. From what I can see the callback can either be called [here](#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-287) \\(in which case I would probably need to introduce a new variable to keep track which entity has a sensor associated with it\\) or [here](#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-889) \\(where the variable wouldn\u2019t be needed but I\u2019m not sure it\u2019s the right place to put it\\).\n\nI don\u2019t have strong feelings either way, I can go for the callback approach if you think it\u2019s cleaner / better.", "markup": "markdown", "html": "<p>The main reason why I put it in the Sensors system is that we need access to the sensors::Manager class to signal ign-sensor to delete the removed sensor.</p>\n<p>The alternative would probably be to register a callback to be called when a sensor is deleted, similar to what is done by the RenderUtil::SetEnableSensors function. From what I can see the callback can either be called <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-287\" rel=\"nofollow\">here</a> (in which case I would probably need to introduce a new variable to keep track which entity has a sensor associated with it) or <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/6b8cf229c7f413117480ab4a280c1abdd24212df/src/rendering/RenderUtil.cc#lines-889\" rel=\"nofollow\">here</a> (where the variable wouldn\u2019t be needed but I\u2019m not sure it\u2019s the right place to put it).</p>\n<p>I don\u2019t have strong feelings either way, I can go for the callback approach if you think it\u2019s cleaner / better.</p>", "type": "rendered"}, "created_on": "2020-03-31T01:41:31.224352+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "inline": {"to": 302, "from": null, "outdated": true, "path": "src/systems/sensors/Sensors.cc"}, "updated_on": "2020-03-31T01:41:31.229437+00:00", "type": "pullrequest_comment", "id": 142748512}