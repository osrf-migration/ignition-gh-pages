{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143406572.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143406572"}}, "parent": {"id": 143285406, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/143285406.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-143285406"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "some info about the Destroy functions: there were always some problems with cleaning up objects in ign-rendering. Mainly when the shared pointers go out of scope either in a non-rendering thread or after the engine has been shut down, and this led to crashes. We started adding Destroy functions so we can explicitly clean up objects. We also reused this function in the destructor, e.g. for cases such as temporary objects naturally going out of scope. As the result, we end up with the situation that you run into where the function gets called twice. We started making Destroy functions safe to call multiple times as issues come up. So long story short, setting the pointers null  after deletion is probably good for now as it may not be an easy fix", "markup": "markdown", "html": "<p>some info about the Destroy functions: there were always some problems with cleaning up objects in ign-rendering. Mainly when the shared pointers go out of scope either in a non-rendering thread or after the engine has been shut down, and this led to crashes. We started adding Destroy functions so we can explicitly clean up objects. We also reused this function in the destructor, e.g. for cases such as temporary objects naturally going out of scope. As the result, we end up with the situation that you run into where the function gets called twice. We started making Destroy functions safe to call multiple times as issues come up. So long story short, setting the pointers null  after deletion is probably good for now as it may not be an easy fix</p>", "type": "rendered"}, "created_on": "2020-04-02T18:18:32.078147+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2020-04-02T18:23:54.965919+00:00", "type": "pullrequest_comment", "id": 143406572}