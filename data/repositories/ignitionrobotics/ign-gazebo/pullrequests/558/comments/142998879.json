{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558/comments/142998879.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558/_/diff#comment-142998879"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 558, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/558.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/558"}}, "title": "Added support for removing sensors at runtime"}, "content": {"raw": "Ok in an effort to remove all the different types of sensors I changed the approach to be callback based.  \nI\u2019m getting a segmentation fault on removal of Ogre2 GPU lidars \\(at least\\), the issue is due to a double freeing of the Ogre2GpuRays object.\n\nSpecifically, the Ogre2GpuRay Destroy function is called twice, once on destruction of the actual object \\(it is being tracked through a unique\\_ptr hence it is destructed on deletion of the pointer\\) and once with this backtrace:\n\n```\n(gdb) where\n#0  ignition::rendering::v4::Ogre2GpuRays::Destroy() () at /home/luca/ws_citadel/src/ign-rendering/ogre2/src/Ogre2GpuRays.cc:147\n#1  0x00007fffc04aea23 in ignition::rendering::v4::BaseStore<ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor>::DestroyImpl (this=<optimized out>, _iter=...) at /home/luca/ws_citadel/src/ign-rendering/include/ignition/rendering/base/BaseStorage.hh:953\n#2  0x00007fffc04ae7d0 in ignition::rendering::v4::BaseStore<ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor>::Destroy (this=0x7fffbc415790, _object=...) at /usr/include/c++/8/bits/shared_ptr_base.h:1167\n#3  0x00007fffc14535dd in ignition::rendering::v4::BaseScene::DestroySensor(std::shared_ptr<ignition::rendering::v4::Sensor>, bool) ()\n    at /usr/include/c++/8/ext/atomicity.h:96\n#4  0x00007fffa0f86403 in ignition::sensors::v4::GpuLidarSensor::RemoveGpuRays(std::shared_ptr<ignition::rendering::v4::Scene>) ()\n    at /usr/include/c++/8/ext/atomicity.h:96\n#5  0x00007fffa0f86fb4 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=<optimized out>)\n    at /home/luca/ws_citadel/src/ign-sensors/src/GpuLidarSensor.cc:59\n#6  0x00007fffa0f872b9 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=<optimized out>)\n    at /home/luca/ws_citadel/src/ign-sensors/src/GpuLidarSensor.cc:57\n#7  0x00007fffc167a563 in std::default_delete<ignition::sensors::v4::Sensor>::operator() (this=0x7fffbc45cd00, __ptr=<optimized out>)\n    at /usr/include/c++/8/bits/unique_ptr.h:350\n#8  std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> >::~unique_ptr (this=0x7fffbc45cd00, \n    __in_chrg=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:277\n#9  std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >::~pair (this=0x7fffbc45ccf8, __in_chrg=<optimized out>) at /usr/include/c++/8/bits/stl_pair.h:208\n#10 __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> >::destroy<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > (this=<optimized out>, __p=0x7fffbc45ccf8)\n    at /usr/include/c++/8/ext/new_allocator.h:140\n#11 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> > >::destroy<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > (__a=..., __p=0x7fffbc45ccf8)\n    at /usr/include/c++/8/bits/alloc_traits.h:487\n#12 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, false> > >::_M_deallocate_node (__n=0x7fffbc45ccf0, \n    this=<optimized out>) at /usr/include/c++/8/bits/hashtable_policy.h:2111\n#13 0x00007fffc167ae91 in std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase (__n=<optimized out>, __prev_n=<optimized out>, __bkt=<optimized out>, this=0x55555705a070)\n    at /usr/include/c++/8/bits/hashtable_policy.h:341\n#14 std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase (this=0x55555705a070, __k=@0x7fffc14189f8: 2) at /usr/include/c++/8/bits/hashtable.h:1929\n#15 0x00007fffc167ab6e in std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > >, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase (__k=@0x7fffc14189f8: 2, this=<optimized out>) at /usr/include/c++/8/bits/hashtable.h:765\n#16 std::unordered_map<unsigned long, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> >, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::unique_ptr<ignition::sensors::v4::Sensor, std::default_delete<ignition::sensors::v4::Sensor> > > > >::erase (__x=@0x7fffc14189f8: 2, this=<optimized out>)\n    at /usr/include/c++/8/bits/unordered_map.h:815\n#17 ignition::sensors::v4::Manager::Remove(unsigned long) () at /home/luca/ws_citadel/src/ign-sensors/src/Manager.cc:96\n#18 0x00007fffc1f6c5cc in ignition::gazebo::v4::systems::Sensors::RemoveSensor(unsigned long const&) ()\n    at /usr/include/c++/8/bits/unique_ptr.h:345\n#19 0x00007fffc1d02ff9 in std::function<void (unsigned long const&)>::operator()(unsigned long const&) const (\n    __args#0=@0x7fffb40012a0: 17, this=<optimized out>) at /usr/include/c++/8/bits/std_function.h:682\n#20 ignition::gazebo::v4::RenderUtil::Update() () at /home/luca/ws_citadel/src/ign-gazebo/src/rendering/RenderUtil.cc:308\n#21 0x00007fffc1f6dd99 in ignition::gazebo::v4::systems::SensorsPrivate::RunOnce() ()\n    at /home/luca/ws_citadel/src/ign-gazebo/src/systems/sensors/Sensors.cc:206\n#22 0x00007fffc1f6e0a8 in ignition::gazebo::v4::systems::SensorsPrivate::RenderThread() ()\n    at /home/luca/ws_citadel/src/ign-gazebo/src/systems/sensors/Sensors.cc:264\n#23 0x00007ffff11f26df in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#24 0x00007ffff731b6db in start_thread (arg=0x7fffc1419700) at pthread_create.c:463\n#25 0x00007ffff765488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\n\nBasically when we reach the [Remove](#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/Manager.cc#lines-91) function in the ign-sensor Manager the Ogre2GpuRays is freed once through a manual call to Destroy\\(\\) \\(based on the above stack trace, pointing to the GpuLidarSensor destructor\\) and once through the actual [overridden destructor](#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-124), creating the issue mentioned above.\n\nI\u2019m not too familiar with ign-sensors so open to suggestions on how to deal with the issue", "markup": "markdown", "html": "<p>Ok in an effort to remove all the different types of sensors I changed the approach to be callback based.<br />\nI\u2019m getting a segmentation fault on removal of Ogre2 GPU lidars (at least), the issue is due to a double freeing of the Ogre2GpuRays object.</p>\n<p>Specifically, the Ogre2GpuRay Destroy function is called twice, once on destruction of the actual object (it is being tracked through a unique_ptr hence it is destructed on deletion of the pointer) and once with this backtrace:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span> <span class=\"n\">where</span>\n<span class=\"cp\">#0  ignition::rendering::v4::Ogre2GpuRays::Destroy() () at /home/luca/ws_citadel/src/ign-rendering/ogre2/src/Ogre2GpuRays.cc:147</span>\n<span class=\"cp\">#1  0x00007fffc04aea23 in ignition::rendering::v4::BaseStore&lt;ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor&gt;::DestroyImpl (this=&lt;optimized out&gt;, _iter=...) at /home/luca/ws_citadel/src/ign-rendering/include</span><span class=\"cpf\">/ignition/rendering/base/BaseStorage.hh:953</span><span class=\"cp\"></span>\n<span class=\"cp\">#2  0x00007fffc04ae7d0 in ignition::rendering::v4::BaseStore&lt;ignition::rendering::v4::Sensor, ignition::rendering::v4::Ogre2Sensor&gt;::Destroy (this=0x7fffbc415790, _object=...) at /usr/include</span><span class=\"cpf\">/c++/8/bits/shared_ptr_base.h:1167</span><span class=\"cp\"></span>\n<span class=\"cp\">#3  0x00007fffc14535dd in ignition::rendering::v4::BaseScene::DestroySensor(std::shared_ptr&lt;ignition::rendering::v4::Sensor&gt;, bool) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">atomicity</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">96</span>\n<span class=\"cp\">#4  0x00007fffa0f86403 in ignition::sensors::v4::GpuLidarSensor::RemoveGpuRays(std::shared_ptr&lt;ignition::rendering::v4::Scene&gt;) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">atomicity</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">96</span>\n<span class=\"cp\">#5  0x00007fffa0f86fb4 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">GpuLidarSensor</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">59</span>\n<span class=\"cp\">#6  0x00007fffa0f872b9 in ignition::sensors::v4::GpuLidarSensor::~GpuLidarSensor (this=0x7fffbc34f9d0, __in_chrg=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">GpuLidarSensor</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">57</span>\n<span class=\"cp\">#7  0x00007fffc167a563 in std::default_delete&lt;ignition::sensors::v4::Sensor&gt;::operator() (this=0x7fffbc45cd00, __ptr=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">350</span>\n<span class=\"cp\">#8  std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt;::~unique_ptr (this=0x7fffbc45cd00, </span>\n    <span class=\"n\">__in_chrg</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">277</span>\n<span class=\"cp\">#9  std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;::~pair (this=0x7fffbc45ccf8, __in_chrg=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/c++/8/bits/stl_pair.h:208</span><span class=\"cp\"></span>\n<span class=\"cp\">#10 __gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; (this=&lt;optimized out&gt;, __p=0x7fffbc45ccf8)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">ext</span><span class=\"o\">/</span><span class=\"n\">new_allocator</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">140</span>\n<span class=\"cp\">#11 std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; (__a=..., __p=0x7fffbc45ccf8)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">alloc_traits</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">487</span>\n<span class=\"cp\">#12 std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (__n=0x7fffbc45ccf0, </span>\n    <span class=\"n\">this</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">hashtable_policy</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">2111</span>\n<span class=\"cp\">#13 0x00007fffc167ae91 in std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (__n=&lt;optimized out&gt;, __prev_n=&lt;optimized out&gt;, __bkt=&lt;optimized out&gt;, this=0x55555705a070)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">hashtable_policy</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">341</span>\n<span class=\"cp\">#14 std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (this=0x55555705a070, __k=@0x7fffc14189f8: 2) at /usr/include</span><span class=\"cpf\">/c++/8/bits/hashtable.h:1929</span><span class=\"cp\"></span>\n<span class=\"cp\">#15 0x00007fffc167ab6e in std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (__k=@0x7fffc14189f8: 2, this=&lt;optimized out&gt;) at /usr/include</span><span class=\"cpf\">/c++/8/bits/hashtable.h:765</span><span class=\"cp\"></span>\n<span class=\"cp\">#16 std::unordered_map&lt;unsigned long, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt;, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;ignition::sensors::v4::Sensor, std::default_delete&lt;ignition::sensors::v4::Sensor&gt; &gt; &gt; &gt; &gt;::erase (__x=@0x7fffc14189f8: 2, this=&lt;optimized out&gt;)</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unordered_map</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">815</span>\n<span class=\"cp\">#17 ignition::sensors::v4::Manager::Remove(unsigned long) () at /home/luca/ws_citadel/src/ign-sensors/src/Manager.cc:96</span>\n<span class=\"cp\">#18 0x00007fffc1f6c5cc in ignition::gazebo::v4::systems::Sensors::RemoveSensor(unsigned long const&amp;) ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">unique_ptr</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">345</span>\n<span class=\"cp\">#19 0x00007fffc1d02ff9 in std::function&lt;void (unsigned long const&amp;)&gt;::operator()(unsigned long const&amp;) const (</span>\n    <span class=\"n\">__args</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"o\">=</span><span class=\"mh\">@0x7fffb40012a0</span><span class=\"o\">:</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"n\">this</span><span class=\"o\">=&lt;</span><span class=\"n\">optimized</span> <span class=\"k\">out</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">++/</span><span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"n\">bits</span><span class=\"o\">/</span><span class=\"n\">std_function</span><span class=\"p\">.</span><span class=\"nl\">h</span><span class=\"p\">:</span><span class=\"mi\">682</span>\n<span class=\"cp\">#20 ignition::gazebo::v4::RenderUtil::Update() () at /home/luca/ws_citadel/src/ign-gazebo/src/rendering/RenderUtil.cc:308</span>\n<span class=\"cp\">#21 0x00007fffc1f6dd99 in ignition::gazebo::v4::systems::SensorsPrivate::RunOnce() ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">systems</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">Sensors</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">206</span>\n<span class=\"cp\">#22 0x00007fffc1f6e0a8 in ignition::gazebo::v4::systems::SensorsPrivate::RenderThread() ()</span>\n    <span class=\"n\">at</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">luca</span><span class=\"o\">/</span><span class=\"n\">ws_citadel</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">gazebo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">systems</span><span class=\"o\">/</span><span class=\"n\">sensors</span><span class=\"o\">/</span><span class=\"n\">Sensors</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">264</span>\n<span class=\"cp\">#23 0x00007ffff11f26df in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6</span>\n<span class=\"cp\">#24 0x00007ffff731b6db in start_thread (arg=0x7fffc1419700) at pthread_create.c:463</span>\n<span class=\"cp\">#25 0x00007ffff765488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95</span>\n</pre></div>\n\n\n<p>Basically when we reach the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-sensors/src/d11378818fbeb223549c5881da415c9d7e3ee583/src/Manager.cc#lines-91\" rel=\"nofollow\">Remove</a> function in the ign-sensor Manager the Ogre2GpuRays is freed once through a manual call to Destroy() (based on the above stack trace, pointing to the GpuLidarSensor destructor) and once through the actual <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-rendering/src/2b5ae0cbbf263958ddceb869f8b0441176ad905b/ogre2/src/Ogre2GpuRays.cc#lines-124\" rel=\"nofollow\">overridden destructor</a>, creating the issue mentioned above.</p>\n<p>I\u2019m not too familiar with ign-sensors so open to suggestions on how to deal with the issue</p>", "type": "rendered"}, "created_on": "2020-04-01T04:55:12.326132+00:00", "user": {"display_name": "Luca Della Vedova", "uuid": "{dff01cd5-37c0-4865-84bc-7e6bc480a09c}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D"}, "html": {"href": "https://bitbucket.org/%7Bdff01cd5-37c0-4865-84bc-7e6bc480a09c%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5b24bfc2f4a3853203ffffb2a97b47dbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLV-3.png"}}, "nickname": "luca_della_vedova", "type": "user", "account_id": "557058:798a6cdf-d171-444d-b8af-5d088f9feb2d"}, "updated_on": "2020-04-01T04:55:12.334279+00:00", "type": "pullrequest_comment", "id": 142998879}