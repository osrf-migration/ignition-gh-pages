{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/551/comments/143429804.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/551/_/diff#comment-143429804"}}, "parent": {"id": 142983471, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/551/comments/142983471.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/551/_/diff#comment-142983471"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 551, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/551.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/551"}}, "title": "Pose commands from inspector"}, "content": {"raw": "After banging my head against these for a while, I decided to take the simplest approach for now: force the minimum size of the inspector to be large enough to display 6-digit precision spin boxes: b6b48be\n\nI also realized that lights can't be moved yet, so I disabled it.\n\nI was also seeing some weird behaviour with the icons not updating and fixed that.\n\nFinally, I noticed that there's a loss of precision when calling `ComponentInspector.OnPose`. Even though `double` types are being used on both the QML and the C++, when the number gets to C++ it's truncated. I researched a bit and it sounded like Qt5 should be doing the right thing, unless we compiled with the `-qreal float` option, which I think we didn't. I didn't look any further and left a `TODO` in the code.\n\n---\n\nSome of the things I tried, for the record:\n\n* Forcing the side panel to expand as needed by the current numbers being displayed. It turned out to be complicated to propagate the desired width all the way from `Pose3d.qml` to the panel.\n* Eliding the numbers - I started looking deep into the child components of `SpinBox` and ended up so deep, and accessing so many \"private\" members, that I think it would be risky to rely on this.\n* Storing the actual number and the \"display\" number separately. The logic became quite involved, and in the end the behaviour may take users by surprised. I was storing the decimals that were hidden, and if the user edited the box when less decimals were displayed, I'd append those decimals to the command. But what if the user really meant to clean up those?", "markup": "markdown", "html": "<p>After banging my head against these for a while, I decided to take the simplest approach for now: force the minimum size of the inspector to be large enough to display 6-digit precision spin boxes: <a href=\"#!/ignitionrobotics/ign-gazebo/commits/b6b48be\" rel=\"nofollow\" class=\"ap-connect-link\">b6b48be</a></p>\n<p>I also realized that lights can't be moved yet, so I disabled it.</p>\n<p>I was also seeing some weird behaviour with the icons not updating and fixed that.</p>\n<p>Finally, I noticed that there's a loss of precision when calling <code>ComponentInspector.OnPose</code>. Even though <code>double</code> types are being used on both the QML and the C++, when the number gets to C++ it's truncated. I researched a bit and it sounded like Qt5 should be doing the right thing, unless we compiled with the <code>-qreal float</code> option, which I think we didn't. I didn't look any further and left a <code>TODO</code> in the code.</p>\n<hr />\n<p>Some of the things I tried, for the record:</p>\n<ul>\n<li>Forcing the side panel to expand as needed by the current numbers being displayed. It turned out to be complicated to propagate the desired width all the way from <code>Pose3d.qml</code> to the panel.</li>\n<li>Eliding the numbers - I started looking deep into the child components of <code>SpinBox</code> and ended up so deep, and accessing so many \"private\" members, that I think it would be risky to rely on this.</li>\n<li>Storing the actual number and the \"display\" number separately. The logic became quite involved, and in the end the behaviour may take users by surprised. I was storing the decimals that were hidden, and if the user edited the box when less decimals were displayed, I'd append those decimals to the command. But what if the user really meant to clean up those?</li>\n</ul>", "type": "rendered"}, "created_on": "2020-04-02T21:03:42.336747+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-04-02T21:03:42.341911+00:00", "type": "pullrequest_comment", "id": 143429804}