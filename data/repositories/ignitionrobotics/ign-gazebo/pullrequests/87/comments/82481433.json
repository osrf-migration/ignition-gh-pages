{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/87/comments/82481433.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/87/_/diff#comment-82481433"}}, "parent": {"id": 82481165, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/87/comments/82481165.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/87/_/diff#comment-82481165"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 87, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/87.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/87"}}, "title": "Change signature of Configure to use a raw pointer"}, "content": {"raw": "One potential argument for the `sdf::ConstElementPtr` might be for systems that will be loading its own plugins later on, and those plugins might want to see some configuration info that was passed during `Configure(~)` but not saved by the System because the System simply didn\u2019t know to save it \\(maybe there are plugin-specific fields that the System didn\u2019t know about\\).\n\nIf the System can save a shared reference to the `Element`, it could ensure that this information will be available to the plugin later on.  Since `Element` has a `std::unique_ptr<T>` member, I don\u2019t think it can support value copying, so hanging onto a shared reference is the System\u2019s best bet.", "markup": "markdown", "html": "<p>One potential argument for the <code>sdf::ConstElementPtr</code> might be for systems that will be loading its own plugins later on, and those plugins might want to see some configuration info that was passed during <code>Configure(~)</code> but not saved by the System because the System simply didn\u2019t know to save it (maybe there are plugin-specific fields that the System didn\u2019t know about).</p>\n<p>If the System can save a shared reference to the <code>Element</code>, it could ensure that this information will be available to the plugin later on.  Since <code>Element</code> has a <code>std::unique_ptr&lt;T&gt;</code> member, I don\u2019t think it can support value copying, so hanging onto a shared reference is the System\u2019s best bet.</p>", "type": "rendered"}, "created_on": "2018-11-15T05:06:16.623791+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-11-15T05:06:16.633107+00:00", "type": "pullrequest_comment", "id": 82481433}