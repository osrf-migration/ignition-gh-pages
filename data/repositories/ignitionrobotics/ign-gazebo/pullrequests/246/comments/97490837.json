{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246/comments/97490837.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246/_/diff#comment-97490837"}}, "parent": {"id": 97483875, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246/comments/97483875.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246/_/diff#comment-97483875"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 246, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246"}}, "title": "Add JointController system"}, "content": {"raw": "Thanks for the feedback @chapulina \n\n> We're still coming up with the strategy for updating systems in parallel and how to handle multiple systems changing \\(or adding to\\) the same component during the same iteration.\n\nThis is something that came in my mind while I was writing the previous comment. Beyond your observation, I still find confusing to understand the order of execution of the systems. A naive approach could be following the order of their declaration in the sdf  file. But what about the plugins that have been added through APIs \\(ServerConfig\\)? I had this situation recently and if I recall, the sdf plugins have the precedence over ServerConfig, but I should double check it. However, this is not really what users might want. Considering only the physic plugin, which in this view has a very high priority \\(declared in the sdf, in its top section\\), I would expect its `UpdatePhysics` to be called after the callbacks of all other systems before its `Step` \\(in order to get all the components that system might have addeed in the ECM\\), and its `UpdatedSim` to be called before the callbacks of other systems \\(in order to update the values of the components right after the physic integration, that are probably consumed by other systems\\). Should the physic system be a special system? These are all examples of design choices \\(and, beyond yours, there are also other ones\\) that still have to be properly sorted out.", "markup": "markdown", "html": "<p>Thanks for the feedback @chapulina </p>\n<blockquote>\n<p>We're still coming up with the strategy for updating systems in parallel and how to handle multiple systems changing (or adding to) the same component during the same iteration.</p>\n</blockquote>\n<p>This is something that came in my mind while I was writing the previous comment. Beyond your observation, I still find confusing to understand the order of execution of the systems. A naive approach could be following the order of their declaration in the sdf  file. But what about the plugins that have been added through APIs (ServerConfig)? I had this situation recently and if I recall, the sdf plugins have the precedence over ServerConfig, but I should double check it. However, this is not really what users might want. Considering only the physic plugin, which in this view has a very high priority (declared in the sdf, in its top section), I would expect its <code>UpdatePhysics</code> to be called after the callbacks of all other systems before its <code>Step</code> (in order to get all the components that system might have addeed in the ECM), and its <code>UpdatedSim</code> to be called before the callbacks of other systems (in order to update the values of the components right after the physic integration, that are probably consumed by other systems). Should the physic system be a special system? These are all examples of design choices (and, beyond yours, there are also other ones) that still have to be properly sorted out.</p>", "type": "rendered"}, "created_on": "2019-04-03T18:14:56.754166+00:00", "user": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "updated_on": "2019-04-03T18:14:56.883677+00:00", "type": "pullrequest_comment", "id": 97490837}