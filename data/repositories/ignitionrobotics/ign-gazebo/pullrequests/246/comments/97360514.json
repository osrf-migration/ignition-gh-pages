{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246/comments/97360514.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246/_/diff#comment-97360514"}}, "parent": {"id": 97356665, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246/comments/97356665.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246/_/diff#comment-97356665"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 246, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/246.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/246"}}, "title": "Add JointController system"}, "content": {"raw": "> I think it's not necessarily bad to offer this option to users\n\nIt\u2019s not wrong to be able to set velocity directly when initializing a scenario, but it\u2019s very bad practice to directly modify state as a means of controlling a simulation, and we shouldn\u2019t be engaging in that practice, full-stop. This kind of practice is how pernicious bugs trickle their way into simulation code and lead to explosions and instability.\n\nIt\u2019s fine for now as we\u2019re testing and developing the overall ECS framework, but this means of controlling robots should not go into production code anywhere, and it shouldn\u2019t be used by anyone as a reference for how to control a robot.\n\n> I was actually just thinking that we may want to rename this plugin to something like `JointSetVelocity`\n\nThe ability to set velocity directly should only be presented in the context of initializing a simulation. I would not object to a plugin that directly sets the velocity in order to programmatically initialize the physics, but any instance of setting velocity outside of that context should not be encouraged.", "markup": "markdown", "html": "<blockquote>\n<p>I think it's not necessarily bad to offer this option to users</p>\n</blockquote>\n<p>It\u2019s not wrong to be able to set velocity directly when initializing a scenario, but it\u2019s very bad practice to directly modify state as a means of controlling a simulation, and we shouldn\u2019t be engaging in that practice, full-stop. This kind of practice is how pernicious bugs trickle their way into simulation code and lead to explosions and instability.</p>\n<p>It\u2019s fine for now as we\u2019re testing and developing the overall ECS framework, but this means of controlling robots should not go into production code anywhere, and it shouldn\u2019t be used by anyone as a reference for how to control a robot.</p>\n<blockquote>\n<p>I was actually just thinking that we may want to rename this plugin to something like <code>JointSetVelocity</code></p>\n</blockquote>\n<p>The ability to set velocity directly should only be presented in the context of initializing a simulation. I would not object to a plugin that directly sets the velocity in order to programmatically initialize the physics, but any instance of setting velocity outside of that context should not be encouraged.</p>", "type": "rendered"}, "created_on": "2019-04-03T04:11:29.841945+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2019-04-03T04:11:29.850600+00:00", "type": "pullrequest_comment", "id": 97360514}