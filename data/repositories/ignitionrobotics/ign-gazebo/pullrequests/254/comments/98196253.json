{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/254/comments/98196253.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/254/_/diff#comment-98196253"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 254, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/254.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/254"}}, "title": "[Acropolis] Add ApplyJointForce system"}, "content": {"raw": "Thanks @azeey , I finally managed to have a look to the PR. It looks good to me, I just have few minor comments:\n\n1. Force references are stored in a new `PendingJointForce` components, velocity references instead in a `JointVelocityCmd` component \\([PR#260](#!/ignitionrobotics/ign-gazebo/pull-requests/260/wip-joint-state-pub)\\). Despite it would not be a recommended practice as already discussed, I think you're going to implement also a `JointPositionCmd` component. Is there any reason not to use `JointForceCmd` to have an uniform naming scheme? Since the force reference could be the output of a position / velocity PID controller, it would make sense to me.\n2. I still have few doubts about the resetting policy of these reference components. I do not have any strong opinion yet, and I\u2019m not sure if the best approach would be resetting the reference as happens in this PR, or leaving it there as happens in PR#260 for the velocity \\(I guess, expecting that it would be changed from the user side in the next iterations\\). Do you \\(or @nkoenig \\) have any insight to share about this?\n3. Related to point 2., I do not know what would be the effect of setting 0 references in the cycles after the components have been reset. I noticed that the process of adding and removing components continuously is not efficient due to the ecm caching, so zeroing references seems the only way. I only argue if this can cause troubles to some physic engines. Though, I\u2019m not really knowledgeable about it.\n\n", "markup": "markdown", "html": "<p>Thanks @azeey , I finally managed to have a look to the PR. It looks good to me, I just have few minor comments:</p>\n<ol>\n<li>Force references are stored in a new <code>PendingJointForce</code> components, velocity references instead in a <code>JointVelocityCmd</code> component (<a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/260/wip-joint-state-pub\" rel=\"nofollow\">PR#260</a>). Despite it would not be a recommended practice as already discussed, I think you're going to implement also a <code>JointPositionCmd</code> component. Is there any reason not to use <code>JointForceCmd</code> to have an uniform naming scheme? Since the force reference could be the output of a position / velocity PID controller, it would make sense to me.</li>\n<li>I still have few doubts about the resetting policy of these reference components. I do not have any strong opinion yet, and I\u2019m not sure if the best approach would be resetting the reference as happens in this PR, or leaving it there as happens in PR#260 for the velocity (I guess, expecting that it would be changed from the user side in the next iterations). Do you (or @nkoenig ) have any insight to share about this?</li>\n<li>Related to point 2., I do not know what would be the effect of setting 0 references in the cycles after the components have been reset. I noticed that the process of adding and removing components continuously is not efficient due to the ecm caching, so zeroing references seems the only way. I only argue if this can cause troubles to some physic engines. Though, I\u2019m not really knowledgeable about it.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-04-09T22:12:23.457435+00:00", "user": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "updated_on": "2019-04-09T22:12:23.652814+00:00", "type": "pullrequest_comment", "id": 98196253}