{"rendered": {"description": {"raw": "### Summary\r\n\r\n1\\. `SceneBroadcaster.cc` is modified to have a new publisher on the new topic `/world/<world_name>/dynamic_pose/info`. This new topic was needed because simply publishing non-static models wasn't enough to reduce file size - `visual`s and `light`s were still being published at 60 hertz and logged in `/pose/info`. This new topic only publishes poses of non-static Models and poses of Links of non-static Models.\r\n\r\n2\\. A new plugin parameter `dynamic_pose_hertz` is added to `SceneBroadcaster` to control the rate at which dynamic poses are published. Default is 60, which is the original rate for `/world/<world_name>/pose/info`.\r\n\r\nE.g.\r\n\r\n```\r\n<plugin filename=\"libignition-gazebo-scene-broadcaster-system.so\"\r\n  name=\"ignition::gazebo::systems::SceneBroadcaster\">\r\n  <dynamic_pose_hertz>10</dynamic_pose_hertz>\r\n</plugin>\r\n```\r\n\r\nNote: Currently, nothing static is published to the `dynamic_pose/info` topic, not even at the beginning. That can be added if we think necessary. The only consumer of this topic is logging, and since logging playback reads the SDF in the log file, we are assuming that nobody would want the static objects' poses on the `dynamic_pose` topic. The static objects' poses can always be read from the vanilla `pose/info`.\r\n\r\n### Result\r\n\r\nTo test, two diff-drive vehicles were added to the `tunnel_qual_ign.sdf` SubT world \\(I tested using a modified version with plugins and gui that can be run with `ign gazebo`, because I can't get the `ign launch` version to show the tunnels\\).\r\n\r\nVehicles are rotating in place for an infinite time via the keyboard plugin.\r\n\r\nAt **10 hertz**, recording for **30 minutes**, file size is **17M**.\r\n\r\nAt **60 hertz**, recording for **30 minutes**, file size is **87M**.\r\n\r\nTested playback to still work.\r\n\r\n### Future work\r\n\r\n* Log states instead of poses. Side-effect is that the log files will be even bigger, so some filtering by model name or entity type will be needed.\r\n* Robot models spawned after the world has started are currently not being played back, because they are not in the SDF that is loaded in `LogPlayback`. This can be solved by logging the states instead of poses.", "markup": "markdown", "html": "<h3 id=\"markdown-header-summary\">Summary</h3>\n<p>1. <code>SceneBroadcaster.cc</code> is modified to have a new publisher on the new topic <code>/world/&lt;world_name&gt;/dynamic_pose/info</code>. This new topic was needed because simply publishing non-static models wasn't enough to reduce file size - <code>visual</code>s and <code>light</code>s were still being published at 60 hertz and logged in <code>/pose/info</code>. This new topic only publishes poses of non-static Models and poses of Links of non-static Models.</p>\n<p>2. A new plugin parameter <code>dynamic_pose_hertz</code> is added to <code>SceneBroadcaster</code> to control the rate at which dynamic poses are published. Default is 60, which is the original rate for <code>/world/&lt;world_name&gt;/pose/info</code>.</p>\n<p>E.g.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libignition-gazebo-scene-broadcaster-system.so&quot;</span>\n  <span class=\"na\">name=</span><span class=\"s\">&quot;ignition::gazebo::systems::SceneBroadcaster&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;dynamic_pose_hertz&gt;</span>10<span class=\"nt\">&lt;/dynamic_pose_hertz&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Note: Currently, nothing static is published to the <code>dynamic_pose/info</code> topic, not even at the beginning. That can be added if we think necessary. The only consumer of this topic is logging, and since logging playback reads the SDF in the log file, we are assuming that nobody would want the static objects' poses on the <code>dynamic_pose</code> topic. The static objects' poses can always be read from the vanilla <code>pose/info</code>.</p>\n<h3 id=\"markdown-header-result\">Result</h3>\n<p>To test, two diff-drive vehicles were added to the <code>tunnel_qual_ign.sdf</code> SubT world (I tested using a modified version with plugins and gui that can be run with <code>ign gazebo</code>, because I can't get the <code>ign launch</code> version to show the tunnels).</p>\n<p>Vehicles are rotating in place for an infinite time via the keyboard plugin.</p>\n<p>At <strong>10 hertz</strong>, recording for <strong>30 minutes</strong>, file size is <strong>17M</strong>.</p>\n<p>At <strong>60 hertz</strong>, recording for <strong>30 minutes</strong>, file size is <strong>87M</strong>.</p>\n<p>Tested playback to still work.</p>\n<h3 id=\"markdown-header-future-work\">Future work</h3>\n<ul>\n<li>Log states instead of poses. Side-effect is that the log files will be even bigger, so some filtering by model name or entity type will be needed.</li>\n<li>Robot models spawned after the world has started are currently not being played back, because they are not in the SDF that is loaded in <code>LogPlayback</code>. This can be solved by logging the states instead of poses.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "[Blueprint] Reduce logging file size", "markup": "markdown", "html": "<p>[Blueprint] Reduce logging file size</p>", "type": "rendered"}}, "type": "pullrequest", "description": "### Summary\r\n\r\n1\\. `SceneBroadcaster.cc` is modified to have a new publisher on the new topic `/world/<world_name>/dynamic_pose/info`. This new topic was needed because simply publishing non-static models wasn't enough to reduce file size - `visual`s and `light`s were still being published at 60 hertz and logged in `/pose/info`. This new topic only publishes poses of non-static Models and poses of Links of non-static Models.\r\n\r\n2\\. A new plugin parameter `dynamic_pose_hertz` is added to `SceneBroadcaster` to control the rate at which dynamic poses are published. Default is 60, which is the original rate for `/world/<world_name>/pose/info`.\r\n\r\nE.g.\r\n\r\n```\r\n<plugin filename=\"libignition-gazebo-scene-broadcaster-system.so\"\r\n  name=\"ignition::gazebo::systems::SceneBroadcaster\">\r\n  <dynamic_pose_hertz>10</dynamic_pose_hertz>\r\n</plugin>\r\n```\r\n\r\nNote: Currently, nothing static is published to the `dynamic_pose/info` topic, not even at the beginning. That can be added if we think necessary. The only consumer of this topic is logging, and since logging playback reads the SDF in the log file, we are assuming that nobody would want the static objects' poses on the `dynamic_pose` topic. The static objects' poses can always be read from the vanilla `pose/info`.\r\n\r\n### Result\r\n\r\nTo test, two diff-drive vehicles were added to the `tunnel_qual_ign.sdf` SubT world \\(I tested using a modified version with plugins and gui that can be run with `ign gazebo`, because I can't get the `ign launch` version to show the tunnels\\).\r\n\r\nVehicles are rotating in place for an infinite time via the keyboard plugin.\r\n\r\nAt **10 hertz**, recording for **30 minutes**, file size is **17M**.\r\n\r\nAt **60 hertz**, recording for **30 minutes**, file size is **87M**.\r\n\r\nTested playback to still work.\r\n\r\n### Future work\r\n\r\n* Log states instead of poses. Side-effect is that the log files will be even bigger, so some filtering by model name or entity type will be needed.\r\n* Robot models spawned after the world has started are currently not being played back, because they are not in the SDF that is loaded in `LogPlayback`. This can be solved by logging the states instead of poses.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diffstat/ignitionrobotics/ign-gazebo:ad73401c0bfd%0D50232fe95e2d?from_pullrequest_id=332"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/332.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/merge"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/332"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:ad73401c0bfd%0D50232fe95e2d?from_pullrequest_id=332"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/332/statuses_page=1.json"}}, "title": "[Blueprint] Reduce logging file size", "close_source_branch": true, "reviewers": [], "id": 332, "destination": {"commit": {"hash": "50232fe95e2d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/50232fe95e2d.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/50232fe95e2d"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "default"}}, "created_on": "2019-05-13T23:24:51.015902+00:00", "summary": {"raw": "### Summary\r\n\r\n1\\. `SceneBroadcaster.cc` is modified to have a new publisher on the new topic `/world/<world_name>/dynamic_pose/info`. This new topic was needed because simply publishing non-static models wasn't enough to reduce file size - `visual`s and `light`s were still being published at 60 hertz and logged in `/pose/info`. This new topic only publishes poses of non-static Models and poses of Links of non-static Models.\r\n\r\n2\\. A new plugin parameter `dynamic_pose_hertz` is added to `SceneBroadcaster` to control the rate at which dynamic poses are published. Default is 60, which is the original rate for `/world/<world_name>/pose/info`.\r\n\r\nE.g.\r\n\r\n```\r\n<plugin filename=\"libignition-gazebo-scene-broadcaster-system.so\"\r\n  name=\"ignition::gazebo::systems::SceneBroadcaster\">\r\n  <dynamic_pose_hertz>10</dynamic_pose_hertz>\r\n</plugin>\r\n```\r\n\r\nNote: Currently, nothing static is published to the `dynamic_pose/info` topic, not even at the beginning. That can be added if we think necessary. The only consumer of this topic is logging, and since logging playback reads the SDF in the log file, we are assuming that nobody would want the static objects' poses on the `dynamic_pose` topic. The static objects' poses can always be read from the vanilla `pose/info`.\r\n\r\n### Result\r\n\r\nTo test, two diff-drive vehicles were added to the `tunnel_qual_ign.sdf` SubT world \\(I tested using a modified version with plugins and gui that can be run with `ign gazebo`, because I can't get the `ign launch` version to show the tunnels\\).\r\n\r\nVehicles are rotating in place for an infinite time via the keyboard plugin.\r\n\r\nAt **10 hertz**, recording for **30 minutes**, file size is **17M**.\r\n\r\nAt **60 hertz**, recording for **30 minutes**, file size is **87M**.\r\n\r\nTested playback to still work.\r\n\r\n### Future work\r\n\r\n* Log states instead of poses. Side-effect is that the log files will be even bigger, so some filtering by model name or entity type will be needed.\r\n* Robot models spawned after the world has started are currently not being played back, because they are not in the SDF that is loaded in `LogPlayback`. This can be solved by logging the states instead of poses.", "markup": "markdown", "html": "<h3 id=\"markdown-header-summary\">Summary</h3>\n<p>1. <code>SceneBroadcaster.cc</code> is modified to have a new publisher on the new topic <code>/world/&lt;world_name&gt;/dynamic_pose/info</code>. This new topic was needed because simply publishing non-static models wasn't enough to reduce file size - <code>visual</code>s and <code>light</code>s were still being published at 60 hertz and logged in <code>/pose/info</code>. This new topic only publishes poses of non-static Models and poses of Links of non-static Models.</p>\n<p>2. A new plugin parameter <code>dynamic_pose_hertz</code> is added to <code>SceneBroadcaster</code> to control the rate at which dynamic poses are published. Default is 60, which is the original rate for <code>/world/&lt;world_name&gt;/pose/info</code>.</p>\n<p>E.g.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libignition-gazebo-scene-broadcaster-system.so&quot;</span>\n  <span class=\"na\">name=</span><span class=\"s\">&quot;ignition::gazebo::systems::SceneBroadcaster&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;dynamic_pose_hertz&gt;</span>10<span class=\"nt\">&lt;/dynamic_pose_hertz&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Note: Currently, nothing static is published to the <code>dynamic_pose/info</code> topic, not even at the beginning. That can be added if we think necessary. The only consumer of this topic is logging, and since logging playback reads the SDF in the log file, we are assuming that nobody would want the static objects' poses on the <code>dynamic_pose</code> topic. The static objects' poses can always be read from the vanilla <code>pose/info</code>.</p>\n<h3 id=\"markdown-header-result\">Result</h3>\n<p>To test, two diff-drive vehicles were added to the <code>tunnel_qual_ign.sdf</code> SubT world (I tested using a modified version with plugins and gui that can be run with <code>ign gazebo</code>, because I can't get the <code>ign launch</code> version to show the tunnels).</p>\n<p>Vehicles are rotating in place for an infinite time via the keyboard plugin.</p>\n<p>At <strong>10 hertz</strong>, recording for <strong>30 minutes</strong>, file size is <strong>17M</strong>.</p>\n<p>At <strong>60 hertz</strong>, recording for <strong>30 minutes</strong>, file size is <strong>87M</strong>.</p>\n<p>Tested playback to still work.</p>\n<h3 id=\"markdown-header-future-work\">Future work</h3>\n<ul>\n<li>Log states instead of poses. Side-effect is that the log files will be even bigger, so some filtering by model name or entity type will be needed.</li>\n<li>Robot models spawned after the world has started are currently not being played back, because they are not in the SDF that is loaded in <code>LogPlayback</code>. This can be solved by logging the states instead of poses.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "6d12fc613781", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/6d12fc613781.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/6d12fc613781"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "branch": {"name": "pub_dynamic_poses"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-05-14T03:56:20.908915+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2019-05-14T03:56:27.654504+00:00", "author": {"display_name": "Mabel Zhang", "uuid": "{4b0e38fb-bf50-45c0-a496-61147518b2bf}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D"}, "html": {"href": "https://bitbucket.org/%7B4b0e38fb-bf50-45c0-a496-61147518b2bf%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ceb5942c-6843-408c-8550-3ce4899d299b/4d48e5ea-cf28-4fa7-9715-8fc9e315d831/128"}}, "nickname": "mabelmzhang", "type": "user", "account_id": "557058:ceb5942c-6843-408c-8550-3ce4899d299b"}, "merge_commit": {"hash": "ad73401c0bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/commit/ad73401c0bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/commits/ad73401c0bfd"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}