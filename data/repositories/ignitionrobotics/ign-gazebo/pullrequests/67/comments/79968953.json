{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/67/comments/79968953.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/67/_/diff#comment-79968953"}}, "parent": {"id": 79913412, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/67/comments/79913412.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/67/_/diff#comment-79913412"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 67, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/67.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/67"}}, "title": "Add support for planes"}, "content": {"raw": "I\u2019ve looked into it, and I believe this is the intended behavior, from a \u201cgarbage in / garbage out\u201d point of view.\n\nODE has parameters like ERP that allow you to tune how aggressively it tries to correct for constraint errors, but these \u201ccorrections\u201d can have unintended \\(and potentially unstable\\) dynamics behaviors of their own. These \u201ccorrections\u201d are non-physical ad hoc methods to correct for miscellaneous sources of error.\n\nBecause of the potential for unintended instability, dartsim doesn\u2019t use those corrective measures. When dealing with colliding bodies, we simply follow the standard [restitution model](https://en.wikipedia.org/wiki/Coefficient_of_restitution).\n\nThe default coefficient of restitution for bodies in dartsim is `0.0`, which means collisions are perfectly inelastic. As a result, two bodies that collide will make no effort to bounce away from each other, but they will also make a point not to penetrate each other any more deeply. In this case, the box is penetrating the plane to begin with, so it seems to have sunk in, but since there is zero restitution, it will remain sunken indefinitely.\n\nHere's what it looks like if I make the coefficient of restitution `0.5`:\n\n\u200c\n\n![](data/bitbucket.org/repo/8zodKzn/images/568080074-gazebo-recording-0.5.gif)\n\u200c\n\nWithin a couple rotations, the box has fully left its sunken position in the plane.\n\nHere's what it looks like with a restitution coefficient of `1.0`:\n\n\u200c\n\n![](data/bitbucket.org/repo/8zodKzn/images/1028016929-gazebo-recording-1.0.gif)\n\u200c\n\nWithin one rotation, the box has fully exited the plane, but it also exhibits some very rubbery bouncing behavior as it goes down the slope.\n\nThe changes needed to see these differences can be found on [this branch](#!/ignitionrobotics/ign-physics/branch/infinite_planes_restitution?dest=infinite_planes#diff).\n\nThe SDF spec does allow us to [specify the coefficient of restitution](http://sdformat.org/spec?ver=1.6&elem=collision#bounce_restitution_coefficient), although SDF specifies this per collision geometry, whereas dartsim only allows this to be set per link. I\u2019ve [opened an issue](https://github.com/dartsim/dart/issues/1179) for changing dartsim to specify this per collision geometry, but it may have to wait for release 7.0 since it could break some of the API.", "markup": "markdown", "html": "<p>I\u2019ve looked into it, and I believe this is the intended behavior, from a \u201cgarbage in / garbage out\u201d point of view.</p>\n<p>ODE has parameters like ERP that allow you to tune how aggressively it tries to correct for constraint errors, but these \u201ccorrections\u201d can have unintended (and potentially unstable) dynamics behaviors of their own. These \u201ccorrections\u201d are non-physical ad hoc methods to correct for miscellaneous sources of error.</p>\n<p>Because of the potential for unintended instability, dartsim doesn\u2019t use those corrective measures. When dealing with colliding bodies, we simply follow the standard <a data-is-external-link=\"true\" href=\"https://en.wikipedia.org/wiki/Coefficient_of_restitution\" rel=\"nofollow\">restitution model</a>.</p>\n<p>The default coefficient of restitution for bodies in dartsim is <code>0.0</code>, which means collisions are perfectly inelastic. As a result, two bodies that collide will make no effort to bounce away from each other, but they will also make a point not to penetrate each other any more deeply. In this case, the box is penetrating the plane to begin with, so it seems to have sunk in, but since there is zero restitution, it will remain sunken indefinitely.</p>\n<p>Here's what it looks like if I make the coefficient of restitution <code>0.5</code>:</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/8zodKzn/images/568080074-gazebo-recording-0.5.gif\" />\n\u200c</p>\n<p>Within a couple rotations, the box has fully left its sunken position in the plane.</p>\n<p>Here's what it looks like with a restitution coefficient of <code>1.0</code>:</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/8zodKzn/images/1028016929-gazebo-recording-1.0.gif\" />\n\u200c</p>\n<p>Within one rotation, the box has fully exited the plane, but it also exhibits some very rubbery bouncing behavior as it goes down the slope.</p>\n<p>The changes needed to see these differences can be found on <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-physics/branch/infinite_planes_restitution?dest=infinite_planes#diff\" rel=\"nofollow\">this branch</a>.</p>\n<p>The SDF spec does allow us to <a data-is-external-link=\"true\" href=\"http://sdformat.org/spec?ver=1.6&amp;elem=collision#bounce_restitution_coefficient\" rel=\"nofollow\">specify the coefficient of restitution</a>, although SDF specifies this per collision geometry, whereas dartsim only allows this to be set per link. I\u2019ve <a data-is-external-link=\"true\" href=\"https://github.com/dartsim/dart/issues/1179\" rel=\"nofollow\">opened an issue</a> for changing dartsim to specify this per collision geometry, but it may have to wait for release 7.0 since it could break some of the API.</p>", "type": "rendered"}, "created_on": "2018-10-23T09:39:52.173571+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-10-23T09:39:52.206194+00:00", "type": "pullrequest_comment", "id": 79968953}