{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89/comments/84106076.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:7ccbf0c74b8d..72856e2a48e3?path=doc%2Farchitecture_design.md"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89/_/diff#comment-84106076"}}, "parent": {"id": 83927836, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89/comments/83927836.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89/_/diff#comment-83927836"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 89, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89"}}, "title": "Initial design"}, "content": {"raw": "> A simulation runner would be aware of the level(s) the performer is in and would have loaded all the entities accordingly\n\nBut isn't this also true for the physics?\n\n> Any system that needs ign-rendering has all it needs to create a render without having to be moved to another runner\n\nI think this should also be true for physics, because we will inevitably run into cases where things will need to be moved, since we can't control how performers will interact (or do we want to?). Do you agree with this statement? Maybe there's something I'm missing.\n\nFor me, the question is about the **cost** of moving a system, which may come down to:\n\n* The total set of components needed to fully describe internal state\n* The effort to destroy / create entities and components\n\nI believe physics may need to use a larger set of components to fully describe its full internal state (pose, velocity, acceleration...), while rendering mainly just needs pose most of the time. But in both cases, there are other components which will need to be synced as well, but will be less common, such as mass changes for physics and material changes for rendering.\n\nAs for the effort, from what I've understood so far regarding ign-physics, this may be the big issue? Is it so much easier to create / destroy entities in rendering than in physics?\n\n> If another performer happens to be in the same level and it is far enough away that the two performers aren't interacting, the runner would load it without simulating its physics\n\nYeah, and if we go with level-centered runners for physics, we may need different level sizes for physics and rendering.", "markup": "markdown", "html": "<blockquote>\n<p>A simulation runner would be aware of the level(s) the performer is in and would have loaded all the entities accordingly</p>\n</blockquote>\n<p>But isn't this also true for the physics?</p>\n<blockquote>\n<p>Any system that needs ign-rendering has all it needs to create a render without having to be moved to another runner</p>\n</blockquote>\n<p>I think this should also be true for physics, because we will inevitably run into cases where things will need to be moved, since we can't control how performers will interact (or do we want to?). Do you agree with this statement? Maybe there's something I'm missing.</p>\n<p>For me, the question is about the <strong>cost</strong> of moving a system, which may come down to:</p>\n<ul>\n<li>The total set of components needed to fully describe internal state</li>\n<li>The effort to destroy / create entities and components</li>\n</ul>\n<p>I believe physics may need to use a larger set of components to fully describe its full internal state (pose, velocity, acceleration...), while rendering mainly just needs pose most of the time. But in both cases, there are other components which will need to be synced as well, but will be less common, such as mass changes for physics and material changes for rendering.</p>\n<p>As for the effort, from what I've understood so far regarding ign-physics, this may be the big issue? Is it so much easier to create / destroy entities in rendering than in physics?</p>\n<blockquote>\n<p>If another performer happens to be in the same level and it is far enough away that the two performers aren't interacting, the runner would load it without simulating its physics</p>\n</blockquote>\n<p>Yeah, and if we go with level-centered runners for physics, we may need different level sizes for physics and rendering.</p>", "type": "rendered"}, "created_on": "2018-11-30T02:24:09.474976+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {"to": 184, "from": null, "outdated": true, "path": "doc/architecture_design.md"}, "updated_on": "2018-11-30T02:24:09.483353+00:00", "type": "pullrequest_comment", "id": 84106076}