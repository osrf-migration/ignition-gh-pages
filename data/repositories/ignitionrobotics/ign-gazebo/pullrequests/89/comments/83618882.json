{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89/comments/83618882.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/diff/ignitionrobotics/ign-gazebo:8acfaf312be4..3696b763243a?path=doc%2Farchitecture_design.md"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89/_/diff#comment-83618882"}}, "parent": {"id": 83613646, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89/comments/83613646.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89/_/diff#comment-83613646"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 89, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/pullrequests/89.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/pull-requests/89"}}, "title": "Initial design"}, "content": {"raw": "> I'm starting to feel that we need a more concrete idea of the kinds of interfaces we will support before deciding how to split runners.\n\nAgreed.\n\n> Will we offer interfaces similar to model/world plugins that offer a physics interface? Visual plugins that offer an interface to ign-rendering? \n\nGood questions. Beside having a similar API to model/world plugins, would such interfaces give direct access to ign-physics or ign-rendering to users or indirect access through the ECS?  Going through the ECS would make it easier to transparently distribute the simulation, but it might cost us in performance. Perhaps we can have both and mandate that users who access ign-physics or ign-rendering directly to handle transfers between runners themselves.\n\n> Although I think physics will not be the only one moved - rendering also will, even if it uses a different level volume (in order to avoid duplication).\n\nIt's not clear to me why rendering will also need to be moved. Once the state of the performer is updated from physics, the rendering can happen in the original runner. For vision sensors on the performer, each sensor will need to render its own view any way so it can stay in the original runner. I don't know if this duplication can be avoided.", "markup": "markdown", "html": "<blockquote>\n<p>I'm starting to feel that we need a more concrete idea of the kinds of interfaces we will support before deciding how to split runners.</p>\n</blockquote>\n<p>Agreed.</p>\n<blockquote>\n<p>Will we offer interfaces similar to model/world plugins that offer a physics interface? Visual plugins that offer an interface to ign-rendering? </p>\n</blockquote>\n<p>Good questions. Beside having a similar API to model/world plugins, would such interfaces give direct access to ign-physics or ign-rendering to users or indirect access through the ECS?  Going through the ECS would make it easier to transparently distribute the simulation, but it might cost us in performance. Perhaps we can have both and mandate that users who access ign-physics or ign-rendering directly to handle transfers between runners themselves.</p>\n<blockquote>\n<p>Although I think physics will not be the only one moved - rendering also will, even if it uses a different level volume (in order to avoid duplication).</p>\n</blockquote>\n<p>It's not clear to me why rendering will also need to be moved. Once the state of the performer is updated from physics, the rendering can happen in the original runner. For vision sensors on the performer, each sensor will need to render its own view any way so it can stay in the original runner. I don't know if this duplication can be avoided.</p>", "type": "rendered"}, "created_on": "2018-11-27T00:41:56.850435+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 184, "from": null, "outdated": true, "path": "doc/architecture_design.md"}, "updated_on": "2018-11-27T00:42:31.912382+00:00", "type": "pullrequest_comment", "id": 83618882}