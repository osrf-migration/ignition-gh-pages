{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/38/comments/54985462.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/38#comment-54985462"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/38.json"}}, "type": "issue", "id": 38, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "title": "Gazebo hangs at \"Requesting list of world names. The server may be busy downloading resources. Please be patient.\""}, "content": {"raw": "I have the same issue, with Ubuntu 18.04.3 and Ignition Gazebo 2.12.0  \nI did a fresh install, and was just following through with the documentation.  \nI first ran without the `-v 4` and it did not response until I sent sigkill. In the meantime, the GUI is just a blank black window.  \n  \nRunning with \n\n```\nign gazebo shapes.sdf -v 4\n```\n\nThe output prints same log line above, repeatedly for several minutes\u2026 It repeated the log line for the time taken to drink one beer.\n\n```\n[GUI] [Dbg] [ign.cc:230] GUI requesting list of world names. The server may be busy downloading resources. Please be patient.\n```\n\n[#!/ignitionrobotics/ign-gazebo/src/09603ad49a06b72fe9f9142f6b11a21fc79ac744/src/cmd/ign.cc#lines-224-233](#!/ignitionrobotics/ign-gazebo/src/09603ad49a06b72fe9f9142f6b11a21fc79ac744/src/cmd/ign.cc#lines-224-233)\n\n```c++\n  // This loop is here to allow the server time to download resources.\n  // \\todo(nkoenig) Async resource download. Search for \"Async resource\n  // download in `src/Server.cc` for corresponding todo item. This todo is\n  // resolved when this while loop can be removed.\n  while (!sigKilled && !executed)\n  {\n    igndbg << \"Requesting list of world names. The server may be busy \"\n      << \"downloading resources. Please be patient.\" << std::endl;\n    executed = node.Request(service, timeout, worldsMsg, result);\n  }\n```\n\nI haven\u2019t looked into the code further to see why `node.Request(service, timeout, worldMsg, result);` isn\u2019t doing any logging when it hits the timeout but I think this `while` should probably have some sort of exit condition.", "markup": "markdown", "html": "<p>I have the same issue, with Ubuntu 18.04.3 and Ignition Gazebo 2.12.0<br />\nI did a fresh install, and was just following through with the documentation.<br />\nI first ran without the <code>-v 4</code> and it did not response until I sent sigkill. In the meantime, the GUI is just a blank black window.  </p>\n<p>Running with </p>\n<div class=\"codehilite\"><pre><span></span>ign gazebo shapes.sdf -v 4\n</pre></div>\n\n\n<p>The output prints same log line above, repeatedly for several minutes\u2026 It repeated the log line for the time taken to drink one beer.</p>\n<div class=\"codehilite\"><pre><span></span>[GUI] [Dbg] [ign.cc:230] GUI requesting list of world names. The server may be busy downloading resources. Please be patient.\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/09603ad49a06b72fe9f9142f6b11a21fc79ac744/src/cmd/ign.cc#lines-224-233\" rel=\"nofollow\">#!/ignitionrobotics/ign-gazebo/src/09603ad49a06b72fe9f9142f6b11a21fc79ac744/src/cmd/ign.cc#lines-224-233</a></p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"c1\">// This loop is here to allow the server time to download resources.</span>\n  <span class=\"c1\">// \\todo(nkoenig) Async resource download. Search for &quot;Async resource</span>\n  <span class=\"c1\">// download in `src/Server.cc` for corresponding todo item. This todo is</span>\n  <span class=\"c1\">// resolved when this while loop can be removed.</span>\n  <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">sigKilled</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">executed</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">igndbg</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Requesting list of world names. The server may be busy &quot;</span>\n      <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;downloading resources. Please be patient.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"n\">executed</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">service</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"p\">,</span> <span class=\"n\">worldsMsg</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>I haven\u2019t looked into the code further to see why <code>node.Request(service, timeout, worldMsg, result);</code> isn\u2019t doing any logging when it hits the timeout but I think this <code>while</code> should probably have some sort of exit condition.</p>", "type": "rendered"}, "created_on": "2019-11-27T06:22:14.970678+00:00", "user": {"display_name": "Alexander Moriarty", "uuid": "{139b5c5b-dcd7-4d65-bc0c-192330283412}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B139b5c5b-dcd7-4d65-bc0c-192330283412%7D"}, "html": {"href": "https://bitbucket.org/%7B139b5c5b-dcd7-4d65-bc0c-192330283412%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/277dfce80ca37a1a62dceda47328d271d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAM-1.png"}}, "nickname": "Alexander Moriarty", "type": "user", "account_id": "557058:fe87eec5-99fd-49f6-9a4b-d5d9276f39eb"}, "updated_on": null, "type": "issue_comment", "id": 54985462}