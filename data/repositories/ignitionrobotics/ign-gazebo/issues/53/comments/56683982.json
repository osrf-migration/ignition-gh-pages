{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/53/comments/56683982.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/53#comment-56683982"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/53.json"}}, "type": "issue", "id": 53, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "title": "How to manually set link states"}, "content": {"raw": "Diego\u2019s reply is completely correct: link poses and link velocities cannot generally be set directly, because those properties are constrained by joints. If you were able to set them directly, there\u2019s a good chance that the system would be put into an invalid state, and your simulation might \u201cexplode\u201d \\(historically this has been a leading cause of simulation bugs among Gazebo users\\). Because of this it\u2019s best to set joint states directly, since arbitrary joint state values aren\u2019t as likely to violate simulation constraints.\n\nI think the [JointVelocityCmd](#!/ignitionrobotics/ign-gazebo/src/default/include/ignition/gazebo/components/JointVelocityCmd.hh) component should be able to help with setting the joint velocities. However, that gets treated as a command rather than setting the joint state directly, so something like a `ResetJointVelocity` component would be better, if such a thing existed.\n\nIt doesn\u2019t look like there\u2019s a component for setting joint positions directly. These are features that could \\(and should\\) be added to ignition-gazebo. I would recommend the adding the following components to ignition-gazebo:\n\n* `ResetJointPosition[s]`: Use this to directly set the joint position state, with no regard for physical constraints\n* `ResetJointVelocit[y|ies]`: Use this directly set the joint velocity state, with no regard for physical constraints\n\nMaybe there\u2019s a better word that could be used besides `Reset`, but I don\u2019t want to use `Cmd` because `Cmd` implies that it is acceptable to use as controller input into a live simulation, which is very much not the case for these features. I also don\u2019t want to use `Set` because I think that\u2019s too easily interpreted as a feature that can be used casually without significant side-effects. I hope that `Reset` can express the sense that using the component will break the flow of the simulation and create a physical discontinuity. But if anyone can think of an alternative word that expresses that better, please do share.", "markup": "markdown", "html": "<p>Diego\u2019s reply is completely correct: link poses and link velocities cannot generally be set directly, because those properties are constrained by joints. If you were able to set them directly, there\u2019s a good chance that the system would be put into an invalid state, and your simulation might \u201cexplode\u201d (historically this has been a leading cause of simulation bugs among Gazebo users). Because of this it\u2019s best to set joint states directly, since arbitrary joint state values aren\u2019t as likely to violate simulation constraints.</p>\n<p>I think the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/default/include/ignition/gazebo/components/JointVelocityCmd.hh\" rel=\"nofollow\">JointVelocityCmd</a> component should be able to help with setting the joint velocities. However, that gets treated as a command rather than setting the joint state directly, so something like a <code>ResetJointVelocity</code> component would be better, if such a thing existed.</p>\n<p>It doesn\u2019t look like there\u2019s a component for setting joint positions directly. These are features that could (and should) be added to ignition-gazebo. I would recommend the adding the following components to ignition-gazebo:</p>\n<ul>\n<li><code>ResetJointPosition[s]</code>: Use this to directly set the joint position state, with no regard for physical constraints</li>\n<li><code>ResetJointVelocit[y|ies]</code>: Use this directly set the joint velocity state, with no regard for physical constraints</li>\n</ul>\n<p>Maybe there\u2019s a better word that could be used besides <code>Reset</code>, but I don\u2019t want to use <code>Cmd</code> because <code>Cmd</code> implies that it is acceptable to use as controller input into a live simulation, which is very much not the case for these features. I also don\u2019t want to use <code>Set</code> because I think that\u2019s too easily interpreted as a feature that can be used casually without significant side-effects. I hope that <code>Reset</code> can express the sense that using the component will break the flow of the simulation and create a physical discontinuity. But if anyone can think of an alternative word that expresses that better, please do share.</p>", "type": "rendered"}, "created_on": "2020-03-27T05:18:25.071445+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2020-03-27T05:19:24.002269+00:00", "type": "issue_comment", "id": 56683982}