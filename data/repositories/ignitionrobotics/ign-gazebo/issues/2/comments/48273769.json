{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/2/comments/48273769.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/2#comment-48273769"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/2.json"}}, "type": "issue", "id": 2, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "title": "Transport segfault on shutdown"}, "content": {"raw": "I spent some time looking into this and the problem seems to be in this lambda in Node.cc:336\n\n```\nthis->dataPtr->shared->dataPtr->workerPool.AddWork(\n              [localHandler, msgCopy, info] ()\n              {\n                try\n                {\n                  localHandler->RunLocalCallback(*msgCopy, *info);\n                }\n                catch (...)\n                {\n                  std::cerr << \"Exception occurred in a local callback \"\n                    << \"on topic [\" << info->Topic() << \"] with message [\"\n                    << msgCopy->DebugString() << \"]\" << std::endl;\n                }\n              });\n```\n\nIn particular, the `localHandler` shared pointer. My hypothesis is that during the NodeShared destructor, the thread pool still have pending jobs containing this lambda that cause the segfault.", "markup": "markdown", "html": "<p>I spent some time looking into this and the problem seems to be in this lambda in Node.cc:336</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">dataPtr-</span><span class=\"o\">&gt;</span><span class=\"nt\">shared-</span><span class=\"o\">&gt;</span><span class=\"nt\">dataPtr-</span><span class=\"o\">&gt;</span><span class=\"nt\">workerPool</span><span class=\"p\">.</span><span class=\"nc\">AddWork</span><span class=\"o\">(</span>\n              <span class=\"cp\">[</span><span class=\"nx\">localHandler</span><span class=\"p\">,</span> <span class=\"nx\">msgCopy</span><span class=\"p\">,</span> <span class=\"nx\">info</span><span class=\"cp\">]</span> <span class=\"o\">()</span>\n              <span class=\"p\">{</span>\n                <span class=\"err\">try</span>\n                <span class=\"err\">{</span>\n                  <span class=\"err\">localHandler-&gt;RunLocalCallback(*msgCopy,</span> <span class=\"err\">*info)</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n                <span class=\"nt\">catch</span> <span class=\"o\">(...)</span>\n                <span class=\"p\">{</span>\n                  <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Exception occurred in a local callback &quot;</span>\n                    <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;on topic </span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; info-&gt;Topic() &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\"> with message </span><span class=\"cp\">[</span><span class=\"s2\">&quot;</span>\n<span class=\"s2\">                    &lt;&lt; msgCopy-&gt;DebugString() &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n              <span class=\"err\">}</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>In particular, the <code>localHandler</code> shared pointer. My hypothesis is that during the NodeShared destructor, the thread pool still have pending jobs containing this lambda that cause the segfault.</p>", "type": "rendered"}, "created_on": "2018-10-10T17:25:29.231746+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 48273769}