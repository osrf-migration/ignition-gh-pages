{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/3/comments/48260363.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/3#comment-48260363"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/3.json"}}, "type": "issue", "id": 3, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "title": "Pose components"}, "content": {"raw": "> I lean towards the pose always being expressed w.r.t. the parent entity, as opposed to any other ancestor closer to the root (like the world or the root model). The main reason being that an entity knows who their immediate parent entity is, but it would necessary to crawl the entity tree to figure our who the other descendant would be.\n\nThis makes the ability to convert between different frames of reference strictly more difficult and more expensive. This means we always need to climb a tree and compute a chain of matrix transforms (including matrix inversions) in order to transform to a different arbitrary reference frame. However, if poses are always expressed in the world frame (e.g. `T_A` is the pose of body `A` in the world and `T_B` is the pose of body `B` in the world) then the transform of `B` relative to `A` (i.e. `A_T_B`) would always simply be `A_T_B = T_A.inverse() * T_B`. This is true for **any** two bodies `A` and `B`, no matter what kind of parent/child relationship they might or might not have.", "markup": "markdown", "html": "<blockquote>\n<p>I lean towards the pose always being expressed w.r.t. the parent entity, as opposed to any other ancestor closer to the root (like the world or the root model). The main reason being that an entity knows who their immediate parent entity is, but it would necessary to crawl the entity tree to figure our who the other descendant would be.</p>\n</blockquote>\n<p>This makes the ability to convert between different frames of reference strictly more difficult and more expensive. This means we always need to climb a tree and compute a chain of matrix transforms (including matrix inversions) in order to transform to a different arbitrary reference frame. However, if poses are always expressed in the world frame (e.g. <code>T_A</code> is the pose of body <code>A</code> in the world and <code>T_B</code> is the pose of body <code>B</code> in the world) then the transform of <code>B</code> relative to <code>A</code> (i.e. <code>A_T_B</code>) would always simply be <code>A_T_B = T_A.inverse() * T_B</code>. This is true for <strong>any</strong> two bodies <code>A</code> and <code>B</code>, no matter what kind of parent/child relationship they might or might not have.</p>", "type": "rendered"}, "created_on": "2018-10-10T05:59:27.642827+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": null, "type": "issue_comment", "id": 48260363}