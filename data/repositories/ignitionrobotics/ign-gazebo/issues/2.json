{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/2/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/2/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/2/transport-segfault-on-shutdown"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/2/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Transport segfault on shutdown", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I observed that at times `ign-gazebo` crashes on shutdown. It doesn't happen every time. The backtrace points to `ign-transport`'s `WorkerPool`:\r\n\r\n~~~\r\n#0  0x00007ffff7bb7d34 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x555555be1de0) at /usr/include/c++/8/ext/atomicity.h:69\r\n#1  0x00007ffff4c06546 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7fffc406e3f8, __in_chrg=<optimized out>)\r\n    at /usr/include/c++/8/bits/shared_ptr_base.h:1151\r\n#2  std::__shared_ptr<ignition::transport::v6::ISubscriptionHandler, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7fffc406e3f0, __in_chrg=<optimized out>)\r\n    at /usr/include/c++/8/bits/shared_ptr_base.h:1151\r\n#3  std::shared_ptr<ignition::transport::v6::ISubscriptionHandler>::~shared_ptr (\r\n    this=0x7fffc406e3f0, __in_chrg=<optimized out>)\r\n    at /usr/include/c++/8/bits/shared_ptr.h:103\r\n#4  ignition::transport::v6::Node::Publisher::<lambda()>::~<lambda> (\r\n    this=0x7fffc406e3f0, __in_chrg=<optimized out>)\r\n    at /home/developer/ign-transport/src/Node.cc:337\r\n#5  std::_Function_base::_Base_manager<ignition::transport::v6::Node::Publisher::Publish(const ProtoMsg&)::<lambda()> >::_M_destroy (__victim=...)\r\n    at /usr/include/c++/8/bits/std_function.h:188\r\n#6  std::_Function_base::_Base_manager<ignition::transport::v6::Node::Publisher::Publish(const ProtoMsg&)::<lambda()> >::_M_manager(std::_Any_data &, const std::_Any_data &, std::_Manager_operation) (__dest=..., __source=..., __op=<optimized out>)\r\n    at /usr/include/c++/8/bits/std_function.h:212\r\n#7  0x00007ffff4c3660a in std::_Function_base::~_Function_base (\r\n    this=0x7fffe05b4970, __in_chrg=<optimized out>)\r\n    at /usr/include/c++/8/bits/std_function.h:257\r\n#8  std::function<void ()>::~function() (this=0x7fffe05b4970, \r\n    __in_chrg=<optimized out>) at /usr/include/c++/8/bits/std_function.h:370\r\n#9  std::function<void ()>::operator=(std::function<void ()>&&) (__x=..., \r\n    this=0x7fffe05b4990) at /usr/include/c++/8/bits/std_function.h:481\r\n#10 ignition::transport::v6::WorkOrder::operator= (this=0x7fffe05b4990)\r\n    at /home/developer/ign-transport/src/WorkerPool.cc:35\r\n#11 ignition::transport::v6::WorkerPoolPrivate::Worker() ()\r\n    at /home/developer/ign-transport/src/WorkerPool.cc:98\r\n#12 0x00007ffff551a733 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#13 0x00007ffff3fc16db in start_thread (arg=0x7fffe05b5700) at pthread_create.c:463\r\n#14 0x00007ffff4f7488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n~~~", "markup": "markdown", "html": "<p>I observed that at times <code>ign-gazebo</code> crashes on shutdown. It doesn't happen every time. The backtrace points to <code>ign-transport</code>'s <code>WorkerPool</code>:</p>\n<div class=\"codehilite\"><pre><span></span>#0  0x00007ffff7bb7d34 in std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (this=0x555555be1de0) at /usr/include/c++/8/ext/atomicity.h:69\n#1  0x00007ffff4c06546 in std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (this=0x7fffc406e3f8, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/c++/8/bits/shared_ptr_base.h:1151\n#2  std::__shared_ptr&lt;ignition::transport::v6::ISubscriptionHandler, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (this=0x7fffc406e3f0, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/c++/8/bits/shared_ptr_base.h:1151\n#3  std::shared_ptr&lt;ignition::transport::v6::ISubscriptionHandler&gt;::~shared_ptr (\n    this=0x7fffc406e3f0, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/c++/8/bits/shared_ptr.h:103\n#4  ignition::transport::v6::Node::Publisher::&lt;lambda()&gt;::~&lt;lambda&gt; (\n    this=0x7fffc406e3f0, __in_chrg=&lt;optimized out&gt;)\n    at /home/developer/ign-transport/src/Node.cc:337\n#5  std::_Function_base::_Base_manager&lt;ignition::transport::v6::Node::Publisher::Publish(const ProtoMsg&amp;)::&lt;lambda()&gt; &gt;::_M_destroy (__victim=...)\n    at /usr/include/c++/8/bits/std_function.h:188\n#6  std::_Function_base::_Base_manager&lt;ignition::transport::v6::Node::Publisher::Publish(const ProtoMsg&amp;)::&lt;lambda()&gt; &gt;::_M_manager(std::_Any_data &amp;, const std::_Any_data &amp;, std::_Manager_operation) (__dest=..., __source=..., __op=&lt;optimized out&gt;)\n    at /usr/include/c++/8/bits/std_function.h:212\n#7  0x00007ffff4c3660a in std::_Function_base::~_Function_base (\n    this=0x7fffe05b4970, __in_chrg=&lt;optimized out&gt;)\n    at /usr/include/c++/8/bits/std_function.h:257\n#8  std::function&lt;void ()&gt;::~function() (this=0x7fffe05b4970, \n    __in_chrg=&lt;optimized out&gt;) at /usr/include/c++/8/bits/std_function.h:370\n#9  std::function&lt;void ()&gt;::operator=(std::function&lt;void ()&gt;&amp;&amp;) (__x=..., \n    this=0x7fffe05b4990) at /usr/include/c++/8/bits/std_function.h:481\n#10 ignition::transport::v6::WorkOrder::operator= (this=0x7fffe05b4990)\n    at /home/developer/ign-transport/src/WorkerPool.cc:35\n#11 ignition::transport::v6::WorkerPoolPrivate::Worker() ()\n    at /home/developer/ign-transport/src/WorkerPool.cc:98\n#12 0x00007ffff551a733 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#13 0x00007ffff3fc16db in start_thread (arg=0x7fffe05b5700) at pthread_create.c:463\n#14 0x00007ffff4f7488f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-10-08T20:03:04.847804+00:00", "milestone": null, "updated_on": "2018-12-21T23:56:27.829996+00:00", "type": "issue", "id": 2}