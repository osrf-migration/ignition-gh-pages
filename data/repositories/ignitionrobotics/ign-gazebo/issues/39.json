{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/39/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/39.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/39/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/39/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/39/load-model-during-runtime-how-to-run-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/39/vote"}}, "reporter": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "title": "Load model during runtime: how to run model plugins?", "component": null, "votes": 0, "watches": 2, "content": {"raw": "The support of loading models during runtime was implemented months ago in [PR143](#!/ignitionrobotics/ign-gazebo/pull-requests/143/a-6-user-command-spawn-factory-create/diff).\r\n\r\nIt doesn\u2019t seem that the [UserCommands system](#!/ignitionrobotics/ign-gazebo/src/01ad44de9560f2af837bbe13c011e092a4cd307a/src/systems/user_commands/UserCommands.cc#lines-348:579) has the support to load a plugin if its element is included in the SDF file passed to the protobuf message. In fact, it seems being ignored. Is there any way to do it? In other words, is there any way to load a system defined in a plugin during runtime?\r\n\r\nBtw: I know that there is `Server::AddSystem`, that it only requires the server not being in running state. Using this call, though, is not optimal because the system would be added in the world SDF context and it would require manually loading the plugin library. Even more relevant, it would be impossible to pass any configuration to the plugin like the one that could be passed with custom XML properties listed in the plugin SDF element.", "markup": "markdown", "html": "<p>The support of loading models during runtime was implemented months ago in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/pull-requests/143/a-6-user-command-spawn-factory-create/diff\" rel=\"nofollow\">PR143</a>.</p>\n<p>It doesn\u2019t seem that the <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-gazebo/src/01ad44de9560f2af837bbe13c011e092a4cd307a/src/systems/user_commands/UserCommands.cc#lines-348:579\" rel=\"nofollow\">UserCommands system</a> has the support to load a plugin if its element is included in the SDF file passed to the protobuf message. In fact, it seems being ignored. Is there any way to do it? In other words, is there any way to load a system defined in a plugin during runtime?</p>\n<p>Btw: I know that there is <code>Server::AddSystem</code>, that it only requires the server not being in running state. Using this call, though, is not optimal because the system would be added in the world SDF context and it would require manually loading the plugin library. Even more relevant, it would be impossible to pass any configuration to the plugin like the one that could be passed with custom XML properties listed in the plugin SDF element.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-29T13:59:51.338557+00:00", "milestone": null, "updated_on": "2020-04-05T15:32:53.008219+00:00", "type": "issue", "id": 39}