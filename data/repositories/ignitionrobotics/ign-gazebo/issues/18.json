{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/18/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/18.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/18/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/18/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/18/support-for-multiple-worlds"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/18/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Support for multiple worlds", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Description \r\n\r\nSince the very beginning we've had support for multiple `<world>` tags within a single SDF file. The current behaviour is that a simulation runner is started for each of them. However, as the code evolved, that use case became less well supported.\r\n\r\n# Steps to Reproduce\r\n\r\nAt the moment, the following crashes with an ODE assertion:\r\n\r\n`ign-gazebo -f test/worlds/multiple_worlds.sdf`\r\n\r\n~~~\r\nODE INTERNAL ERROR 1: assertion \"!colliders_initialized\" failed in dInitColliders() [collision_kernel.cpp:168]\r\n\r\nODE INTERNAL ERROR 1: assertion \"!colliders_initialized\" failed in dInitColliders() [collision_kernel.cpp:168]\r\n~~~\r\n\r\n**Expected behavior:**  \r\n\r\nAt a minimum, no crash. At a maximum, multiple worlds spun up in parallel and running in lockstep, the UI displaying all of them side-by-side.\r\n\r\n**Actual behavior:**\r\n\r\nServer crashes, UI freezes.\r\n\r\n**Reproduces how often:** \r\n\r\n100% of the time\r\n\r\n# Versions\r\n\r\nign-gazebo1\r\n\r\n# Additional Information\r\n\r\nI'm not sure if it's best at the moment to:\r\n\r\n* print a warning and only load the first world\r\n* catch the physics problem before the crash and only disable the bit that is having trouble running in the same process (some singleton within ODE?)\r\n* leave it as it is but discourage people from trying to use it. It should be possible to avoid the crash, like using a different physics engine or even no physics.", "markup": "markdown", "html": "<h1 id=\"markdown-header-description\">Description</h1>\n<p>Since the very beginning we've had support for multiple <code>&lt;world&gt;</code> tags within a single SDF file. The current behaviour is that a simulation runner is started for each of them. However, as the code evolved, that use case became less well supported.</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>At the moment, the following crashes with an ODE assertion:</p>\n<p><code>ign-gazebo -f test/worlds/multiple_worlds.sdf</code></p>\n<div class=\"codehilite\"><pre><span></span>ODE INTERNAL ERROR 1: assertion &quot;!colliders_initialized&quot; failed in dInitColliders() [collision_kernel.cpp:168]\n\nODE INTERNAL ERROR 1: assertion &quot;!colliders_initialized&quot; failed in dInitColliders() [collision_kernel.cpp:168]\n</pre></div>\n\n\n<p><strong>Expected behavior:</strong>  </p>\n<p>At a minimum, no crash. At a maximum, multiple worlds spun up in parallel and running in lockstep, the UI displaying all of them side-by-side.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Server crashes, UI freezes.</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>100% of the time</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>ign-gazebo1</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>I'm not sure if it's best at the moment to:</p>\n<ul>\n<li>print a warning and only load the first world</li>\n<li>catch the physics problem before the crash and only disable the bit that is having trouble running in the same process (some singleton within ODE?)</li>\n<li>leave it as it is but discourage people from trying to use it. It should be possible to avoid the crash, like using a different physics engine or even no physics.</li>\n</ul>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-19T02:36:52.508753+00:00", "milestone": null, "updated_on": "2020-04-09T13:45:07.285986+00:00", "type": "issue", "id": 18}