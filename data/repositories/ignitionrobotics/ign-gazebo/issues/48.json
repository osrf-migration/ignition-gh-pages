{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/48/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/48.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/48/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/48/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/48/possible-memory-management-issues-in-dart"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/48/vote"}}, "reporter": {"display_name": "Jaldert Rombouts", "uuid": "{04334d8c-9f71-470e-abc0-61f12f3b82ff}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B04334d8c-9f71-470e-abc0-61f12f3b82ff%7D"}, "html": {"href": "https://bitbucket.org/%7B04334d8c-9f71-470e-abc0-61f12f3b82ff%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7576bbb265fcaf87c16d8e34d15ee0afd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-0.png"}}, "nickname": "Jaldert", "type": "user", "account_id": "5e39fd3fe18f970e61a0a4cf"}, "title": "Possible memory management issues in DART BoxedLcpConstrainedSolver?", "component": null, "votes": 0, "watches": 2, "content": {"raw": "# Prerequisites\r\n\r\n* \\[X\\] Put an X between the brackets on this line if you have done all of the following:\r\n\r\n    * Checked the Q&A board for common solutions: [http://answers.gazebosim.org](http://answers.gazebosim.org)\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: [https://ignitionrobotics.org/libs](https://ignitionrobotics.org/libs)\r\n    \r\n\r\n# Description\r\n\r\nThanks for building Ignition Gazebo. I've been experimenting with it and I really like the new architecture.\r\n\r\nOne of my experiments was building a conveyor model and system plugin. The model consists of a box with a set of rollers \\(cylinders\\) with revolute joints on top. I've written a custom system plugin to set `JointVelocityCmd`s for all these rollers.\r\n\r\nThe model runs fine when it is alone in the world - I've left it running for hours without issues.\r\n\r\nHowever, I\u2019m running into issues when I drop a box on top of the running conveyor: I quickly get memory errors like `free(): invalid next size (fast)` and occasionally a segmentation fault or `double free or corruption (out)`. Interestingly, this issue seems to require a combination of the conveyor running and the box moving along it. I tried variations where the model is not running and the box is dropped/placed at similar poses where the simulation crashes and I didn't manage to crash it in this manner.\r\n\r\nTaking the GDB backtrace at face value, it seems to be an issue in DART: In particular it seems to happen in `constraint::BoxedLcpConstraintSolver::solveConstrainedGroup(dart::constraint::ConstrainedGroup&) () from /usr/lib/x86_64-linux-gnu/libdart.so.6.10`  \\([link](https://gist.github.com/JaldertVicarious/84eaf1c8006e80a4afa30858b296f681#file-backtrace-txt-L8)\\)\r\n\r\n![](data/bitbucket.org/repo/8zodKzn/images/1406188254-crash_with_box.gif)\r\n\\(see attachment for high resolution version\\).\r\n\r\nI was not entirely sure if this issue should be posted here or on `ign-physics` . I\u2019ve posted it here because reproduction requires `ign-gazebo` , but I\u2019m also happy to open the issue elsewhere. \r\n\r\n# Steps to Reproduce\r\n\r\n1. Build the `RevoluteConveyorController.so` library\r\n\r\n```shell\r\n# Gist with plugin system, and example world SDF\r\ngit clone https://gist.github.com/84eaf1c8006e80a4afa30858b296f681.git example\r\n\r\ncd example\r\ncmake -H. -Bbuild\r\ncmake --build build\r\n\r\n# This step copies plugin to ~/.ignition/gazebo/plugins s.t. dynamic loader can find it.\r\ncmake --build build --target install\r\n```\r\n\r\n2\\. Run the `conveyor_with_box.sdf` example\r\n\r\n```shell\r\nign gazebo conveyor_with_box.sdf # with gui\r\n# ign gazebo -s -r conveyor_with_box.sdf # headless\r\n```\r\n\r\n\u200c\r\n\r\n**Expected behavior:**\r\n\r\nThe box should drop onto the rollers, move along it and finally fall off the end. The simulation should keep running.\r\n\r\n**Actual behavior:**\r\n\r\nThe box drops, and starts moving along conveyor, then ignition gazebo crashes with memory errors like `free(): invalid next size (fast)` and occasionally a segmentation fault or `double free or corruption (out)`. \r\n\r\n**Reproduces how often:**\r\n\r\nAlways. There is variation in the exact timing to crash \\(looking at the number of simulation iterations\\) as well as the exact error \\(see detailed description above\\).\r\n\r\n# Versions\r\n\r\n* OS: Ubuntu 18.04 Bionic\r\n* Ignition Version: Clean build of all Ignition Citadel packages, following [install\\_ubuntu\\_src](https://ignitionrobotics.org/docs/citadel/install_ubuntu_src). \r\n\r\n# Additional Information\r\n\r\n* Virtual machine: No, running native.\r\n\r\n\u200c\r\n\r\n\u200c\r\n\r\n\u200c", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>\n<p>[X] Put an X between the brackets on this line if you have done all of the following:</p>\n<ul>\n<li>Checked the Q&amp;A board for common solutions: <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org\" rel=\"nofollow\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a data-is-external-link=\"true\" href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Thanks for building Ignition Gazebo. I've been experimenting with it and I really like the new architecture.</p>\n<p>One of my experiments was building a conveyor model and system plugin. The model consists of a box with a set of rollers (cylinders) with revolute joints on top. I've written a custom system plugin to set <code>JointVelocityCmd</code>s for all these rollers.</p>\n<p>The model runs fine when it is alone in the world - I've left it running for hours without issues.</p>\n<p>However, I\u2019m running into issues when I drop a box on top of the running conveyor: I quickly get memory errors like <code>free(): invalid next size (fast)</code> and occasionally a segmentation fault or <code>double free or corruption (out)</code>. Interestingly, this issue seems to require a combination of the conveyor running and the box moving along it. I tried variations where the model is not running and the box is dropped/placed at similar poses where the simulation crashes and I didn't manage to crash it in this manner.</p>\n<p>Taking the GDB backtrace at face value, it seems to be an issue in DART: In particular it seems to happen in <code>constraint::BoxedLcpConstraintSolver::solveConstrainedGroup(dart::constraint::ConstrainedGroup&amp;) () from /usr/lib/x86_64-linux-gnu/libdart.so.6.10</code>  (<a data-is-external-link=\"true\" href=\"https://gist.github.com/JaldertVicarious/84eaf1c8006e80a4afa30858b296f681#file-backtrace-txt-L8\" rel=\"nofollow\">link</a>)</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/8zodKzn/images/1406188254-crash_with_box.gif\" />\n(see attachment for high resolution version).</p>\n<p>I was not entirely sure if this issue should be posted here or on <code>ign-physics</code> . I\u2019ve posted it here because reproduction requires <code>ign-gazebo</code> , but I\u2019m also happy to open the issue elsewhere. </p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<ol>\n<li>Build the <code>RevoluteConveyorController.so</code> library</li>\n</ol>\n<div class=\"codehilite language-shell\"><pre><span></span><span class=\"c1\"># Gist with plugin system, and example world SDF</span>\ngit clone https://gist.github.com/84eaf1c8006e80a4afa30858b296f681.git example\n\n<span class=\"nb\">cd</span> example\ncmake -H. -Bbuild\ncmake --build build\n\n<span class=\"c1\"># This step copies plugin to ~/.ignition/gazebo/plugins s.t. dynamic loader can find it.</span>\ncmake --build build --target install\n</pre></div>\n\n\n<p>2. Run the <code>conveyor_with_box.sdf</code> example</p>\n<div class=\"codehilite language-shell\"><pre><span></span>ign gazebo conveyor_with_box.sdf <span class=\"c1\"># with gui</span>\n<span class=\"c1\"># ign gazebo -s -r conveyor_with_box.sdf # headless</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<p><strong>Expected behavior:</strong></p>\n<p>The box should drop onto the rollers, move along it and finally fall off the end. The simulation should keep running.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The box drops, and starts moving along conveyor, then ignition gazebo crashes with memory errors like <code>free(): invalid next size (fast)</code> and occasionally a segmentation fault or <code>double free or corruption (out)</code>. </p>\n<p><strong>Reproduces how often:</strong></p>\n<p>Always. There is variation in the exact timing to crash (looking at the number of simulation iterations) as well as the exact error (see detailed description above).</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<ul>\n<li>OS: Ubuntu 18.04 Bionic</li>\n<li>Ignition Version: Clean build of all Ignition Citadel packages, following <a data-is-external-link=\"true\" href=\"https://ignitionrobotics.org/docs/citadel/install_ubuntu_src\" rel=\"nofollow\">install_ubuntu_src</a>. </li>\n</ul>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<ul>\n<li>Virtual machine: No, running native.</li>\n</ul>\n<p>\u200c</p>\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-02-05T00:21:51.875535+00:00", "milestone": null, "updated_on": "2020-03-30T23:58:46.545678+00:00", "type": "issue", "id": 48}