{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/20/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/20.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/20/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/20/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/20/current-performance-of-ignition-robotic"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-gazebo/issues/20/vote"}}, "reporter": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "title": "Current performance of ignition robotic libraries", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Summary\r\n\r\nThe overhead introduced by ignition gazebo seems significant. The time spent to compute physics is a small fraction of the total time.\r\n\r\n# Description\r\n\r\nFirst off, thanks for all the work you're doing! Despite their early development status, ignition libraries are amazing.\r\n\r\nI am currently developing an application based on ignition robotics. Starting by saying that it is still at a very early stage of development, I tried to evaluate its performance in order to catch initial bottlenecks. The test I did is a simple cart pole simulation with ignition configured in such a way that it tries to go as fast as it can. Currently, there's only one thread, and I can see that the CPU goes to 100% when the application is executing.\r\n\r\nReferring to the attached cachegrind image, I am surprised to see that only  the ~11% of the time passed inside the ignition libraries (the entry point is Server::Run) is actually spent in the physics engine (currently, dart). This means that the remaining 89% is computation overhead.\r\n\r\nIs this behavior normal to your eyes? I saw that you performed in the past some profiling, maybe you have some insights on it.\r\n\r\nNote: this is a headless simulation, I do not use the `ign-gazebo-gui` process", "markup": "markdown", "html": "<h1 id=\"markdown-header-summary\">Summary</h1>\n<p>The overhead introduced by ignition gazebo seems significant. The time spent to compute physics is a small fraction of the total time.</p>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>First off, thanks for all the work you're doing! Despite their early development status, ignition libraries are amazing.</p>\n<p>I am currently developing an application based on ignition robotics. Starting by saying that it is still at a very early stage of development, I tried to evaluate its performance in order to catch initial bottlenecks. The test I did is a simple cart pole simulation with ignition configured in such a way that it tries to go as fast as it can. Currently, there's only one thread, and I can see that the CPU goes to 100% when the application is executing.</p>\n<p>Referring to the attached cachegrind image, I am surprised to see that only  the ~11% of the time passed inside the ignition libraries (the entry point is Server::Run) is actually spent in the physics engine (currently, dart). This means that the remaining 89% is computation overhead.</p>\n<p>Is this behavior normal to your eyes? I saw that you performed in the past some profiling, maybe you have some insights on it.</p>\n<p>Note: this is a headless simulation, I do not use the <code>ign-gazebo-gui</code> process</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-03-26T16:55:12.142302+00:00", "milestone": null, "updated_on": "2019-03-27T08:59:21.791811+00:00", "type": "issue", "id": 20}