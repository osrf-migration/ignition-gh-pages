{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/51/comments/56512370.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo/issues/51#comment-56512370"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo/issues/51.json"}}, "type": "issue", "id": 51, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-gazebo.json"}, "html": {"href": "#!/ignitionrobotics/ign-gazebo"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f98d11fe-f287-4dfb-99c3-e2b76a13232e}ts=2082645"}}, "type": "repository", "name": "ign-gazebo", "full_name": "ignitionrobotics/ign-gazebo", "uuid": "{f98d11fe-f287-4dfb-99c3-e2b76a13232e}"}, "title": "Allow stepping the simulator in paused state"}, "content": {"raw": "Thank a lot @{557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8} for the link, very enlightening! I confirm that commenting out that if statement fixes the problem. Do you think that this small modification could lead to any problems on the current codebase? It would be great seeing it hitting upstream soon.\n\nThis is the new behaviour:\n\n```c++\n#include <ignition/gazebo/Server.hh>\n#include <ignition/gazebo/ServerConfig.hh>\n\n\nint main(int /*argc*/, char* /*argv*/[])\n{\n    ignition::gazebo::ServerConfig config;\n    config.SetSdfFile(\"empty.sdf\");\n    config.SetUseLevels(false);\n    config.SetUpdateRate(1000);\n\n    // Create the server\n    ignition::gazebo::Server server(config);\n\n    // This is ok\n    for (size_t i = 0; i < 5; ++i) {\n        std::cout << \"Running an unpaused blocking iteration... \";\n        server.Run(/*blocking=*/true, /*iterations=*/1, /*paused=*/false);\n        std::cout << \"done\" << std::endl;\n\n        std::cout << \"Iterations=\" << server.IterationCount().value() << std::endl;\n    }\n\n    // This is no longer looping forever\n    for (size_t i = 0; i < 5; ++i) {\n        std::cout << \"Running a paused blocking iteration... \";\n        server.Run(/*blocking=*/true, /*iterations=*/1, /*paused=*/true);\n        std::cout << \"done\" << std::endl;\n\n        std::cout << \"Iterations=\" << server.IterationCount().value() << std::endl;\n    }\n\n    return 0;\n}\n```\n\nOutput:\n\n\u200c\n\n```\n\u276f ./Test \nRunning an unpaused blocking iteration... done\nIterations=1\nRunning an unpaused blocking iteration... done\nIterations=2\nRunning an unpaused blocking iteration... done\nIterations=3\nRunning an unpaused blocking iteration... done\nIterations=4\nRunning an unpaused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\n```\n\n\u200c", "markup": "markdown", "html": "<p>Thank a lot <span class=\"ap-mention\" data-atlassian-id=\"557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8\">@Louise Poubel</span> for the link, very enlightening! I confirm that commenting out that if statement fixes the problem. Do you think that this small modification could lead to any problems on the current codebase? It would be great seeing it hitting upstream soon.</p>\n<p>This is the new behaviour:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ignition/gazebo/Server.hh&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;ignition/gazebo/ServerConfig.hh&gt;</span><span class=\"cp\"></span>\n\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"cm\">/*argc*/</span><span class=\"p\">,</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"cm\">/*argv*/</span><span class=\"p\">[])</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">ServerConfig</span> <span class=\"n\">config</span><span class=\"p\">;</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetSdfFile</span><span class=\"p\">(</span><span class=\"s\">&quot;empty.sdf&quot;</span><span class=\"p\">);</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetUseLevels</span><span class=\"p\">(</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">SetUpdateRate</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">// Create the server</span>\n    <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">gazebo</span><span class=\"o\">::</span><span class=\"n\">Server</span> <span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">// This is ok</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">size_t</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Running an unpaused blocking iteration... &quot;</span><span class=\"p\">;</span>\n        <span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"cm\">/*blocking=*/</span><span class=\"nb\">true</span><span class=\"p\">,</span> <span class=\"cm\">/*iterations=*/</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"cm\">/*paused=*/</span><span class=\"nb\">false</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;done&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Iterations=&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">IterationCount</span><span class=\"p\">().</span><span class=\"n\">value</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// This is no longer looping forever</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">size_t</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Running a paused blocking iteration... &quot;</span><span class=\"p\">;</span>\n        <span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">Run</span><span class=\"p\">(</span><span class=\"cm\">/*blocking=*/</span><span class=\"nb\">true</span><span class=\"p\">,</span> <span class=\"cm\">/*iterations=*/</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"cm\">/*paused=*/</span><span class=\"nb\">true</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;done&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Iterations=&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">IterationCount</span><span class=\"p\">().</span><span class=\"n\">value</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Output:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>\u276f ./Test \nRunning an unpaused blocking iteration... done\nIterations=1\nRunning an unpaused blocking iteration... done\nIterations=2\nRunning an unpaused blocking iteration... done\nIterations=3\nRunning an unpaused blocking iteration... done\nIterations=4\nRunning an unpaused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\nRunning a paused blocking iteration... done\nIterations=5\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-03-13T09:27:58.679302+00:00", "user": {"display_name": "Diego Ferigo", "uuid": "{994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D"}, "html": {"href": "https://bitbucket.org/%7B994b27a5-7d6d-42b2-8aa7-2ea82fbe7bf6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:054df869-5cda-48f2-8b4e-81a61c133346/130cd3bf-aa0a-4355-bec2-c90f195acc4c/128"}}, "nickname": "dgferigo", "type": "user", "account_id": "557058:054df869-5cda-48f2-8b4e-81a61c133346"}, "updated_on": "2020-03-13T09:28:44.710173+00:00", "type": "issue_comment", "id": 56512370}