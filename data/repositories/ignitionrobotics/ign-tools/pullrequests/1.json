{"rendered": {"description": {"raw": "Initial layout for the `ign` command line tool.\r\n\r\n`ign` accepts multiple commands. Each command is implemented in a plugin that belongs to a specific Ignition project. For example, all the commands that start with `ign topic ...` will be handled by the Ignition Transport library.\r\n\r\nEach Ignition library installs a YAML configuration file with the list of commands that provides, as well as a description of each command. Also, the configuration file contains the name of the library and some extra information. You can see an example [here](#!/ignitionrobotics/ign-transport/raw/ign_tool/conf/transport.yaml).\r\n\r\n`ign` should work when a new Ignition library is installed/removed/updated.\r\n\r\n`ign` loads all the Ignition configuration files and is able to display the list of available commands to the user. If the user types a valid command, `ign` will forward the arguments to the appropriate Ignition library, that will do the work.\r\n\r\n`ign` is Ruby!\r\n\r\nYou can try this pull request with [pull_request_#36](#!/ignitionrobotics/ign-transport/pull-request/36/) in `Ignition-transport` (implements `topic list` and `service list`).", "markup": "markdown", "html": "<p>Initial layout for the <code>ign</code> command line tool.</p>\n<p><code>ign</code> accepts multiple commands. Each command is implemented in a plugin that belongs to a specific Ignition project. For example, all the commands that start with <code>ign topic ...</code> will be handled by the Ignition Transport library.</p>\n<p>Each Ignition library installs a YAML configuration file with the list of commands that provides, as well as a description of each command. Also, the configuration file contains the name of the library and some extra information. You can see an example <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/raw/ign_tool/conf/transport.yaml\" rel=\"nofollow\">here</a>.</p>\n<p><code>ign</code> should work when a new Ignition library is installed/removed/updated.</p>\n<p><code>ign</code> loads all the Ignition configuration files and is able to display the list of available commands to the user. If the user types a valid command, <code>ign</code> will forward the arguments to the appropriate Ignition library, that will do the work.</p>\n<p><code>ign</code> is Ruby!</p>\n<p>You can try this pull request with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-request/36/\" rel=\"nofollow\">pull_request_#36</a> in <code>Ignition-transport</code> (implements <code>topic list</code> and <code>service list</code>).</p>", "type": "rendered"}, "title": {"raw": "ign tool infrastructure", "markup": "markdown", "html": "<p>ign tool infrastructure</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Initial layout for the `ign` command line tool.\r\n\r\n`ign` accepts multiple commands. Each command is implemented in a plugin that belongs to a specific Ignition project. For example, all the commands that start with `ign topic ...` will be handled by the Ignition Transport library.\r\n\r\nEach Ignition library installs a YAML configuration file with the list of commands that provides, as well as a description of each command. Also, the configuration file contains the name of the library and some extra information. You can see an example [here](#!/ignitionrobotics/ign-transport/raw/ign_tool/conf/transport.yaml).\r\n\r\n`ign` should work when a new Ignition library is installed/removed/updated.\r\n\r\n`ign` loads all the Ignition configuration files and is able to display the list of available commands to the user. If the user types a valid command, `ign` will forward the arguments to the appropriate Ignition library, that will do the work.\r\n\r\n`ign` is Ruby!\r\n\r\nYou can try this pull request with [pull_request_#36](#!/ignitionrobotics/ign-transport/pull-request/36/) in `Ignition-transport` (implements `topic list` and `service list`).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/diffstat/ignitionrobotics/ign-tools:32a0516b760d%0Da1b5ed34ed32?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-tools/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-tools/pullrequests/1.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-tools/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/pullrequests/1/merge"}, "html": {"href": "#!/ignitionrobotics/ign-tools/pull-requests/1"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-tools/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/diff/ignitionrobotics/ign-tools:32a0516b760d%0Da1b5ed34ed32?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-tools/pullrequests/1/statuses_page=1.json"}}, "title": "ign tool infrastructure", "close_source_branch": true, "reviewers": [], "id": 1, "destination": {"commit": {"hash": "a1b5ed34ed32", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools/commit/a1b5ed34ed32.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools/commits/a1b5ed34ed32"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1d3755e4-eb8f-4c81-9519-830fae2fbba8}ts=ruby"}}, "type": "repository", "name": "ign-tools", "full_name": "ignitionrobotics/ign-tools", "uuid": "{1d3755e4-eb8f-4c81-9519-830fae2fbba8}"}, "branch": {"name": "default"}}, "created_on": "2014-11-14T02:41:04.027023+00:00", "summary": {"raw": "Initial layout for the `ign` command line tool.\r\n\r\n`ign` accepts multiple commands. Each command is implemented in a plugin that belongs to a specific Ignition project. For example, all the commands that start with `ign topic ...` will be handled by the Ignition Transport library.\r\n\r\nEach Ignition library installs a YAML configuration file with the list of commands that provides, as well as a description of each command. Also, the configuration file contains the name of the library and some extra information. You can see an example [here](#!/ignitionrobotics/ign-transport/raw/ign_tool/conf/transport.yaml).\r\n\r\n`ign` should work when a new Ignition library is installed/removed/updated.\r\n\r\n`ign` loads all the Ignition configuration files and is able to display the list of available commands to the user. If the user types a valid command, `ign` will forward the arguments to the appropriate Ignition library, that will do the work.\r\n\r\n`ign` is Ruby!\r\n\r\nYou can try this pull request with [pull_request_#36](#!/ignitionrobotics/ign-transport/pull-request/36/) in `Ignition-transport` (implements `topic list` and `service list`).", "markup": "markdown", "html": "<p>Initial layout for the <code>ign</code> command line tool.</p>\n<p><code>ign</code> accepts multiple commands. Each command is implemented in a plugin that belongs to a specific Ignition project. For example, all the commands that start with <code>ign topic ...</code> will be handled by the Ignition Transport library.</p>\n<p>Each Ignition library installs a YAML configuration file with the list of commands that provides, as well as a description of each command. Also, the configuration file contains the name of the library and some extra information. You can see an example <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/raw/ign_tool/conf/transport.yaml\" rel=\"nofollow\">here</a>.</p>\n<p><code>ign</code> should work when a new Ignition library is installed/removed/updated.</p>\n<p><code>ign</code> loads all the Ignition configuration files and is able to display the list of available commands to the user. If the user types a valid command, <code>ign</code> will forward the arguments to the appropriate Ignition library, that will do the work.</p>\n<p><code>ign</code> is Ruby!</p>\n<p>You can try this pull request with <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-request/36/\" rel=\"nofollow\">pull_request_#36</a> in <code>Ignition-transport</code> (implements <code>topic list</code> and <code>service list</code>).</p>", "type": "rendered"}, "source": {"commit": {"hash": "471d7ef72777", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools/commit/471d7ef72777.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools/commits/471d7ef72777"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1d3755e4-eb8f-4c81-9519-830fae2fbba8}ts=ruby"}}, "type": "repository", "name": "ign-tools", "full_name": "ignitionrobotics/ign-tools", "uuid": "{1d3755e4-eb8f-4c81-9519-830fae2fbba8}"}, "branch": {"name": "ign_ruby"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2014-12-02T23:35:06.571770+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2014-12-02T23:58:41.596652+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2014-12-04T14:54:40.366686+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "32a0516b760d", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools/commit/32a0516b760d.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools/commits/32a0516b760d"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}