{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-tools.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{1d3755e4-eb8f-4c81-9519-830fae2fbba8}ts=ruby"}}, "type": "repository", "name": "ign-tools", "full_name": "ignitionrobotics/ign-tools", "uuid": "{1d3755e4-eb8f-4c81-9519-830fae2fbba8}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-tools/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-tools/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/issues/5/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-tools/issues/5/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-tools/issues/5/ign-tools-echo-command-unable-to-output"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-tools/issues/5/vote"}}, "reporter": {"display_name": "Nuno Marques", "uuid": "{a7356a80-a26a-4ab7-af5b-494fe038a1c7}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba7356a80-a26a-4ab7-af5b-494fe038a1c7%7D"}, "html": {"href": "https://bitbucket.org/%7Ba7356a80-a26a-4ab7-af5b-494fe038a1c7%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2ae57099-6545-4ef4-8e48-3cd5f87b7f52/20fd74f9-d763-4f0e-b57f-c4570327e595/128"}}, "nickname": "TSC21", "type": "user", "account_id": "557058:2ae57099-6545-4ef4-8e48-3cd5f87b7f52"}, "title": "ign tools echo command unable to output data from custom Protobuf messages.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n    * [X] Checked the Q&A board for common solutions: http://answers.gazebosim.org\r\n    * [X] Checked that your issue isn't already filed.\r\n    * [X] Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\r\n\r\n# Description \r\n\r\nI set up a publisher using ignition Transport Publisher in a plugin and, in another plugin, I setup the Subscriber, also from ignition Transport. I can see that the data is exchanged between the plugins, though, using `ign-tools`, more in specific, the echo tool, I am not able to echo any data coming from the publisher.\r\n\r\nThe publisher is setup like the following:\r\n```c++\r\nignition::transport::Node::Publisher m_baro_pub_ign_;\r\n...\r\nm_baro_pub_ign_ = node_ign_.Advertise<sensor_msgs::msgs::Baro>(\"/gazebo/default/\" + m_model->GetName() + m_baro_topic);\r\n...\r\nm_baro_pub_ign_.Publish(msg);\r\n```\r\n\r\nthe subscriber is setup as follows:\r\n```\r\nnode_ign_.Subscribe(\"/gazebo/default/\" + model_->GetName() + baro_sub_topic_, &GazeboMotorModel::BaroCallback_, this)\r\n\r\nvoid GazeboMotorModel::BaroCallback_(const sensor_msgs::msgs::Baro &baro_msg)\r\n{\r\n  ...\r\n} tried to follow your suggestion on using ignition Transport. tried to follow your suggestion on using ignition Transport.\r\n```\r\n\r\nIf I try to echo the topic using `ign topic --echo -t /gazebo/default/<model_name>/baro`, nothing is echoed, which leads me to think that the `ign-tools` is not able to process custom protobuf messages, same as `gz-tools`.\r\n\r\nAlso another note: I am not able to plug a Gazebo Transport publisher with a ignition Transport subscriber and vice-versa, using a custom protobuf messages, so that's why I decided to apply a publisher and a subscriber of the same type (ignition Transport). So I question the compatibility between the legacy Gazebo transport and the ignition Tranport for custom messages.\r\n\r\n@chapulina Any tip you can give here?\r\n\r\n# Steps to Reproduce\r\n\r\nThe steps to reproduce are as simple as creating a publisher and a subscriber for a custom protobuf message and then try to use `ign topic --echo -t  <topic/path>`.\r\n\r\n**Expected behavior:**  \r\n\r\nI am expecting to have the topic data being echoed on the console.\r\n\r\n**Actual behavior:**\r\n\r\nNothing really happens (doesn't crash but doesn't output anything as well).\r\n\r\n**Reproduces how often:** \r\n\r\nAlways. And this was also confirmed by another used before: http://answers.gazebosim.org/question/17148/how-to-make-the-ign-tool-work-with-custom-messages/\r\n\r\n# Versions\r\n\r\nUbuntu 18.04, Gazebo 9, ignition Transport 4.0.0, ignition tools 4.0.0 installed from debs. The only thing that is built from source is the custom written plugins for Gazebo.\r\n\r\n# Additional Information\r\n\r\nThis was already reported for discussion in https://bitbucket.org/osrf/gazebo/issues/2569/support-for-self-describing-messages, but came out from another context, even though the purpose is the same: being able to echo topics (Gazebo/Ign) using echo commands from tools.", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<div class=\"codehilite\"><pre><span></span>* [X] Checked the Q&amp;A board for common solutions: http://answers.gazebosim.org\n* [X] Checked that your issue isn&#39;t already filed.\n* [X] Checked that there is not already an Ignition package that provides the described functionality: https://ignitionrobotics.org/libs\n</pre></div>\n\n\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>I set up a publisher using ignition Transport Publisher in a plugin and, in another plugin, I setup the Subscriber, also from ignition Transport. I can see that the data is exchanged between the plugins, though, using <code>ign-tools</code>, more in specific, the echo tool, I am not able to echo any data coming from the publisher.</p>\n<p>The publisher is setup like the following:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Publisher</span> <span class=\"n\">m_baro_pub_ign_</span><span class=\"p\">;</span>\n<span class=\"p\">...</span>\n<span class=\"n\">m_baro_pub_ign_</span> <span class=\"o\">=</span> <span class=\"n\">node_ign_</span><span class=\"p\">.</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">sensor_msgs</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Baro</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"s\">&quot;/gazebo/default/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">m_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">m_baro_topic</span><span class=\"p\">);</span>\n<span class=\"p\">...</span>\n<span class=\"n\">m_baro_pub_ign_</span><span class=\"p\">.</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>the subscriber is setup as follows:</p>\n<div class=\"codehilite\"><pre><span></span>node_ign_.Subscribe(&quot;/gazebo/default/&quot; + model_-&gt;GetName() + baro_sub_topic_, &amp;GazeboMotorModel::BaroCallback_, this)\n\nvoid GazeboMotorModel::BaroCallback_(const sensor_msgs::msgs::Baro &amp;baro_msg)\n{\n  ...\n} tried to follow your suggestion on using ignition Transport. tried to follow your suggestion on using ignition Transport.\n</pre></div>\n\n\n<p>If I try to echo the topic using <code>ign topic --echo -t /gazebo/default/&lt;model_name&gt;/baro</code>, nothing is echoed, which leads me to think that the <code>ign-tools</code> is not able to process custom protobuf messages, same as <code>gz-tools</code>.</p>\n<p>Also another note: I am not able to plug a Gazebo Transport publisher with a ignition Transport subscriber and vice-versa, using a custom protobuf messages, so that's why I decided to apply a publisher and a subscriber of the same type (ignition Transport). So I question the compatibility between the legacy Gazebo transport and the ignition Tranport for custom messages.</p>\n<p>@chapulina Any tip you can give here?</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>The steps to reproduce are as simple as creating a publisher and a subscriber for a custom protobuf message and then try to use <code>ign topic --echo -t  &lt;topic/path&gt;</code>.</p>\n<p><strong>Expected behavior:</strong>  </p>\n<p>I am expecting to have the topic data being echoed on the console.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>Nothing really happens (doesn't crash but doesn't output anything as well).</p>\n<p><strong>Reproduces how often:</strong> </p>\n<p>Always. And this was also confirmed by another used before: <a href=\"http://answers.gazebosim.org/question/17148/how-to-make-the-ign-tool-work-with-custom-messages/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/17148/how-to-make-the-ign-tool-work-with-custom-messages/</a></p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>Ubuntu 18.04, Gazebo 9, ignition Transport 4.0.0, ignition tools 4.0.0 installed from debs. The only thing that is built from source is the custom written plugins for Gazebo.</p>\n<h1 id=\"markdown-header-additional-information\">Additional Information</h1>\n<p>This was already reported for discussion in <a href=\"https://bitbucket.org/osrf/gazebo/issues/2569/support-for-self-describing-messages\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/osrf/gazebo/issues/2569/support-for-self-describing-messages</a>, but came out from another context, even though the purpose is the same: being able to echo topics (Gazebo/Ign) using echo commands from tools.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2018-12-19T19:57:49.387629+00:00", "milestone": null, "updated_on": "2019-01-02T18:51:57.805597+00:00", "type": "issue", "id": 5}