{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/108/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/108.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/108/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/108/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/108/functions-taken-by-reference-should-be"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/108/vote"}}, "reporter": {"display_name": "Trent Houliston", "uuid": "{820060dc-bbdd-4b53-994d-031ded31a54b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B820060dc-bbdd-4b53-994d-031ded31a54b%7D"}, "html": {"href": "https://bitbucket.org/%7B820060dc-bbdd-4b53-994d-031ded31a54b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7a0a1d6b8b7a4fc6a94c967ff68f58e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsTH-4.png"}}, "nickname": "TrentHouliston", "type": "user", "account_id": "557058:ac2b58dd-1007-4808-a39f-210f24cc2f0a"}, "title": "Functions taken by reference should be const reference", "component": null, "votes": 0, "watches": 1, "content": {"raw": "# Prerequisites\r\n\r\n* \\[X\\] Put an X between the brackets on this line if you have done all of the following:\r\n\r\n    * Checked the Q&A board for common solutions: [http://answers.gazebosim.org](http://answers.gazebosim.org)\r\n    * Checked that your issue isn't already filed.\r\n    * Checked that there is not already an Ignition package that provides the described functionality: [https://ignitionrobotics.org/libs](https://ignitionrobotics.org/libs)\r\n    \r\n\r\n# Description\r\n\r\nFunctions that take callbacks etc take their callback functions by reference instead of const reference. This prevents lambdas from being used without going through a secondary type. Additionally taking the functions by reference is misleading as you would never change a function object.\r\n\r\nI would do a PR to fix this, but I don\u2019t know how deep this rabbit hole would go\u2026\r\n\r\n# Steps to Reproduce\r\n\r\nCompile code that uses a lambda directly in these functions, e.g.\r\n\r\n```\r\ndiscoveryNode->ConnectionsCb([this](const ignition::transport::MessagePublisher& _publisher) {\r\n    std::cout \"Hello world!\" << std::endl;\r\n});\r\n```\r\n\r\nFails to compile as it cannot convert an R value reference into an L value reference.  \r\nThis could be resolved by taking the reference as const.\r\n\r\n**Expected behavior:**\r\n\r\nThe code should compile and run as expected.\r\n\r\n**Actual behavior:**\r\n\r\nThe code fails to compile as you are unable to pass an R value reference into a function that expects an L value reference. There is no reason these functions should be taken by l value reference over const reference which would allow r values to be passed also.\r\n\r\n**Reproduces how often:**\r\n\r\n100% of the time\r\n\r\n# Versions\r\n\r\nign-transport 4.0.0\\_3  \r\nMac OSX: 10.14.3  \r\nApple LLVM version 10.0.1 \\(clang-1001.0.46.4\\)", "markup": "markdown", "html": "<h1 id=\"markdown-header-prerequisites\">Prerequisites</h1>\n<ul>\n<li>\n<p>[X] Put an X between the brackets on this line if you have done all of the following:</p>\n<ul>\n<li>Checked the Q&amp;A board for common solutions: <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org\" rel=\"nofollow\">http://answers.gazebosim.org</a></li>\n<li>Checked that your issue isn't already filed.</li>\n<li>Checked that there is not already an Ignition package that provides the described functionality: <a data-is-external-link=\"true\" href=\"https://ignitionrobotics.org/libs\" rel=\"nofollow\">https://ignitionrobotics.org/libs</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"markdown-header-description\">Description</h1>\n<p>Functions that take callbacks etc take their callback functions by reference instead of const reference. This prevents lambdas from being used without going through a secondary type. Additionally taking the functions by reference is misleading as you would never change a function object.</p>\n<p>I would do a PR to fix this, but I don\u2019t know how deep this rabbit hole would go\u2026</p>\n<h1 id=\"markdown-header-steps-to-reproduce\">Steps to Reproduce</h1>\n<p>Compile code that uses a lambda directly in these functions, e.g.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">discoveryNode-</span><span class=\"o\">&gt;</span><span class=\"nt\">ConnectionsCb</span><span class=\"o\">(</span><span class=\"cp\">[</span><span class=\"nx\">this</span><span class=\"cp\">]</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">transport</span><span class=\"p\">::</span><span class=\"nd\">MessagePublisher</span><span class=\"o\">&amp;</span> <span class=\"nt\">_publisher</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cout</span> <span class=\"s2\">&quot;Hello world!&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>Fails to compile as it cannot convert an R value reference into an L value reference.<br />\nThis could be resolved by taking the reference as const.</p>\n<p><strong>Expected behavior:</strong></p>\n<p>The code should compile and run as expected.</p>\n<p><strong>Actual behavior:</strong></p>\n<p>The code fails to compile as you are unable to pass an R value reference into a function that expects an L value reference. There is no reason these functions should be taken by l value reference over const reference which would allow r values to be passed also.</p>\n<p><strong>Reproduces how often:</strong></p>\n<p>100% of the time</p>\n<h1 id=\"markdown-header-versions\">Versions</h1>\n<p>ign-transport 4.0.0_3<br />\nMac OSX: 10.14.3<br />\nApple LLVM version 10.0.1 (clang-1001.0.46.4)</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-21T07:03:11.364236+00:00", "milestone": null, "updated_on": "2019-07-22T08:38:44.760564+00:00", "type": "issue", "id": 108}