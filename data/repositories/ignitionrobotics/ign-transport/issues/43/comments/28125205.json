{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/43/comments/28125205.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/43#comment-28125205"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/43.json"}}, "type": "issue", "id": 43, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Restrict maximum topic length"}, "content": {"raw": "There are several layers in ignition-transport library. \n\n1. Should I restrict the length on the node layer? I can add restriction in TopicUtils::FullyQualifiedName() method. It means that if \"@/partition@/namespace/topic\" is too long (> 255) then the person receives the error message \"Topic [topic] is invalid\". In this case I print message that topic is invalid, but the problem is that fully qualified topic is too long. Should I print fully qualified topic name?\n\n2. I should restrict topic length in SubscriptionMsg::Unpack() (I don't want to receive too long message). Should I also add restriction on the topic length 1) in this class or 2) only in pack method? The first case: there are no SubscriptionMsg with too long topic. The second case: I cannot send message with too long topic, but I can create it.\n\n3. The same question about Publisher.  I should restrict topic length in Publisher::Unpack() (I don't want to receive too long message). Should I also add restriction on the topic length 1) in this class or 2) only in pack method? The first case: there are no Publisher with too long topic. The second case: I cannot send message with too long topic, but I can create it.\n\n4. Should I create different constants (one per class) maxTopicLength or create one global constant? In the first case: TopicUtils::maxFullyQualifiedNameLength, SubscriptionMsg::maxTopicLength, Publisher::maxTopicLength.\n\n5. What should I do if I received too long message? I have some problems. I describe my problem in this [pr](#!/ignitionrobotics/ign-transport/pull-requests/137/issue-43/diff).", "markup": "markdown", "html": "<p>There are several layers in ignition-transport library. </p>\n<ol>\n<li>\n<p>Should I restrict the length on the node layer? I can add restriction in TopicUtils::FullyQualifiedName() method. It means that if \"@/partition@/namespace/topic\" is too long (&gt; 255) then the person receives the error message \"Topic [topic] is invalid\". In this case I print message that topic is invalid, but the problem is that fully qualified topic is too long. Should I print fully qualified topic name?</p>\n</li>\n<li>\n<p>I should restrict topic length in SubscriptionMsg::Unpack() (I don't want to receive too long message). Should I also add restriction on the topic length 1) in this class or 2) only in pack method? The first case: there are no SubscriptionMsg with too long topic. The second case: I cannot send message with too long topic, but I can create it.</p>\n</li>\n<li>\n<p>The same question about Publisher.  I should restrict topic length in Publisher::Unpack() (I don't want to receive too long message). Should I also add restriction on the topic length 1) in this class or 2) only in pack method? The first case: there are no Publisher with too long topic. The second case: I cannot send message with too long topic, but I can create it.</p>\n</li>\n<li>\n<p>Should I create different constants (one per class) maxTopicLength or create one global constant? In the first case: TopicUtils::maxFullyQualifiedNameLength, SubscriptionMsg::maxTopicLength, Publisher::maxTopicLength.</p>\n</li>\n<li>\n<p>What should I do if I received too long message? I have some problems. I describe my problem in this <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-requests/137/issue-43/diff\" rel=\"nofollow\">pr</a>.</p>\n</li>\n</ol>", "type": "rendered"}, "created_on": "2016-05-29T17:49:21.114010+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": null, "type": "issue_comment", "id": 28125205}