{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/43/comments/28282763.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/43#comment-28282763"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/43.json"}}, "type": "issue", "id": 43, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Restrict maximum topic length"}, "content": {"raw": "@caguero 6. How can I check that ```Unpack()``` works correct if I forbid to create a SubscriptionMessage with long topic? My question is about code in ```Packet_TEST.cc``` file. Now I create a SubscriptionMessage with long topic and check that ```SubscriptionMessage.Unpack()``` is equal to zero.", "markup": "markdown", "html": "<p>@caguero 6. How can I check that <code>Unpack()</code> works correct if I forbid to create a SubscriptionMessage with long topic? My question is about code in <code>Packet_TEST.cc</code> file. Now I create a SubscriptionMessage with long topic and check that <code>SubscriptionMessage.Unpack()</code> is equal to zero.</p>", "type": "rendered"}, "created_on": "2016-06-05T14:24:01.267460+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": "2016-06-05T14:24:23.692297+00:00", "type": "issue_comment", "id": 28282763}