{"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/54/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/54.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/54/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/54/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/54/publish-on-the-topics-with-the-same-names"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/54/vote"}}, "reporter": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "title": "Publish on the topics with the same names but different topic types", "component": null, "votes": 0, "watches": 0, "content": {"raw": "We can advertise topics with the same names but different topic types:\n```\n#!c++\n\nignition::transport::Node node;\nauto pubId = node.Advertise<ignition::msgs::StringMsg>(topic);\nauto pubId1 = node.Advertise<ignition::msgs::Int32>(topic);\n```\nNow there is a problem with publishing:\n\n\n```\n#!c++\n\n  // Prepare the message.\n  ignition::msgs::StringMsg msg;\n  ignition::msgs::Int32 msg1;\n  msg.set_data(\"HELLO\");\n  msg1.set_data(12);\n\n  node.Publish(pubId, msg);\n  node.Publish(pubId1, msg1);\n```\nConsole:\n\n\n```\n#!bash\n\n$ ./publisher \nNode::Publish() Type mismatch.\n\t* Type advertised: ignition.msgs.StringMsg\n\t* Type published: ignition.msgs.Int32\n```\n\nSource file is attached.", "markup": "markdown", "html": "<p>We can advertise topics with the same names but different topic types:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"k\">auto</span> <span class=\"n\">pubId</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">);</span>\n<span class=\"k\">auto</span> <span class=\"n\">pubId1</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Now there is a problem with publishing:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"c1\">// Prepare the message.</span>\n  <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"n\">msg</span><span class=\"p\">;</span>\n  <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span> <span class=\"n\">msg1</span><span class=\"p\">;</span>\n  <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"s\">&quot;HELLO&quot;</span><span class=\"p\">);</span>\n  <span class=\"n\">msg1</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">);</span>\n\n  <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">pubId</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">);</span>\n  <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Publish</span><span class=\"p\">(</span><span class=\"n\">pubId1</span><span class=\"p\">,</span> <span class=\"n\">msg1</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Console:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>$ ./publisher \nNode::Publish<span class=\"o\">()</span> Type mismatch.\n    * Type advertised: ignition.msgs.StringMsg\n    * Type published: ignition.msgs.Int32\n</pre></div>\n\n\n<p>Source file is attached.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-25T23:37:50.177702+00:00", "milestone": null, "updated_on": "2018-07-30T17:45:28.212464+00:00", "type": "issue", "id": 54}