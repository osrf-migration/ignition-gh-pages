{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/70/comments/39114849.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/70#comment-39114849"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/70.json"}}, "type": "issue", "id": 70, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Service with \"no\" request and empty reply hangs."}, "content": {"raw": "Dear @caguero thank you very much for your answer!\n\nRegarding the first part, that is now clear, thank you for the detailed explanation.\n\nRegarding the second part, I decided to go with ignition transport since I need to make sure that the message arrives on the other end, which is convenient for ignition services. On the other hand, gazebo transport api does not seem to provide services. \n\nRegarding ignition in Docker, I tried it and it did not work out of the box. What I noticed is (when running the client and server in verbose mode) that both client and server are spawned, the service request is sent, but it never gets received. In other words, it seems that they both get spawned, but they cannot establish a communication channel. I am not an expert, but I feel like some communication ports might need to be enabled in Docker first, or some additional setup needs to happen?\n\nEDIT: I figured out where the problem was. I used GZ_ASSERT(node.Advertise(...)) on some of the services, and this worked fine on my PC since I didn't compile with Release flag. In Docker on the other hand I compiled Release which removed these asserts and caused.", "markup": "markdown", "html": "<p>Dear @caguero thank you very much for your answer!</p>\n<p>Regarding the first part, that is now clear, thank you for the detailed explanation.</p>\n<p>Regarding the second part, I decided to go with ignition transport since I need to make sure that the message arrives on the other end, which is convenient for ignition services. On the other hand, gazebo transport api does not seem to provide services. </p>\n<p>Regarding ignition in Docker, I tried it and it did not work out of the box. What I noticed is (when running the client and server in verbose mode) that both client and server are spawned, the service request is sent, but it never gets received. In other words, it seems that they both get spawned, but they cannot establish a communication channel. I am not an expert, but I feel like some communication ports might need to be enabled in Docker first, or some additional setup needs to happen?</p>\n<p>EDIT: I figured out where the problem was. I used GZ_ASSERT(node.Advertise(...)) on some of the services, and this worked fine on my PC since I didn't compile with Release flag. In Docker on the other hand I compiled Release which removed these asserts and caused.</p>", "type": "rendered"}, "created_on": "2017-08-16T09:32:47.578563+00:00", "user": {"display_name": "Hamza Merzi\u0107", "uuid": "{2100f54d-6bc6-4db0-ada5-db7be9320606}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2100f54d-6bc6-4db0-ada5-db7be9320606%7D"}, "html": {"href": "https://bitbucket.org/%7B2100f54d-6bc6-4db0-ada5-db7be9320606%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:172a2e1e-2bf2-4054-9b9b-9d541ddc8e4e/ab842f18-c8ca-4a0c-a82a-6d4d39ffdb37/128"}}, "nickname": "hamzaethz", "type": "user", "account_id": "557058:172a2e1e-2bf2-4054-9b9b-9d541ddc8e4e"}, "updated_on": "2017-08-16T13:34:53.990742+00:00", "type": "issue_comment", "id": 39114849}