{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/70/comments/39071045.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/70#comment-39071045"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/70.json"}}, "type": "issue", "id": 70, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Service with \"no\" request and empty reply hangs."}, "content": {"raw": "hi @hamzaethz , thanks for your question. Right now, Ignition Transport has three service request alternatives:\n\n1. Request a service with input and output parameters.\n2. Request a service with only input parameter. This is considered a `oneway` call and no reply or confirmation is sent to the original requester.\n3. Request a service with only output parameter. \n\nYou're trying option (3) but when the response is `Ignition::msgs::Empty`, we consider that the requester doesn't want anything else and we treat it as a oneway request. See the code [here](#!/ignitionrobotics/ign-transport/src/bda8c2ccb5f466972cd370f42c7476804af67949/src/NodeShared.cc?at=default&fileviewer=file-view-default#NodeShared.cc-484).\n\nThe easiest alternative is to do what you're already doing, choose any other message type and ignore it. \n\nFor your second question, most of the current Gazebo code uses `gazebo::transport`, so this is probably what you need to interact with Gazebo. Ignition Transport is used internally in some places but is not exposed to the users yet. If what you need is to reset the simulation you can publish a message on topic `~/world_control` of type `world_control`. This message has a field for triggering the world reset. See [here](https://bitbucket.org/osrf/gazebo/src/c1c50dc2390e9b1fc168ca41a501db5b57119212/gazebo/msgs/world_control.proto?at=default&fileviewer=file-view-default) the message definition.\n\nAnd about your last question, we don't have instructions to make Ignition Transport to work in Docker but it should be fine if you install a basic Ubuntu image and install the Ignition Transport `deb` package. That should be enough.", "markup": "markdown", "html": "<p>hi @hamzaethz , thanks for your question. Right now, Ignition Transport has three service request alternatives:</p>\n<ol>\n<li>Request a service with input and output parameters.</li>\n<li>Request a service with only input parameter. This is considered a <code>oneway</code> call and no reply or confirmation is sent to the original requester.</li>\n<li>Request a service with only output parameter. </li>\n</ol>\n<p>You're trying option (3) but when the response is <code>Ignition::msgs::Empty</code>, we consider that the requester doesn't want anything else and we treat it as a oneway request. See the code <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/src/bda8c2ccb5f466972cd370f42c7476804af67949/src/NodeShared.cc?at=default&amp;fileviewer=file-view-default#NodeShared.cc-484\" rel=\"nofollow\">here</a>.</p>\n<p>The easiest alternative is to do what you're already doing, choose any other message type and ignore it. </p>\n<p>For your second question, most of the current Gazebo code uses <code>gazebo::transport</code>, so this is probably what you need to interact with Gazebo. Ignition Transport is used internally in some places but is not exposed to the users yet. If what you need is to reset the simulation you can publish a message on topic <code>~/world_control</code> of type <code>world_control</code>. This message has a field for triggering the world reset. See <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/c1c50dc2390e9b1fc168ca41a501db5b57119212/gazebo/msgs/world_control.proto?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">here</a> the message definition.</p>\n<p>And about your last question, we don't have instructions to make Ignition Transport to work in Docker but it should be fine if you install a basic Ubuntu image and install the Ignition Transport <code>deb</code> package. That should be enough.</p>", "type": "rendered"}, "created_on": "2017-08-14T12:45:54.632083+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 39071045}