{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/84/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/84.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/84/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/84/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/84/hang-when-calling-noderequest"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/84/vote"}}, "reporter": null, "title": "Hang when calling node.Request()", "component": null, "votes": 0, "watches": null, "content": {"raw": "While debugging a hang in a test case for an application I'm developing, I narrowed it down to an ign-transport call to `Request()`.  This is my setup:\r\n\r\nA Google Test class has a ignition::transport::Node member variable, initialized with the default constructor. In a test case (using the `TEST_F` macro):\r\n\r\n1. A `ignition::msgs::RobotModelRequest` is created, and `set_response_topic(service_name)` called.\r\n1. `Advertise(service_name, callback, this)` is called from a method, where `callback` is another class method.\r\n1. Immediately (from the same thread), `Request(service_name, robot_model_request_msg, timeout, response, result)` is called, with `timeout = 100`.\r\n1. About 20% of the time, the call never returns and the whole test suite hangs: I need to terminate it using `kill -s 9`. A short timeout value (I tried both 0 and 1) does not help.\r\n\r\nThe whole issue disappears if I add a 10ms delay between `Advertise` and `Request`.", "markup": "markdown", "html": "<p>While debugging a hang in a test case for an application I'm developing, I narrowed it down to an ign-transport call to <code>Request()</code>.  This is my setup:</p>\n<p>A Google Test class has a ignition::transport::Node member variable, initialized with the default constructor. In a test case (using the <code>TEST_F</code> macro):</p>\n<ol>\n<li>A <code>ignition::msgs::RobotModelRequest</code> is created, and <code>set_response_topic(service_name)</code> called.</li>\n<li><code>Advertise(service_name, callback, this)</code> is called from a method, where <code>callback</code> is another class method.</li>\n<li>Immediately (from the same thread), <code>Request(service_name, robot_model_request_msg, timeout, response, result)</code> is called, with <code>timeout = 100</code>.</li>\n<li>About 20% of the time, the call never returns and the whole test suite hangs: I need to terminate it using <code>kill -s 9</code>. A short timeout value (I tried both 0 and 1) does not help.</li>\n</ol>\n<p>The whole issue disappears if I add a 10ms delay between <code>Advertise</code> and <code>Request</code>.</p>", "type": "rendered"}, "assignee": null, "state": "closed", "version": null, "edited_on": null, "created_on": "2018-03-27T16:20:48.869752+00:00", "milestone": null, "updated_on": "2018-05-16T17:30:11.020041+00:00", "type": "issue", "id": 84}