
g++     publisher.cc   -o publisher
<builtin>: recipe for target 'publisher' failed
In file included from /usr/include/c++/5/atomic:38:0,
                 from publisher.cc:1:
/usr/include/c++/5/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support \
  ^
In file included from /usr/include/ignition/msgs/altimeter.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:2,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/time.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Time> TimeUniquePtr;
              ^
/usr/include/ignition/msgs/time.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Time> TimeSharedPtr;
              ^
/usr/include/ignition/msgs/time.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Time const> ConstTimeSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:2:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/altimeter.pb.h:279:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Altimeter> AltimeterUniquePtr;
              ^
/usr/include/ignition/msgs/altimeter.pb.h:280:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Altimeter> AltimeterSharedPtr;
              ^
/usr/include/ignition/msgs/altimeter.pb.h:295:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Altimeter const> ConstAltimeterSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/any.pb.h:28:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:3,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/color.pb.h:259:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Color> ColorUniquePtr;
              ^
/usr/include/ignition/msgs/color.pb.h:260:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Color> ColorSharedPtr;
              ^
/usr/include/ignition/msgs/color.pb.h:275:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Color const> ConstColorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/pose.pb.h:27:0,
                 from /usr/include/ignition/msgs/any.pb.h:29,
                 from /usr/include/ignition/msgs/MessageTypes.hh:3,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/vector3d.pb.h:225:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Vector3d> Vector3dUniquePtr;
              ^
/usr/include/ignition/msgs/vector3d.pb.h:226:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Vector3d> Vector3dSharedPtr;
              ^
/usr/include/ignition/msgs/vector3d.pb.h:241:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Vector3d const> ConstVector3dSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/pose.pb.h:28:0,
                 from /usr/include/ignition/msgs/any.pb.h:29,
                 from /usr/include/ignition/msgs/MessageTypes.hh:3,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/quaternion.pb.h:259:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Quaternion> QuaternionUniquePtr;
              ^
/usr/include/ignition/msgs/quaternion.pb.h:260:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Quaternion> QuaternionSharedPtr;
              ^
/usr/include/ignition/msgs/quaternion.pb.h:275:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Quaternion const> ConstQuaternionSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/any.pb.h:29:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:3,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pose.pb.h:356:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Pose> PoseUniquePtr;
              ^
/usr/include/ignition/msgs/pose.pb.h:357:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Pose> PoseSharedPtr;
              ^
/usr/include/ignition/msgs/pose.pb.h:372:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Pose const> ConstPoseSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:3:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/any.pb.h:681:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Any> AnyUniquePtr;
              ^
/usr/include/ignition/msgs/any.pb.h:682:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Any> AnySharedPtr;
              ^
/usr/include/ignition/msgs/any.pb.h:702:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Any const> ConstAnySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:4:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/atmosphere.pb.h:336:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Atmosphere> AtmosphereUniquePtr;
              ^
/usr/include/ignition/msgs/atmosphere.pb.h:337:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Atmosphere> AtmosphereSharedPtr;
              ^
/usr/include/ignition/msgs/atmosphere.pb.h:357:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Atmosphere const> ConstAtmosphereSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:5:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/axis.pb.h:415:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Axis> AxisUniquePtr;
              ^
/usr/include/ignition/msgs/axis.pb.h:416:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Axis> AxisSharedPtr;
              ^
/usr/include/ignition/msgs/axis.pb.h:431:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Axis const> ConstAxisSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:6:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/battery.pb.h:248:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Battery> BatteryUniquePtr;
              ^
/usr/include/ignition/msgs/battery.pb.h:249:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Battery> BatterySharedPtr;
              ^
/usr/include/ignition/msgs/battery.pb.h:264:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Battery const> ConstBatterySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:7:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/boolean.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Boolean> BooleanUniquePtr;
              ^
/usr/include/ignition/msgs/boolean.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Boolean> BooleanSharedPtr;
              ^
/usr/include/ignition/msgs/boolean.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Boolean const> ConstBooleanSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:8:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/boxgeom.pb.h:177:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::BoxGeom> BoxGeomUniquePtr;
              ^
/usr/include/ignition/msgs/boxgeom.pb.h:178:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::BoxGeom> BoxGeomSharedPtr;
              ^
/usr/include/ignition/msgs/boxgeom.pb.h:193:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::BoxGeom const> ConstBoxGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:9:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/bytes.pb.h:214:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Bytes> BytesUniquePtr;
              ^
/usr/include/ignition/msgs/bytes.pb.h:215:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Bytes> BytesSharedPtr;
              ^
/usr/include/ignition/msgs/bytes.pb.h:230:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Bytes const> ConstBytesSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:10:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/camera_cmd.pb.h:214:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::CameraCmd> CameraCmdUniquePtr;
              ^
/usr/include/ignition/msgs/camera_cmd.pb.h:215:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::CameraCmd> CameraCmdSharedPtr;
              ^
/usr/include/ignition/msgs/camera_cmd.pb.h:230:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::CameraCmd const> ConstCameraCmdSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:11:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/camera_lens.pb.h:578:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::CameraLens> CameraLensUniquePtr;
              ^
/usr/include/ignition/msgs/camera_lens.pb.h:579:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::CameraLens> CameraLensSharedPtr;
              ^
/usr/include/ignition/msgs/camera_lens.pb.h:594:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::CameraLens const> ConstCameraLensSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/camerasensor.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:12,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/vector2d.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Vector2d> Vector2dUniquePtr;
              ^
/usr/include/ignition/msgs/vector2d.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Vector2d> Vector2dSharedPtr;
              ^
/usr/include/ignition/msgs/vector2d.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Vector2d const> ConstVector2dSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/camerasensor.pb.h:28:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:12,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/distortion.pb.h:347:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Distortion> DistortionUniquePtr;
              ^
/usr/include/ignition/msgs/distortion.pb.h:348:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Distortion> DistortionSharedPtr;
              ^
/usr/include/ignition/msgs/distortion.pb.h:363:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Distortion const> ConstDistortionSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:12:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/camerasensor.pb.h:549:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::CameraSensor> CameraSensorUniquePtr;
              ^
/usr/include/ignition/msgs/camerasensor.pb.h:550:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::CameraSensor> CameraSensorSharedPtr;
              ^
/usr/include/ignition/msgs/camerasensor.pb.h:565:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::CameraSensor const> ConstCameraSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:13:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/cessna.pb.h:599:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Cessna> CessnaUniquePtr;
              ^
/usr/include/ignition/msgs/cessna.pb.h:600:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Cessna> CessnaSharedPtr;
              ^
/usr/include/ignition/msgs/cessna.pb.h:615:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Cessna const> ConstCessnaSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:14:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/clock.pb.h:283:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Clock> ClockUniquePtr;
              ^
/usr/include/ignition/msgs/clock.pb.h:284:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Clock> ClockSharedPtr;
              ^
/usr/include/ignition/msgs/clock.pb.h:299:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Clock const> ConstClockSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:15:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/cmd_vel2d.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::CmdVel2D> CmdVel2DUniquePtr;
              ^
/usr/include/ignition/msgs/cmd_vel2d.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::CmdVel2D> CmdVel2DSharedPtr;
              ^
/usr/include/ignition/msgs/cmd_vel2d.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::CmdVel2D const> ConstCmdVel2DSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:29:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/cylindergeom.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::CylinderGeom> CylinderGeomUniquePtr;
              ^
/usr/include/ignition/msgs/cylindergeom.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::CylinderGeom> CylinderGeomSharedPtr;
              ^
/usr/include/ignition/msgs/cylindergeom.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::CylinderGeom const> ConstCylinderGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:30:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/spheregeom.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::SphereGeom> SphereGeomUniquePtr;
              ^
/usr/include/ignition/msgs/spheregeom.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::SphereGeom> SphereGeomSharedPtr;
              ^
/usr/include/ignition/msgs/spheregeom.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::SphereGeom const> ConstSphereGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:31:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/planegeom.pb.h:265:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PlaneGeom> PlaneGeomUniquePtr;
              ^
/usr/include/ignition/msgs/planegeom.pb.h:266:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PlaneGeom> PlaneGeomSharedPtr;
              ^
/usr/include/ignition/msgs/planegeom.pb.h:281:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PlaneGeom const> ConstPlaneGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:32:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/imagegeom.pb.h:350:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ImageGeom> ImageGeomUniquePtr;
              ^
/usr/include/ignition/msgs/imagegeom.pb.h:351:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ImageGeom> ImageGeomSharedPtr;
              ^
/usr/include/ignition/msgs/imagegeom.pb.h:366:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ImageGeom const> ConstImageGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/heightmapgeom.pb.h:27:0,
                 from /usr/include/ignition/msgs/geometry.pb.h:33,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/image.pb.h:350:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Image> ImageUniquePtr;
              ^
/usr/include/ignition/msgs/image.pb.h:351:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Image> ImageSharedPtr;
              ^
/usr/include/ignition/msgs/image.pb.h:366:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Image const> ConstImageSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:33:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/heightmapgeom.pb.h:1041:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::HeightmapGeom> HeightmapGeomUniquePtr;
              ^
/usr/include/ignition/msgs/heightmapgeom.pb.h:1042:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::HeightmapGeom> HeightmapGeomSharedPtr;
              ^
/usr/include/ignition/msgs/heightmapgeom.pb.h:1057:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::HeightmapGeom const> ConstHeightmapGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:34:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/meshgeom.pb.h:393:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::MeshGeom> MeshGeomUniquePtr;
              ^
/usr/include/ignition/msgs/meshgeom.pb.h:394:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::MeshGeom> MeshGeomSharedPtr;
              ^
/usr/include/ignition/msgs/meshgeom.pb.h:409:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::MeshGeom const> ConstMeshGeomSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/geometry.pb.h:36:0,
                 from /usr/include/ignition/msgs/collision.pb.h:28,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/polylinegeom.pb.h:201:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Polyline> PolylineUniquePtr;
              ^
/usr/include/ignition/msgs/polylinegeom.pb.h:202:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Polyline> PolylineSharedPtr;
              ^
/usr/include/ignition/msgs/polylinegeom.pb.h:217:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Polyline const> ConstPolylineSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/collision.pb.h:28:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/geometry.pb.h:686:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Geometry> GeometryUniquePtr;
              ^
/usr/include/ignition/msgs/geometry.pb.h:687:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Geometry> GeometrySharedPtr;
              ^
/usr/include/ignition/msgs/geometry.pb.h:707:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Geometry const> ConstGeometrySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/surface.pb.h:27:0,
                 from /usr/include/ignition/msgs/collision.pb.h:29,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/friction.pb.h:741:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Friction> FrictionUniquePtr;
              ^
/usr/include/ignition/msgs/friction.pb.h:742:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Friction> FrictionSharedPtr;
              ^
/usr/include/ignition/msgs/friction.pb.h:757:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Friction const> ConstFrictionSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/collision.pb.h:29:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/surface.pb.h:585:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Surface> SurfaceUniquePtr;
              ^
/usr/include/ignition/msgs/surface.pb.h:586:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Surface> SurfaceSharedPtr;
              ^
/usr/include/ignition/msgs/surface.pb.h:601:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Surface const> ConstSurfaceSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/visual.pb.h:30:0,
                 from /usr/include/ignition/msgs/collision.pb.h:30,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/material.pb.h:835:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Material> MaterialUniquePtr;
              ^
/usr/include/ignition/msgs/material.pb.h:836:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Material> MaterialSharedPtr;
              ^
/usr/include/ignition/msgs/material.pb.h:856:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Material const> ConstMaterialSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/visual.pb.h:31:0,
                 from /usr/include/ignition/msgs/collision.pb.h:30,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/plugin.pb.h:396:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Plugin> PluginUniquePtr;
              ^
/usr/include/ignition/msgs/plugin.pb.h:397:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Plugin> PluginSharedPtr;
              ^
/usr/include/ignition/msgs/plugin.pb.h:412:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Plugin const> ConstPluginSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/collision.pb.h:30:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:16,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/visual.pb.h:1091:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Visual> VisualUniquePtr;
              ^
/usr/include/ignition/msgs/visual.pb.h:1092:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Visual> VisualSharedPtr;
              ^
/usr/include/ignition/msgs/visual.pb.h:1112:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Visual const> ConstVisualSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:16:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/collision.pb.h:522:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Collision> CollisionUniquePtr;
              ^
/usr/include/ignition/msgs/collision.pb.h:523:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Collision> CollisionSharedPtr;
              ^
/usr/include/ignition/msgs/collision.pb.h:538:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Collision const> ConstCollisionSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/joint_wrench.pb.h:27:0,
                 from /usr/include/ignition/msgs/contact.pb.h:29,
                 from /usr/include/ignition/msgs/MessageTypes.hh:18,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/wrench.pb.h:283:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Wrench> WrenchUniquePtr;
              ^
/usr/include/ignition/msgs/wrench.pb.h:284:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Wrench> WrenchSharedPtr;
              ^
/usr/include/ignition/msgs/wrench.pb.h:299:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Wrench const> ConstWrenchSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/contact.pb.h:29:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:18,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joint_wrench.pb.h:480:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::JointWrench> JointWrenchUniquePtr;
              ^
/usr/include/ignition/msgs/joint_wrench.pb.h:481:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::JointWrench> JointWrenchSharedPtr;
              ^
/usr/include/ignition/msgs/joint_wrench.pb.h:496:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::JointWrench const> ConstJointWrenchSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:18:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/contact.pb.h:625:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Contact> ContactUniquePtr;
              ^
/usr/include/ignition/msgs/contact.pb.h:626:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Contact> ContactSharedPtr;
              ^
/usr/include/ignition/msgs/contact.pb.h:641:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Contact const> ConstContactSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:19:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/contactsensor.pb.h:214:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ContactSensor> ContactSensorUniquePtr;
              ^
/usr/include/ignition/msgs/contactsensor.pb.h:215:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ContactSensor> ContactSensorSharedPtr;
              ^
/usr/include/ignition/msgs/contactsensor.pb.h:230:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ContactSensor const> ConstContactSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:20:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/contacts.pb.h:221:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Contacts> ContactsUniquePtr;
              ^
/usr/include/ignition/msgs/contacts.pb.h:222:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Contacts> ContactsSharedPtr;
              ^
/usr/include/ignition/msgs/contacts.pb.h:237:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Contacts const> ConstContactsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:22:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/density.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Density> DensityUniquePtr;
              ^
/usr/include/ignition/msgs/density.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Density> DensitySharedPtr;
              ^
/usr/include/ignition/msgs/density.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Density const> ConstDensitySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:23:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/diagnostics.pb.h:580:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Diagnostics> DiagnosticsUniquePtr;
              ^
/usr/include/ignition/msgs/diagnostics.pb.h:581:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Diagnostics> DiagnosticsSharedPtr;
              ^
/usr/include/ignition/msgs/diagnostics.pb.h:596:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Diagnostics const> ConstDiagnosticsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:25:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/double.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Double> DoubleUniquePtr;
              ^
/usr/include/ignition/msgs/double.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Double> DoubleSharedPtr;
              ^
/usr/include/ignition/msgs/double.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Double const> ConstDoubleSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:26:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/double_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Double_V> Double_VUniquePtr;
              ^
/usr/include/ignition/msgs/double_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Double_V> Double_VSharedPtr;
              ^
/usr/include/ignition/msgs/double_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Double_V const> ConstDouble_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:27:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/duration.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Duration> DurationUniquePtr;
              ^
/usr/include/ignition/msgs/duration.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Duration> DurationSharedPtr;
              ^
/usr/include/ignition/msgs/duration.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Duration const> ConstDurationSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:28:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/empty.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Empty> EmptyUniquePtr;
              ^
/usr/include/ignition/msgs/empty.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Empty> EmptySharedPtr;
              ^
/usr/include/ignition/msgs/empty.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Empty const> ConstEmptySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/entity_factory.pb.h:28:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:29,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/light.pb.h:782:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Light> LightUniquePtr;
              ^
/usr/include/ignition/msgs/light.pb.h:783:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Light> LightSharedPtr;
              ^
/usr/include/ignition/msgs/light.pb.h:803:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Light const> ConstLightSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:29:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/entity_factory.pb.h:629:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::EntityFactory> EntityFactoryUniquePtr;
              ^
/usr/include/ignition/msgs/entity_factory.pb.h:630:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::EntityFactory> EntityFactorySharedPtr;
              ^
/usr/include/ignition/msgs/entity_factory.pb.h:645:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::EntityFactory const> ConstEntityFactorySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:30:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/float.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Float> FloatUniquePtr;
              ^
/usr/include/ignition/msgs/float.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Float> FloatSharedPtr;
              ^
/usr/include/ignition/msgs/float.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Float const> ConstFloatSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:31:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/float_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Float_V> Float_VUniquePtr;
              ^
/usr/include/ignition/msgs/float_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Float_V> Float_VSharedPtr;
              ^
/usr/include/ignition/msgs/float_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Float_V const> ConstFloat_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:32:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/fluid.pb.h:258:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Fluid> FluidUniquePtr;
              ^
/usr/include/ignition/msgs/fluid.pb.h:259:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Fluid> FluidSharedPtr;
              ^
/usr/include/ignition/msgs/fluid.pb.h:274:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Fluid const> ConstFluidSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:33:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/fog.pb.h:362:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Fog> FogUniquePtr;
              ^
/usr/include/ignition/msgs/fog.pb.h:363:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Fog> FogSharedPtr;
              ^
/usr/include/ignition/msgs/fog.pb.h:383:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Fog const> ConstFogSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:36:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/gps.pb.h:472:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::GPS> GPSUniquePtr;
              ^
/usr/include/ignition/msgs/gps.pb.h:473:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::GPS> GPSSharedPtr;
              ^
/usr/include/ignition/msgs/gps.pb.h:488:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::GPS const> ConstGPSSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/gps_sensor.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:37,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sensor_noise.pb.h:374:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::SensorNoise> SensorNoiseUniquePtr;
              ^
/usr/include/ignition/msgs/sensor_noise.pb.h:375:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::SensorNoise> SensorNoiseSharedPtr;
              ^
/usr/include/ignition/msgs/sensor_noise.pb.h:395:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::SensorNoise const> ConstSensorNoiseSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:37:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/gps_sensor.pb.h:412:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::GPSSensor> GPSSensorUniquePtr;
              ^
/usr/include/ignition/msgs/gps_sensor.pb.h:413:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::GPSSensor> GPSSensorSharedPtr;
              ^
/usr/include/ignition/msgs/gps_sensor.pb.h:428:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::GPSSensor const> ConstGPSSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/gui_camera.pb.h:28:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:38,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/track_visual.pb.h:506:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::TrackVisual> TrackVisualUniquePtr;
              ^
/usr/include/ignition/msgs/track_visual.pb.h:507:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::TrackVisual> TrackVisualSharedPtr;
              ^
/usr/include/ignition/msgs/track_visual.pb.h:522:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::TrackVisual const> ConstTrackVisualSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:38:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/gui_camera.pb.h:504:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::GUICamera> GUICameraUniquePtr;
              ^
/usr/include/ignition/msgs/gui_camera.pb.h:505:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::GUICamera> GUICameraSharedPtr;
              ^
/usr/include/ignition/msgs/gui_camera.pb.h:520:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::GUICamera const> ConstGUICameraSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:39:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/gui.pb.h:255:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::GUI> GUIUniquePtr;
              ^
/usr/include/ignition/msgs/gui.pb.h:256:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::GUI> GUISharedPtr;
              ^
/usr/include/ignition/msgs/gui.pb.h:271:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::GUI const> ConstGUISharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:40:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/header.pb.h:302:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Header> HeaderUniquePtr;
              ^
/usr/include/ignition/msgs/header.pb.h:303:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Header> HeaderSharedPtr;
              ^
/usr/include/ignition/msgs/header.pb.h:318:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Header const> ConstHeaderSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:42:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/hydra.pb.h:699:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Hydra> HydraUniquePtr;
              ^
/usr/include/ignition/msgs/hydra.pb.h:700:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Hydra> HydraSharedPtr;
              ^
/usr/include/ignition/msgs/hydra.pb.h:715:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Hydra const> ConstHydraSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:45:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/images_stamped.pb.h:221:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ImagesStamped> ImagesStampedUniquePtr;
              ^
/usr/include/ignition/msgs/images_stamped.pb.h:222:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ImagesStamped> ImagesStampedSharedPtr;
              ^
/usr/include/ignition/msgs/images_stamped.pb.h:237:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ImagesStamped const> ConstImagesStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:46:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/image_stamped.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ImageStamped> ImageStampedUniquePtr;
              ^
/usr/include/ignition/msgs/image_stamped.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ImageStamped> ImageStampedSharedPtr;
              ^
/usr/include/ignition/msgs/image_stamped.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ImageStamped const> ConstImageStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:47:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/imu.pb.h:429:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::IMU> IMUUniquePtr;
              ^
/usr/include/ignition/msgs/imu.pb.h:430:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::IMU> IMUSharedPtr;
              ^
/usr/include/ignition/msgs/imu.pb.h:445:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::IMU const> ConstIMUSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:48:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/imu_sensor.pb.h:699:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::IMUSensor> IMUSensorUniquePtr;
              ^
/usr/include/ignition/msgs/imu_sensor.pb.h:700:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::IMUSensor> IMUSensorSharedPtr;
              ^
/usr/include/ignition/msgs/imu_sensor.pb.h:715:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::IMUSensor const> ConstIMUSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:49:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/inertial.pb.h:415:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Inertial> InertialUniquePtr;
              ^
/usr/include/ignition/msgs/inertial.pb.h:416:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Inertial> InertialSharedPtr;
              ^
/usr/include/ignition/msgs/inertial.pb.h:431:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Inertial const> ConstInertialSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:50:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/int32.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Int32> Int32UniquePtr;
              ^
/usr/include/ignition/msgs/int32.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Int32> Int32SharedPtr;
              ^
/usr/include/ignition/msgs/int32.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Int32 const> ConstInt32SharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:51:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/int32_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Int32_V> Int32_VUniquePtr;
              ^
/usr/include/ignition/msgs/int32_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Int32_V> Int32_VSharedPtr;
              ^
/usr/include/ignition/msgs/int32_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Int32_V const> ConstInt32_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:52:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/int64.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Int64> Int64UniquePtr;
              ^
/usr/include/ignition/msgs/int64.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Int64> Int64SharedPtr;
              ^
/usr/include/ignition/msgs/int64.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Int64 const> ConstInt64SharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:53:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/int64_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Int64_V> Int64_VUniquePtr;
              ^
/usr/include/ignition/msgs/int64_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Int64_V> Int64_VSharedPtr;
              ^
/usr/include/ignition/msgs/int64_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Int64_V const> ConstInt64_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:54:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joint_animation.pb.h:491:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::JointAnimation> JointAnimationUniquePtr;
              ^
/usr/include/ignition/msgs/joint_animation.pb.h:492:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::JointAnimation> JointAnimationSharedPtr;
              ^
/usr/include/ignition/msgs/joint_animation.pb.h:507:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::JointAnimation const> ConstJointAnimationSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/joint_cmd.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:55,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pid.pb.h:361:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PID> PIDUniquePtr;
              ^
/usr/include/ignition/msgs/pid.pb.h:362:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PID> PIDSharedPtr;
              ^
/usr/include/ignition/msgs/pid.pb.h:377:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PID const> ConstPIDSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:55:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joint_cmd.pb.h:423:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::JointCmd> JointCmdUniquePtr;
              ^
/usr/include/ignition/msgs/joint_cmd.pb.h:424:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::JointCmd> JointCmdSharedPtr;
              ^
/usr/include/ignition/msgs/joint_cmd.pb.h:439:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::JointCmd const> ConstJointCmdSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/sensor.pb.h:29:0,
                 from /usr/include/ignition/msgs/joint.pb.h:30,
                 from /usr/include/ignition/msgs/MessageTypes.hh:56,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/raysensor.pb.h:531:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::RaySensor> RaySensorUniquePtr;
              ^
/usr/include/ignition/msgs/raysensor.pb.h:532:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::RaySensor> RaySensorSharedPtr;
              ^
/usr/include/ignition/msgs/raysensor.pb.h:547:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::RaySensor const> ConstRaySensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/sensor.pb.h:31:0,
                 from /usr/include/ignition/msgs/joint.pb.h:30,
                 from /usr/include/ignition/msgs/MessageTypes.hh:56,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/logical_camera_sensor.pb.h:259:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogicalCameraSensor> LogicalCameraSensorUniquePtr;
              ^
/usr/include/ignition/msgs/logical_camera_sensor.pb.h:260:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogicalCameraSensor> LogicalCameraSensorSharedPtr;
              ^
/usr/include/ignition/msgs/logical_camera_sensor.pb.h:275:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogicalCameraSensor const> ConstLogicalCameraSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/joint.pb.h:30:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:56,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sensor.pb.h:1035:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Sensor> SensorUniquePtr;
              ^
/usr/include/ignition/msgs/sensor.pb.h:1036:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Sensor> SensorSharedPtr;
              ^
/usr/include/ignition/msgs/sensor.pb.h:1051:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Sensor const> ConstSensorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:56:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joint.pb.h:1525:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Joint> JointUniquePtr;
              ^
/usr/include/ignition/msgs/joint.pb.h:1526:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Joint> JointSharedPtr;
              ^
/usr/include/ignition/msgs/joint.pb.h:1546:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Joint const> ConstJointSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:58:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joint_wrench_stamped.pb.h:221:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ForceTorque> ForceTorqueUniquePtr;
              ^
/usr/include/ignition/msgs/joint_wrench_stamped.pb.h:222:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ForceTorque> ForceTorqueSharedPtr;
              ^
/usr/include/ignition/msgs/joint_wrench_stamped.pb.h:237:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ForceTorque const> ConstForceTorqueSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:59:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/joystick.pb.h:273:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Joystick> JoystickUniquePtr;
              ^
/usr/include/ignition/msgs/joystick.pb.h:274:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Joystick> JoystickSharedPtr;
              ^
/usr/include/ignition/msgs/joystick.pb.h:289:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Joystick const> ConstJoystickSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:60:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/laserscan.pb.h:694:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LaserScan> LaserScanUniquePtr;
              ^
/usr/include/ignition/msgs/laserscan.pb.h:695:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LaserScan> LaserScanSharedPtr;
              ^
/usr/include/ignition/msgs/laserscan.pb.h:710:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LaserScan const> ConstLaserScanSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:61:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/laserscan_stamped.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LaserScanStamped> LaserScanStampedUniquePtr;
              ^
/usr/include/ignition/msgs/laserscan_stamped.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LaserScanStamped> LaserScanStampedSharedPtr;
              ^
/usr/include/ignition/msgs/laserscan_stamped.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LaserScanStamped const> ConstLaserScanStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:63:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/link_data.pb.h:375:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LinkData> LinkDataUniquePtr;
              ^
/usr/include/ignition/msgs/link_data.pb.h:376:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LinkData> LinkDataSharedPtr;
              ^
/usr/include/ignition/msgs/link_data.pb.h:391:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LinkData const> ConstLinkDataSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/link.pb.h:31:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:64,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/projector.pb.h:495:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Projector> ProjectorUniquePtr;
              ^
/usr/include/ignition/msgs/projector.pb.h:496:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Projector> ProjectorSharedPtr;
              ^
/usr/include/ignition/msgs/projector.pb.h:511:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Projector const> ConstProjectorSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:64:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/link.pb.h:800:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Link> LinkUniquePtr;
              ^
/usr/include/ignition/msgs/link.pb.h:801:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Link> LinkSharedPtr;
              ^
/usr/include/ignition/msgs/link.pb.h:816:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Link const> ConstLinkSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:65:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/log_control.pb.h:407:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogControl> LogControlUniquePtr;
              ^
/usr/include/ignition/msgs/log_control.pb.h:408:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogControl> LogControlSharedPtr;
              ^
/usr/include/ignition/msgs/log_control.pb.h:423:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogControl const> ConstLogControlSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:66:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/logical_camera_image.pb.h:440:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogicalCameraImage> LogicalCameraImageUniquePtr;
              ^
/usr/include/ignition/msgs/logical_camera_image.pb.h:441:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogicalCameraImage> LogicalCameraImageSharedPtr;
              ^
/usr/include/ignition/msgs/logical_camera_image.pb.h:456:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogicalCameraImage const> ConstLogicalCameraImageSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:68:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/log_playback_control.pb.h:313:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogPlaybackControl> LogPlaybackControlUniquePtr;
              ^
/usr/include/ignition/msgs/log_playback_control.pb.h:314:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogPlaybackControl> LogPlaybackControlSharedPtr;
              ^
/usr/include/ignition/msgs/log_playback_control.pb.h:329:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogPlaybackControl const> ConstLogPlaybackControlSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:69:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/log_playback_stats.pb.h:230:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogPlaybackStatistics> LogPlaybackStatisticsUniquePtr;
              ^
/usr/include/ignition/msgs/log_playback_stats.pb.h:231:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogPlaybackStatistics> LogPlaybackStatisticsSharedPtr;
              ^
/usr/include/ignition/msgs/log_playback_stats.pb.h:246:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogPlaybackStatistics const> ConstLogPlaybackStatisticsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:70:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/log_status.pb.h:696:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::LogStatus> LogStatusUniquePtr;
              ^
/usr/include/ignition/msgs/log_status.pb.h:697:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::LogStatus> LogStatusSharedPtr;
              ^
/usr/include/ignition/msgs/log_status.pb.h:717:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::LogStatus const> ConstLogStatusSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:71:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/magnetometer.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Magnetometer> MagnetometerUniquePtr;
              ^
/usr/include/ignition/msgs/magnetometer.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Magnetometer> MagnetometerSharedPtr;
              ^
/usr/include/ignition/msgs/magnetometer.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Magnetometer const> ConstMagnetometerSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:72:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/marker.pb.h:900:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Marker> MarkerUniquePtr;
              ^
/usr/include/ignition/msgs/marker.pb.h:901:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Marker> MarkerSharedPtr;
              ^
/usr/include/ignition/msgs/marker.pb.h:926:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Marker const> ConstMarkerSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:73:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/marker_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Marker_V> Marker_VUniquePtr;
              ^
/usr/include/ignition/msgs/marker_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Marker_V> Marker_VSharedPtr;
              ^
/usr/include/ignition/msgs/marker_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Marker_V const> ConstMarker_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:76:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/model_configuration.pb.h:436:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ModelConfiguration> ModelConfigurationUniquePtr;
              ^
/usr/include/ignition/msgs/model_configuration.pb.h:437:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ModelConfiguration> ModelConfigurationSharedPtr;
              ^
/usr/include/ignition/msgs/model_configuration.pb.h:452:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ModelConfiguration const> ConstModelConfigurationSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:77:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/model.pb.h:633:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Model> ModelUniquePtr;
              ^
/usr/include/ignition/msgs/model.pb.h:634:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Model> ModelSharedPtr;
              ^
/usr/include/ignition/msgs/model.pb.h:649:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Model const> ConstModelSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:78:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/model_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Model_V> Model_VUniquePtr;
              ^
/usr/include/ignition/msgs/model_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Model_V> Model_VSharedPtr;
              ^
/usr/include/ignition/msgs/model_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Model_V const> ConstModel_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:79:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/packet.pb.h:359:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Packet> PacketUniquePtr;
              ^
/usr/include/ignition/msgs/packet.pb.h:360:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Packet> PacketSharedPtr;
              ^
/usr/include/ignition/msgs/packet.pb.h:375:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Packet const> ConstPacketSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:80:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/param.pb.h:311:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Param> ParamUniquePtr;
              ^
/usr/include/ignition/msgs/param.pb.h:312:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Param> ParamSharedPtr;
              ^
/usr/include/ignition/msgs/param.pb.h:327:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Param const> ConstParamSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:81:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/param_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Param_V> Param_VUniquePtr;
              ^
/usr/include/ignition/msgs/param_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Param_V> Param_VSharedPtr;
              ^
/usr/include/ignition/msgs/param_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Param_V const> ConstParam_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:82:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/physics.pb.h:903:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Physics> PhysicsUniquePtr;
              ^
/usr/include/ignition/msgs/physics.pb.h:904:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Physics> PhysicsSharedPtr;
              ^
/usr/include/ignition/msgs/physics.pb.h:924:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Physics const> ConstPhysicsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:86:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/plugin_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Plugin_V> Plugin_VUniquePtr;
              ^
/usr/include/ignition/msgs/plugin_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Plugin_V> Plugin_VSharedPtr;
              ^
/usr/include/ignition/msgs/plugin_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Plugin_V const> ConstPlugin_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:87:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pointcloud.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PointCloud> PointCloudUniquePtr;
              ^
/usr/include/ignition/msgs/pointcloud.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PointCloud> PointCloudSharedPtr;
              ^
/usr/include/ignition/msgs/pointcloud.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PointCloud const> ConstPointCloudSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:89:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pose_animation.pb.h:336:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PoseAnimation> PoseAnimationUniquePtr;
              ^
/usr/include/ignition/msgs/pose_animation.pb.h:337:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PoseAnimation> PoseAnimationSharedPtr;
              ^
/usr/include/ignition/msgs/pose_animation.pb.h:352:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PoseAnimation const> ConstPoseAnimationSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:91:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/poses_stamped.pb.h:221:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PosesStamped> PosesStampedUniquePtr;
              ^
/usr/include/ignition/msgs/poses_stamped.pb.h:222:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PosesStamped> PosesStampedSharedPtr;
              ^
/usr/include/ignition/msgs/poses_stamped.pb.h:237:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PosesStamped const> ConstPosesStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:92:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pose_stamped.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PoseStamped> PoseStampedUniquePtr;
              ^
/usr/include/ignition/msgs/pose_stamped.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PoseStamped> PoseStampedSharedPtr;
              ^
/usr/include/ignition/msgs/pose_stamped.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PoseStamped const> ConstPoseStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:93:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pose_trajectory.pb.h:292:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PoseTrajectory> PoseTrajectoryUniquePtr;
              ^
/usr/include/ignition/msgs/pose_trajectory.pb.h:293:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PoseTrajectory> PoseTrajectorySharedPtr;
              ^
/usr/include/ignition/msgs/pose_trajectory.pb.h:308:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PoseTrajectory const> ConstPoseTrajectorySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:94:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/pose_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Pose_V> Pose_VUniquePtr;
              ^
/usr/include/ignition/msgs/pose_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Pose_V> Pose_VSharedPtr;
              ^
/usr/include/ignition/msgs/pose_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Pose_V const> ConstPose_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/propagation_grid.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:96,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/propagation_particle.pb.h:225:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PropagationParticle> PropagationParticleUniquePtr;
              ^
/usr/include/ignition/msgs/propagation_particle.pb.h:226:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PropagationParticle> PropagationParticleSharedPtr;
              ^
/usr/include/ignition/msgs/propagation_particle.pb.h:241:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PropagationParticle const> ConstPropagationParticleSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:96:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/propagation_grid.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::PropagationGrid> PropagationGridUniquePtr;
              ^
/usr/include/ignition/msgs/propagation_grid.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::PropagationGrid> PropagationGridSharedPtr;
              ^
/usr/include/ignition/msgs/propagation_grid.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::PropagationGrid const> ConstPropagationGridSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/publishers.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:98,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/publish.pb.h:430:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Publish> PublishUniquePtr;
              ^
/usr/include/ignition/msgs/publish.pb.h:431:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Publish> PublishSharedPtr;
              ^
/usr/include/ignition/msgs/publish.pb.h:446:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Publish const> ConstPublishSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:98:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/publishers.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Publishers> PublishersUniquePtr;
              ^
/usr/include/ignition/msgs/publishers.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Publishers> PublishersSharedPtr;
              ^
/usr/include/ignition/msgs/publishers.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Publishers const> ConstPublishersSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:102:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/request.pb.h:373:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Request> RequestUniquePtr;
              ^
/usr/include/ignition/msgs/request.pb.h:374:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Request> RequestSharedPtr;
              ^
/usr/include/ignition/msgs/request.pb.h:389:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Request const> ConstRequestSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:103:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/response.pb.h:521:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Response> ResponseUniquePtr;
              ^
/usr/include/ignition/msgs/response.pb.h:522:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Response> ResponseSharedPtr;
              ^
/usr/include/ignition/msgs/response.pb.h:537:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Response const> ConstResponseSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:104:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/rest_login.pb.h:430:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::RestLogin> RestLoginUniquePtr;
              ^
/usr/include/ignition/msgs/rest_login.pb.h:431:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::RestLogin> RestLoginSharedPtr;
              ^
/usr/include/ignition/msgs/rest_login.pb.h:446:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::RestLogin const> ConstRestLoginSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:105:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/rest_logout.pb.h:248:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::RestLogout> RestLogoutUniquePtr;
              ^
/usr/include/ignition/msgs/rest_logout.pb.h:249:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::RestLogout> RestLogoutSharedPtr;
              ^
/usr/include/ignition/msgs/rest_logout.pb.h:264:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::RestLogout const> ConstRestLogoutSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:106:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/rest_post.pb.h:339:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::RestPost> RestPostUniquePtr;
              ^
/usr/include/ignition/msgs/rest_post.pb.h:340:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::RestPost> RestPostSharedPtr;
              ^
/usr/include/ignition/msgs/rest_post.pb.h:355:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::RestPost const> ConstRestPostSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:107:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/rest_response.pb.h:331:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::RestResponse> RestResponseUniquePtr;
              ^
/usr/include/ignition/msgs/rest_response.pb.h:332:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::RestResponse> RestResponseSharedPtr;
              ^
/usr/include/ignition/msgs/rest_response.pb.h:352:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::RestResponse const> ConstRestResponseSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:108:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/road.pb.h:346:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Road> RoadUniquePtr;
              ^
/usr/include/ignition/msgs/road.pb.h:347:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Road> RoadSharedPtr;
              ^
/usr/include/ignition/msgs/road.pb.h:362:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Road const> ConstRoadSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/scene.pb.h:29:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:109,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sky.pb.h:415:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Sky> SkyUniquePtr;
              ^
/usr/include/ignition/msgs/sky.pb.h:416:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Sky> SkySharedPtr;
              ^
/usr/include/ignition/msgs/sky.pb.h:431:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Sky const> ConstSkySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:109:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/scene.pb.h:663:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Scene> SceneUniquePtr;
              ^
/usr/include/ignition/msgs/scene.pb.h:664:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Scene> SceneSharedPtr;
              ^
/usr/include/ignition/msgs/scene.pb.h:679:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Scene const> ConstSceneSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:110:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/selection.pb.h:282:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Selection> SelectionUniquePtr;
              ^
/usr/include/ignition/msgs/selection.pb.h:283:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Selection> SelectionSharedPtr;
              ^
/usr/include/ignition/msgs/selection.pb.h:298:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Selection const> ConstSelectionSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:113:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sensor_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Sensor_V> Sensor_VUniquePtr;
              ^
/usr/include/ignition/msgs/sensor_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Sensor_V> Sensor_VSharedPtr;
              ^
/usr/include/ignition/msgs/sensor_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Sensor_V const> ConstSensor_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:114:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/server_control.pb.h:532:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::ServerControl> ServerControlUniquePtr;
              ^
/usr/include/ignition/msgs/server_control.pb.h:533:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::ServerControl> ServerControlSharedPtr;
              ^
/usr/include/ignition/msgs/server_control.pb.h:548:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::ServerControl const> ConstServerControlSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:115:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/shadows.pb.h:260:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Shadows> ShadowsUniquePtr;
              ^
/usr/include/ignition/msgs/shadows.pb.h:261:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Shadows> ShadowsSharedPtr;
              ^
/usr/include/ignition/msgs/shadows.pb.h:281:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Shadows const> ConstShadowsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/sim_event.pb.h:27:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:116,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/world_stats.pb.h:439:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WorldStatistics> WorldStatisticsUniquePtr;
              ^
/usr/include/ignition/msgs/world_stats.pb.h:440:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WorldStatistics> WorldStatisticsSharedPtr;
              ^
/usr/include/ignition/msgs/world_stats.pb.h:455:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WorldStatistics const> ConstWorldStatisticsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:116:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sim_event.pb.h:484:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::SimEvent> SimEventUniquePtr;
              ^
/usr/include/ignition/msgs/sim_event.pb.h:485:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::SimEvent> SimEventSharedPtr;
              ^
/usr/include/ignition/msgs/sim_event.pb.h:500:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::SimEvent const> ConstSimEventSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:118:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sonar.pb.h:458:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Sonar> SonarUniquePtr;
              ^
/usr/include/ignition/msgs/sonar.pb.h:459:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Sonar> SonarSharedPtr;
              ^
/usr/include/ignition/msgs/sonar.pb.h:474:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Sonar const> ConstSonarSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:119:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/sonar_stamped.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::SonarStamped> SonarStampedUniquePtr;
              ^
/usr/include/ignition/msgs/sonar_stamped.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::SonarStamped> SonarStampedSharedPtr;
              ^
/usr/include/ignition/msgs/sonar_stamped.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::SonarStamped const> ConstSonarStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:121:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/spherical_coordinates.pb.h:336:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::SphericalCoordinates> SphericalCoordinatesUniquePtr;
              ^
/usr/include/ignition/msgs/spherical_coordinates.pb.h:337:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::SphericalCoordinates> SphericalCoordinatesSharedPtr;
              ^
/usr/include/ignition/msgs/spherical_coordinates.pb.h:357:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::SphericalCoordinates const> ConstSphericalCoordinatesSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:122:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/stringmsg.pb.h:214:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::StringMsg> StringMsgUniquePtr;
              ^
/usr/include/ignition/msgs/stringmsg.pb.h:215:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::StringMsg> StringMsgSharedPtr;
              ^
/usr/include/ignition/msgs/stringmsg.pb.h:230:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::StringMsg const> ConstStringMsgSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:123:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/stringmsg_v.pb.h:194:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::StringMsg_V> StringMsg_VUniquePtr;
              ^
/usr/include/ignition/msgs/stringmsg_v.pb.h:195:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::StringMsg_V> StringMsg_VSharedPtr;
              ^
/usr/include/ignition/msgs/stringmsg_v.pb.h:210:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::StringMsg_V const> ConstStringMsg_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:124:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/subscribe.pb.h:464:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Subscribe> SubscribeUniquePtr;
              ^
/usr/include/ignition/msgs/subscribe.pb.h:465:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Subscribe> SubscribeSharedPtr;
              ^
/usr/include/ignition/msgs/subscribe.pb.h:480:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Subscribe const> ConstSubscribeSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:126:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/tactile.pb.h:334:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Tactile> TactileUniquePtr;
              ^
/usr/include/ignition/msgs/tactile.pb.h:335:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Tactile> TactileSharedPtr;
              ^
/usr/include/ignition/msgs/tactile.pb.h:350:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Tactile const> ConstTactileSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:127:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/test.pb.h:177:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Test> TestUniquePtr;
              ^
/usr/include/ignition/msgs/test.pb.h:178:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Test> TestSharedPtr;
              ^
/usr/include/ignition/msgs/test.pb.h:193:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Test const> ConstTestSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:129:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/topic_info.pb.h:302:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::TopicInfo> TopicInfoUniquePtr;
              ^
/usr/include/ignition/msgs/topic_info.pb.h:303:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::TopicInfo> TopicInfoSharedPtr;
              ^
/usr/include/ignition/msgs/topic_info.pb.h:318:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::TopicInfo const> ConstTopicInfoSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:131:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/uint32.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UInt32> UInt32UniquePtr;
              ^
/usr/include/ignition/msgs/uint32.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UInt32> UInt32SharedPtr;
              ^
/usr/include/ignition/msgs/uint32.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UInt32 const> ConstUInt32SharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:132:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/uint32_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UInt32_V> UInt32_VUniquePtr;
              ^
/usr/include/ignition/msgs/uint32_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UInt32_V> UInt32_VSharedPtr;
              ^
/usr/include/ignition/msgs/uint32_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UInt32_V const> ConstUInt32_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:133:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/uint64.pb.h:157:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UInt64> UInt64UniquePtr;
              ^
/usr/include/ignition/msgs/uint64.pb.h:158:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UInt64> UInt64SharedPtr;
              ^
/usr/include/ignition/msgs/uint64.pb.h:173:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UInt64 const> ConstUInt64SharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:134:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/uint64_v.pb.h:166:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UInt64_V> UInt64_VUniquePtr;
              ^
/usr/include/ignition/msgs/uint64_v.pb.h:167:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UInt64_V> UInt64_VSharedPtr;
              ^
/usr/include/ignition/msgs/uint64_v.pb.h:182:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UInt64_V const> ConstUInt64_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:135:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/undo_redo.pb.h:191:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UndoRedo> UndoRedoUniquePtr;
              ^
/usr/include/ignition/msgs/undo_redo.pb.h:192:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UndoRedo> UndoRedoSharedPtr;
              ^
/usr/include/ignition/msgs/undo_redo.pb.h:207:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UndoRedo const> ConstUndoRedoSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/world_control.pb.h:27:0,
                 from /usr/include/ignition/msgs/user_cmd.pb.h:30,
                 from /usr/include/ignition/msgs/MessageTypes.hh:136,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/world_reset.pb.h:225:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WorldReset> WorldResetUniquePtr;
              ^
/usr/include/ignition/msgs/world_reset.pb.h:226:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WorldReset> WorldResetSharedPtr;
              ^
/usr/include/ignition/msgs/world_reset.pb.h:241:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WorldReset const> ConstWorldResetSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/user_cmd.pb.h:30:0,
                 from /usr/include/ignition/msgs/MessageTypes.hh:136,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/world_control.pb.h:313:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WorldControl> WorldControlUniquePtr;
              ^
/usr/include/ignition/msgs/world_control.pb.h:314:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WorldControl> WorldControlSharedPtr;
              ^
/usr/include/ignition/msgs/world_control.pb.h:329:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WorldControl const> ConstWorldControlSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:136:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/user_cmd.pb.h:618:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UserCmd> UserCmdUniquePtr;
              ^
/usr/include/ignition/msgs/user_cmd.pb.h:619:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UserCmd> UserCmdSharedPtr;
              ^
/usr/include/ignition/msgs/user_cmd.pb.h:639:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UserCmd const> ConstUserCmdSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:137:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/user_cmd_stats.pb.h:210:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::UserCmdStats> UserCmdStatsUniquePtr;
              ^
/usr/include/ignition/msgs/user_cmd_stats.pb.h:211:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::UserCmdStats> UserCmdStatsSharedPtr;
              ^
/usr/include/ignition/msgs/user_cmd_stats.pb.h:226:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::UserCmdStats const> ConstUserCmdStatsSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:141:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/visual_v.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Visual_V> Visual_VUniquePtr;
              ^
/usr/include/ignition/msgs/visual_v.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Visual_V> Visual_VSharedPtr;
              ^
/usr/include/ignition/msgs/visual_v.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Visual_V const> ConstVisual_VSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:142:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/web_request.pb.h:521:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WebRequest> WebRequestUniquePtr;
              ^
/usr/include/ignition/msgs/web_request.pb.h:522:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WebRequest> WebRequestSharedPtr;
              ^
/usr/include/ignition/msgs/web_request.pb.h:537:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WebRequest const> ConstWebRequestSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:143:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/wind.pb.h:211:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::Wind> WindUniquePtr;
              ^
/usr/include/ignition/msgs/wind.pb.h:212:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::Wind> WindSharedPtr;
              ^
/usr/include/ignition/msgs/wind.pb.h:227:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::Wind const> ConstWindSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:144:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/wireless_node.pb.h:282:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WirelessNode> WirelessNodeUniquePtr;
              ^
/usr/include/ignition/msgs/wireless_node.pb.h:283:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WirelessNode> WirelessNodeSharedPtr;
              ^
/usr/include/ignition/msgs/wireless_node.pb.h:298:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WirelessNode const> ConstWirelessNodeSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:145:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/wireless_nodes.pb.h:167:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WirelessNodes> WirelessNodesUniquePtr;
              ^
/usr/include/ignition/msgs/wireless_nodes.pb.h:168:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WirelessNodes> WirelessNodesSharedPtr;
              ^
/usr/include/ignition/msgs/wireless_nodes.pb.h:183:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WirelessNodes const> ConstWirelessNodesSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:147:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/world_modify.pb.h:407:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WorldModify> WorldModifyUniquePtr;
              ^
/usr/include/ignition/msgs/world_modify.pb.h:408:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WorldModify> WorldModifySharedPtr;
              ^
/usr/include/ignition/msgs/world_modify.pb.h:423:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WorldModify const> ConstWorldModifySharedPtr;
                    ^
In file included from /usr/include/ignition/msgs/MessageTypes.hh:151:0,
                 from /usr/include/ignition/msgs.hh:3,
                 from publisher.cc:7:
/usr/include/ignition/msgs/wrench_stamped.pb.h:231:14: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
 typedef std::unique_ptr<ignition::msgs::WrenchStamped> WrenchStampedUniquePtr;
              ^
/usr/include/ignition/msgs/wrench_stamped.pb.h:232:14: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef std::shared_ptr<ignition::msgs::WrenchStamped> WrenchStampedSharedPtr;
              ^
/usr/include/ignition/msgs/wrench_stamped.pb.h:247:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
 typedef const std::shared_ptr<ignition::msgs::WrenchStamped const> ConstWrenchStampedSharedPtr;
                    ^
In file included from /usr/include/ignition/msgs.hh:4:0,
                 from publisher.cc:7:
/usr/include/ignition/msgs/Factory.hh:34:18: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
     typedef std::unique_ptr<google::protobuf::Message> (*FactoryFn) ();
                  ^
/usr/include/ignition/msgs/Factory.hh:45:36: error: ‘FactoryFn’ has not been declared
                                    FactoryFn _factoryfn);
                                    ^
/usr/include/ignition/msgs/Factory.hh:52:27: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
               static std::unique_ptr<T> New(const std::string &_msgType)
                           ^
/usr/include/ignition/msgs/Factory.hh:64:27: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
               static std::unique_ptr<T> New(const std::string &_msgType,
                           ^
/usr/include/ignition/msgs/Factory.hh:75:27: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: static std::unique_ptr<google::protobuf::Message> New(
                           ^
/usr/include/ignition/msgs/Factory.hh:83:27: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: static std::unique_ptr<google::protobuf::Message> New(
                           ^
/usr/include/ignition/msgs/Factory.hh:91:45: error: ‘FactoryFn’ was not declared in this scope
       private: static std::map<std::string, FactoryFn> *msgMap;
                                             ^
/usr/include/ignition/msgs/Factory.hh:91:54: error: template argument 2 is invalid
       private: static std::map<std::string, FactoryFn> *msgMap;
                                                      ^
/usr/include/ignition/msgs/Factory.hh:91:54: error: template argument 4 is invalid
In file included from /usr/include/ignition/math/Vector3.hh:25:0,
                 from /usr/include/ignition/msgs/Utility.hh:20,
                 from /usr/include/ignition/msgs.hh:7,
                 from publisher.cc:7:
/usr/include/ignition/math/Helpers.hh: In function ‘T ignition::math::precision(const T&, const unsigned int&)’:
/usr/include/ignition/math/Helpers.hh:365:12: error: ‘p’ does not name a type
       auto p = std::pow(10, _precision);
            ^
/usr/include/ignition/math/Helpers.hh:366:29: error: ‘round’ is not a member of ‘std’
       return static_cast<T>(std::round(_a * p) / p);
                             ^
/usr/include/ignition/math/Helpers.hh:366:29: note: suggested alternative:
In file included from /usr/include/features.h:367:0,
                 from /usr/include/x86_64-linux-gnu/c++/5/bits/os_defines.h:39,
                 from /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h:482,
                 from /usr/include/c++/5/csignal:41,
                 from publisher.cc:3:
/usr/include/x86_64-linux-gnu/bits/mathcalls.h:319:1: note:   ‘round’
 __MATHCALLX (round,, (_Mdouble_ __x), (__const__));
 ^
In file included from /usr/include/ignition/math/Vector3.hh:25:0,
                 from /usr/include/ignition/msgs/Utility.hh:20,
                 from /usr/include/ignition/msgs.hh:7,
                 from publisher.cc:7:
/usr/include/ignition/math/Helpers.hh:366:45: error: ‘p’ was not declared in this scope
       return static_cast<T>(std::round(_a * p) / p);
                                             ^
/usr/include/ignition/math/Helpers.hh: At global scope:
/usr/include/ignition/math/Helpers.hh:525:11: error: expected nested-name-specifier before ‘PairInput’
     using PairInput = uint32_t;
           ^
/usr/include/ignition/math/Helpers.hh:526:11: error: expected nested-name-specifier before ‘PairOutput’
     using PairOutput = uint64_t;
           ^
/usr/include/ignition/math/Helpers.hh:538:5: error: ‘PairOutput’ does not name a type
     PairOutput IGNITION_VISIBLE Pair(const PairInput _a, const PairInput _b);
     ^
/usr/include/ignition/math/Helpers.hh:551:10: error: ‘tuple’ in namespace ‘std’ does not name a template type
     std::tuple<PairInput, PairInput> IGNITION_VISIBLE Unpair(
          ^
In file included from /usr/include/ignition/math/Plane.hh:21:0,
                 from /usr/include/ignition/msgs/Utility.hh:22,
                 from /usr/include/ignition/msgs.hh:7,
                 from publisher.cc:7:
/usr/include/ignition/math/Box.hh:181:20: error: ‘tuple’ in namespace ‘std’ does not name a template type
       public: std::tuple<bool, double> IntersectDist(
                    ^
/usr/include/ignition/math/Box.hh:202:20: error: ‘tuple’ in namespace ‘std’ does not name a template type
       public: std::tuple<bool, double, Vector3d> Intersect(
                    ^
/usr/include/ignition/math/Box.hh:214:20: error: ‘tuple’ in namespace ‘std’ does not name a template type
       public: std::tuple<bool, double, Vector3d> Intersect(
                    ^
In file included from /usr/include/ignition/transport.hh:3:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/AdvertiseOptions.hh:81:23: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       protected: std::unique_ptr<transport::AdvertiseOptionsPrivate> dataPtr;
                       ^
In file included from /usr/include/ignition/transport.hh:4:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/Discovery.hh:43:9: error: expected nested-name-specifier before ‘raw_type’
   using raw_type = void;
         ^
In file included from /usr/include/ignition/transport/Packet.hh:26:0,
                 from /usr/include/ignition/transport/Discovery.hh:69,
                 from /usr/include/ignition/transport.hh:4,
                 from publisher.cc:8:
/usr/include/ignition/transport/Publisher.hh:35:38: error: constructor required before non-static data member for ‘ignition::transport::Publisher::scope’ has been parsed
     class IGNITION_TRANSPORT_VISIBLE Publisher
                                      ^
/usr/include/ignition/transport/Publisher.hh: In function ‘std::ostream& ignition::transport::operator<<(std::ostream&, const ignition::transport::Publisher&)’:
/usr/include/ignition/transport/Publisher.hh:146:29: error: ‘Scope_t’ is not a class or namespace
         if (_msg.Scope() == Scope_t::PROCESS)
                             ^
/usr/include/ignition/transport/Publisher.hh:148:34: error: ‘Scope_t’ is not a class or namespace
         else if (_msg.Scope() == Scope_t::HOST)
                                  ^
In file included from /usr/include/ignition/transport/Discovery.hh:69:0,
                 from /usr/include/ignition/transport.hh:4,
                 from publisher.cc:8:
/usr/include/ignition/transport/Packet.hh: At global scope:
/usr/include/ignition/transport/Packet.hh:48:5: error: in C++98 ‘ignition::transport::MsgTypesStr’ must be initialized by constructor, not by ‘{...}’
     };
     ^
/usr/include/ignition/transport/Packet.hh:48:5: error: could not convert ‘{"UNINITIALIZED", "ADVERTISE", "SUBSCRIBE", "UNADVERTISE", "HEARTBEAT", "BYE", "NEW_CONNECTION", "END_CONNECTION"}’ from ‘<brace-enclosed initializer list>’ to ‘const std::vector<std::__cxx11::basic_string<char> >’
/usr/include/ignition/transport/Packet.hh:54:38: error: constructor required before non-static data member for ‘ignition::transport::Header::version’ has been parsed
     class IGNITION_TRANSPORT_VISIBLE Header
                                      ^
/usr/include/ignition/transport/Packet.hh:54:38: error: constructor required before non-static data member for ‘ignition::transport::Header::pUuid’ has been parsed
/usr/include/ignition/transport/Packet.hh:54:38: error: constructor required before non-static data member for ‘ignition::transport::Header::type’ has been parsed
/usr/include/ignition/transport/Packet.hh:54:38: error: constructor required before non-static data member for ‘ignition::transport::Header::flags’ has been parsed
/usr/include/ignition/transport/Packet.hh:158:38: error: constructor required before non-static data member for ‘ignition::transport::SubscriptionMsg::topic’ has been parsed
     class IGNITION_TRANSPORT_VISIBLE SubscriptionMsg
                                      ^
In file included from /usr/include/ignition/transport/TopicStorage.hh:28:0,
                 from /usr/include/ignition/transport/Discovery.hh:71,
                 from /usr/include/ignition/transport.hh:4,
                 from publisher.cc:8:
/usr/include/ignition/transport/TransportTypes.hh:52:5: error: expected unqualified-id before ‘using’
     using Addresses_M = std::map<std::string, std::vector<T>>;
     ^
/usr/include/ignition/transport/TransportTypes.hh:56:11: error: expected nested-name-specifier before ‘MsgAddresses_M’
     using MsgAddresses_M = Addresses_M<MessagePublisher>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:60:11: error: expected nested-name-specifier before ‘SrvAddresses_M’
     using SrvAddresses_M = Addresses_M<ServicePublisher>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:64:11: error: expected nested-name-specifier before ‘ProtoMsg’
     using ProtoMsg = google::protobuf::Message;
           ^
/usr/include/ignition/transport/TransportTypes.hh:68:11: error: expected nested-name-specifier before ‘ProtoMsgPtr’
     using ProtoMsgPtr = std::shared_ptr<ProtoMsg>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:72:11: error: expected nested-name-specifier before ‘ISubscriptionHandlerPtr’
     using ISubscriptionHandlerPtr = std::shared_ptr<ISubscriptionHandler>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:79:11: error: expected nested-name-specifier before ‘ISubscriptionHandler_M’
     using ISubscriptionHandler_M =
           ^
/usr/include/ignition/transport/TransportTypes.hh:84:11: error: expected nested-name-specifier before ‘IRepHandlerPtr’
     using IRepHandlerPtr = std::shared_ptr<IRepHandler>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:88:11: error: expected nested-name-specifier before ‘IReqHandlerPtr’
     using IReqHandlerPtr = std::shared_ptr<IReqHandler>;
           ^
/usr/include/ignition/transport/TransportTypes.hh:95:11: error: expected nested-name-specifier before ‘IReqHandler_M’
     using IReqHandler_M =
           ^
/usr/include/ignition/transport/TransportTypes.hh:104:5: error: expected unqualified-id before ‘using’
     using DiscoveryCallback = std::function<void(const T &_publisher)>;
     ^
/usr/include/ignition/transport/TransportTypes.hh:109:11: error: expected nested-name-specifier before ‘MsgDiscoveryCallback’
     using MsgDiscoveryCallback =
           ^
/usr/include/ignition/transport/TransportTypes.hh:115:11: error: expected nested-name-specifier before ‘SrvDiscoveryCallback’
     using SrvDiscoveryCallback =
           ^
/usr/include/ignition/transport/TransportTypes.hh:120:11: error: expected nested-name-specifier before ‘Timestamp’
     using Timestamp = std::chrono::steady_clock::time_point;
           ^
In file included from /usr/include/ignition/transport/Discovery.hh:71:0,
                 from /usr/include/ignition/transport.hh:4,
                 from publisher.cc:8:
/usr/include/ignition/transport/TopicStorage.hh:170:65: error: ‘>>’ should be ‘> >’ within a nested template argument list
                              std::map<std::string, std::vector<T>> &_info) const
                                                                 ^
/usr/include/ignition/transport/TopicStorage.hh:249:65: error: ‘>>’ should be ‘> >’ within a nested template argument list
                              std::map<std::string, std::vector<T>> &_pubs) const
                                                                 ^
/usr/include/ignition/transport/TopicStorage.hh:300:60: error: ‘>>’ should be ‘> >’ within a nested template argument list
                         std::map<std::string, std::vector<T>>> data;
                                                            ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘bool ignition::transport::TopicStorage<T>::AddPublisher(const T&)’:
/usr/include/ignition/transport/TopicStorage.hh:56:48: error: ‘>>’ should be ‘> >’ within a nested template argument list
             std::map<std::string, std::vector<T>>();
                                                ^
/usr/include/ignition/transport/TopicStorage.hh:61:15: error: request for member ‘find’ in ‘m’, which is of non-class type ‘int’
         if (m.find(_publisher.PUuid()) != m.end())
               ^
/usr/include/ignition/transport/TopicStorage.hh:61:45: error: request for member ‘end’ in ‘m’, which is of non-class type ‘int’
         if (m.find(_publisher.PUuid()) != m.end())
                                             ^
/usr/include/ignition/transport/TopicStorage.hh:65:16: error: ‘found’ does not name a type
           auto found = std::find_if(v.begin(), v.end(),
                ^
/usr/include/ignition/transport/TopicStorage.hh:70:14: error: expected primary-expression before ‘)’ token
             });
              ^
/usr/include/ignition/transport/TopicStorage.hh:73:15: error: ‘found’ was not declared in this scope
           if (found != v.end())
               ^
/usr/include/ignition/transport/TopicStorage.hh:73:26: error: request for member ‘end’ in ‘v’, which is of non-class type ‘int’
           if (found != v.end())
                          ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘bool ignition::transport::TopicStorage<T>::HasPublisher(const string&) const’:
/usr/include/ignition/transport/TopicStorage.hh:113:35: error: request for member ‘second’ in ‘topic’, which is of non-class type ‘int’
           for (auto &proc : topic.second)
                                   ^
/usr/include/ignition/transport/TopicStorage.hh:115:35: error: request for member ‘second’ in ‘proc’, which is of non-class type ‘int’
             for (auto &pub : proc.second)
                                   ^
/usr/include/ignition/transport/TopicStorage.hh:117:23: error: request for member ‘Addr’ in ‘pub’, which is of non-class type ‘int’
               if (pub.Addr() == _addr)
                       ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘bool ignition::transport::TopicStorage<T>::Publisher(const string&, const string&, const string&, T&) const’:
/usr/include/ignition/transport/TopicStorage.hh:144:15: error: request for member ‘find’ in ‘m’, which is of non-class type ‘int’
         if (m.find(_pUuid) == m.end())
               ^
/usr/include/ignition/transport/TopicStorage.hh:144:33: error: request for member ‘end’ in ‘m’, which is of non-class type ‘int’
         if (m.find(_pUuid) == m.end())
                                 ^
/usr/include/ignition/transport/TopicStorage.hh:148:21: error: request for member ‘at’ in ‘m’, which is of non-class type ‘int’
         auto &v = m.at(_pUuid);
                     ^
/usr/include/ignition/transport/TopicStorage.hh:149:14: error: ‘found’ does not name a type
         auto found = std::find_if(v.begin(), v.end(),
              ^
/usr/include/ignition/transport/TopicStorage.hh:153:12: error: expected primary-expression before ‘)’ token
           });
            ^
/usr/include/ignition/transport/TopicStorage.hh:155:13: error: ‘found’ was not declared in this scope
         if (found != v.end())
             ^
/usr/include/ignition/transport/TopicStorage.hh:155:24: error: request for member ‘end’ in ‘v’, which is of non-class type ‘int’
         if (found != v.end())
                        ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘bool ignition::transport::TopicStorage<T>::DelPublisherByNode(const string&, const string&, const string&)’:
/usr/include/ignition/transport/TopicStorage.hh:197:17: error: request for member ‘find’ in ‘m’, which is of non-class type ‘int’
           if (m.find(_pUuid) != m.end())
                 ^
/usr/include/ignition/transport/TopicStorage.hh:197:35: error: request for member ‘end’ in ‘m’, which is of non-class type ‘int’
           if (m.find(_pUuid) != m.end())
                                   ^
/usr/include/ignition/transport/TopicStorage.hh:200:24: error: no match for ‘operator[]’ (operand types are ‘int’ and ‘const string {aka const std::__cxx11::basic_string<char>}’)
             auto &v = m[_pUuid];
                        ^
/usr/include/ignition/transport/TopicStorage.hh:201:18: error: ‘priorSize’ does not name a type
             auto priorSize = v.size();
                  ^
/usr/include/ignition/transport/TopicStorage.hh:202:15: error: request for member ‘erase’ in ‘v’, which is of non-class type ‘int’
             v.erase(std::remove_if(v.begin(), v.end(),
               ^
/usr/include/ignition/transport/TopicStorage.hh:202:38: error: request for member ‘begin’ in ‘v’, which is of non-class type ‘int’
             v.erase(std::remove_if(v.begin(), v.end(),
                                      ^
/usr/include/ignition/transport/TopicStorage.hh:202:49: error: request for member ‘end’ in ‘v’, which is of non-class type ‘int’
             v.erase(std::remove_if(v.begin(), v.end(),
                                                 ^
/usr/include/ignition/transport/TopicStorage.hh:207:17: error: request for member ‘end’ in ‘v’, which is of non-class type ‘int’
               v.end());
                 ^
/usr/include/ignition/transport/TopicStorage.hh:208:23: error: ‘priorSize’ was not declared in this scope
             counter = priorSize - v.size();
                       ^
/usr/include/ignition/transport/TopicStorage.hh:208:37: error: request for member ‘size’ in ‘v’, which is of non-class type ‘int’
             counter = priorSize - v.size();
                                     ^
/usr/include/ignition/transport/TopicStorage.hh:210:19: error: request for member ‘empty’ in ‘v’, which is of non-class type ‘int’
             if (v.empty())
                   ^
/usr/include/ignition/transport/TopicStorage.hh:211:17: error: request for member ‘erase’ in ‘m’, which is of non-class type ‘int’
               m.erase(_pUuid);
                 ^
/usr/include/ignition/transport/TopicStorage.hh:213:19: error: request for member ‘empty’ in ‘m’, which is of non-class type ‘int’
             if (m.empty())
                   ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘bool ignition::transport::TopicStorage<T>::DelPublishersByProc(const string&)’:
/usr/include/ignition/transport/TopicStorage.hh:229:19: error: ‘it’ does not name a type
         for (auto it = this->data.begin(); it != this->data.end();)
                   ^
/usr/include/ignition/transport/TopicStorage.hh:229:44: error: expected ‘;’ before ‘it’
         for (auto it = this->data.begin(); it != this->data.end();)
                                            ^
/usr/include/ignition/transport/TopicStorage.hh:229:44: error: ‘it’ was not declared in this scope
/usr/include/ignition/transport/TopicStorage.hh:233:24: error: request for member ‘erase’ in ‘m’, which is of non-class type ‘int’
           counter += m.erase(_pUuid);
                        ^
/usr/include/ignition/transport/TopicStorage.hh:234:17: error: request for member ‘empty’ in ‘m’, which is of non-class type ‘int’
           if (m.empty())
                 ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘void ignition::transport::TopicStorage<T>::PublishersByProc(const string&, std::map<std::__cxx11::basic_string<char>, std::vector<T> >&) const’:
/usr/include/ignition/transport/TopicStorage.hh:257:27: error: request for member ‘second’ in ‘topic’, which is of non-class type ‘int’
           auto &m = topic.second;
                           ^
/usr/include/ignition/transport/TopicStorage.hh:258:17: error: request for member ‘find’ in ‘m’, which is of non-class type ‘int’
           if (m.find(_pUuid) != m.end())
                 ^
/usr/include/ignition/transport/TopicStorage.hh:258:35: error: request for member ‘end’ in ‘m’, which is of non-class type ‘int’
           if (m.find(_pUuid) != m.end())
                                   ^
/usr/include/ignition/transport/TopicStorage.hh:260:25: error: request for member ‘at’ in ‘m’, which is of non-class type ‘int’
             auto &v = m.at(_pUuid);
                         ^
/usr/include/ignition/transport/TopicStorage.hh:263:27: error: request for member ‘first’ in ‘topic’, which is of non-class type ‘int’
               _pubs[topic.first].push_back(T(pub));
                           ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘void ignition::transport::TopicStorage<T>::TopicList(std::vector<std::__cxx11::basic_string<char> >&) const’:
/usr/include/ignition/transport/TopicStorage.hh:274:35: error: request for member ‘first’ in ‘topic’, which is of non-class type ‘int’
           _topics.push_back(topic.first);
                                   ^
/usr/include/ignition/transport/TopicStorage.hh: In member function ‘void ignition::transport::TopicStorage<T>::Print() const’:
/usr/include/ignition/transport/TopicStorage.hh:283:37: error: request for member ‘first’ in ‘topic’, which is of non-class type ‘int’
           std::cout << "[" << topic.first << "]" << std::endl;
                                     ^
/usr/include/ignition/transport/TopicStorage.hh:284:27: error: request for member ‘second’ in ‘topic’, which is of non-class type ‘int’
           auto &m = topic.second;
                           ^
/usr/include/ignition/transport/TopicStorage.hh:287:51: error: request for member ‘first’ in ‘proc’, which is of non-class type ‘int’
             std::cout << "\tProc. UUID: " << proc.first << std::endl;
                                                   ^
/usr/include/ignition/transport/TopicStorage.hh:288:28: error: request for member ‘second’ in ‘proc’, which is of non-class type ‘int’
             auto &v = proc.second;
                            ^
In file included from /usr/include/ignition/transport.hh:4:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/Discovery.hh: At global scope:
/usr/include/ignition/transport/Discovery.hh:375:31: error: ‘Addresses_M’ has not been declared
                               Addresses_M<Pub> &_publishers) const
                               ^
/usr/include/ignition/transport/Discovery.hh:375:42: error: expected ‘,’ or ‘...’ before ‘<’ token
                               Addresses_M<Pub> &_publishers) const
                                          ^
/usr/include/ignition/transport/Discovery.hh:484:40: error: ‘DiscoveryCallback’ does not name a type
       public: void ConnectionsCb(const DiscoveryCallback<Pub> &_cb)
                                        ^
/usr/include/ignition/transport/Discovery.hh:484:57: error: expected ‘,’ or ‘...’ before ‘<’ token
       public: void ConnectionsCb(const DiscoveryCallback<Pub> &_cb)
                                                         ^
/usr/include/ignition/transport/Discovery.hh:494:43: error: ‘DiscoveryCallback’ does not name a type
       public: void DisconnectionsCb(const DiscoveryCallback<Pub> &_cb)
                                           ^
/usr/include/ignition/transport/Discovery.hh:494:60: error: expected ‘,’ or ‘...’ before ‘<’ token
       public: void DisconnectionsCb(const DiscoveryCallback<Pub> &_cb)
                                                            ^
/usr/include/ignition/transport/Discovery.hh:1137:16: error: ‘DiscoveryCallback’ does not name a type
       private: DiscoveryCallback<Pub> connectionCb;
                ^
/usr/include/ignition/transport/Discovery.hh:1140:16: error: ‘DiscoveryCallback’ does not name a type
       private: DiscoveryCallback<Pub> disconnectionCb;
                ^
/usr/include/ignition/transport/Discovery.hh:1149:40: error: ‘Timestamp’ was not declared in this scope
       protected: std::map<std::string, Timestamp> activity;
                                        ^
/usr/include/ignition/transport/Discovery.hh:1149:49: error: template argument 2 is invalid
       protected: std::map<std::string, Timestamp> activity;
                                                 ^
/usr/include/ignition/transport/Discovery.hh:1149:49: error: template argument 4 is invalid
/usr/include/ignition/transport/Discovery.hh:1161:29: error: ‘mutex’ in namespace ‘std’ does not name a type
       private: mutable std::mutex mutex;
                             ^
/usr/include/ignition/transport/Discovery.hh:1164:21: error: ‘thread’ in namespace ‘std’ does not name a type
       private: std::thread threadReception;
                     ^
/usr/include/ignition/transport/Discovery.hh:1167:16: error: ‘Timestamp’ does not name a type
       private: Timestamp timeNextHeartbeat;
                ^
/usr/include/ignition/transport/Discovery.hh:1170:16: error: ‘Timestamp’ does not name a type
       private: Timestamp timeNextActivity;
                ^
/usr/include/ignition/transport/Discovery.hh:1173:21: error: ‘mutex’ in namespace ‘std’ does not name a type
       private: std::mutex exitMutex;
                     ^
/usr/include/ignition/transport/Discovery.hh:1185:29: error: ‘condition_variable’ in namespace ‘std’ does not name a type
       private: mutable std::condition_variable initializedCv;
                             ^
In file included from /usr/include/ignition/transport.hh:4:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/Discovery.hh: In constructor ‘ignition::transport::Discovery<Pub>::Discovery(const string&, int, bool)’:
/usr/include/ignition/transport/Discovery.hh:103:11: error: class ‘ignition::transport::Discovery<Pub>’ does not have any field named ‘connectionCb’
           connectionCb(nullptr),
           ^
/usr/include/ignition/transport/Discovery.hh:103:24: error: ‘nullptr’ was not declared in this scope
           connectionCb(nullptr),
                        ^
/usr/include/ignition/transport/Discovery.hh:104:11: error: class ‘ignition::transport::Discovery<Pub>’ does not have any field named ‘disconnectionCb’
           disconnectionCb(nullptr),
           ^
/usr/include/ignition/transport/Discovery.hh:135:16: error: ‘succeed’ does not name a type
           auto succeed = this->RegisterNetIface(netIface);
                ^
/usr/include/ignition/transport/Discovery.hh:140:46: error: ‘succeed’ was not declared in this scope
           if (netIface == this->hostAddr && !succeed)
                                              ^
In file included from /usr/include/ignition/transport.hh:4:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/Discovery.hh: In destructor ‘virtual ignition::transport::Discovery<Pub>::~Discovery()’:
/usr/include/ignition/transport/Discovery.hh:237:20: error: expected primary-expression before ‘(’ token
           Publisher("", "", this->pUuid, "", Scope_t::ALL));
                    ^
/usr/include/ignition/transport/Discovery.hh:237:46: error: ‘Scope_t’ is not a class or namespace
           Publisher("", "", this->pUuid, "", Scope_t::ALL));
                                              ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::Start()’:
/usr/include/ignition/transport/Discovery.hh:257:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:257:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:266:14: error: ‘now’ does not name a type
         auto now = std::chrono::steady_clock::now();
              ^
/usr/include/ignition/transport/Discovery.hh:267:35: error: ‘now’ was not declared in this scope
         this->timeNextHeartbeat = now;
                                   ^
/usr/include/ignition/transport/Discovery.hh:271:33: error: ‘thread’ is not a member of ‘std’
         this->threadReception = std::thread(&Discovery::RecvMessages, this);
                                 ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘bool ignition::transport::Discovery<Pub>::Advertise(const Pub&)’:
/usr/include/ignition/transport/Discovery.hh:286:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:286:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:297:35: error: ‘Scope_t’ is not a class or namespace
         if (_publisher.Scope() != Scope_t::PROCESS)
                                   ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘bool ignition::transport::Discovery<Pub>::Discover(const string&) const’:
/usr/include/ignition/transport/Discovery.hh:315:9: error: ‘DiscoveryCallback’ was not declared in this scope
         DiscoveryCallback<Pub> cb;
         ^
/usr/include/ignition/transport/Discovery.hh:315:30: error: expected primary-expression before ‘>’ token
         DiscoveryCallback<Pub> cb;
                              ^
/usr/include/ignition/transport/Discovery.hh:315:32: error: ‘cb’ was not declared in this scope
         DiscoveryCallback<Pub> cb;
                                ^
/usr/include/ignition/transport/Discovery.hh:317:9: error: ‘Addresses_M’ was not declared in this scope
         Addresses_M<Pub> addresses;
         ^
/usr/include/ignition/transport/Discovery.hh:317:24: error: expected primary-expression before ‘>’ token
         Addresses_M<Pub> addresses;
                        ^
/usr/include/ignition/transport/Discovery.hh:317:26: error: ‘addresses’ was not declared in this scope
         Addresses_M<Pub> addresses;
                          ^
/usr/include/ignition/transport/Discovery.hh:320:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:320:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:331:22: error: ‘Scope_t’ is not a class or namespace
         pub.SetScope(Scope_t::ALL);
                      ^
/usr/include/ignition/transport/Discovery.hh:337:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:337:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:346:42: error: request for member ‘second’ in ‘proc’, which is of non-class type ‘const int’
             for (const auto &node : proc.second)
                                          ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘const ignition::transport::TopicStorage<Pub>& ignition::transport::Discovery<Pub>::Info() const’:
/usr/include/ignition/transport/Discovery.hh:366:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:366:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘bool ignition::transport::Discovery<Pub>::Publishers(const string&, int) const’:
/usr/include/ignition/transport/Discovery.hh:377:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:377:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh:378:46: error: ‘_publishers’ was not declared in this scope
         return this->info.Publishers(_topic, _publishers);
                                              ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘bool ignition::transport::Discovery<Pub>::Unadvertise(const string&, const string&)’:
/usr/include/ignition/transport/Discovery.hh:393:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:393:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:408:28: error: ‘Scope_t’ is not a class or namespace
         if (inf.Scope() != Scope_t::PROCESS)
                            ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘std::__cxx11::string ignition::transport::Discovery<Pub>::HostAddr() const’:
/usr/include/ignition/transport/Discovery.hh:418:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:418:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘unsigned int ignition::transport::Discovery<Pub>::ActivityInterval() const’:
/usr/include/ignition/transport/Discovery.hh:428:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:428:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘unsigned int ignition::transport::Discovery<Pub>::HeartbeatInterval() const’:
/usr/include/ignition/transport/Discovery.hh:439:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:439:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘unsigned int ignition::transport::Discovery<Pub>::SilenceInterval() const’:
/usr/include/ignition/transport/Discovery.hh:449:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:449:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::SetActivityInterval(unsigned int)’:
/usr/include/ignition/transport/Discovery.hh:458:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:458:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::SetHeartbeatInterval(unsigned int)’:
/usr/include/ignition/transport/Discovery.hh:467:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:467:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::SetSilenceInterval(unsigned int)’:
/usr/include/ignition/transport/Discovery.hh:476:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:476:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::ConnectionsCb(int)’:
/usr/include/ignition/transport/Discovery.hh:486:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:486:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh:487:30: error: ‘_cb’ was not declared in this scope
         this->connectionCb = _cb;
                              ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::DisconnectionsCb(int)’:
/usr/include/ignition/transport/Discovery.hh:496:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:496:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh:497:33: error: ‘_cb’ was not declared in this scope
         this->disconnectionCb = _cb;
                                 ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::PrintCurrentState() const’:
/usr/include/ignition/transport/Discovery.hh:503:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:503:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh:521:9: error: ‘Timestamp’ was not declared in this scope
         Timestamp now = std::chrono::steady_clock::now();
         ^
/usr/include/ignition/transport/Discovery.hh:531:18: error: ‘std::chrono’ has not been declared
             std::chrono::duration<double> elapsed = now - proc.second;
                  ^
/usr/include/ignition/transport/Discovery.hh:531:35: error: expected primary-expression before ‘double’
             std::chrono::duration<double> elapsed = now - proc.second;
                                   ^
/usr/include/ignition/transport/Discovery.hh:533:39: error: request for member ‘first’ in ‘proc’, which is of non-class type ‘int’
             std::cout << "\t" << proc.first << std::endl;
                                       ^
/usr/include/ignition/transport/Discovery.hh:534:54: error: ‘std::chrono’ has not been declared
             std::cout << "\t\t" << "Since: " << std::chrono::duration_cast<
                                                      ^
/usr/include/ignition/transport/Discovery.hh:535:20: error: ‘std::chrono’ has not been declared
               std::chrono::milliseconds>(elapsed).count() << " ms. ago. "
                    ^
/usr/include/ignition/transport/Discovery.hh:535:42: error: ‘elapsed’ was not declared in this scope
               std::chrono::milliseconds>(elapsed).count() << " ms. ago. "
                                          ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::TopicList(std::vector<std::__cxx11::basic_string<char> >&) const’:
/usr/include/ignition/transport/Discovery.hh:547:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:547:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::WaitForInit() const’:
/usr/include/ignition/transport/Discovery.hh:555:9: error: ‘unique_lock’ is not a member of ‘std’
         std::unique_lock<std::mutex> lk(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:555:26: error: ‘mutex’ is not a member of ‘std’
         std::unique_lock<std::mutex> lk(this->mutex);
                          ^
/usr/include/ignition/transport/Discovery.hh:559:36: error: ‘lk’ was not declared in this scope
           this->initializedCv.wait(lk, [this]{return this->initialized;});
                                    ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::UpdateActivity()’:
/usr/include/ignition/transport/Discovery.hh:568:9: error: ‘Timestamp’ was not declared in this scope
         Timestamp now = std::chrono::steady_clock::now();
         ^
/usr/include/ignition/transport/Discovery.hh:570:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
         ^
/usr/include/ignition/transport/Discovery.hh:570:25: error: ‘mutex’ is not a member of ‘std’
         std::lock_guard<std::mutex> lock(this->mutex);
                         ^
/usr/include/ignition/transport/Discovery.hh:572:13: error: ‘now’ was not declared in this scope
         if (now < this->timeNextActivity)
             ^
/usr/include/ignition/transport/Discovery.hh:575:19: error: ‘it’ does not name a type
         for (auto it = this->activity.cbegin(); it != this->activity.cend();)
                   ^
/usr/include/ignition/transport/Discovery.hh:575:49: error: expected ‘;’ before ‘it’
         for (auto it = this->activity.cbegin(); it != this->activity.cend();)
                                                 ^
/usr/include/ignition/transport/Discovery.hh:575:49: error: ‘it’ was not declared in this scope
/usr/include/ignition/transport/Discovery.hh:578:16: error: ‘elapsed’ does not name a type
           auto elapsed = now - it->second;
                ^
/usr/include/ignition/transport/Discovery.hh:581:20: error: ‘std::chrono’ has not been declared
           if (std::chrono::duration_cast<std::chrono::milliseconds>
                    ^
/usr/include/ignition/transport/Discovery.hh:581:47: error: ‘std::chrono’ has not been declared
           if (std::chrono::duration_cast<std::chrono::milliseconds>
                                               ^
/usr/include/ignition/transport/Discovery.hh:582:17: error: ‘elapsed’ was not declared in this scope
                (elapsed).count() > this->silenceInterval)
                 ^
/usr/include/ignition/transport/Discovery.hh:592:32: error: ‘Scope_t’ is not a class or namespace
             publisher.SetScope(Scope_t::ALL);
                                ^
/usr/include/ignition/transport/Discovery.hh:602:39: error: ‘std::chrono’ has not been declared
         this->timeNextActivity = std::chrono::steady_clock::now() +
                                       ^
/usr/include/ignition/transport/Discovery.hh:603:16: error: ‘std::chrono’ has not been declared
           std::chrono::milliseconds(this->activityInterval);
                ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::UpdateHeartbeat()’:
/usr/include/ignition/transport/Discovery.hh:609:9: error: ‘Timestamp’ was not declared in this scope
         Timestamp now = std::chrono::steady_clock::now();
         ^
/usr/include/ignition/transport/Discovery.hh:612:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:612:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:614:15: error: ‘now’ was not declared in this scope
           if (now < this->timeNextHeartbeat)
               ^
/usr/include/ignition/transport/Discovery.hh:618:48: error: ‘Scope_t’ is not a class or namespace
         Publisher pub("", "", this->pUuid, "", Scope_t::ALL);
                                                ^
/usr/include/ignition/transport/Discovery.hh:621:46: error: ‘>>’ should be ‘> >’ within a nested template argument list
         std::map<std::string, std::vector<Pub>> nodes;
                                              ^
/usr/include/ignition/transport/Discovery.hh:623:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:623:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:631:41: error: request for member ‘second’ in ‘topic’, which is of non-class type ‘const int’
           for (const auto &node : topic.second)
                                         ^
/usr/include/ignition/transport/Discovery.hh:636:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:636:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:651:42: error: ‘std::chrono’ has not been declared
           this->timeNextHeartbeat = std::chrono::steady_clock::now() +
                                          ^
/usr/include/ignition/transport/Discovery.hh:652:18: error: ‘std::chrono’ has not been declared
             std::chrono::milliseconds(this->heartbeatInterval);
                  ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘int ignition::transport::Discovery<Pub>::NextTimeout() const’:
/usr/include/ignition/transport/Discovery.hh:667:14: error: ‘now’ does not name a type
         auto now = std::chrono::steady_clock::now();
              ^
/usr/include/ignition/transport/Discovery.hh:668:14: error: ‘timeUntilNextHeartbeat’ does not name a type
         auto timeUntilNextHeartbeat = this->timeNextHeartbeat - now;
              ^
/usr/include/ignition/transport/Discovery.hh:669:14: error: ‘timeUntilNextActivity’ does not name a type
         auto timeUntilNextActivity = this->timeNextActivity - now;
              ^
/usr/include/ignition/transport/Discovery.hh:672:16: error: ‘std::chrono’ has not been declared
           std::chrono::duration_cast<std::chrono::milliseconds>
                ^
/usr/include/ignition/transport/Discovery.hh:672:43: error: ‘std::chrono’ has not been declared
           std::chrono::duration_cast<std::chrono::milliseconds>
                                           ^
/usr/include/ignition/transport/Discovery.hh:673:23: error: ‘timeUntilNextHeartbeat’ was not declared in this scope
             (std::min(timeUntilNextHeartbeat, timeUntilNextActivity)).count());
                       ^
/usr/include/ignition/transport/Discovery.hh:673:47: error: ‘timeUntilNextActivity’ was not declared in this scope
             (std::min(timeUntilNextHeartbeat, timeUntilNextActivity)).count());
                                               ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::RecvMessages()’:
/usr/include/ignition/transport/Discovery.hh:716:13: error: ‘lock_guard’ is not a member of ‘std’
             std::lock_guard<std::mutex> lock(this->exitMutex);
             ^
/usr/include/ignition/transport/Discovery.hh:716:29: error: ‘mutex’ is not a member of ‘std’
             std::lock_guard<std::mutex> lock(this->exitMutex);
                             ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::RecvDiscoveryUpdate()’:
/usr/include/ignition/transport/Discovery.hh:737:32: error: ‘raw_type’ does not name a type
               reinterpret_cast<raw_type *>(rcvStr),
                                ^
/usr/include/ignition/transport/Discovery.hh:737:41: error: expected ‘>’ before ‘*’ token
               reinterpret_cast<raw_type *>(rcvStr),
                                         ^
/usr/include/ignition/transport/Discovery.hh:737:41: error: expected ‘(’ before ‘*’ token
/usr/include/ignition/transport/Discovery.hh:737:42: error: expected primary-expression before ‘>’ token
               reinterpret_cast<raw_type *>(rcvStr),
                                          ^
/usr/include/ignition/transport/Discovery.hh:741:9: error: expected ‘)’ before ‘{’ token
         {
         ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::DispatchDiscoveryMsg(const string&, char*)’:
/usr/include/ignition/transport/Discovery.hh:776:14: error: ‘recvPUuid’ does not name a type
         auto recvPUuid = header.PUuid();
              ^
/usr/include/ignition/transport/Discovery.hh:779:13: error: ‘recvPUuid’ was not declared in this scope
         if (recvPUuid == this->pUuid)
             ^
/usr/include/ignition/transport/Discovery.hh:783:9: error: ‘DiscoveryCallback’ was not declared in this scope
         DiscoveryCallback<Pub> connectCb;
         ^
/usr/include/ignition/transport/Discovery.hh:783:30: error: expected primary-expression before ‘>’ token
         DiscoveryCallback<Pub> connectCb;
                              ^
/usr/include/ignition/transport/Discovery.hh:783:32: error: ‘connectCb’ was not declared in this scope
         DiscoveryCallback<Pub> connectCb;
                                ^
/usr/include/ignition/transport/Discovery.hh:784:30: error: expected primary-expression before ‘>’ token
         DiscoveryCallback<Pub> disconnectCb;
                              ^
/usr/include/ignition/transport/Discovery.hh:784:32: error: ‘disconnectCb’ was not declared in this scope
         DiscoveryCallback<Pub> disconnectCb;
                                ^
/usr/include/ignition/transport/Discovery.hh:786:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
           ^
/usr/include/ignition/transport/Discovery.hh:786:27: error: ‘mutex’ is not a member of ‘std’
           std::lock_guard<std::mutex> lock(this->mutex);
                           ^
/usr/include/ignition/transport/Discovery.hh:787:26: error: ‘recvPUuid’ was not declared in this scope
           this->activity[recvPUuid] = std::chrono::steady_clock::now();
                          ^
/usr/include/ignition/transport/Discovery.hh:787:44: error: ‘std::chrono’ has not been declared
           this->activity[recvPUuid] = std::chrono::steady_clock::now();
                                            ^
/usr/include/ignition/transport/Discovery.hh:801:48: error: ‘Scope_t’ is not a class or namespace
             if ((advMsg.Publisher().Scope() == Scope_t::PROCESS) ||
                                                ^
/usr/include/ignition/transport/Discovery.hh:802:48: error: ‘Scope_t’ is not a class or namespace
                 (advMsg.Publisher().Scope() == Scope_t::HOST &&
                                                ^
/usr/include/ignition/transport/Discovery.hh:811:15: error: ‘lock_guard’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
               ^
/usr/include/ignition/transport/Discovery.hh:811:31: error: ‘mutex’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
                               ^
/usr/include/ignition/transport/Discovery.hh:828:18: error: ‘recvTopic’ does not name a type
             auto recvTopic = subMsg.Topic();
                  ^
/usr/include/ignition/transport/Discovery.hh:831:13: error: ‘Addresses_M’ was not declared in this scope
             Addresses_M<Pub> addresses;
             ^
/usr/include/ignition/transport/Discovery.hh:831:28: error: expected primary-expression before ‘>’ token
             Addresses_M<Pub> addresses;
                            ^
/usr/include/ignition/transport/Discovery.hh:831:30: error: ‘addresses’ was not declared in this scope
             Addresses_M<Pub> addresses;
                              ^
/usr/include/ignition/transport/Discovery.hh:833:15: error: ‘lock_guard’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
               ^
/usr/include/ignition/transport/Discovery.hh:833:31: error: ‘mutex’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
                               ^
/usr/include/ignition/transport/Discovery.hh:834:48: error: ‘recvTopic’ was not declared in this scope
               if (!this->info.HasAnyPublishers(recvTopic, this->pUuid))
                                                ^
/usr/include/ignition/transport/Discovery.hh:839:42: error: ‘recvTopic’ was not declared in this scope
               if (!this->info.Publishers(recvTopic, addresses))
                                          ^
/usr/include/ignition/transport/Discovery.hh:846:29: error: request for member ‘Scope’ in ‘nodeInfo’, which is of non-class type ‘const int’
               if ((nodeInfo.Scope() == Scope_t::PROCESS) ||
                             ^
/usr/include/ignition/transport/Discovery.hh:846:40: error: ‘Scope_t’ is not a class or namespace
               if ((nodeInfo.Scope() == Scope_t::PROCESS) ||
                                        ^
/usr/include/ignition/transport/Discovery.hh:847:29: error: request for member ‘Scope’ in ‘nodeInfo’, which is of non-class type ‘const int’
                   (nodeInfo.Scope() == Scope_t::HOST &&
                             ^
/usr/include/ignition/transport/Discovery.hh:847:40: error: ‘Scope_t’ is not a class or namespace
                   (nodeInfo.Scope() == Scope_t::HOST &&
                                        ^
/usr/include/ignition/transport/Discovery.hh:868:15: error: ‘lock_guard’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
               ^
/usr/include/ignition/transport/Discovery.hh:868:31: error: ‘mutex’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
                               ^
/usr/include/ignition/transport/Discovery.hh:869:36: error: ‘recvPUuid’ was not declared in this scope
               this->activity.erase(recvPUuid);
                                    ^
/usr/include/ignition/transport/Discovery.hh:875:28: error: ‘recvPUuid’ was not declared in this scope
               pub.SetPUuid(recvPUuid);
                            ^
/usr/include/ignition/transport/Discovery.hh:876:28: error: ‘Scope_t’ is not a class or namespace
               pub.SetScope(Scope_t::ALL);
                            ^
/usr/include/ignition/transport/Discovery.hh:883:15: error: ‘lock_guard’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
               ^
/usr/include/ignition/transport/Discovery.hh:883:31: error: ‘mutex’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
                               ^
/usr/include/ignition/transport/Discovery.hh:884:46: error: ‘recvPUuid’ was not declared in this scope
               this->info.DelPublishersByProc(recvPUuid);
                                              ^
/usr/include/ignition/transport/Discovery.hh:896:48: error: ‘Scope_t’ is not a class or namespace
             if ((advMsg.Publisher().Scope() == Scope_t::PROCESS) ||
                                                ^
/usr/include/ignition/transport/Discovery.hh:897:48: error: ‘Scope_t’ is not a class or namespace
                 (advMsg.Publisher().Scope() == Scope_t::HOST &&
                                                ^
/usr/include/ignition/transport/Discovery.hh:911:15: error: ‘lock_guard’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
               ^
/usr/include/ignition/transport/Discovery.hh:911:31: error: ‘mutex’ is not a member of ‘std’
               std::lock_guard<std::mutex> lock(this->mutex);
                               ^
/usr/include/ignition/transport/Discovery.hh: In member function ‘void ignition::transport::Discovery<Pub>::SendMsg(uint8_t, const T&, uint16_t) const’:
/usr/include/ignition/transport/Discovery.hh:939:14: error: ‘msgLength’ does not name a type
         auto msgLength = 0;
              ^
/usr/include/ignition/transport/Discovery.hh:955:13: error: ‘msgLength’ was not declared in this scope
             msgLength = static_cast<int>(advMsg.MsgLength());
             ^
/usr/include/ignition/transport/Discovery.hh:966:13: error: ‘msgLength’ was not declared in this scope
             msgLength = static_cast<int>(subMsg.MsgLength());
             ^
/usr/include/ignition/transport/Discovery.hh:975:13: error: ‘msgLength’ was not declared in this scope
             msgLength = header.HeaderLength();
             ^
/usr/include/ignition/transport/Discovery.hh:988:51: error: expected ‘>’ before ‘raw_type’
           if (sendto(sock, reinterpret_cast<const raw_type *>(
                                                   ^
/usr/include/ignition/transport/Discovery.hh:988:51: error: expected ‘(’ before ‘raw_type’
/usr/include/ignition/transport/Discovery.hh:988:51: error: ‘raw_type’ was not declared in this scope
/usr/include/ignition/transport/Discovery.hh:988:61: error: expected primary-expression before ‘>’ token
           if (sendto(sock, reinterpret_cast<const raw_type *>(
                                                             ^
/usr/include/ignition/transport/Discovery.hh:990:13: error: ‘msgLength’ was not declared in this scope
             msgLength, 0,
             ^
/usr/include/ignition/transport/Discovery.hh:993:11: error: expected ‘)’ before ‘{’ token
           {
           ^
/usr/include/ignition/transport/Discovery.hh:997:9: error: expected primary-expression before ‘}’ token
         }
         ^
/usr/include/ignition/transport/Discovery.hh: At global scope:
/usr/include/ignition/transport/Discovery.hh:1201:11: error: expected nested-name-specifier before ‘MsgDiscovery’
     using MsgDiscovery = Discovery<MessagePublisher>;
           ^
/usr/include/ignition/transport/Discovery.hh:1205:11: error: expected nested-name-specifier before ‘SrvDiscovery’
     using SrvDiscovery = Discovery<ServicePublisher>;
           ^
In file included from /usr/include/ignition/transport.hh:5:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/HandlerStorage.hh:39:13: error: expected nested-name-specifier before ‘UUIDHandler_M’
       using UUIDHandler_M = std::map<std::string, std::shared_ptr<T>>;
             ^
/usr/include/ignition/transport/HandlerStorage.hh:40:13: error: expected nested-name-specifier before ‘UUIDHandler_Collection_M’
       using UUIDHandler_Collection_M = std::map<std::string, UUIDHandler_M>;
             ^
/usr/include/ignition/transport/HandlerStorage.hh:43:13: error: expected nested-name-specifier before ‘TopicServiceCalls_M’
       using TopicServiceCalls_M =
             ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:56: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                        ^
/usr/include/ignition/transport/HandlerStorage.hh:62:56: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:62:33: error: ‘shared_ptr’ is not a member of ‘std’
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                  ^
/usr/include/ignition/transport/HandlerStorage.hh:62:50: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:62:56: error: template argument 2 is invalid
           std::map<std::string, std::shared_ptr<T> >> &_handlers) const
                                                        ^
/usr/include/ignition/transport/HandlerStorage.hh:62:56: error: template argument 4 is invalid
/usr/include/ignition/transport/HandlerStorage.hh:61:14: error: ‘std::map’ is not a type
         std::map<std::string,
              ^
/usr/include/ignition/transport/HandlerStorage.hh:61:17: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::map<std::string,
                 ^
/usr/include/ignition/transport/HandlerStorage.hh:81:38: error: ‘std::shared_ptr’ has not been declared
                                 std::shared_ptr<T> &_handler) const
                                      ^
/usr/include/ignition/transport/HandlerStorage.hh:81:48: error: expected ‘,’ or ‘...’ before ‘<’ token
                                 std::shared_ptr<T> &_handler) const
                                                ^
/usr/include/ignition/transport/HandlerStorage.hh:110:38: error: ‘std::shared_ptr’ has not been declared
                                 std::shared_ptr<T> &_handler) const
                                      ^
/usr/include/ignition/transport/HandlerStorage.hh:110:48: error: expected ‘,’ or ‘...’ before ‘<’ token
                                 std::shared_ptr<T> &_handler) const
                                                ^
/usr/include/ignition/transport/HandlerStorage.hh:139:33: error: ‘std::shared_ptr’ has not been declared
                            std::shared_ptr<T> &_handler) const
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:139:43: error: expected ‘,’ or ‘...’ before ‘<’ token
                            std::shared_ptr<T> &_handler) const
                                           ^
/usr/include/ignition/transport/HandlerStorage.hh:162:42: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
                               const std::shared_ptr<T> &_handler)
                                          ^
/usr/include/ignition/transport/HandlerStorage.hh:162:52: error: expected ‘,’ or ‘...’ before ‘<’ token
                               const std::shared_ptr<T> &_handler)
                                                    ^
/usr/include/ignition/transport/HandlerStorage.hh:250:16: error: ‘TopicServiceCalls_M’ does not name a type
       private: TopicServiceCalls_M data;
                ^
/usr/include/ignition/transport/HandlerStorage.hh: In member function ‘bool ignition::transport::HandlerStorage<T>::Handlers(const string&, int) const’:
/usr/include/ignition/transport/HandlerStorage.hh:67:9: error: ‘_handlers’ was not declared in this scope
         _handlers = this->data.at(_topic);
         ^
/usr/include/ignition/transport/HandlerStorage.hh: In member function ‘bool ignition::transport::HandlerStorage<T>::FirstHandler(const string&, const string&, const string&, int) const’:
/usr/include/ignition/transport/HandlerStorage.hh:89:43: error: request for member ‘second’ in ‘node’, which is of non-class type ‘const int’
           for (const auto &handler : node.second)
                                           ^
/usr/include/ignition/transport/HandlerStorage.hh:91:41: error: request for member ‘second’ in ‘handler’, which is of non-class type ‘const int’
             if (_reqTypeName == handler.second->ReqTypeName() &&
                                         ^
/usr/include/ignition/transport/HandlerStorage.hh:92:41: error: request for member ‘second’ in ‘handler’, which is of non-class type ‘const int’
                 _repTypeName == handler.second->RepTypeName())
                                         ^
/usr/include/ignition/transport/HandlerStorage.hh:94:15: error: ‘_handler’ was not declared in this scope
               _handler = handler.second;
               ^
/usr/include/ignition/transport/HandlerStorage.hh:94:34: error: request for member ‘second’ in ‘handler’, which is of non-class type ‘const int’
               _handler = handler.second;
                                  ^
/usr/include/ignition/transport/HandlerStorage.hh: In member function ‘bool ignition::transport::HandlerStorage<T>::FirstHandler(const string&, const string&, int) const’:
/usr/include/ignition/transport/HandlerStorage.hh:118:43: error: request for member ‘second’ in ‘node’, which is of non-class type ‘const int’
           for (const auto &handler : node.second)
                                           ^
/usr/include/ignition/transport/HandlerStorage.hh:120:41: error: request for member ‘second’ in ‘handler’, which is of non-class type ‘const int’
             if (_msgTypeName == handler.second->TypeName())
                                         ^
/usr/include/ignition/transport/HandlerStorage.hh:122:15: error: ‘_handler’ was not declared in this scope
               _handler = handler.second;
               ^
/usr/include/ignition/transport/HandlerStorage.hh:122:34: error: request for member ‘second’ in ‘handler’, which is of non-class type ‘const int’
               _handler = handler.second;
                                  ^
/usr/include/ignition/transport/HandlerStorage.hh: In member function ‘bool ignition::transport::HandlerStorage<T>::Handler(const string&, const string&, const string&, int) const’:
/usr/include/ignition/transport/HandlerStorage.hh:145:15: error: request for member ‘find’ in ‘m’, which is of non-class type ‘const int’
         if (m.find(_nUuid) == m.end())
               ^
/usr/include/ignition/transport/HandlerStorage.hh:145:33: error: request for member ‘end’ in ‘m’, which is of non-class type ‘const int’
         if (m.find(_nUuid) == m.end())
                                 ^
/usr/include/ignition/transport/HandlerStorage.hh:148:15: error: request for member ‘at’ in ‘m’, which is of non-class type ‘const int’
         if (m.at(_nUuid).find(_hUuid) == m.at(_nUuid).end())
               ^
/usr/include/ignition/transport/HandlerStorage.hh:148:44: error: request for member ‘at’ in ‘m’, which is of non-class type ‘const int’
         if (m.at(_nUuid).find(_hUuid) == m.at(_nUuid).end())
                                            ^
/usr/include/ignition/transport/HandlerStorage.hh:151:9: error: ‘_handler’ was not declared in this scope
         _handler = m.at(_nUuid).at(_hUuid);
         ^
/usr/include/ignition/transport/HandlerStorage.hh:151:22: error: request for member ‘at’ in ‘m’, which is of non-class type ‘const int’
         _handler = m.at(_nUuid).at(_hUuid);
                      ^
/usr/include/ignition/transport/HandlerStorage.hh: In member function ‘void ignition::transport::HandlerStorage<T>::AddHandler(const string&, const string&, int)’:
/usr/include/ignition/transport/HandlerStorage.hh:166:57: error: there are no arguments to ‘UUIDHandler_Collection_M’ that depend on a template parameter, so a declaration of ‘UUIDHandler_Collection_M’ must be available [-fpermissive]
           this->data[_topic] = UUIDHandler_Collection_M();
                                                         ^
/usr/include/ignition/transport/HandlerStorage.hh:166:57: note: (if you use ‘-fpermissive’, G++ will accept your code, but allowing the use of an undeclared name is deprecated)
/usr/include/ignition/transport/HandlerStorage.hh:170:54: error: there are no arguments to ‘UUIDHandler_M’ that depend on a template parameter, so a declaration of ‘UUIDHandler_M’ must be available [-fpermissive]
           this->data[_topic][_nUuid] = UUIDHandler_M();
                                                      ^
/usr/include/ignition/transport/HandlerStorage.hh:174:26: error: ‘_handler’ was not declared in this scope
           std::make_pair(_handler->HandlerUuid(), _handler));
                          ^
In file included from /usr/include/ignition/transport/Node.hh:48:0,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/NodeOptions.hh: At global scope:
/usr/include/ignition/transport/NodeOptions.hh:106:23: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       protected: std::unique_ptr<transport::NodeOptionsPrivate> dataPtr;
                       ^
In file included from /usr/include/ignition/transport/RepHandler.hh:40:0,
                 from /usr/include/ignition/transport/NodeShared.hh:40,
                 from /usr/include/ignition/transport/Node.hh:49,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/Uuid.hh:32:9: error: expected nested-name-specifier before ‘portable_uuid_t’
   using portable_uuid_t = uuid_t;
         ^
/usr/include/ignition/transport/Uuid.hh:72:16: error: ‘portable_uuid_t’ does not name a type
       private: portable_uuid_t data;
                ^
In file included from /usr/include/ignition/transport/NodeShared.hh:40:0,
                 from /usr/include/ignition/transport/Node.hh:49,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/RepHandler.hh:63:62: error: ‘ProtoMsg’ in namespace ‘ignition::transport’ does not name a type
       public: virtual void RunLocalCallback(const transport::ProtoMsg &_msgReq,
                                                              ^
/usr/include/ignition/transport/RepHandler.hh:64:56: error: ‘ignition::transport::ProtoMsg’ has not been declared
                                             transport::ProtoMsg &_msgRep,
                                                        ^
/usr/include/ignition/transport/RepHandler.hh:114:43: error: ‘function’ in namespace ‘std’ does not name a template type
       public: void SetCallback(const std::function
                                           ^
/usr/include/ignition/transport/RepHandler.hh:115:9: error: expected ‘,’ or ‘...’ before ‘<’ token
         <void(const Req &, Rep &, bool &)> &_cb)
         ^
/usr/include/ignition/transport/RepHandler.hh:121:54: error: ‘ProtoMsg’ in namespace ‘ignition::transport’ does not name a type
       public: void RunLocalCallback(const transport::ProtoMsg &_msgReq,
                                                      ^
/usr/include/ignition/transport/RepHandler.hh:122:48: error: ‘ignition::transport::ProtoMsg’ has not been declared
                                     transport::ProtoMsg &_msgRep,
                                                ^
/usr/include/ignition/transport/RepHandler.hh:196:21: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
       private: std::shared_ptr<Req> CreateMsg(const std::string &_data) const
                     ^
/usr/include/ignition/transport/RepHandler.hh:212:21: error: ‘function’ in namespace ‘std’ does not name a template type
       private: std::function<void(const Req &, Rep &, bool &)> cb;
                     ^
/usr/include/ignition/transport/RepHandler.hh: In member function ‘void ignition::transport::RepHandler<Req, Rep>::SetCallback(int)’:
/usr/include/ignition/transport/RepHandler.hh:117:20: error: ‘_cb’ was not declared in this scope
         this->cb = _cb;
                    ^
/usr/include/ignition/transport/RepHandler.hh: In member function ‘void ignition::transport::RepHandler<Req, Rep>::RunLocalCallback(const int&, int&, bool&)’:
/usr/include/ignition/transport/RepHandler.hh:132:16: error: ‘msgReq’ does not name a type
           auto msgReq =
                ^
/usr/include/ignition/transport/RepHandler.hh:134:16: error: ‘msgRep’ does not name a type
           auto msgRep = google::protobuf::internal::down_cast<Rep*>(&_msgRep);
                ^
/usr/include/ignition/transport/RepHandler.hh:137:21: error: ‘msgReq’ was not declared in this scope
           this->cb(*msgReq, *msgRep, _result);
                     ^
/usr/include/ignition/transport/RepHandler.hh:137:30: error: ‘msgRep’ was not declared in this scope
           this->cb(*msgReq, *msgRep, _result);
                              ^
/usr/include/ignition/transport/RepHandler.hh: In member function ‘void ignition::transport::RepHandler<Req, Rep>::RunCallback(const string&, std::__cxx11::string&, bool&)’:
/usr/include/ignition/transport/RepHandler.hh:162:14: error: ‘msgReq’ does not name a type
         auto msgReq = this->CreateMsg(_req);
              ^
/usr/include/ignition/transport/RepHandler.hh:163:14: error: ‘msgReq’ was not declared in this scope
         if (!msgReq)
              ^
/usr/include/ignition/transport/RepHandler.hh:170:19: error: ‘msgReq’ was not declared in this scope
         this->cb(*msgReq, msgRep, _result);
                   ^
In file included from /usr/include/ignition/transport/NodeShared.hh:41:0,
                 from /usr/include/ignition/transport/Node.hh:49,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/ReqHandler.hh: At global scope:
/usr/include/ignition/transport/ReqHandler.hh:146:23: error: ‘condition_variable_any’ in namespace ‘std’ does not name a type
       protected: std::condition_variable_any condition;
                       ^
/usr/include/ignition/transport/ReqHandler.hh: In member function ‘bool ignition::transport::IReqHandler::WaitUntil(Lock&, unsigned int)’:
/usr/include/ignition/transport/ReqHandler.hh:127:14: error: ‘now’ does not name a type
         auto now = std::chrono::system_clock::now();
              ^
/usr/include/ignition/transport/ReqHandler.hh:128:22: error: ‘class ignition::transport::IReqHandler’ has no member named ‘condition’
         return this->condition.wait_until(_lock,
                      ^
/usr/include/ignition/transport/ReqHandler.hh:129:11: error: ‘now’ was not declared in this scope
           now + std::chrono::milliseconds(_timeout),
           ^
/usr/include/ignition/transport/ReqHandler.hh:129:22: error: ‘std::chrono’ has not been declared
           now + std::chrono::milliseconds(_timeout),
                      ^
/usr/include/ignition/transport/ReqHandler.hh: At global scope:
/usr/include/ignition/transport/ReqHandler.hh:187:20: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
       public: std::shared_ptr<Rep> CreateMsg(const std::string &_data) const
                    ^
/usr/include/ignition/transport/ReqHandler.hh:207:43: error: ‘function’ in namespace ‘std’ does not name a template type
       public: void SetCallback(const std::function <void(
                                           ^
/usr/include/ignition/transport/ReqHandler.hh:207:52: error: expected ‘,’ or ‘...’ before ‘<’ token
       public: void SetCallback(const std::function <void(
                                                    ^
/usr/include/ignition/transport/ReqHandler.hh:275:21: error: ‘function’ in namespace ‘std’ does not name a template type
       private: std::function<void(const Rep &_rep, const bool _result)> cb;
                     ^
/usr/include/ignition/transport/ReqHandler.hh: In member function ‘void ignition::transport::ReqHandler<Req, Rep>::SetCallback(int)’:
/usr/include/ignition/transport/ReqHandler.hh:210:20: error: ‘_cb’ was not declared in this scope
         this->cb = _cb;
                    ^
/usr/include/ignition/transport/ReqHandler.hh: In member function ‘void ignition::transport::ReqHandler<Req, Rep>::NotifyResult(const string&, bool)’:
/usr/include/ignition/transport/ReqHandler.hh:241:16: error: ‘msg’ does not name a type
           auto msg = this->CreateMsg(_rep);
                ^
/usr/include/ignition/transport/ReqHandler.hh:243:21: error: ‘msg’ was not declared in this scope
           this->cb(*msg, _result);
                     ^
In file included from /usr/include/ignition/transport/Node.hh:49:0,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/NodeShared.hh: At global scope:
/usr/include/ignition/transport/NodeShared.hh:141:20: error: ‘thread’ in namespace ‘std’ does not name a type
       public: std::thread threadReception;
                    ^
/usr/include/ignition/transport/NodeShared.hh:144:20: error: ‘recursive_mutex’ in namespace ‘std’ does not name a type
       public: std::recursive_mutex mutex;
                    ^
/usr/include/ignition/transport/NodeShared.hh:161:21: error: ‘mutex’ in namespace ‘std’ does not name a type
       private: std::mutex exitMutex;
                     ^
/usr/include/ignition/transport/NodeShared.hh:205:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::context_t> context;
                    ^
/usr/include/ignition/transport/NodeShared.hh:212:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> publisher;
                    ^
/usr/include/ignition/transport/NodeShared.hh:215:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> subscriber;
                    ^
/usr/include/ignition/transport/NodeShared.hh:218:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> control;
                    ^
/usr/include/ignition/transport/NodeShared.hh:221:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> requester;
                    ^
/usr/include/ignition/transport/NodeShared.hh:224:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> responseReceiver;
                    ^
/usr/include/ignition/transport/NodeShared.hh:227:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<zmq::socket_t> replier;
                    ^
/usr/include/ignition/transport/NodeShared.hh:234:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<MsgDiscovery> msgDiscovery;
                    ^
/usr/include/ignition/transport/NodeShared.hh:237:20: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       public: std::unique_ptr<SrvDiscovery> srvDiscovery;
                    ^
In file included from /usr/include/ignition/transport/Node.hh:53:0,
                 from /usr/include/ignition/transport.hh:9,
                 from publisher.cc:8:
/usr/include/ignition/transport/SubscriptionHandler.hh:64:55: error: ‘ProtoMsg’ in namespace ‘ignition::transport’ does not name a type
                                      const transport::ProtoMsg &_msg) const = 0;
                                                       ^
/usr/include/ignition/transport/SubscriptionHandler.hh:69:34: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
       public: virtual const std::shared_ptr<transport::ProtoMsg> CreateMsg(
                                  ^
/usr/include/ignition/transport/SubscriptionHandler.hh:112:26: error: ‘shared_ptr’ in namespace ‘std’ does not name a template type
       public: const std::shared_ptr<transport::ProtoMsg> CreateMsg(
                          ^
/usr/include/ignition/transport/SubscriptionHandler.hh:137:43: error: ‘function’ in namespace ‘std’ does not name a template type
       public: void SetCallback(const std::function <void(const T &_msg)> &_cb)
                                           ^
/usr/include/ignition/transport/SubscriptionHandler.hh:137:52: error: expected ‘,’ or ‘...’ before ‘<’ token
       public: void SetCallback(const std::function <void(const T &_msg)> &_cb)
                                                    ^
/usr/include/ignition/transport/SubscriptionHandler.hh:143:54: error: ‘ProtoMsg’ in namespace ‘ignition::transport’ does not name a type
       public: bool RunLocalCallback(const transport::ProtoMsg &_msg) const
                                                      ^
/usr/include/ignition/transport/SubscriptionHandler.hh:168:21: error: ‘function’ in namespace ‘std’ does not name a template type
       private: std::function<void(const T &_msg)> cb;
                     ^
/usr/include/ignition/transport/SubscriptionHandler.hh: In member function ‘void ignition::transport::SubscriptionHandler<T>::SetCallback(int)’:
/usr/include/ignition/transport/SubscriptionHandler.hh:139:20: error: ‘_cb’ was not declared in this scope
         this->cb = _cb;
                    ^
/usr/include/ignition/transport/SubscriptionHandler.hh: In member function ‘bool ignition::transport::SubscriptionHandler<T>::RunLocalCallback(const int&) const’:
/usr/include/ignition/transport/SubscriptionHandler.hh:151:16: error: ‘msgPtr’ does not name a type
           auto msgPtr = google::protobuf::internal::down_cast<const T*>(&_msg);
                ^
/usr/include/ignition/transport/SubscriptionHandler.hh:154:21: error: ‘msgPtr’ was not declared in this scope
           this->cb(*msgPtr);
                     ^
In file included from /usr/include/ignition/transport.hh:9:0,
                 from publisher.cc:8:
/usr/include/ignition/transport/Node.hh: At global scope:
/usr/include/ignition/transport/Node.hh:196:34: error: ‘ProtoMsg’ does not name a type
                            const ProtoMsg &_msg);
                                  ^
/usr/include/ignition/transport/Node.hh:204:34: error: ‘ProtoMsg’ does not name a type
                            const ProtoMsg &_msg);
                                  ^
/usr/include/ignition/transport/Node.hh:233:16: error: ‘std::function’ has not been declared
           std::function<void(const T &_msg)> &_cb)
                ^
/usr/include/ignition/transport/Node.hh:233:24: error: expected ‘,’ or ‘...’ before ‘<’ token
           std::function<void(const T &_msg)> &_cb)
                        ^
/usr/include/ignition/transport/Node.hh:398:14: error: ‘std::function’ has not been declared
         std::function<void(const T1 &_req, T2 &_rep, bool &_result)> &_cb,
              ^
/usr/include/ignition/transport/Node.hh:398:22: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::function<void(const T1 &_req, T2 &_rep, bool &_result)> &_cb,
                      ^
/usr/include/ignition/transport/Node.hh:459:14: error: ‘std::function’ has not been declared
         std::function<void(T &_rep, bool &_result)> &_cb,
              ^
/usr/include/ignition/transport/Node.hh:459:22: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::function<void(T &_rep, bool &_result)> &_cb,
                      ^
/usr/include/ignition/transport/Node.hh:483:14: error: ‘std::function’ has not been declared
         std::function<void(const T &_req)> &_cb,
              ^
/usr/include/ignition/transport/Node.hh:483:22: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::function<void(const T &_req)> &_cb,
                      ^
/usr/include/ignition/transport/Node.hh:481:41: error: ‘template<class T> bool ignition::transport::Node::Advertise(const string&, int)’ cannot be overloaded
       public: template<typename T> bool Advertise(
                                         ^
/usr/include/ignition/transport/Node.hh:457:41: error: with ‘template<class T> bool ignition::transport::Node::Advertise(const string&, int)’
       public: template<typename T> bool Advertise(
                                         ^
/usr/include/ignition/transport/Node.hh:646:14: error: ‘std::function’ has not been declared
         std::function<void(const T2 &_rep, const bool _result)> &_cb)
              ^
/usr/include/ignition/transport/Node.hh:646:22: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::function<void(const T2 &_rep, const bool _result)> &_cb)
                      ^
/usr/include/ignition/transport/Node.hh:730:14: error: ‘std::function’ has not been declared
         std::function<void(const T &_rep, const bool _result)> &_cb)
              ^
/usr/include/ignition/transport/Node.hh:730:22: error: expected ‘,’ or ‘...’ before ‘<’ token
         std::function<void(const T &_rep, const bool _result)> &_cb)
                      ^
/usr/include/ignition/transport/Node.hh:966:21: error: ‘unordered_set’ in namespace ‘std’ does not name a template type
       private: std::unordered_set<std::string> &TopicsAdvertised() const;
                     ^
/usr/include/ignition/transport/Node.hh:970:21: error: ‘unordered_set’ in namespace ‘std’ does not name a template type
       private: std::unordered_set<std::string> &TopicsSubscribed() const;
                     ^
/usr/include/ignition/transport/Node.hh:974:21: error: ‘unordered_set’ in namespace ‘std’ does not name a template type
       private: std::unordered_set<std::string> &SrvsAdvertised() const;
                     ^
/usr/include/ignition/transport/Node.hh:986:41: error: ‘ProtoMsg’ does not name a type
                                   const ProtoMsg &_msg);
                                         ^
/usr/include/ignition/transport/Node.hh:990:23: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type
       protected: std::unique_ptr<transport::NodePrivate> dataPtr;
                       ^
/usr/include/ignition/transport/Node.hh: In member function ‘ignition::transport::Node::PublisherId ignition::transport::Node::Advertise(const string&, const string&, const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:159:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
         ^
/usr/include/ignition/transport/Node.hh:159:25: error: ‘recursive_mutex’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                         ^
/usr/include/ignition/transport/Node.hh:159:66: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                  ^
/usr/include/ignition/transport/Node.hh:159:71: error: ‘lk’ was not declared in this scope
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                       ^
/usr/include/ignition/transport/Node.hh:162:15: error: ‘class ignition::transport::Node’ has no member named ‘TopicsAdvertised’
         this->TopicsAdvertised().insert(fullyQualifiedTopic);
               ^
/usr/include/ignition/transport/Node.hh:171:30: error: ‘class ignition::transport::NodeShared’ has no member named ‘msgDiscovery’
         if (!this->Shared()->msgDiscovery->Advertise(publisher))
                              ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Subscribe(const string&, void (*)(const T&))’:
/usr/include/ignition/transport/Node.hh:217:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T &)> f = [_cb](const T & _internalMsg)
         ^
/usr/include/ignition/transport/Node.hh:217:23: error: expected primary-expression before ‘void’
         std::function<void(const T &)> f = [_cb](const T & _internalMsg)
                       ^
/usr/include/ignition/transport/Node.hh:222:43: error: ‘f’ was not declared in this scope
         return this->Subscribe<T>(_topic, f);
                                           ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Subscribe(const string&, int)’:
/usr/include/ignition/transport/Node.hh:244:9: error: ‘shared_ptr’ is not a member of ‘std’
         std::shared_ptr<SubscriptionHandler<T>> subscrHandlerPtr(
         ^
/usr/include/ignition/transport/Node.hh:244:46: error: spurious ‘>>’, use ‘>’ to terminate a template argument list
         std::shared_ptr<SubscriptionHandler<T>> subscrHandlerPtr(
                                              ^
/usr/include/ignition/transport/Node.hh:244:49: error: expected primary-expression before ‘subscrHandlerPtr’
         std::shared_ptr<SubscriptionHandler<T>> subscrHandlerPtr(
                                                 ^
/usr/include/ignition/transport/Node.hh:248:9: error: ‘subscrHandlerPtr’ was not declared in this scope
         subscrHandlerPtr->SetCallback(_cb);
         ^
/usr/include/ignition/transport/Node.hh:248:39: error: ‘_cb’ was not declared in this scope
         subscrHandlerPtr->SetCallback(_cb);
                                       ^
/usr/include/ignition/transport/Node.hh:250:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
         ^
/usr/include/ignition/transport/Node.hh:250:25: error: ‘recursive_mutex’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                         ^
/usr/include/ignition/transport/Node.hh:250:66: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                  ^
/usr/include/ignition/transport/Node.hh:250:71: error: there are no arguments to ‘lk’ that depend on a template parameter, so a declaration of ‘lk’ must be available [-fpermissive]
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                       ^
/usr/include/ignition/transport/Node.hh:260:15: error: ‘class ignition::transport::Node’ has no member named ‘TopicsSubscribed’
         this->TopicsSubscribed().insert(fullyQualifiedTopic);
               ^
/usr/include/ignition/transport/Node.hh:263:30: error: ‘class ignition::transport::NodeShared’ has no member named ‘msgDiscovery’
         if (!this->Shared()->msgDiscovery->Discover(fullyQualifiedTopic))
                              ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Subscribe(const string&, void (C::*)(const T&), C*)’:
/usr/include/ignition/transport/Node.hh:287:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T &)> f = [_cb, _obj](const T & _internalMsg)
         ^
/usr/include/ignition/transport/Node.hh:287:23: error: expected primary-expression before ‘void’
         std::function<void(const T &)> f = [_cb, _obj](const T & _internalMsg)
                       ^
/usr/include/ignition/transport/Node.hh:293:43: error: ‘f’ was not declared in this scope
         return this->Subscribe<T>(_topic, f);
                                           ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (*)(const T1&, T2&, bool&), const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:325:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T1 &, T2 &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:325:23: error: expected primary-expression before ‘void’
         std::function<void(const T1 &, T2 &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:331:48: error: ‘f’ was not declared in this scope
         return this->Advertise<T1, T2>(_topic, f, _options);
                                                ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (*)(T&, bool&), const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:350:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:350:23: error: expected primary-expression before ‘void’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:356:56: error: ‘f’ was not declared in this scope
         return this->Advertise<msgs::Empty, T>(_topic, f, _options);
                                                        ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (*)(const T&), const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:374:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:374:23: error: expected primary-expression before ‘void’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:381:66: error: ‘f’ was not declared in this scope
         return this->Advertise<T, ignition::msgs::Empty>(_topic, f, _options);
                                                                  ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, int)’:
/usr/include/ignition/transport/Node.hh:410:9: error: ‘shared_ptr’ is not a member of ‘std’
         std::shared_ptr<RepHandler<T1, T2>> repHandlerPtr(
         ^
/usr/include/ignition/transport/Node.hh:410:42: error: spurious ‘>>’, use ‘>’ to terminate a template argument list
         std::shared_ptr<RepHandler<T1, T2>> repHandlerPtr(
                                          ^
/usr/include/ignition/transport/Node.hh:410:45: error: expected primary-expression before ‘repHandlerPtr’
         std::shared_ptr<RepHandler<T1, T2>> repHandlerPtr(
                                             ^
/usr/include/ignition/transport/Node.hh:414:9: error: ‘repHandlerPtr’ was not declared in this scope
         repHandlerPtr->SetCallback(_cb);
         ^
/usr/include/ignition/transport/Node.hh:414:36: error: ‘_cb’ was not declared in this scope
         repHandlerPtr->SetCallback(_cb);
                                    ^
/usr/include/ignition/transport/Node.hh:416:9: error: ‘lock_guard’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
         ^
/usr/include/ignition/transport/Node.hh:416:25: error: ‘recursive_mutex’ is not a member of ‘std’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                         ^
/usr/include/ignition/transport/Node.hh:416:66: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                  ^
/usr/include/ignition/transport/Node.hh:416:71: error: there are no arguments to ‘lk’ that depend on a template parameter, so a declaration of ‘lk’ must be available [-fpermissive]
         std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                       ^
/usr/include/ignition/transport/Node.hh:419:15: error: ‘class ignition::transport::Node’ has no member named ‘SrvsAdvertised’
         this->SrvsAdvertised().insert(fullyQualifiedTopic);
               ^
/usr/include/ignition/transport/Node.hh:432:52: error: ‘_options’ was not declared in this scope
           this->Shared()->pUuid, this->NodeUuid(), _options.Scope(),
                                                    ^
/usr/include/ignition/transport/Node.hh:435:30: error: ‘class ignition::transport::NodeShared’ has no member named ‘srvDiscovery’
         if (!this->Shared()->srvDiscovery->Advertise(publisher))
                              ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, int)’:
/usr/include/ignition/transport/Node.hh:462:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:462:23: error: expected primary-expression before ‘void’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:468:56: error: ‘f’ was not declared in this scope
         return this->Advertise<msgs::Empty, T>(_topic, f, _options);
                                                        ^
/usr/include/ignition/transport/Node.hh:468:59: error: ‘_options’ was not declared in this scope
         return this->Advertise<msgs::Empty, T>(_topic, f, _options);
                                                           ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, int)’:
/usr/include/ignition/transport/Node.hh:486:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:486:23: error: expected primary-expression before ‘void’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:493:66: error: ‘f’ was not declared in this scope
         return this->Advertise<T, ignition::msgs::Empty>(_topic, f, _options);
                                                                  ^
/usr/include/ignition/transport/Node.hh:493:69: error: ‘_options’ was not declared in this scope
         return this->Advertise<T, ignition::msgs::Empty>(_topic, f, _options);
                                                                     ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (C::*)(const T1&, T2&, bool&), C*, const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:515:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T1 &, T2 &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:515:23: error: expected primary-expression before ‘void’
         std::function<void(const T1 &, T2 &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:525:48: error: ‘f’ was not declared in this scope
         return this->Advertise<T1, T2>(_topic, f, _options);
                                                ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (C::*)(T&, bool&), C*, const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:546:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:546:23: error: expected primary-expression before ‘void’
         std::function<void(const msgs::Empty &, T &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:555:56: error: ‘f’ was not declared in this scope
         return this->Advertise<msgs::Empty, T>(_topic, f, _options);
                                                        ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Advertise(const string&, void (C::*)(const T&), C*, const ignition::transport::AdvertiseOptions&)’:
/usr/include/ignition/transport/Node.hh:575:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
         ^
/usr/include/ignition/transport/Node.hh:575:23: error: expected primary-expression before ‘void’
         std::function<void(const T &, ignition::msgs::Empty &, bool &)> f =
                       ^
/usr/include/ignition/transport/Node.hh:584:66: error: ‘f’ was not declared in this scope
         return this->Advertise<T, ignition::msgs::Empty>(_topic, f, _options);
                                                                  ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, const T1&, void (*)(const T2&, bool))’:
/usr/include/ignition/transport/Node.hh:606:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T2 &, const bool)> f =
         ^
/usr/include/ignition/transport/Node.hh:606:23: error: expected primary-expression before ‘void’
         std::function<void(const T2 &, const bool)> f =
                       ^
/usr/include/ignition/transport/Node.hh:612:52: error: ‘f’ was not declared in this scope
         return this->Request<T1, T2>(_topic, _req, f);
                                                    ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, const T1&, int)’:
/usr/include/ignition/transport/Node.hh:657:9: error: ‘IRepHandlerPtr’ was not declared in this scope
         IRepHandlerPtr repHandler;
         ^
/usr/include/ignition/transport/Node.hh:659:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
           ^
/usr/include/ignition/transport/Node.hh:659:27: error: ‘recursive_mutex’ is not a member of ‘std’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                           ^
/usr/include/ignition/transport/Node.hh:659:68: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                    ^
/usr/include/ignition/transport/Node.hh:659:73: error: there are no arguments to ‘lk’ that depend on a template parameter, so a declaration of ‘lk’ must be available [-fpermissive]
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                         ^
/usr/include/ignition/transport/Node.hh:662:15: error: ‘repHandler’ was not declared in this scope
               repHandler);
               ^
/usr/include/ignition/transport/Node.hh:671:11: error: ‘repHandler’ was not declared in this scope
           repHandler->RunLocalCallback(_req, rep, result);
           ^
/usr/include/ignition/transport/Node.hh:678:9: error: ‘shared_ptr’ is not a member of ‘std’
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
         ^
/usr/include/ignition/transport/Node.hh:678:42: error: spurious ‘>>’, use ‘>’ to terminate a template argument list
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
                                          ^
/usr/include/ignition/transport/Node.hh:678:45: error: expected primary-expression before ‘reqHandlerPtr’
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
                                             ^
/usr/include/ignition/transport/Node.hh:682:9: error: ‘reqHandlerPtr’ was not declared in this scope
         reqHandlerPtr->SetMessage(_req);
         ^
/usr/include/ignition/transport/Node.hh:685:36: error: ‘_cb’ was not declared in this scope
         reqHandlerPtr->SetCallback(_cb);
                                    ^
/usr/include/ignition/transport/Node.hh:688:11: error: ‘lock_guard’ is not a member of ‘std’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
           ^
/usr/include/ignition/transport/Node.hh:688:27: error: ‘recursive_mutex’ is not a member of ‘std’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                           ^
/usr/include/ignition/transport/Node.hh:688:68: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                    ^
/usr/include/ignition/transport/Node.hh:688:73: error: there are no arguments to ‘lk’ that depend on a template parameter, so a declaration of ‘lk’ must be available [-fpermissive]
           std::lock_guard<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                         ^
/usr/include/ignition/transport/Node.hh:695:11: error: ‘SrvAddresses_M’ was not declared in this scope
           SrvAddresses_M addresses;
           ^
/usr/include/ignition/transport/Node.hh:696:31: error: ‘class ignition::transport::NodeShared’ has no member named ‘srvDiscovery’
           if (this->Shared()->srvDiscovery->Publishers(
                               ^
/usr/include/ignition/transport/Node.hh:697:34: error: ‘addresses’ was not declared in this scope
             fullyQualifiedTopic, addresses))
                                  ^
/usr/include/ignition/transport/Node.hh:705:34: error: ‘class ignition::transport::NodeShared’ has no member named ‘srvDiscovery’
             if (!this->Shared()->srvDiscovery->Discover(fullyQualifiedTopic))
                                  ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, int)’:
/usr/include/ignition/transport/Node.hh:733:43: error: ‘_cb’ was not declared in this scope
         return this->Request(_topic, req, _cb);
                                           ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, const T1&, void (C::*)(const T2&, bool), C*)’:
/usr/include/ignition/transport/Node.hh:753:9: error: ‘function’ is not a member of ‘std’
         std::function<void(const T2 &, const bool)> f =
         ^
/usr/include/ignition/transport/Node.hh:753:23: error: expected primary-expression before ‘void’
         std::function<void(const T2 &, const bool)> f =
                       ^
/usr/include/ignition/transport/Node.hh:761:52: error: ‘f’ was not declared in this scope
         return this->Request<T1, T2>(_topic, _req, f);
                                                    ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, const T1&, const unsigned int&, T2&, bool&)’:
/usr/include/ignition/transport/Node.hh:808:9: error: ‘shared_ptr’ is not a member of ‘std’
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
         ^
/usr/include/ignition/transport/Node.hh:808:42: error: spurious ‘>>’, use ‘>’ to terminate a template argument list
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
                                          ^
/usr/include/ignition/transport/Node.hh:808:45: error: expected primary-expression before ‘reqHandlerPtr’
         std::shared_ptr<ReqHandler<T1, T2>> reqHandlerPtr(
                                             ^
/usr/include/ignition/transport/Node.hh:812:9: error: ‘reqHandlerPtr’ was not declared in this scope
         reqHandlerPtr->SetMessage(_req);
         ^
/usr/include/ignition/transport/Node.hh:814:9: error: ‘unique_lock’ is not a member of ‘std’
         std::unique_lock<std::recursive_mutex> lk(this->Shared()->mutex);
         ^
/usr/include/ignition/transport/Node.hh:814:26: error: ‘recursive_mutex’ is not a member of ‘std’
         std::unique_lock<std::recursive_mutex> lk(this->Shared()->mutex);
                          ^
/usr/include/ignition/transport/Node.hh:814:67: error: ‘class ignition::transport::NodeShared’ has no member named ‘mutex’
         std::unique_lock<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                   ^
/usr/include/ignition/transport/Node.hh:814:72: error: there are no arguments to ‘lk’ that depend on a template parameter, so a declaration of ‘lk’ must be available [-fpermissive]
         std::unique_lock<std::recursive_mutex> lk(this->Shared()->mutex);
                                                                        ^
/usr/include/ignition/transport/Node.hh:817:9: error: ‘IRepHandlerPtr’ was not declared in this scope
         IRepHandlerPtr repHandler;
         ^
/usr/include/ignition/transport/Node.hh:819:51: error: ‘repHandler’ was not declared in this scope
           T1().GetTypeName(), T2().GetTypeName(), repHandler))
                                                   ^
/usr/include/ignition/transport/Node.hh:831:9: error: ‘SrvAddresses_M’ was not declared in this scope
         SrvAddresses_M addresses;
         ^
/usr/include/ignition/transport/Node.hh:832:29: error: ‘class ignition::transport::NodeShared’ has no member named ‘srvDiscovery’
         if (this->Shared()->srvDiscovery->Publishers(
                             ^
/usr/include/ignition/transport/Node.hh:833:32: error: ‘addresses’ was not declared in this scope
           fullyQualifiedTopic, addresses))
                                ^
/usr/include/ignition/transport/Node.hh:841:32: error: ‘class ignition::transport::NodeShared’ has no member named ‘srvDiscovery’
           if (!this->Shared()->srvDiscovery->Discover(fullyQualifiedTopic))
                                ^
/usr/include/ignition/transport/Node.hh:851:50: error: ‘lk’ was not declared in this scope
         bool executed = reqHandlerPtr->WaitUntil(lk, _timeout);
                                                  ^
/usr/include/ignition/transport/Node.hh: In member function ‘bool ignition::transport::Node::Request(const string&, const T&)’:
/usr/include/ignition/transport/Node.hh:904:11: error: ‘function’ is not a member of ‘std’
           std::function<void(const ignition::msgs::Empty &, const bool)> f =
           ^
/usr/include/ignition/transport/Node.hh:904:25: error: expected primary-expression before ‘void’
           std::function<void(const ignition::msgs::Empty &, const bool)> f =
                         ^
/usr/include/ignition/transport/Node.hh:909:72: error: ‘f’ was not declared in this scope
           return this->Request<T, ignition::msgs::Empty>(_topic, _req, f);
                                                                        ^
publisher.cc: At global scope:
publisher.cc:11:13: error: ‘atomic’ in namespace ‘std’ does not name a template type
 static std::atomic<bool> g_terminatePub(false);
             ^
publisher.cc: In function ‘void signal_handler(int)’:
publisher.cc:20:5: error: ‘g_terminatePub’ was not declared in this scope
     g_terminatePub = true;
     ^
publisher.cc: In function ‘int main(int, char**)’:
publisher.cc:34:8: error: ‘pub’ does not name a type
   auto pub = node.Advertise<ignition::msgs::StringMsg>(topic);
        ^
publisher.cc:35:8: error: ‘pub’ was not declared in this scope
   if (!pub)
        ^
publisher.cc:46:11: error: ‘g_terminatePub’ was not declared in this scope
   while (!g_terminatePub)
           ^
publisher.cc:48:10: error: ‘pub’ was not declared in this scope
     if (!pub.Publish(msg))
          ^
publisher.cc:52:10: error: ‘std::this_thread’ has not been declared
     std::this_thread::sleep_for(std::chrono::milliseconds(1000));
          ^
publisher.cc:52:38: error: ‘std::chrono’ has not been declared
     std::this_thread::sleep_for(std::chrono::milliseconds(1000));
                                      ^
make: *** [publisher] Error 1
