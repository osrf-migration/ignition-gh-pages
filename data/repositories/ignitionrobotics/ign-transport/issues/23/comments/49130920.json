{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23/comments/49130920.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/23#comment-49130920"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Consider flatbuffers"}, "content": {"raw": "If someone is reading this in 2018, I recently found several  projects that implement a subset of the protobuf protocol but with a more lightweight implementation: \n\n* https://github.com/protobuf-c/protobuf-c\n* https://github.com/google/upb\n* https://github.com/nanopb/nanopb\n\nAnother related topic is the usage of [Arena Allocators](https://developers.google.com/protocol-buffers/docs/reference/arenas) to reduce the cost related to memory allocation during protobuf serialization/deserialization. Unfortunately as of late 2018, this technique is not really effective because the open source version of protobuf does not support allocating the memory related to the strings in the arena, see https://github.com/protocolbuffers/protobuf/issues/4327#issuecomment-367863923 and https://github.com/protocolbuffers/protobuf/issues/1896 .", "markup": "markdown", "html": "<p>If someone is reading this in 2018, I recently found several  projects that implement a subset of the protobuf protocol but with a more lightweight implementation: </p>\n<ul>\n<li><a href=\"https://github.com/protobuf-c/protobuf-c\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/protobuf-c/protobuf-c</a></li>\n<li><a href=\"https://github.com/google/upb\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/google/upb</a></li>\n<li><a href=\"https://github.com/nanopb/nanopb\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/nanopb/nanopb</a></li>\n</ul>\n<p>Another related topic is the usage of <a data-is-external-link=\"true\" href=\"https://developers.google.com/protocol-buffers/docs/reference/arenas\" rel=\"nofollow\">Arena Allocators</a> to reduce the cost related to memory allocation during protobuf serialization/deserialization. Unfortunately as of late 2018, this technique is not really effective because the open source version of protobuf does not support allocating the memory related to the strings in the arena, see <a href=\"https://github.com/protocolbuffers/protobuf/issues/4327#issuecomment-367863923\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/protocolbuffers/protobuf/issues/4327#issuecomment-367863923</a> and <a href=\"https://github.com/protocolbuffers/protobuf/issues/1896\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/protocolbuffers/protobuf/issues/1896</a> .</p>", "type": "rendered"}, "created_on": "2018-11-26T22:18:16.665837+00:00", "user": {"display_name": "Silvio Traversaro", "uuid": "{34f404cb-5642-4f27-a032-e04c7143d776}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D"}, "html": {"href": "https://bitbucket.org/%7B34f404cb-5642-4f27-a032-e04c7143d776%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6/578caaa1-056c-45a2-8bf9-bee94c3bebef/128"}}, "nickname": "traversaro", "type": "user", "account_id": "557058:e1c3e6a0-9a64-4e5f-a668-feebc191c5b6"}, "updated_on": "2018-11-26T22:19:01.909508+00:00", "type": "issue_comment", "id": 49130920}