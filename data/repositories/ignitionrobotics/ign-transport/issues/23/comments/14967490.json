{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23/comments/14967490.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/23#comment-14967490"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Consider flatbuffers"}, "content": {"raw": "Interesting, thanks Andrew.\n\nTogether with flatbuffers (by google) it exists something called Cap'n Proto (by protocolbuffer former developer) which seems to follow the same concept. I found useful the reading of:\n\n  * https://capnproto.org/\n  * https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html \n\nI get the impression that the good old protocol buffers have been deprecated by this 'zero copy serialization' projects which are also worried about one of the biggest bottlenecks, the memory access. ", "markup": "markdown", "html": "<p>Interesting, thanks Andrew.</p>\n<p>Together with flatbuffers (by google) it exists something called Cap'n Proto (by protocolbuffer former developer) which seems to follow the same concept. I found useful the reading of:</p>\n<ul>\n<li><a href=\"https://capnproto.org/\" rel=\"nofollow\" class=\"ap-connect-link\">https://capnproto.org/</a></li>\n<li><a href=\"https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html\" rel=\"nofollow\" class=\"ap-connect-link\">https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html</a> </li>\n</ul>\n<p>I get the impression that the good old protocol buffers have been deprecated by this 'zero copy serialization' projects which are also worried about one of the biggest bottlenecks, the memory access. </p>", "type": "rendered"}, "created_on": "2015-01-20T17:31:28.149096+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-01-20T19:08:17.219333+00:00", "type": "issue_comment", "id": 14967490}