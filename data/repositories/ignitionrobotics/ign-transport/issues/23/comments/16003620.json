{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23/comments/16003620.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/23#comment-16003620"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Consider flatbuffers"}, "content": {"raw": "I've created a small test of azmq+flatbuffers which may be interesting to look at. The API isn't at the quality level I would recommend for this project, but it illustrates that the two seem to work together pretty easily.\n\nhttps://github.com/ahundt/robone/blob/develop/src/AzmqFlatbufferTest.cpp\n\n\nAnother interesting thing about flatc and flatbuffers is there is an implementation to read/write directly to files in both binary and json formats. That could make it easy to use one tool/protocol for the \"holy grail\" data format combo of human and machine config files, network communication, IPC, and shared memory. Also of note is in-memory flatbuffers can be modified and accessed in place.", "markup": "markdown", "html": "<p>I've created a small test of azmq+flatbuffers which may be interesting to look at. The API isn't at the quality level I would recommend for this project, but it illustrates that the two seem to work together pretty easily.</p>\n<p><a href=\"https://github.com/ahundt/robone/blob/develop/src/AzmqFlatbufferTest.cpp\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/ahundt/robone/blob/develop/src/AzmqFlatbufferTest.cpp</a></p>\n<p>Another interesting thing about flatc and flatbuffers is there is an implementation to read/write directly to files in both binary and json formats. That could make it easy to use one tool/protocol for the \"holy grail\" data format combo of human and machine config files, network communication, IPC, and shared memory. Also of note is in-memory flatbuffers can be modified and accessed in place.</p>", "type": "rendered"}, "created_on": "2015-02-28T21:26:26.844875+00:00", "user": {"display_name": "Andrew Hundt", "uuid": "{1e508588-c010-4693-87e5-4923df91390d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B1e508588-c010-4693-87e5-4923df91390d%7D"}, "html": {"href": "https://bitbucket.org/%7B1e508588-c010-4693-87e5-4923df91390d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/fb975596131ce08ea7e7472f09b8209dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAH-1.png"}}, "nickname": "ahundt", "type": "user", "account_id": "557058:f565cbf4-e097-4b3f-b4db-4889856f7417"}, "updated_on": null, "type": "issue_comment", "id": 16003620}