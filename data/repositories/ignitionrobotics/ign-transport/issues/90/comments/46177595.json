{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/90/comments/46177595.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/90#comment-46177595"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/90.json"}}, "type": "issue", "id": 90, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "Spurious crashes from the ign log record tool"}, "content": {"raw": "@mxgrey Do you happen to have a link to a job where this crash happens? I haven't been able to reproduce it locally even  using colcon's `--retest-until-fail 1000`.\n\nIf there isn't a known way to reproduce it I would vote to close this issue when pull request #317 is merged.\n\n`std::bad_function_call` is only thrown by `std::function`. Starting from `ign log record` there are only two paths to `std::function`:\n\n1.  the `Discovery` class instance used by `Recorder`\n2. calls to `SubscribeRaw()`\n\nI didn't see a way to get an unset `std::function` in `SubscribeRaw()`, but there is a case in `Discovery::UpdateActivity()`. It requires a publisher to be discovered and then disappear without sending a `ByeType` message. I could see that happening on a developer machine where another process could be killed while a test is running, but would be surprised to see it on CI.", "markup": "markdown", "html": "<p>@mxgrey Do you happen to have a link to a job where this crash happens? I haven't been able to reproduce it locally even  using colcon's <code>--retest-until-fail 1000</code>.</p>\n<p>If there isn't a known way to reproduce it I would vote to close this issue when <a href=\"#!/ignitionrobotics/ign-transport/pull-requests/317/check-callback-is-valid-before-calling-it\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #317</a> is merged.</p>\n<p><code>std::bad_function_call</code> is only thrown by <code>std::function</code>. Starting from <code>ign log record</code> there are only two paths to <code>std::function</code>:</p>\n<ol>\n<li>the <code>Discovery</code> class instance used by <code>Recorder</code></li>\n<li>calls to <code>SubscribeRaw()</code></li>\n</ol>\n<p>I didn't see a way to get an unset <code>std::function</code> in <code>SubscribeRaw()</code>, but there is a case in <code>Discovery::UpdateActivity()</code>. It requires a publisher to be discovered and then disappear without sending a <code>ByeType</code> message. I could see that happening on a developer machine where another process could be killed while a test is running, but would be surprised to see it on CI.</p>", "type": "rendered"}, "created_on": "2018-06-12T23:19:30.823331+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": null, "type": "issue_comment", "id": 46177595}