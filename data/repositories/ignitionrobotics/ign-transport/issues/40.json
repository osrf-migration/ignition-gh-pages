{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/40/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/40.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/40/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/40/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/40/support-service-responses-beyond-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/40/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Support service responses beyond the service callback", "component": null, "votes": 1, "watches": 1, "content": {"raw": "The current implementation only allows services to send a response directly from the callback function.\n\nBut there might be use cases when the service provider wants to, for example, put the request in a queue to be processed later. In this case, we'd want the response to be sent only after the request is fully processed.\n\nThis could be achieved with something like [ROS actions](http://wiki.ros.org/actionlib).\n\nAnother idea (which might not make sense) is to let the user \"end\" the response anywhere in the code, calling `response.end()`, like for [http requests](https://nodejs.org/api/http.html#http_response_end_data_encoding_callback).", "markup": "markdown", "html": "<p>The current implementation only allows services to send a response directly from the callback function.</p>\n<p>But there might be use cases when the service provider wants to, for example, put the request in a queue to be processed later. In this case, we'd want the response to be sent only after the request is fully processed.</p>\n<p>This could be achieved with something like <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/actionlib\" rel=\"nofollow\">ROS actions</a>.</p>\n<p>Another idea (which might not make sense) is to let the user \"end\" the response anywhere in the code, calling <code>response.end()</code>, like for <a data-is-external-link=\"true\" href=\"https://nodejs.org/api/http.html#http_response_end_data_encoding_callback\" rel=\"nofollow\">http requests</a>.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-05-09T22:45:02.520482+00:00", "milestone": null, "updated_on": "2018-07-30T17:45:27.013986+00:00", "type": "issue", "id": 40}