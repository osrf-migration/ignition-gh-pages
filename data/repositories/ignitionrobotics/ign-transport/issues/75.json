{"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/75/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/75.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/75/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/75/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/75/consider-using-new-instead-of-malloc"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/75/vote"}}, "reporter": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "title": "Consider using new instead of malloc", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I noticed that in the `Node::Publish` function, we [allocate an array with malloc](#!/ignitionrobotics/ign-transport/src/63a65837af55a6f85f9579cd4e2395feeda31909/src/Node.cc?at=ign-transport4&fileviewer=file-view-default#Node.cc-290) and then [deallocate it with free](#!/ignitionrobotics/ign-transport/src/63a65837af55a6f85f9579cd4e2395feeda31909/src/Node.cc?at=ign-transport4&fileviewer=file-view-default#Node.cc-301).\r\n\r\nThis isn't wrong in any technical sense, but it may be surprising to use `malloc` and `free` instead of `new[]` and `delete[]` in a C++ code base.\r\n\r\nThere aren't any bad side effects of using `malloc` in this case, because it's just allocating a `char*` which doesn't have a constructor, but as a developer I'd find it surprising that I need to call `free(~)` instead of `delete[]` on an object that was allocated within a C++ code base. This could create some maintenance stumbling blocks down the road if we do some refactoring and forget that the array was allocated with `malloc` instead of `new`.", "markup": "markdown", "html": "<p>I noticed that in the <code>Node::Publish</code> function, we <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/src/63a65837af55a6f85f9579cd4e2395feeda31909/src/Node.cc?at=ign-transport4&amp;fileviewer=file-view-default#Node.cc-290\" rel=\"nofollow\">allocate an array with malloc</a> and then <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/src/63a65837af55a6f85f9579cd4e2395feeda31909/src/Node.cc?at=ign-transport4&amp;fileviewer=file-view-default#Node.cc-301\" rel=\"nofollow\">deallocate it with free</a>.</p>\n<p>This isn't wrong in any technical sense, but it may be surprising to use <code>malloc</code> and <code>free</code> instead of <code>new[]</code> and <code>delete[]</code> in a C++ code base.</p>\n<p>There aren't any bad side effects of using <code>malloc</code> in this case, because it's just allocating a <code>char*</code> which doesn't have a constructor, but as a developer I'd find it surprising that I need to call <code>free(~)</code> instead of <code>delete[]</code> on an object that was allocated within a C++ code base. This could create some maintenance stumbling blocks down the road if we do some refactoring and forget that the array was allocated with <code>malloc</code> instead of <code>new</code>.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-01-11T19:30:33.215990+00:00", "milestone": null, "updated_on": "2018-03-28T08:47:05.382556+00:00", "type": "issue", "id": 75}