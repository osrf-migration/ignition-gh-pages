{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/17/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/17/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/17/communication-problem-when-multiple"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/17/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "Communication problem when multiple network interfaces are up and using Scope::Host", "component": null, "votes": 0, "watches": 1, "content": {"raw": "This problem is located in the Discovery code. When binding to a socket for receiving discovery updates we use the function NetUtils::DetermineHost(), which works as expected. However, when sending discovery updates, the source IP address is chosen by the kernel and sometimes the IP address is different than the IP used in the bind(). This causes a problem when using Scope::Host because the IPs of sender/receiver don't match and we conclude the message comes from a different host discarding it.\r\n\r\nBranch 'multicast' solves this issue and uses multicast instead of broadcast for the discovery messages.", "markup": "markdown", "html": "<p>This problem is located in the Discovery code. When binding to a socket for receiving discovery updates we use the function NetUtils::DetermineHost(), which works as expected. However, when sending discovery updates, the source IP address is chosen by the kernel and sometimes the IP address is different than the IP used in the bind(). This causes a problem when using Scope::Host because the IPs of sender/receiver don't match and we conclude the message comes from a different host discarding it.</p>\n<p>Branch 'multicast' solves this issue and uses multicast instead of broadcast for the discovery messages.</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2014-10-06T19:43:19.593450+00:00", "milestone": null, "updated_on": "2015-01-03T18:06:27.104389+00:00", "type": "issue", "id": 17}