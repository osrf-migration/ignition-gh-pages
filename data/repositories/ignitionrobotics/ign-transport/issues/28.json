{"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "links": {"attachments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/28/attachments_page=1.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/28.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/28/watch"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/28/comments_page=1.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/28/request-fails-sporadically"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/issues/28/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "`request()` fails sporadically", "component": null, "votes": 0, "watches": 1, "content": {"raw": "While running multiple stress tests in parallel doing request/response I found that sometimes `Request()` fails. \r\n\r\nIt fails at the beginning of the test and successive calls to `request()` on the same topic continue failing.\r\n\r\nThis bug was introduced in the `NodeShared` constructor. `NodeShared` is the object that creates the `Discovery` object. Once the discovery has been created, `NodeShared` registers the callbacks to receive discovery notifications.\r\n\r\nThe problem appears if the discovery learns the information about the service to be requested before `NodeShared` registers its discovery callbacks. During `Request()`, the address of the node that offers the service is known but the zmq socket of the requester is not connected to the zmq socket of the responser. This connection occurs in the service callback that `NodeShared` missed.\r\n\r\nOne possible solution is to decouple the object discovery creation from its activation. `NodeShared` can instantiate the discovery object, register its callbacks, and then, start the service.", "markup": "markdown", "html": "<p>While running multiple stress tests in parallel doing request/response I found that sometimes <code>Request()</code> fails. </p>\n<p>It fails at the beginning of the test and successive calls to <code>request()</code> on the same topic continue failing.</p>\n<p>This bug was introduced in the <code>NodeShared</code> constructor. <code>NodeShared</code> is the object that creates the <code>Discovery</code> object. Once the discovery has been created, <code>NodeShared</code> registers the callbacks to receive discovery notifications.</p>\n<p>The problem appears if the discovery learns the information about the service to be requested before <code>NodeShared</code> registers its discovery callbacks. During <code>Request()</code>, the address of the node that offers the service is known but the zmq socket of the requester is not connected to the zmq socket of the responser. This connection occurs in the service callback that <code>NodeShared</code> missed.</p>\n<p>One possible solution is to decouple the object discovery creation from its activation. <code>NodeShared</code> can instantiate the discovery object, register its callbacks, and then, start the service.</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-03-01T05:35:54.697300+00:00", "milestone": null, "updated_on": "2015-03-03T05:39:32.478225+00:00", "type": "issue", "id": 28}