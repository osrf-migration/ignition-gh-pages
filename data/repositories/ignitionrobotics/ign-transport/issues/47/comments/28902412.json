{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/47/comments/28902412.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/47#comment-28902412"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "WaitForSubscribers in ign.cc"}, "content": {"raw": "1. Thanks. I didn't notice that ```std::vector<std::string> AdvertisedTopics() const;``` but ```std::unordered_set<std::string> &TopicsAdvertised() const;```. Why do you use different data structure for this function?", "markup": "markdown", "html": "<ol>\n<li>Thanks. I didn't notice that <code>std::vector&lt;std::string&gt; AdvertisedTopics() const;</code> but <code>std::unordered_set&lt;std::string&gt; &amp;TopicsAdvertised() const;</code>. Why do you use different data structure for this function?</li>\n</ol>", "type": "rendered"}, "created_on": "2016-06-30T16:17:29.734744+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": null, "type": "issue_comment", "id": 28902412}