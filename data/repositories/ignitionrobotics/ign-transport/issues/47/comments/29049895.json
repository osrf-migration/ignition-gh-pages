{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/47/comments/29049895.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/issues/47#comment-29049895"}}, "issue": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "title": "WaitForSubscribers in ign.cc"}, "content": {"raw": "3 . This is expected because we're capturing the CTRL-C in our signal handler and the only thing we're doing is setting a boolean variable `g_terminatePub` to true. This variable is only used in the `while` loop that sends messages every second. Our `WaitForSubscribers()` call is executed before the `while` loop, therefore changing the boolean variable doesn't have any effect.\n\nYou could modify the code for something like this:\n\n\n```\n#!c++\n\nint counter = 0;\nwhile (!node.WaitForSubscribers(topic, 1000))\n{\n  if (g_terminatePub)\n    return 0;\n\n  if (++counter == 10)\n  {\n    std::cerr << \"No subscribers available\" << std::endl;\n    return 0;\n  }\n}\n```\n\n\n", "markup": "markdown", "html": "<p>3 . This is expected because we're capturing the CTRL-C in our signal handler and the only thing we're doing is setting a boolean variable <code>g_terminatePub</code> to true. This variable is only used in the <code>while</code> loop that sends messages every second. Our <code>WaitForSubscribers()</code> call is executed before the <code>while</code> loop, therefore changing the boolean variable doesn't have any effect.</p>\n<p>You could modify the code for something like this:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">WaitForSubscribers</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">g_terminatePub</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">++</span><span class=\"n\">counter</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;No subscribers available&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-07-07T17:28:15.626361+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-07-07T17:29:02.055021+00:00", "type": "issue_comment", "id": 29049895}