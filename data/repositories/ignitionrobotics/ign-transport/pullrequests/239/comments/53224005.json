{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/239/comments/53224005.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/239/_/diff#comment-53224005"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 239, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/239.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/239"}}, "title": "Use ign-cmake"}, "content": {"raw": "Update on Windows support: I've figured out the source of the timeout issue. MSVC 2013 apparently had some bug related to `std::thread`, and a workaround was put in to mitigate the issue. Now when compiled with MSVC 2017, that workaround is causing programs that use `ign::transport::Discovery` to never quit, even after all their tests have finished running. This causes the test program to timeout, even thought it finished running all its tests.\n\nI can fix this pretty easily using compile-time directives to check what version of MSVC is being run, and then choosing to use or not use the workaround based on where we're being compiled. The catch is, I'm not sure whether this is an issue in MSVC 2015, so I'm not sure about which exact number to check for. I'm hesitant to install MSVC 2015 and rebuild everything against it to find out, because that will be very time consuming and the code freeze is somewhat imminent.\n\nFor now, should I just assume that 2015 requires the workaround? If we later discover that 2015 should actually *not* have the workaround, we would just need to change a number in a small handful of places.\n\nAn alternative would be to remove the workaround entirely, but then we'd have to migrate the Windows CI of `gazebo9` (which I believe depends on `ign-transport4`) to use Visual Studio 2017.", "markup": "markdown", "html": "<p>Update on Windows support: I've figured out the source of the timeout issue. MSVC 2013 apparently had some bug related to <code>std::thread</code>, and a workaround was put in to mitigate the issue. Now when compiled with MSVC 2017, that workaround is causing programs that use <code>ign::transport::Discovery</code> to never quit, even after all their tests have finished running. This causes the test program to timeout, even thought it finished running all its tests.</p>\n<p>I can fix this pretty easily using compile-time directives to check what version of MSVC is being run, and then choosing to use or not use the workaround based on where we're being compiled. The catch is, I'm not sure whether this is an issue in MSVC 2015, so I'm not sure about which exact number to check for. I'm hesitant to install MSVC 2015 and rebuild everything against it to find out, because that will be very time consuming and the code freeze is somewhat imminent.</p>\n<p>For now, should I just assume that 2015 requires the workaround? If we later discover that 2015 should actually <em>not</em> have the workaround, we would just need to change a number in a small handful of places.</p>\n<p>An alternative would be to remove the workaround entirely, but then we'd have to migrate the Windows CI of <code>gazebo9</code> (which I believe depends on <code>ign-transport4</code>) to use Visual Studio 2017.</p>", "type": "rendered"}, "created_on": "2018-01-09T02:47:16.136235+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2018-01-09T02:47:27.530809+00:00", "type": "pullrequest_comment", "id": 53224005}