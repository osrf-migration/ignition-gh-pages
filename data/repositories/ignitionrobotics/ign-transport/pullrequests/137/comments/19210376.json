{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/137/comments/19210376.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/137/_/diff#comment-19210376"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 137, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/137.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/137"}}, "title": "Issue_43 part 2: in work."}, "content": {"raw": "In all `Unpack` functions, before composing the string we have to read a field with the string length. That is the field that we should check. If its value is bigger than 255 we return 0 and exit. You should review all the places that we call `Unpack()` and add an extra check to make sure that we don't continue if the return value is 0 (for example in `Discovery::DispatchDiscoveryMsg()`.\n\nIn all `SetTopic()` functions we should return a boolean showing if the function succeed or not. Again, we should review the code and check the return value of `SetTopic()`. \n\nIn the constructors we should raise an exception if the topic exceeds the maximum length. Again, we should catch this exception in our internal code when using the contructor.\n\nIt's important to split this issue in multiple pull requests tackling one thing at a time. For example, in a first pull request you can modify the `Unpack()` methods, check all the return values when using `Unpack()` and add a test. Another pull request for `SetTopic()` and constructors that accept a topic.", "markup": "markdown", "html": "<p>In all <code>Unpack</code> functions, before composing the string we have to read a field with the string length. That is the field that we should check. If its value is bigger than 255 we return 0 and exit. You should review all the places that we call <code>Unpack()</code> and add an extra check to make sure that we don't continue if the return value is 0 (for example in <code>Discovery::DispatchDiscoveryMsg()</code>.</p>\n<p>In all <code>SetTopic()</code> functions we should return a boolean showing if the function succeed or not. Again, we should review the code and check the return value of <code>SetTopic()</code>. </p>\n<p>In the constructors we should raise an exception if the topic exceeds the maximum length. Again, we should catch this exception in our internal code when using the contructor.</p>\n<p>It's important to split this issue in multiple pull requests tackling one thing at a time. For example, in a first pull request you can modify the <code>Unpack()</code> methods, check all the return values when using <code>Unpack()</code> and add a test. Another pull request for <code>SetTopic()</code> and constructors that accept a topic.</p>", "type": "rendered"}, "created_on": "2016-06-01T18:53:06.024217+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-06-01T18:53:06.027860+00:00", "type": "pullrequest_comment", "id": 19210376}