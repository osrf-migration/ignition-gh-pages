{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/395/comments/111784206.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:ef7b3017b8a4..e21c5ac7e965?path=src%2FNode.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/395/_/diff#comment-111784206"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 395, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/395.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/395"}}, "title": "Add method for determining if a throttled publisher is ready to publish."}, "content": {"raw": "Should we replace pretty much all this logic here by a call to `ThrottleUpdateReady()`?\n\n```\npublic: bool UpdateThrottling()\n{\n  if (!this->publisher.Options().Throttled())\n     return true;\n\n  if (!this->ThrottledUpdateReady())\n    return false;\n\n  // Update the last callback execution.\n  std::lock_guard<std::mutex> lk(this->mutex);\n  this->lastCbTimestamp = std::chrono::steady_clock::now();\n  return true;\n}\n```", "markup": "markdown", "html": "<p>Should we replace pretty much all this logic here by a call to <code>ThrottleUpdateReady()</code>?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">public</span><span class=\"o\">:</span> <span class=\"n\">bool</span> <span class=\"n\">UpdateThrottling</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n  <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">publisher</span><span class=\"o\">.</span><span class=\"na\">Options</span><span class=\"o\">().</span><span class=\"n\">Throttled</span><span class=\"o\">())</span>\n     <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">ThrottledUpdateReady</span><span class=\"o\">())</span>\n    <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\n  <span class=\"c1\">// Update the last callback execution.</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">lock_guard</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">&gt;</span> <span class=\"n\">lk</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"o\">);</span>\n  <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">lastCbTimestamp</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">steady_clock</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"o\">();</span>\n  <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-02T21:05:56.121429+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": 113, "outdated": true, "path": "src/Node.cc"}, "updated_on": "2019-08-02T21:33:48.511046+00:00", "type": "pullrequest_comment", "id": 111784206}