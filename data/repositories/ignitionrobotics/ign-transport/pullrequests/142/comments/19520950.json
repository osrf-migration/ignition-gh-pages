{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/142/comments/19520950.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/142/_/diff#comment-19520950"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 142, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/142.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/142"}}, "title": "Restrict a topic length"}, "content": {"raw": "How about the code to guarantee that a topic always fit in a `size16_t` variable? I'm thinking on a check in `TopicUtils::FullyQualifiedName()` with its own test. The max size should be now 65535. The result of `FullyQualifiedName()` is the topic that we use to create a `Publisher` object.", "markup": "markdown", "html": "<p>How about the code to guarantee that a topic always fit in a <code>size16_t</code> variable? I'm thinking on a check in <code>TopicUtils::FullyQualifiedName()</code> with its own test. The max size should be now 65535. The result of <code>FullyQualifiedName()</code> is the topic that we use to create a <code>Publisher</code> object.</p>", "type": "rendered"}, "created_on": "2016-06-08T23:08:23.653326+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-06-08T23:11:56.985636+00:00", "type": "pullrequest_comment", "id": 19520950}