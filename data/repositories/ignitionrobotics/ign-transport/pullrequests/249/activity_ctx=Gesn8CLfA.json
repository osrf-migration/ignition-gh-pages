{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249/comments/51766718.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249/_/diff#comment-51766718"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}, "content": {"raw": "LGTM. It needs tests, and I think splitting some small bits into their own PRs will get everything merged faster.\n\nI'm neutral to slightly negative on `Advanced` vs just having the methods be part of the class. I'd expect a doxygen comment to be enough of a notification for a user.", "markup": "markdown", "html": "<p>LGTM. It needs tests, and I think splitting some small bits into their own PRs will get everything merged faster.</p>\n<p>I'm neutral to slightly negative on <code>Advanced</code> vs just having the methods be part of the class. I'd expect a doxygen comment to be enough of a notification for a user.</p>", "type": "rendered"}, "created_on": "2017-12-12T20:48:34.368387+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-12-12T20:48:34.371696+00:00", "type": "pullrequest_comment", "id": 51766718}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249/comments/51765083.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249/_/diff#comment-51765083"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}, "content": {"raw": "nit: I think moving the raw subscriber handling to after the local subscribers handling will reduce the apparent size of the diff. That will make this file a little bit easier to review.", "markup": "markdown", "html": "<p>nit: I think moving the raw subscriber handling to after the local subscribers handling will reduce the apparent size of the diff. That will make this file a little bit easier to review.</p>", "type": "rendered"}, "created_on": "2017-12-12T20:25:50.604194+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-12T20:26:41.217356+00:00", "type": "pullrequest_comment", "id": 51765083}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249/comments/51764153.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249/_/diff#comment-51764153"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}, "content": {"raw": "I like these changes; recommend making them a separate PR to `default` because they could get merged super quickly.", "markup": "markdown", "html": "<p>I like these changes; recommend making them a separate PR to <code>default</code> because they could get merged super quickly.</p>", "type": "rendered"}, "created_on": "2017-12-12T20:11:19.077492+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-12T20:11:19.081005+00:00", "type": "pullrequest_comment", "id": 51764153}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249/comments/51762837.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249/_/diff#comment-51762837"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}, "content": {"raw": "nit `\\note` https://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdnote", "markup": "markdown", "html": "<p>nit <code>\\note</code> <a href=\"https://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdnote\" rel=\"nofollow\" class=\"ap-connect-link\">https://www.stack.nl/~dimitri/doxygen/manual/commands.html#cmdnote</a></p>", "type": "rendered"}, "created_on": "2017-12-12T19:52:16.169255+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-12T19:52:32.966870+00:00", "type": "pullrequest_comment", "id": 51762837}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"update": {"description": "This PR is a work-in-progress, but is mostly complete. I'm opening it to facilitate discussion on the concept and to check whether this is an avenue that we want to take.\r\n\r\nThe key features of this PR are the abilities to publish and subscribe to arbitrary raw message data, while only performing serialization or deserialization when it is absolutely necessary.\r\n\r\nThis probably sounds like it's merely a performance improvement, but it's actually far more important than that: This allows us to subscribe to *any* type of message, including messages whose protobuf descriptors are not available to us (e.g. custom user-defined messages). This feature is necessary for logging in order for us to record custom messages which were generated outside of `ign-msgs`. Protobuf will always fail to deserialize a message whose type was generated in a library that is not linked to the current application, so this PR allows us to skip the deserialization step and send the message data directly into the logger.\r\n\r\nThe key implementation detail in this PR is that I've introduced a new type of subscription handler: `RawSubscriptionHandler`. This new subscription handler is managed independently of the existing `ISubscriptionHandler`.\r\n\r\nTODO List:\r\n\r\n1. Create tests for the raw publisher and subscriber functions\r\n\r\n2. Create an unsubscribe function for raw subscriptions\r\n\r\nThis PR may result in some backlash (for reasons that I'll enumerate below), so I'm completely open to  discussing and reversing the things that I'm proposing in this PR. Here's a list of what I suspect may be controversial:\r\n\r\n1. There's a significant refactoring of `Node::Publisher::Publish(~)` and `NodeShared::RecvMsgUpdate()`. My goal in the refactoring was to keep the changes as DRY as possible. In particular, publishing a raw message to local subscribers is extremely similar to receiving a message from remote publishers and passing it along to your node's local subscribers. Therefore, most of the functionality of `NodeShared::RecvMsgUpdate()` has been refactored into `NodeShared::CheckHandlerInfo(~)` and `NodeShared::TriggerSubscriberCallbacks(~)`.\r\n\r\n2. Generally we want to discourage end-users from doing anything with raw messages, but we want the API for it to be publicly exposed for our own use, and perhaps for advanced users to take advantage of. Therefore, I've introduced an `Advanced` API design pattern: To publish a raw message, you call `publisher->UseAdvancedFeatures().RawPublish(...)`. To create a raw subscription, you would call `node->UseAdvancedFeatures().RawSubscribe(...)`. Since these features are hidden behind the `UseAdvancedFeatures()` functions, it's painfully obvious that these are advanced features which are only meant for advanced users. If we don't like this design pattern, I can easily move `RawPublish` and `RawSubscribe` into the normal API and get rid of the `Advanced` classes.\r\n\r\n3. In the definition of [RawSubscriptionHandler](#!/ignitionrobotics/ign-transport/src/af616bbfe39865c1ce4ab70556f6478389c68240/include/ignition/transport/SubscriptionHandler.hh?at=RawPublishSubscribe&fileviewer=file-view-default#SubscriptionHandler.hh-329) I'm introducing a pimpl design pattern which is a bit stylistically different than what we've been using so far. Instead of creating a `PrivateXXX` class, we create a `XXX::Implementation` class and name its instance `pimpl`. This pattern is a popular one among pimpl users because it allows us to avoid polluting namespaces with classes that can't be accessed by users. It creates a cleaner code model, which is really nice for users who use autocomplete. I don't know if our `PrivateXXX` and `dataPtr` pattern is considered finalized in our style guide or if we've just been using it to be consistent, but I wanted to throw this suggestion out there to see what people think. I can easily switch it over to `PrivateXXX` and `dataPtr` if we would rather remain consistent.", "title": "[WIP] Subscribe and publish raw (serialized) data", "destination": {"commit": {"hash": "b3eb40399491", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b3eb40399491.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b3eb40399491"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "record_proof_of_concept"}}, "reason": "", "source": {"commit": {"hash": "b7611efd2931", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b7611efd2931.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b7611efd2931"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "RawPublishSubscribe"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-12T18:28:23.993934+00:00"}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249/comments/51674340.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249/_/diff#comment-51674340"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}, "content": {"raw": "(Note for @sloretz : This PR is totally different than the plan that I described to you this morning. This completely eliminates all the worries that I had mentioned having.)", "markup": "markdown", "html": "<p>(Note for @sloretz : This PR is totally different than the plan that I described to you this morning. This completely eliminates all the worries that I had mentioned having.)</p>", "type": "rendered"}, "created_on": "2017-12-12T03:30:42.308019+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-12-12T03:30:42.316311+00:00", "type": "pullrequest_comment", "id": 51674340}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"update": {"description": "This PR is a work-in-progress, but is mostly complete. I'm opening it to facilitate discussion on the concept and to check whether this is an avenue that we want to take.\r\n\r\nThe key features of this PR are the abilities to publish and subscribe to arbitrary raw message data, while only performing serialization or deserialization when it is absolutely necessary.\r\n\r\nThis probably sounds like it's merely a performance improvement, but it's actually far more important than that: This allows us to subscribe to *any* type of message, including messages whose protobuf descriptors are not available to us (e.g. custom user-defined messages). This feature is necessary for logging in order for us to record custom messages which were generated outside of `ign-msgs`. Protobuf will always fail to deserialize a message whose type was generated in a library that is not linked to the current application, so this PR allows us to skip the deserialization step and send the message data directly into the logger.\r\n\r\nThe key implementation detail in this PR is that I've introduced a new type of subscription handler: `RawSubscriptionHandler`. This new subscription handler is managed independently of the existing `ISubscriptionHandler`.\r\n\r\nTODO List:\r\n\r\n1. Create tests for the raw publisher and subscriber functions\r\n\r\n2. Create an unsubscribe function for raw subscriptions\r\n\r\nThis PR may result in some backlash (for reasons that I'll enumerate below), so I'm completely open to  discussing and reversing the things that I'm proposing in this PR. Here's a list of what I suspect may be controversial:\r\n\r\n1. There's a significant refactoring of `Node::Publisher::Publish(~)` and `NodeShared::RecvMsgUpdate()`. My goal in the refactoring was to keep the changes as DRY as possible. In particular, publishing a raw message to local subscribers is extremely similar to receiving a message from remote publishers and passing it along to your node's local subscribers. Therefore, most of the functionality of `NodeShared::RecvMsgUpdate()` has been refactored into `NodeShared::CheckHandlerInfo(~)` and `NodeShared::TriggerSubscriberCallbacks(~)`.\r\n\r\n2. Generally we want to discourage end-users from doing anything with raw messages, but we want the API for it to be publicly exposed for our own use, and perhaps for advanced users to take advantage of. Therefore, I've introduced an `Advanced` API design pattern: To publish a raw message, you call `publisher->UseAdvancedFeatures().RawPublish(...)`. To create a raw subscription, you would call `node->UseAdvancedFeatures().RawSubscribe(...)`. Since these features are hidden behind the `UseAdvancedFeatures()` functions, it's painfully obvious that these are advanced features which are only meant for advanced users. If we don't like this design pattern, I can easily move `RawPublish` and `RawSubscribe` into the normal API and get rid of the `Advanced` classes.\r\n\r\n3. In the definition of [RawSubscriptionHandler](#!/ignitionrobotics/ign-transport/src/af616bbfe39865c1ce4ab70556f6478389c68240/include/ignition/transport/SubscriptionHandler.hh?at=RawPublishSubscribe&fileviewer=file-view-default#SubscriptionHandler.hh-329) I'm introducing a pimpl design pattern which is a bit stylistically different than what we've been using so far. Instead of creating a `PrivateXXX` class, we create a `XXX::Implementation` class and name its instance `pimpl`. This pattern is a popular one among pimpl users because it allows us to avoid polluting namespaces with classes that can't be accessed by users. It creates a cleaner code model, which is really nice for users who use autocomplete. I don't know if our `PrivateXXX` and `dataPtr` pattern is considered finalized in our style guide or if we've just been using it to be consistent, but I wanted to throw this suggestion out there to see what people think. I can easily switch it over to `PrivateXXX` and `dataPtr` if we would rather remain consistent.", "title": "[WIP] Subscribe and publish raw (serialized) data", "destination": {"commit": {"hash": "b3eb40399491", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b3eb40399491.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b3eb40399491"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "record_proof_of_concept"}}, "reason": "", "source": {"commit": {"hash": "af616bbfe398", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/af616bbfe398.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/af616bbfe398"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "RawPublishSubscribe"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-12T03:29:05.646692+00:00"}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}, {"update": {"description": "This PR is a work-in-progress, but is mostly complete. I'm opening it to facilitate discussion on the concept and to check whether this is an avenue that we want to take.\r\n\r\nThe key features of this PR are the abilities to publish and subscribe to arbitrary raw message data, while only performing serialization or deserialization when it is absolutely necessary.\r\n\r\nThis probably sounds like it's merely a performance improvement, but it's actually far more important than that: This allows us to subscribe to *any* type of message, including messages whose protobuf descriptors are not available to us (e.g. custom user-defined messages). This feature is necessary for logging in order for us to record custom messages which were generated outside of `ign-msgs`. Protobuf will always fail to deserialize a message whose type was generated in a library that is not linked to the current application, so this PR allows us to skip the deserialization step and send the message data directly into the logger.\r\n\r\nThe key implementation detail in this PR is that I've introduced a new type of subscription handler: `RawSubscriptionHandler`. This new subscription handler is managed independently of the existing `ISubscriptionHandler`.\r\n\r\nTODO List:\r\n\r\n1. Create tests for the raw publisher and subscriber functions\r\n\r\n2. Create an unsubscribe function for raw subscriptions\r\n\r\nThis PR may result in some backlash (for reasons that I'll enumerate below), so I'm completely open to  discussing and reversing the things that I'm proposing in this PR. Here's a list of what I suspect may be controversial:\r\n\r\n1. There's a significant refactoring of `Node::Publisher::Publish(~)` and `NodeShared::RecvMsgUpdate()`. My goal in the refactoring was to keep the changes as DRY as possible. In particular, publishing a raw message to local subscribers is extremely similar to receiving a message from remote publishers and passing it along to your node's local subscribers. Therefore, most of the functionality of `NodeShared::RecvMsgUpdate()` has been refactored into `NodeShared::CheckHandlerInfo(~)` and `NodeShared::TriggerSubscriberCallbacks(~)`.\r\n\r\n2. Generally we want to discourage end-users from doing anything with raw messages, but we want the API for it to be publicly exposed for our own use, and perhaps for advanced users to take advantage of. Therefore, I've introduced an `Advanced` API design pattern: To publish a raw message, you call `publisher->UseAdvancedFeatures().RawPublish(...)`. To create a raw subscription, you would call `node->UseAdvancedFeatures().RawSubscribe(...)`. Since these features are hidden behind the `UseAdvancedFeatures()` functions, it's painfully obvious that these are advanced features which are only meant for advanced users. If we don't like this design pattern, I can easily move `RawPublish` and `RawSubscribe` into the normal API and get rid of the `Advanced` classes.\r\n\r\n3. In the definition of [RawSubscriptionHandler](#!/ignitionrobotics/ign-transport/src/af616bbfe39865c1ce4ab70556f6478389c68240/include/ignition/transport/SubscriptionHandler.hh?at=RawPublishSubscribe&fileviewer=file-view-default#SubscriptionHandler.hh-329) I'm introducing a pimpl design pattern which is a bit stylistically different than what we've been using so far. Instead of creating a `PrivateXXX` class, we create a `XXX::Implementation` class and name its instance `pimpl`. This pattern is a popular one among pimpl users because it allows us to avoid polluting namespaces with classes that can't be accessed by users. It creates a cleaner code model, which is really nice for users who use autocomplete. I don't know if our `PrivateXXX` and `dataPtr` pattern is considered finalized in our style guide or if we've just been using it to be consistent, but I wanted to throw this suggestion out there to see what people think. I can easily switch it over to `PrivateXXX` and `dataPtr` if we would rather remain consistent.", "title": "[WIP] Subscribe and publish raw (serialized) data", "destination": {"commit": {"hash": "b3eb40399491", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b3eb40399491.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b3eb40399491"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "record_proof_of_concept"}}, "reason": "", "source": {"commit": {"hash": "af616bbfe398", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/af616bbfe398.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/af616bbfe398"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "RawPublishSubscribe"}}, "state": "OPEN", "author": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "date": "2017-12-12T03:29:05.611135+00:00"}, "pull_request": {"type": "pullrequest", "id": 249, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/249.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/249"}}, "title": "[WIP] Subscribe and publish raw (serialized) data"}}]}