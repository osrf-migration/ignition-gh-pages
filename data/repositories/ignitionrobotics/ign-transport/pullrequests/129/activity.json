{"pagelen": 50, "values": [{"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f405618a598e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f405618a598e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f405618a598e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-29T18:36:56.549252+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"approval": {"date": "2016-04-29T18:09:30.037600+00:00", "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17954186.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17954186"}}, "parent": {"id": 17953512, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953512.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953512"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "f405618", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-transport/commits/f405618\" rel=\"nofollow\" class=\"ap-connect-link\">f405618</a></p>", "type": "rendered"}, "created_on": "2016-04-29T18:01:11.627546+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-04-29T18:01:11.630072+00:00", "type": "pullrequest_comment", "id": 17954186}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17954180.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17954180"}}, "parent": {"id": 17953252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953252"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "1ddcb05", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-transport/commits/1ddcb05\" rel=\"nofollow\" class=\"ap-connect-link\">1ddcb05</a></p>", "type": "rendered"}, "created_on": "2016-04-29T18:01:00.073735+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-04-29T18:01:00.076777+00:00", "type": "pullrequest_comment", "id": 17954180}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f405618a598e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f405618a598e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f405618a598e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-29T18:00:08.710951+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17954130.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17954130"}}, "parent": {"id": 17954054, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17954054.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17954054"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "But NodeShared (for example) is not :)", "markup": "markdown", "html": "<p>But NodeShared (for example) is not :)</p>", "type": "rendered"}, "created_on": "2016-04-29T17:59:59.130738+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-04-29T17:59:59.136219+00:00", "type": "pullrequest_comment", "id": 17954130}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17954054.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17954054"}}, "parent": {"id": 17953453, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953453.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953453"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Oh sorry, yes it is. I misread a function for a variable. ", "markup": "markdown", "html": "<p>Oh sorry, yes it is. I misread a function for a variable. </p>", "type": "rendered"}, "created_on": "2016-04-29T17:58:10.672032+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-29T17:58:10.675021+00:00", "type": "pullrequest_comment", "id": 17954054}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953512.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953512"}}, "parent": {"id": 17952991, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17952991.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17952991"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "34f04a8", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-transport/commits/34f04a8\" rel=\"nofollow\" class=\"ap-connect-link\">34f04a8</a></p>", "type": "rendered"}, "created_on": "2016-04-29T17:45:37.345645+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-04-29T17:45:37.348053+00:00", "type": "pullrequest_comment", "id": 17953512}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953492.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953492"}}, "parent": {"id": 17953453, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953453.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953453"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Let's leave it for now. ", "markup": "markdown", "html": "<p>Let's leave it for now. </p>", "type": "rendered"}, "created_on": "2016-04-29T17:45:10.015511+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2016-04-29T17:45:10.018991+00:00", "type": "pullrequest_comment", "id": 17953492}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b669ce58b6e6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b669ce58b6e6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b669ce58b6e6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-29T17:43:52.713488+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953453.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953453"}}, "parent": {"id": 17953155, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953155.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953155"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Node is PIMPlized, we could do it here if we want too.", "markup": "markdown", "html": "<p>Node is PIMPlized, we could do it here if we want too.</p>", "type": "rendered"}, "created_on": "2016-04-29T17:43:47.192156+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-04-29T17:43:47.194521+00:00", "type": "pullrequest_comment", "id": 17953453}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953252"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Suggestion: also test `Valid()` and `Topic()`.", "markup": "markdown", "html": "<p>Suggestion: also test <code>Valid()</code> and <code>Topic()</code>.</p>", "type": "rendered"}, "created_on": "2016-04-29T17:38:03.044483+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-29T17:38:03.050713+00:00", "type": "pullrequest_comment", "id": 17953252}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "229e7f44a9fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/229e7f44a9fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/229e7f44a9fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-04-29T17:36:46.436171+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "229e7f44a9fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/229e7f44a9fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/229e7f44a9fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2016-04-29T17:36:44.702524+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953155.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953155"}}, "parent": {"id": 17953049, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953049.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953049"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "I just realized even Node is not PIMPLized, so nevermind.", "markup": "markdown", "html": "<p>I just realized even Node is not PIMPLized, so nevermind.</p>", "type": "rendered"}, "created_on": "2016-04-29T17:35:25.109102+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-29T17:35:25.111812+00:00", "type": "pullrequest_comment", "id": 17953155}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17953049.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17953049"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "No PIMPL in case we want to add more info to it later?", "markup": "markdown", "html": "<p>No PIMPL in case we want to add more info to it later?</p>", "type": "rendered"}, "created_on": "2016-04-29T17:32:31.695845+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-29T17:32:31.698171+00:00", "type": "pullrequest_comment", "id": 17953049}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17952991.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17952991"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Update return description?", "markup": "markdown", "html": "<p>Update return description?</p>", "type": "rendered"}, "created_on": "2016-04-29T17:31:15.471960+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-29T17:31:15.474809+00:00", "type": "pullrequest_comment", "id": 17952991}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"approval": {"date": "2016-04-29T17:21:35.571211+00:00", "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17952613.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17952613"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "Tests look good:\n\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/102/) :large_blue_circle:\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/97/) :large_blue_circle: \n* [Win](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/190/) :large_blue_circle: ", "markup": "markdown", "html": "<p>Tests look good:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/102/\" rel=\"nofollow\">Trusty</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/97/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/190/\" rel=\"nofollow\">Win</a> :large_blue_circle: </li>\n</ul>", "type": "rendered"}, "created_on": "2016-04-29T17:20:35.570222+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-04-29T17:20:47.722337+00:00", "type": "pullrequest_comment", "id": 17952613}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "61eacf3c4f63", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/61eacf3c4f63.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/61eacf3c4f63"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-29T17:17:51.248494+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "406455158c4c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/406455158c4c.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/406455158c4c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-29T14:13:57.961135+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129/comments/17907983.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129/_/diff#comment-17907983"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}, "content": {"raw": "This addresses issue #37", "markup": "markdown", "html": "<p>This addresses issue <a href=\"#!/ignitionrobotics/ign-transport/issues/37/consider-making-topic-name-optional-for\" rel=\"nofollow\" title=\"Consider making topic name optional for Publish\" class=\"ap-connect-link\"><s>#37</s></a></p>", "type": "rendered"}, "created_on": "2016-04-28T18:39:28.969100+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2016-04-28T18:39:28.974385+00:00", "type": "pullrequest_comment", "id": 17907983}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7262411648f5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/7262411648f5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/7262411648f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-28T17:59:55.821849+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}, {"update": {"description": "This augments the Node API to make it a bit easier/cleaner to advertise and publish messages.\r\n\r\nThe current pattern relies on keeping track of `std::string` topic names for each advertised topic. For example:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string myTopic = \"/my/topic\";\r\nnode.Advertise<msg_type>(myTopic);\r\nnode.Publish(myTopic, myMsg);\r\n\r\n```\r\n\r\nThis gets a bit more cumbersome if you want to do something like this:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nstd::string topicBase = \"/part_a\";\r\nnode.Advertise<type>(topicBase + \"/torque\");\r\nnode.Advertise<type>(topicBase + \"/velocity\");\r\n\r\n```\r\n\r\nYou could create individual string for each topic, or redo the string math a publish time. However, this adds more code, feels like a limitation, and makes it relatively easy for people to do bad things (such as accidentally alter a string).\r\n\r\nSo, my proposed solution is to return an object from `Node::Advertise` that essentially encapsulates the topic string. A user can't change the topic name, and this feels a bit better to me.\r\n\r\nThe string based method has not been lost.\r\n\r\nNew usage:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nauto pubId = node.Advertise<type>(\"topicName\");\r\nnode.Publish(pubId, msg);\r\n\r\n// pubId also acts a boolean, so you can still do the following\r\nif (!node.Advertise<type>(\"topicName\"))\r\n  cerr << \"Some badness\\n\";\r\n\r\nnode.Publish(\"topicName\", msg);\r\n\r\n```\r\n", "title": "Node::Advertise return object", "destination": {"commit": {"hash": "9ec762cfc0ae", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9ec762cfc0ae.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9ec762cfc0ae"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7262411648f5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/7262411648f5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/7262411648f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "advertise_return_object"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2016-04-28T17:59:55.791990+00:00"}, "pull_request": {"type": "pullrequest", "id": 129, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/129.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/129"}}, "title": "Node::Advertise return object"}}]}