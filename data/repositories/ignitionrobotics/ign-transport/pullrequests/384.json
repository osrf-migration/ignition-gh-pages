{"rendered": {"description": {"raw": "We are experiencing occasional issues on Homebrew with a test that is just:\r\n\r\n```\r\nignition::transport::Node node;\r\n```\r\n\r\nUnder some circumstances, the `Node` destructor can be executed before the \\`NodeShared::PublishThread\\` is in `wait()`. In this situation, the destructor calls `notify_all` but the \\`NodeShared::PublishThread\\` misses the notification and never wakes up.\r\n\r\nThe patch in this PR:\r\n\r\n* Wakes up the condition variable in any case every 500 ms. as a backup plan in case the notification was missed.\r\n* Additionally, the condition variable wasn\u2019t using a boolean predicate, so it was subject to spurious weakups. It should be fixed now.\r\n\r\nI left the example runnning in a loop for a few ~~hours~~ days and I didn\u2019t experience the problem anymore :fingers_crossed:", "markup": "markdown", "html": "<p>We are experiencing occasional issues on Homebrew with a test that is just:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">transport</span><span class=\"p\">::</span><span class=\"nd\">Node</span> <span class=\"nt\">node</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>Under some circumstances, the <code>Node</code> destructor can be executed before the `NodeShared::PublishThread` is in <code>wait()</code>. In this situation, the destructor calls <code>notify_all</code> but the `NodeShared::PublishThread` misses the notification and never wakes up.</p>\n<p>The patch in this PR:</p>\n<ul>\n<li>Wakes up the condition variable in any case every 500 ms. as a backup plan in case the notification was missed.</li>\n<li>Additionally, the condition variable wasn\u2019t using a boolean predicate, so it was subject to spurious weakups. It should be fixed now.</li>\n</ul>\n<p>I left the example runnning in a loop for a few <del>hours</del> days and I didn\u2019t experience the problem anymore <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f91e.png\" alt=\"\ud83e\udd1e\" title=\":fingers_crossed:\" data-emoji-short-name=\":fingers_crossed:\" /></p>", "type": "rendered"}, "title": {"raw": "[Blueprint] Fix fast constructor-destructor issue", "markup": "markdown", "html": "<p>[Blueprint] Fix fast constructor-destructor issue</p>", "type": "rendered"}}, "type": "pullrequest", "description": "We are experiencing occasional issues on Homebrew with a test that is just:\r\n\r\n```\r\nignition::transport::Node node;\r\n```\r\n\r\nUnder some circumstances, the `Node` destructor can be executed before the \\`NodeShared::PublishThread\\` is in `wait()`. In this situation, the destructor calls `notify_all` but the \\`NodeShared::PublishThread\\` misses the notification and never wakes up.\r\n\r\nThe patch in this PR:\r\n\r\n* Wakes up the condition variable in any case every 500 ms. as a backup plan in case the notification was missed.\r\n* Additionally, the condition variable wasn\u2019t using a boolean predicate, so it was subject to spurious weakups. It should be fixed now.\r\n\r\nI left the example runnning in a loop for a few ~~hours~~ days and I didn\u2019t experience the problem anymore :fingers_crossed:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/384/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:ff488caa8b6e%0D56828d1b075b?from_pullrequest_id=384"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/384/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/384.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/384/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/384/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/384"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/384/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:ff488caa8b6e%0D56828d1b075b?from_pullrequest_id=384"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/384/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/384/statuses_page=1.json"}}, "title": "[Blueprint] Fix fast constructor-destructor issue", "close_source_branch": true, "reviewers": [{"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}], "id": 384, "destination": {"commit": {"hash": "56828d1b075b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/56828d1b075b.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/56828d1b075b"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2019-05-10T20:48:41.797550+00:00", "summary": {"raw": "We are experiencing occasional issues on Homebrew with a test that is just:\r\n\r\n```\r\nignition::transport::Node node;\r\n```\r\n\r\nUnder some circumstances, the `Node` destructor can be executed before the \\`NodeShared::PublishThread\\` is in `wait()`. In this situation, the destructor calls `notify_all` but the \\`NodeShared::PublishThread\\` misses the notification and never wakes up.\r\n\r\nThe patch in this PR:\r\n\r\n* Wakes up the condition variable in any case every 500 ms. as a backup plan in case the notification was missed.\r\n* Additionally, the condition variable wasn\u2019t using a boolean predicate, so it was subject to spurious weakups. It should be fixed now.\r\n\r\nI left the example runnning in a loop for a few ~~hours~~ days and I didn\u2019t experience the problem anymore :fingers_crossed:", "markup": "markdown", "html": "<p>We are experiencing occasional issues on Homebrew with a test that is just:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">transport</span><span class=\"p\">::</span><span class=\"nd\">Node</span> <span class=\"nt\">node</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>Under some circumstances, the <code>Node</code> destructor can be executed before the `NodeShared::PublishThread` is in <code>wait()</code>. In this situation, the destructor calls <code>notify_all</code> but the `NodeShared::PublishThread` misses the notification and never wakes up.</p>\n<p>The patch in this PR:</p>\n<ul>\n<li>Wakes up the condition variable in any case every 500 ms. as a backup plan in case the notification was missed.</li>\n<li>Additionally, the condition variable wasn\u2019t using a boolean predicate, so it was subject to spurious weakups. It should be fixed now.</li>\n</ul>\n<p>I left the example runnning in a loop for a few <del>hours</del> days and I didn\u2019t experience the problem anymore <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f91e.png\" alt=\"\ud83e\udd1e\" title=\":fingers_crossed:\" data-emoji-short-name=\":fingers_crossed:\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "56abf7e77bcb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/56abf7e77bcb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/56abf7e77bcb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "fix_fast_destructor"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-05-13T21:53:11.562691+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Carroll", "uuid": "{17dbbc15-cbc0-42f0-a985-cde9061c78a0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D"}, "html": {"href": "https://bitbucket.org/%7B17dbbc15-cbc0-42f0-a985-cde9061c78a0%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:65740f22-cc56-4418-9608-7e17d0ed47b7/2aa259f5-4de1-4f68-9156-eded72041d84/128"}}, "nickname": "Michael Carroll", "type": "user", "account_id": "557058:65740f22-cc56-4418-9608-7e17d0ed47b7"}}, {"role": "REVIEWER", "participated_on": "2019-05-13T22:43:13.468389+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2019-05-13T21:50:20.679764+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}], "reason": "", "updated_on": "2019-05-13T23:29:19.935784+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "ff488caa8b6e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/ff488caa8b6e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/ff488caa8b6e"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}