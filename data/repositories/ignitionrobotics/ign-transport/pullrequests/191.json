{"rendered": {"description": {"raw": "This pull request adds support for an alternative callback signature during message subscription.\r\n\r\nThis is the regular callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg)\r\n{\r\n  std::cout << \"Msg: \" << _msg.data() << std::endl << std::endl;\r\n}\r\n```\r\n\r\n\r\nThis is the new alternative callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg,\r\n        const ignition::transport::MessageInfo &_info)\r\n{\r\n  std::cout << \"Topic: [\" << _info.Topic() << \"]\" << std::endl;\r\n  std::cout << _msg.DebugString() << std::endl;\r\n}\r\n```\r\n\r\nNote that both callback signatures are supported. The new parameter of type `MessageInfo` provides some information about the message received. For now, the only information is the topic name but more fields can be added in the future. This feature can be handy when sharing the same callback among multiple topics.\r\n\r\nCI results:\r\n\r\n* [Ubuntu](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/188/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/192/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/362/) :large_blue_circle: ", "markup": "markdown", "html": "<p>This pull request adds support for an alternative callback signature during message subscription.</p>\n<p>This is the regular callback:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Msg: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_msg</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>This is the new alternative callback:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">,</span>\n        <span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">MessageInfo</span> <span class=\"o\">&amp;</span><span class=\"n\">_info</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Topic: [&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_info</span><span class=\"p\">.</span><span class=\"n\">Topic</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_msg</span><span class=\"p\">.</span><span class=\"n\">DebugString</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Note that both callback signatures are supported. The new parameter of type <code>MessageInfo</code> provides some information about the message received. For now, the only information is the topic name but more fields can be added in the future. This feature can be handy when sharing the same callback among multiple topics.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/188/\" rel=\"nofollow\">Ubuntu</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/192/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/362/\" rel=\"nofollow\">Windows</a> :large_blue_circle: </li>\n</ul>", "type": "rendered"}, "title": {"raw": "Optional message information in the subscription callback.", "markup": "markdown", "html": "<p>Optional message information in the subscription callback.</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request adds support for an alternative callback signature during message subscription.\r\n\r\nThis is the regular callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg)\r\n{\r\n  std::cout << \"Msg: \" << _msg.data() << std::endl << std::endl;\r\n}\r\n```\r\n\r\n\r\nThis is the new alternative callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg,\r\n        const ignition::transport::MessageInfo &_info)\r\n{\r\n  std::cout << \"Topic: [\" << _info.Topic() << \"]\" << std::endl;\r\n  std::cout << _msg.DebugString() << std::endl;\r\n}\r\n```\r\n\r\nNote that both callback signatures are supported. The new parameter of type `MessageInfo` provides some information about the message received. For now, the only information is the topic name but more fields can be added in the future. This feature can be handy when sharing the same callback among multiple topics.\r\n\r\nCI results:\r\n\r\n* [Ubuntu](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/188/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/192/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/362/) :large_blue_circle: ", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/191/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:ed5f69ea458f%0D8fae9677a765?from_pullrequest_id=191"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/191/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/191.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/191/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/191/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/191"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/191/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:ed5f69ea458f%0D8fae9677a765?from_pullrequest_id=191"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/191/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/191/statuses_page=1.json"}}, "title": "Optional message information in the subscription callback.", "close_source_branch": true, "reviewers": [], "id": 191, "destination": {"commit": {"hash": "8fae9677a765", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/8fae9677a765.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/8fae9677a765"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2016-12-15T16:59:02.411017+00:00", "summary": {"raw": "This pull request adds support for an alternative callback signature during message subscription.\r\n\r\nThis is the regular callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg)\r\n{\r\n  std::cout << \"Msg: \" << _msg.data() << std::endl << std::endl;\r\n}\r\n```\r\n\r\n\r\nThis is the new alternative callback:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const ignition::msgs::StringMsg &_msg,\r\n        const ignition::transport::MessageInfo &_info)\r\n{\r\n  std::cout << \"Topic: [\" << _info.Topic() << \"]\" << std::endl;\r\n  std::cout << _msg.DebugString() << std::endl;\r\n}\r\n```\r\n\r\nNote that both callback signatures are supported. The new parameter of type `MessageInfo` provides some information about the message received. For now, the only information is the topic name but more fields can be added in the future. This feature can be handy when sharing the same callback among multiple topics.\r\n\r\nCI results:\r\n\r\n* [Ubuntu](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/188/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/192/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/362/) :large_blue_circle: ", "markup": "markdown", "html": "<p>This pull request adds support for an alternative callback signature during message subscription.</p>\n<p>This is the regular callback:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Msg: &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_msg</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>This is the new alternative callback:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">,</span>\n        <span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">MessageInfo</span> <span class=\"o\">&amp;</span><span class=\"n\">_info</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Topic: [&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_info</span><span class=\"p\">.</span><span class=\"n\">Topic</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;]&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">_msg</span><span class=\"p\">.</span><span class=\"n\">DebugString</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Note that both callback signatures are supported. The new parameter of type <code>MessageInfo</code> provides some information about the message received. For now, the only information is the topic name but more fields can be added in the future. This feature can be handy when sharing the same callback among multiple topics.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/188/\" rel=\"nofollow\">Ubuntu</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/192/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/362/\" rel=\"nofollow\">Windows</a> :large_blue_circle: </li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "4328e2db9e18", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4328e2db9e18.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4328e2db9e18"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "messageInfo"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-12-16T14:42:34.394869+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2016-12-16T14:42:38.716770+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "ed5f69ea458f", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/ed5f69ea458f.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/ed5f69ea458f"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}