{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/141/comments/19345099.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/141/_/diff#comment-19345099"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 141, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/141.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/141"}}, "title": "Issue_43 part 1: Adding unpack restrictions"}, "content": {"raw": "Your pull request made me think another alternative:\n\nRight now, the topic length field is a `uint64_t`, allowing a really huge string with its potential security risks. Our initial though was to keep the same field but check that the value is not bigger than `255` octets for example. Another idea is to change `uint64_t` to a `uint8_t` or a `uint16_t` and not check its value in `Unpack()`, just allow the entire range of potential values. This will reduce the footprint of the message, processing time and code complexity as we don't have to check anything.\n\n`uint8_t` would be ideal for ASCII but if someone uses Unicode, 256 octets looks small to me. For example UTF-8 can use up to 4 bytes per character, allowing only the transfer of 64 characters. I propose to use a `uint16_t` field that should be more than enough to transfer any topic and won't cause a security thread because the maximum size would be a few KB.\n\n@nampi , what do you think?", "markup": "markdown", "html": "<p>Your pull request made me think another alternative:</p>\n<p>Right now, the topic length field is a <code>uint64_t</code>, allowing a really huge string with its potential security risks. Our initial though was to keep the same field but check that the value is not bigger than <code>255</code> octets for example. Another idea is to change <code>uint64_t</code> to a <code>uint8_t</code> or a <code>uint16_t</code> and not check its value in <code>Unpack()</code>, just allow the entire range of potential values. This will reduce the footprint of the message, processing time and code complexity as we don't have to check anything.</p>\n<p><code>uint8_t</code> would be ideal for ASCII but if someone uses Unicode, 256 octets looks small to me. For example UTF-8 can use up to 4 bytes per character, allowing only the transfer of 64 characters. I propose to use a <code>uint16_t</code> field that should be more than enough to transfer any topic and won't cause a security thread because the maximum size would be a few KB.</p>\n<p>@nampi , what do you think?</p>", "type": "rendered"}, "created_on": "2016-06-06T01:09:52.505843+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-06-06T02:00:38.550725+00:00", "type": "pullrequest_comment", "id": 19345099}