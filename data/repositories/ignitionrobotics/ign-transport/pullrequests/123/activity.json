{"pagelen": 50, "values": [{"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "97c1d63c9b59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/97c1d63c9b59.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/97c1d63c9b59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "f2ad49273530", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f2ad49273530.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f2ad49273530"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "MERGED", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-21T20:34:57.632564+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17584192.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17584192"}}, "parent": {"id": 17583552, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583552.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583552"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "I added a message to make sure that the user knows that `CTRL-C` is needed to terminate. f2ad492 .\nI believe it's OK that they don't behave exactly the same. In the asynchronous version we need to wait for the response, so it is a good opportunity to use `waitForShutdown()`. The alternative would be to use a condition variable but would make the example a little bit more complex.", "markup": "markdown", "html": "<p>I added a message to make sure that the user knows that <code>CTRL-C</code> is needed to terminate. <a href=\"#!/ignitionrobotics/ign-transport/commits/f2ad492\" rel=\"nofollow\" class=\"ap-connect-link\">f2ad492</a> .\nI believe it's OK that they don't behave exactly the same. In the asynchronous version we need to wait for the response, so it is a good opportunity to use <code>waitForShutdown()</code>. The alternative would be to use a condition variable but would make the example a little bit more complex.</p>", "type": "rendered"}, "created_on": "2016-04-21T20:34:00.704960+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-04-21T20:34:37.390299+00:00", "type": "pullrequest_comment", "id": 17584192}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"approval": {"date": "2016-04-21T20:33:42.148168+00:00", "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17584091.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17584091"}}, "parent": {"id": 17583317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583317"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "Added in 79cedf6", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-transport/commits/79cedf6\" rel=\"nofollow\" class=\"ap-connect-link\">79cedf6</a></p>", "type": "rendered"}, "created_on": "2016-04-21T20:31:23.364209+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-04-21T20:31:23.366899+00:00", "type": "pullrequest_comment", "id": 17584091}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17584085.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17584085"}}, "parent": {"id": 17583322, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583322.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583322"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "Added in 79cedf6", "markup": "markdown", "html": "<p>Added in <a href=\"#!/ignitionrobotics/ign-transport/commits/79cedf6\" rel=\"nofollow\" class=\"ap-connect-link\">79cedf6</a></p>", "type": "rendered"}, "created_on": "2016-04-21T20:31:18.522270+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2016-04-21T20:31:18.525595+00:00", "type": "pullrequest_comment", "id": 17584085}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "97c1d63c9b59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/97c1d63c9b59.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/97c1d63c9b59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "f2ad49273530", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f2ad49273530.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f2ad49273530"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-21T20:29:45.157111+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "97c1d63c9b59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/97c1d63c9b59.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/97c1d63c9b59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "79cedf634d84", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/79cedf634d84.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/79cedf634d84"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-21T20:28:09.718569+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583552.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583552"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "There's a slight difference in behaviour between `requester` and `requester_async`. `requester` shuts down by itself after the response is received, but the asynchronous version requires Ctrl+C to be pressed. I don't think it's important that they behave the same way, just thought I'd point it out.", "markup": "markdown", "html": "<p>There's a slight difference in behaviour between <code>requester</code> and <code>requester_async</code>. <code>requester</code> shuts down by itself after the response is received, but the asynchronous version requires Ctrl+C to be pressed. I don't think it's important that they behave the same way, just thought I'd point it out.</p>", "type": "rendered"}, "created_on": "2016-04-21T20:17:54.051787+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-21T20:17:54.057277+00:00", "type": "pullrequest_comment", "id": 17583552}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583322.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583322"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "\\brief", "markup": "markdown", "html": "<p>\\brief</p>", "type": "rendered"}, "created_on": "2016-04-21T20:12:06.784466+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-21T20:12:06.786551+00:00", "type": "pullrequest_comment", "id": 17583322}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments/17583317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123/_/diff#comment-17583317"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "content": {"raw": "\\brief", "markup": "markdown", "html": "<p>\\brief</p>", "type": "rendered"}, "created_on": "2016-04-21T20:12:01.054352+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "inline": {}, "updated_on": "2016-04-21T20:12:01.056928+00:00", "type": "pullrequest_comment", "id": 17583317}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"approval": {"date": "2016-04-13T23:29:27.116986+00:00", "pullrequest": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T23:16:26.333597+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T23:11:07.366463+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/83/) :white_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T21:30:59.006728+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/83/) :white_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :white_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T21:15:56.476815+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/73/) :white_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/75/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/171/) :white_circle:", "title": "Add a waitForShutdown() function", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T21:13:49.360897+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/73/) :white_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/75/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/171/) :white_circle:", "title": "Add a waitForShutdown() function.", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T21:13:39.580849+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}, {"update": {"description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/73/) :white_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/75/) :white_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/171/) :white_circle:", "title": "Add a waitForShutdown() function.", "destination": {"commit": {"hash": "eb609f008bfd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb609f008bfd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb609f008bfd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "15e60df1d6fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/15e60df1d6fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/15e60df1d6fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-04-13T21:13:39.499254+00:00"}, "pull_request": {"type": "pullrequest", "id": 123, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}}, "title": "Add a waitForShutdown() function"}}]}