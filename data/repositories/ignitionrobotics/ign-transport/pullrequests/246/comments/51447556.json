{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/246/comments/51447556.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/246/_/diff#comment-51447556"}}, "parent": {"id": 51447001, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/246/comments/51447001.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/246/_/diff#comment-51447001"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 246, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/246.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/246"}}, "title": "Record proof of concept (do not merge)"}, "content": {"raw": "Ah, that's important to the schema. Right now the topic row has a foreign key to the `message_types` table. Multiple topics with the same message type point to the same row in the `message_types` table. If logging should record multiple message types on a topic then that relationship should be reversed: `message_types` should have a foreign key to the `topics` table. `messages` then needs a foreign key on the `message_types` table too. \n\nThe consequence of reversing the relationship is a slight increase in database size: every message received is stored with an extra integer, and the same message type is duplicated in `message_types` when multiple topics have the same type. These consequences seem small to me, so if record needs to support multiple message types per topic then I'll make the changes to the schema.  @nkoenig Is this needed?", "markup": "markdown", "html": "<p>Ah, that's important to the schema. Right now the topic row has a foreign key to the <code>message_types</code> table. Multiple topics with the same message type point to the same row in the <code>message_types</code> table. If logging should record multiple message types on a topic then that relationship should be reversed: <code>message_types</code> should have a foreign key to the <code>topics</code> table. <code>messages</code> then needs a foreign key on the <code>message_types</code> table too. </p>\n<p>The consequence of reversing the relationship is a slight increase in database size: every message received is stored with an extra integer, and the same message type is duplicated in <code>message_types</code> when multiple topics have the same type. These consequences seem small to me, so if record needs to support multiple message types per topic then I'll make the changes to the schema.  @nkoenig Is this needed?</p>", "type": "rendered"}, "created_on": "2017-12-07T23:48:17.908193+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-12-07T23:48:17.916404+00:00", "type": "pullrequest_comment", "id": 51447556}