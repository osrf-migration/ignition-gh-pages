{"rendered": {"description": {"raw": "A better design for the discovery class:\r\n\r\n* Instead of having two variants per function (e.g.: `AdvertiseMsg()`, `AdvertiseSrv()`), we now have only one variant (`Advertise()`, `Subscribe()`, etc.). We now have two `Discovery` objects, one for topics and the other for services, operating on different ports.\r\n\r\n* The `Discovery` class is templated now, so I removed `Discovery.cc` and `DiscoveryPrivate.cc`\r\n\r\n* Instead of having three dedicated threads for each discovery object, there's now only one. It still works using a reactor pattern waiting in `poll()` until there's activity in the socket or other things to do. The timeout is now dynamic, to make sure that we leave `poll()` if we have to send a heartbeat or check the validity of the discovery information (which was previously performed in separate threads).\r\n\r\n* I had to prefix `g_` to some global variables in test files to avoid warnings. I didn't rename all globals for not making this pull request even bigger. There's a bit of inconsistency in some global variables but I'll fix it in a separate pull request that will add `g_` prefix to all global variables.\r\n\r\n* Added a few `const` to some functions.\r\n\r\n* Remove `advertiseInterval` member variable and its accessors. It was unused.\r\n\r\nSorry for the size of this PR.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any/14/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/103/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/207/) :large_orange_diamond: It seems there's an unrelated problem on Jenkins. All tests passed on my local VM.", "markup": "markdown", "html": "<p>A better design for the discovery class:</p>\n<ul>\n<li>\n<p>Instead of having two variants per function (e.g.: <code>AdvertiseMsg()</code>, <code>AdvertiseSrv()</code>), we now have only one variant (<code>Advertise()</code>, <code>Subscribe()</code>, etc.). We now have two <code>Discovery</code> objects, one for topics and the other for services, operating on different ports.</p>\n</li>\n<li>\n<p>The <code>Discovery</code> class is templated now, so I removed <code>Discovery.cc</code> and <code>DiscoveryPrivate.cc</code></p>\n</li>\n<li>\n<p>Instead of having three dedicated threads for each discovery object, there's now only one. It still works using a reactor pattern waiting in <code>poll()</code> until there's activity in the socket or other things to do. The timeout is now dynamic, to make sure that we leave <code>poll()</code> if we have to send a heartbeat or check the validity of the discovery information (which was previously performed in separate threads).</p>\n</li>\n<li>\n<p>I had to prefix <code>g_</code> to some global variables in test files to avoid warnings. I didn't rename all globals for not making this pull request even bigger. There's a bit of inconsistency in some global variables but I'll fix it in a separate pull request that will add <code>g_</code> prefix to all global variables.</p>\n</li>\n<li>\n<p>Added a few <code>const</code> to some functions.</p>\n</li>\n<li>\n<p>Remove <code>advertiseInterval</code> member variable and its accessors. It was unused.</p>\n</li>\n</ul>\n<p>Sorry for the size of this PR.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any/14/\" rel=\"nofollow\">Trusty</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/103/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/207/\" rel=\"nofollow\">Windows</a> <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f536.png\" alt=\"\ud83d\udd36\" title=\":large_orange_diamond:\" data-emoji-short-name=\":large_orange_diamond:\" /> It seems there's an unrelated problem on Jenkins. All tests passed on my local VM.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Discovery v2", "markup": "markdown", "html": "<p>Discovery v2</p>", "type": "rendered"}}, "type": "pullrequest", "description": "A better design for the discovery class:\r\n\r\n* Instead of having two variants per function (e.g.: `AdvertiseMsg()`, `AdvertiseSrv()`), we now have only one variant (`Advertise()`, `Subscribe()`, etc.). We now have two `Discovery` objects, one for topics and the other for services, operating on different ports.\r\n\r\n* The `Discovery` class is templated now, so I removed `Discovery.cc` and `DiscoveryPrivate.cc`\r\n\r\n* Instead of having three dedicated threads for each discovery object, there's now only one. It still works using a reactor pattern waiting in `poll()` until there's activity in the socket or other things to do. The timeout is now dynamic, to make sure that we leave `poll()` if we have to send a heartbeat or check the validity of the discovery information (which was previously performed in separate threads).\r\n\r\n* I had to prefix `g_` to some global variables in test files to avoid warnings. I didn't rename all globals for not making this pull request even bigger. There's a bit of inconsistency in some global variables but I'll fix it in a separate pull request that will add `g_` prefix to all global variables.\r\n\r\n* Added a few `const` to some functions.\r\n\r\n* Remove `advertiseInterval` member variable and its accessors. It was unused.\r\n\r\nSorry for the size of this PR.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any/14/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/103/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/207/) :large_orange_diamond: It seems there's an unrelated problem on Jenkins. All tests passed on my local VM.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/133/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:c025ad5f071b%0Db6f04f40e1f5?from_pullrequest_id=133"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/133/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/133.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/133/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/133/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/133"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/133/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:c025ad5f071b%0Db6f04f40e1f5?from_pullrequest_id=133"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/133/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/133/statuses_page=1.json"}}, "title": "Discovery v2", "close_source_branch": true, "reviewers": [], "id": 133, "destination": {"commit": {"hash": "b6f04f40e1f5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/b6f04f40e1f5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/b6f04f40e1f5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2016-05-11T23:42:42.682479+00:00", "summary": {"raw": "A better design for the discovery class:\r\n\r\n* Instead of having two variants per function (e.g.: `AdvertiseMsg()`, `AdvertiseSrv()`), we now have only one variant (`Advertise()`, `Subscribe()`, etc.). We now have two `Discovery` objects, one for topics and the other for services, operating on different ports.\r\n\r\n* The `Discovery` class is templated now, so I removed `Discovery.cc` and `DiscoveryPrivate.cc`\r\n\r\n* Instead of having three dedicated threads for each discovery object, there's now only one. It still works using a reactor pattern waiting in `poll()` until there's activity in the socket or other things to do. The timeout is now dynamic, to make sure that we leave `poll()` if we have to send a heartbeat or check the validity of the discovery information (which was previously performed in separate threads).\r\n\r\n* I had to prefix `g_` to some global variables in test files to avoid warnings. I didn't rename all globals for not making this pull request even bigger. There's a bit of inconsistency in some global variables but I'll fix it in a separate pull request that will add `g_` prefix to all global variables.\r\n\r\n* Added a few `const` to some functions.\r\n\r\n* Remove `advertiseInterval` member variable and its accessors. It was unused.\r\n\r\nSorry for the size of this PR.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any/14/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/103/) :large_blue_circle: \r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/207/) :large_orange_diamond: It seems there's an unrelated problem on Jenkins. All tests passed on my local VM.", "markup": "markdown", "html": "<p>A better design for the discovery class:</p>\n<ul>\n<li>\n<p>Instead of having two variants per function (e.g.: <code>AdvertiseMsg()</code>, <code>AdvertiseSrv()</code>), we now have only one variant (<code>Advertise()</code>, <code>Subscribe()</code>, etc.). We now have two <code>Discovery</code> objects, one for topics and the other for services, operating on different ports.</p>\n</li>\n<li>\n<p>The <code>Discovery</code> class is templated now, so I removed <code>Discovery.cc</code> and <code>DiscoveryPrivate.cc</code></p>\n</li>\n<li>\n<p>Instead of having three dedicated threads for each discovery object, there's now only one. It still works using a reactor pattern waiting in <code>poll()</code> until there's activity in the socket or other things to do. The timeout is now dynamic, to make sure that we leave <code>poll()</code> if we have to send a heartbeat or check the validity of the discovery information (which was previously performed in separate threads).</p>\n</li>\n<li>\n<p>I had to prefix <code>g_</code> to some global variables in test files to avoid warnings. I didn't rename all globals for not making this pull request even bigger. There's a bit of inconsistency in some global variables but I'll fix it in a separate pull request that will add <code>g_</code> prefix to all global variables.</p>\n</li>\n<li>\n<p>Added a few <code>const</code> to some functions.</p>\n</li>\n<li>\n<p>Remove <code>advertiseInterval</code> member variable and its accessors. It was unused.</p>\n</li>\n</ul>\n<p>Sorry for the size of this PR.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any/14/\" rel=\"nofollow\">Trusty</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/103/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/207/\" rel=\"nofollow\">Windows</a> <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f536.png\" alt=\"\ud83d\udd36\" title=\":large_orange_diamond:\" data-emoji-short-name=\":large_orange_diamond:\" /> It seems there's an unrelated problem on Jenkins. All tests passed on my local VM.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "8382500df1dd", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/8382500df1dd.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/8382500df1dd"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "discovery_v2"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-06-08T19:17:14.449338+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2016-06-22T01:50:02.540479+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2016-06-23T14:49:38.046718+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2016-06-23T17:47:16.341343+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "c025ad5f071b", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c025ad5f071b.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c025ad5f071b"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}