{"pagelen": 50, "values": [{"update": {"description": "See this [issue](https://bitbucket.org/osrf/haptix-comm/issue/10/matlab-crashes-on-exit).\r\n\r\nThe workaround consists on creating the ZMQ context as a raw pointer, create the object in the constructor but don't destroy it in the destructor. This will leak some memory that should be handled by the OS but it doesn't cause MATLAB to hang anymore.\r\n\r\nThis pull request also:\r\n\r\n* Fix some crashs on Windows while waiting for sockets to terminate.\r\n*  fixes the compilation of the examples on Windows.\r\n* Add the ZeroMQ DLLs to the examples build folder.\r\n\r\nThanks to @gerkey for starting this fix.", "title": "Workaround for avoiding a hang while using MATLAB", "destination": {"commit": {"hash": "015a4dde1ff5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/015a4dde1ff5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/015a4dde1ff5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d7b389f42bb5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/d7b389f42bb5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/d7b389f42bb5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "windows_shutdown"}}, "state": "MERGED", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-03-11T23:25:06.688439+00:00"}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"approval": {"date": "2015-03-11T23:20:16.462889+00:00", "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612963.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612963"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "I tested this branch on sides of the haptix-comm loop and saw no catastrophic failures. The Matlab hanging issue appears to be fixed. The workaround might have some negative implications later down the road but I think it's worth not crashing Matlab every time we exit.", "markup": "markdown", "html": "<p>I tested this branch on sides of the haptix-comm loop and saw no catastrophic failures. The Matlab hanging issue appears to be fixed. The workaround might have some negative implications later down the road but I think it's worth not crashing Matlab every time we exit.</p>", "type": "rendered"}, "created_on": "2015-03-11T23:20:14.908854+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-11T23:20:14.916305+00:00", "type": "pullrequest_comment", "id": 5612963}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612725.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612725"}}, "parent": {"id": 5612528, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612528.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612528"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "The sockets are always destroyed in any case. In Linux we destroy the context object too (there's a conditional ifdef). If we don't do it, I guess nothing should happen. We would leak some memory that should be recycled by the kernel when the process terminates.", "markup": "markdown", "html": "<p>The sockets are always destroyed in any case. In Linux we destroy the context object too (there's a conditional ifdef). If we don't do it, I guess nothing should happen. We would leak some memory that should be recycled by the kernel when the process terminates.</p>", "type": "rendered"}, "created_on": "2015-03-11T23:02:51.628758+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2015-03-11T23:02:51.634673+00:00", "type": "pullrequest_comment", "id": 5612725}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612528.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612528"}}, "parent": {"id": 5612454, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612454.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612454"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "What happens if we don't destroy the ZMQ socket and context on Linux?", "markup": "markdown", "html": "<p>What happens if we don't destroy the ZMQ socket and context on Linux?</p>", "type": "rendered"}, "created_on": "2015-03-11T22:49:27.612591+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {}, "updated_on": "2015-03-11T22:49:27.618105+00:00", "type": "pullrequest_comment", "id": 5612528}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612454.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612454"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "Nice", "markup": "markdown", "html": "<p>Nice</p>", "type": "rendered"}, "created_on": "2015-03-11T22:44:07.121494+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {}, "updated_on": "2015-03-11T22:44:07.128908+00:00", "type": "pullrequest_comment", "id": 5612454}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612328.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612328"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "It does indeed fix the hanging problem. I'll take a closer look at the code.", "markup": "markdown", "html": "<p>It does indeed fix the hanging problem. I'll take a closer look at the code.</p>", "type": "rendered"}, "created_on": "2015-03-11T22:36:13.706518+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-11T22:36:13.712841+00:00", "type": "pullrequest_comment", "id": 5612328}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"approval": {"date": "2015-03-11T00:51:20.592745+00:00", "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5586766.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5586766"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "To help others with understanding some of the changes: the per-thread `fooExiting` variables and associated checks are essentially implementing our own version of `std::thread::join()`.  We're doing that to work around a [known bug in VS2013](https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc) that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the `NodeShared` singleton, a static that won't get deallocated until exit.\n\nThe other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).", "markup": "markdown", "html": "<p>To help others with understanding some of the changes: the per-thread <code>fooExiting</code> variables and associated checks are essentially implementing our own version of <code>std::thread::join()</code>.  We're doing that to work around a <a data-is-external-link=\"true\" href=\"https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc\" rel=\"nofollow\">known bug in VS2013</a> that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the <code>NodeShared</code> singleton, a static that won't get deallocated until exit.</p>\n<p>The other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).</p>", "type": "rendered"}, "created_on": "2015-03-11T00:51:12.591877+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-03-11T00:51:12.598863+00:00", "type": "pullrequest_comment", "id": 5586766}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"update": {"description": "See this [issue](https://bitbucket.org/osrf/haptix-comm/issue/10/matlab-crashes-on-exit).\r\n\r\nThe workaround consists on creating the ZMQ context as a raw pointer, create the object in the constructor but don't destroy it in the destructor. This will leak some memory that should be handled by the OS but it doesn't cause MATLAB to hang anymore.\r\n\r\nThis pull request also:\r\n\r\n* Fix some crashs on Windows while waiting for sockets to terminate.\r\n*  fixes the compilation of the examples on Windows.\r\n* Add the ZeroMQ DLLs to the examples build folder.\r\n\r\nThanks to @gerkey for starting this fix.", "title": "Workaround for avoiding a hang while using MATLAB", "destination": {"commit": {"hash": "db7797c7c7fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/db7797c7c7fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/db7797c7c7fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d7b389f42bb5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/d7b389f42bb5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/d7b389f42bb5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "windows_shutdown"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-03-10T22:56:02.675239+00:00"}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"update": {"description": "See this [issue](https://bitbucket.org/osrf/haptix-comm/issue/10/matlab-crashes-on-exit).\r\n\r\nThe workaround consists on creating the ZMQ context as a raw pointer, create the object in the constructor but don't destroy it in the destructor. This will leak some memory that should be handled by the OS but it doesn't cause MATLAB to hang anymore.\r\n\r\nThis pull request also fixes the compilation of the examples on Windows and add the ZeroMQ DLLs to the examples build folder.", "title": "Workaround for avoiding a hang while using MATLAB", "destination": {"commit": {"hash": "db7797c7c7fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/db7797c7c7fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/db7797c7c7fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d7b389f42bb5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/d7b389f42bb5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/d7b389f42bb5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "windows_shutdown"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-03-10T22:53:39.686094+00:00"}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}, {"update": {"description": "See this [issue](https://bitbucket.org/osrf/haptix-comm/issue/10/matlab-crashes-on-exit).\r\n\r\nThe workaround consists on creating the ZMQ context as a raw pointer, create the object in the constructor but don't destroy it in the destructor. This will leak some memory that should be handled by the OS but it doesn't cause MATLAB to hang anymore.\r\n\r\nThis pull request also fixes the compilation of the examples on Windows and add the ZeroMQ DLLs to the examples build folder.", "title": "Workaround for avoiding a hang while using MATLAB", "destination": {"commit": {"hash": "db7797c7c7fe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/db7797c7c7fe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/db7797c7c7fe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d7b389f42bb5", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/d7b389f42bb5.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/d7b389f42bb5"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "windows_shutdown"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-03-10T22:53:39.663413+00:00"}, "pull_request": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}}]}