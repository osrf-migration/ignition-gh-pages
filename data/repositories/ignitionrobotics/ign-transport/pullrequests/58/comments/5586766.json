{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5586766.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5586766"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "To help others with understanding some of the changes: the per-thread `fooExiting` variables and associated checks are essentially implementing our own version of `std::thread::join()`.  We're doing that to work around a [known bug in VS2013](https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc) that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the `NodeShared` singleton, a static that won't get deallocated until exit.\n\nThe other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).", "markup": "markdown", "html": "<p>To help others with understanding some of the changes: the per-thread <code>fooExiting</code> variables and associated checks are essentially implementing our own version of <code>std::thread::join()</code>.  We're doing that to work around a <a data-is-external-link=\"true\" href=\"https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc\" rel=\"nofollow\">known bug in VS2013</a> that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the <code>NodeShared</code> singleton, a static that won't get deallocated until exit.</p>\n<p>The other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).</p>", "type": "rendered"}, "created_on": "2015-03-11T00:51:12.591877+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-03-11T00:51:12.598863+00:00", "type": "pullrequest_comment", "id": 5586766}