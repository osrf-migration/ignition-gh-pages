{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5586766.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5586766"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "To help others with understanding some of the changes: the per-thread `fooExiting` variables and associated checks are essentially implementing our own version of `std::thread::join()`.  We're doing that to work around a [known bug in VS2013](https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc) that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the `NodeShared` singleton, a static that won't get deallocated until exit.\n\nThe other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).", "markup": "markdown", "html": "<p>To help others with understanding some of the changes: the per-thread <code>fooExiting</code> variables and associated checks are essentially implementing our own version of <code>std::thread::join()</code>.  We're doing that to work around a <a data-is-external-link=\"true\" href=\"https://connect.microsoft.com/VisualStudio/feedback/details/747145/std-thread-join-hangs-if-called-after-main-exits-when-using-vs2012-rc\" rel=\"nofollow\">known bug in VS2013</a> that causes a hang when you try to join a thread after the main thread has exited.  We need to do that here because we start threads on creation of the <code>NodeShared</code> singleton, a static that won't get deallocated until exit.</p>\n<p>The other change, to use a bare pointer for the ZMQ context, then not delete it on Windows, is a just a dirty hack (but one that I recommended :).</p>", "type": "rendered"}, "created_on": "2015-03-11T00:51:12.591877+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-03-11T00:51:12.598863+00:00", "type": "pullrequest_comment", "id": 5586766}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612328.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612328"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "It does indeed fix the hanging problem. I'll take a closer look at the code.", "markup": "markdown", "html": "<p>It does indeed fix the hanging problem. I'll take a closer look at the code.</p>", "type": "rendered"}, "created_on": "2015-03-11T22:36:13.706518+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-11T22:36:13.712841+00:00", "type": "pullrequest_comment", "id": 5612328}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612454.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:d7b389f42bb5..015a4dde1ff5?path=src%2FNodeShared.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612454"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "Nice", "markup": "markdown", "html": "<p>Nice</p>", "type": "rendered"}, "created_on": "2015-03-11T22:44:07.121494+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": 204, "from": null, "path": "src/NodeShared.cc"}, "updated_on": "2015-03-11T22:44:07.128908+00:00", "type": "pullrequest_comment", "id": 5612454}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612528.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:None..None?path=src%2FNodeShared.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612528"}}, "parent": {"id": 5612454, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612454.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612454"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "What happens if we don't destroy the ZMQ socket and context on Linux?", "markup": "markdown", "html": "<p>What happens if we don't destroy the ZMQ socket and context on Linux?</p>", "type": "rendered"}, "created_on": "2015-03-11T22:49:27.612591+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": null, "from": null, "path": "src/NodeShared.cc"}, "updated_on": "2015-03-11T22:49:27.618105+00:00", "type": "pullrequest_comment", "id": 5612528}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612725.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:None..None?path=src%2FNodeShared.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612725"}}, "parent": {"id": 5612528, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612528.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612528"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "The sockets are always destroyed in any case. In Linux we destroy the context object too (there's a conditional ifdef). If we don't do it, I guess nothing should happen. We would leak some memory that should be recycled by the kernel when the process terminates.", "markup": "markdown", "html": "<p>The sockets are always destroyed in any case. In Linux we destroy the context object too (there's a conditional ifdef). If we don't do it, I guess nothing should happen. We would leak some memory that should be recycled by the kernel when the process terminates.</p>", "type": "rendered"}, "created_on": "2015-03-11T23:02:51.628758+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "path": "src/NodeShared.cc"}, "updated_on": "2015-03-11T23:02:51.634673+00:00", "type": "pullrequest_comment", "id": 5612725}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58/comments/5612963.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58/_/diff#comment-5612963"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 58, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/58.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/58"}}, "title": "Workaround for avoiding a hang while using MATLAB"}, "content": {"raw": "I tested this branch on sides of the haptix-comm loop and saw no catastrophic failures. The Matlab hanging issue appears to be fixed. The workaround might have some negative implications later down the road but I think it's worth not crashing Matlab every time we exit.", "markup": "markdown", "html": "<p>I tested this branch on sides of the haptix-comm loop and saw no catastrophic failures. The Matlab hanging issue appears to be fixed. The workaround might have some negative implications later down the road but I think it's worth not crashing Matlab every time we exit.</p>", "type": "rendered"}, "created_on": "2015-03-11T23:20:14.908854+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-11T23:20:14.916305+00:00", "type": "pullrequest_comment", "id": 5612963}], "page": 1, "size": 6}