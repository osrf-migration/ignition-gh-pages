{"rendered": {"description": {"raw": "This pull request adds support for a generic callback that allows to receive messages of any type. This is useful for implementing `ign topic --echo`, a bridge, or a similar use case where there's no prior knowledge about the types on the subscriber side.\r\n\r\nThe signature of the alternative callback function is:\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const google::protobuf::Message &_msg)\r\n```\r\n\r\nSee the new `example/subscriber_generic.cc` for a minimal example.\r\n\r\nNote that the subscriber won't be able to receive any custom message that only the publisher knows. In order to make a complete self describing message and make this scenario work, much more changes are required. This will probably be tackled in future pull requests.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/182/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/189/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/359/) :large_blue_circle:", "markup": "markdown", "html": "<p>This pull request adds support for a generic callback that allows to receive messages of any type. This is useful for implementing <code>ign topic --echo</code>, a bridge, or a similar use case where there's no prior knowledge about the types on the subscriber side.</p>\n<p>The signature of the alternative callback function is:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>See the new <code>example/subscriber_generic.cc</code> for a minimal example.</p>\n<p>Note that the subscriber won't be able to receive any custom message that only the publisher knows. In order to make a complete self describing message and make this scenario work, much more changes are required. This will probably be tackled in future pull requests.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/182/\" rel=\"nofollow\">Trusty</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/189/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/359/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Generic callback", "markup": "markdown", "html": "<p>Generic callback</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request adds support for a generic callback that allows to receive messages of any type. This is useful for implementing `ign topic --echo`, a bridge, or a similar use case where there's no prior knowledge about the types on the subscriber side.\r\n\r\nThe signature of the alternative callback function is:\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const google::protobuf::Message &_msg)\r\n```\r\n\r\nSee the new `example/subscriber_generic.cc` for a minimal example.\r\n\r\nNote that the subscriber won't be able to receive any custom message that only the publisher knows. In order to make a complete self describing message and make this scenario work, much more changes are required. This will probably be tackled in future pull requests.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/182/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/189/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/359/) :large_blue_circle:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/188/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:0eb83c66803c%0D2dd32060fb81?from_pullrequest_id=188"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/188/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/188"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:0eb83c66803c%0D2dd32060fb81?from_pullrequest_id=188"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/188/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188/statuses_page=1.json"}}, "title": "Generic callback", "close_source_branch": true, "reviewers": [], "id": 188, "destination": {"commit": {"hash": "2dd32060fb81", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/2dd32060fb81.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/2dd32060fb81"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2016-12-01T22:23:27.660220+00:00", "summary": {"raw": "This pull request adds support for a generic callback that allows to receive messages of any type. This is useful for implementing `ign topic --echo`, a bridge, or a similar use case where there's no prior knowledge about the types on the subscriber side.\r\n\r\nThe signature of the alternative callback function is:\r\n\r\n```\r\n#!c++\r\n\r\nvoid cb(const google::protobuf::Message &_msg)\r\n```\r\n\r\nSee the new `example/subscriber_generic.cc` for a minimal example.\r\n\r\nNote that the subscriber won't be able to receive any custom message that only the publisher knows. In order to make a complete self describing message and make this scenario work, much more changes are required. This will probably be tackled in future pull requests.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/182/) :large_blue_circle: \r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/189/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/359/) :large_blue_circle:", "markup": "markdown", "html": "<p>This pull request adds support for a generic callback that allows to receive messages of any type. This is useful for implementing <code>ign topic --echo</code>, a bridge, or a similar use case where there's no prior knowledge about the types on the subscriber side.</p>\n<p>The signature of the alternative callback function is:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"n\">cb</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span> <span class=\"o\">&amp;</span><span class=\"n\">_msg</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>See the new <code>example/subscriber_generic.cc</code> for a minimal example.</p>\n<p>Note that the subscriber won't be able to receive any custom message that only the publisher knows. In order to make a complete self describing message and make this scenario work, much more changes are required. This will probably be tackled in future pull requests.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/182/\" rel=\"nofollow\">Trusty</a> :large_blue_circle: </li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/189/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/359/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f9ff8c2f1911", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f9ff8c2f1911.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f9ff8c2f1911"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "generic_callback"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-12-02T02:02:53.941510+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-12-15T17:00:13.360977+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2016-12-14T22:12:10.839760+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2016-12-15T17:00:13.426304+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "0eb83c66803c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/0eb83c66803c.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/0eb83c66803c"}}}, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}