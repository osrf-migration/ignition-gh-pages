{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/248/comments/51882860.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/248/_/diff#comment-51882860"}}, "parent": {"id": 51881351, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/248/comments/51881351.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/248/_/diff#comment-51881351"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 248, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/248.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/248"}}, "title": "Code layout for record/playback"}, "content": {"raw": "When I was implementing the `Components` branch of `ign-cmake`, that's how I originally structured the directories for `ign-common`. It can work, but I ran into some rather irritating hurdles: You end up needing to deal with the logic of whether or not to build/install the component library in multiple places.\n\nIn other words, somewhere in `ign-transport/src/` or `ign-transport/src/log/` you need to decide whether or not to build the component library. Then in `ign-transport/include/ignition/transport/` you need to decide whether or not to include the headers. Then in `tests/` you need to decide whether to build tests that require the specific component. This means that you need to make sure the decision to build or install gets propagated along multiple paths in the build system, and that it's used consistently in all of those places.\n\nBy contrast, if you create a top-level subdirectory for the component, you can isolate all this logic into a single place and choose to skip over the entire subdirectory if you don't want to build the component.\n\nA working example of this can be found in [the Components branch of `ign-common`](#!/ignitionrobotics/ign-common/src/f62beda459395d9b96efface80a6f5060da74086/?at=Components). In that directory structure, we have the top-level subdirectories `av`, `events`, and `graphics`, each referring to a different component with a different set of dependencies.\n\nIn the top-level [CMakeLists.txt](#!/ignitionrobotics/ign-common/src/f62beda459395d9b96efface80a6f5060da74086/CMakeLists.txt?at=Components&fileviewer=file-view-default) the macro `ign_configure_build(QUIT_IF_BUILD_ERRORS COMPONENTS av graphics events)` will skip over any component subdirectories whose dependencies were not satisfied (or if a user has specified `SKIP_<component>`). Inside each of the component subdirectories, the build scripts can safely assume that everything inside of it is meant to be built and installed. This lets us write scripts for components that are almost identical to the scripts we write for the main libraries (with a few exceptions, like using `ign_add_component(~)` instead of `ign_create_main_library(~)`).\n\nWe're not planning on using the `Components` branch of `ign-cmake` for this project (yet), but I think we'd benefit from this directory structure if we decide to have logging as a separate library. If logging isn't a separate library, then the source files should just go in `ign-transport/src`.", "markup": "markdown", "html": "<p>When I was implementing the <code>Components</code> branch of <code>ign-cmake</code>, that's how I originally structured the directories for <code>ign-common</code>. It can work, but I ran into some rather irritating hurdles: You end up needing to deal with the logic of whether or not to build/install the component library in multiple places.</p>\n<p>In other words, somewhere in <code>ign-transport/src/</code> or <code>ign-transport/src/log/</code> you need to decide whether or not to build the component library. Then in <code>ign-transport/include/ignition/transport/</code> you need to decide whether or not to include the headers. Then in <code>tests/</code> you need to decide whether to build tests that require the specific component. This means that you need to make sure the decision to build or install gets propagated along multiple paths in the build system, and that it's used consistently in all of those places.</p>\n<p>By contrast, if you create a top-level subdirectory for the component, you can isolate all this logic into a single place and choose to skip over the entire subdirectory if you don't want to build the component.</p>\n<p>A working example of this can be found in <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-common/src/f62beda459395d9b96efface80a6f5060da74086/?at=Components\" rel=\"nofollow\">the Components branch of <code>ign-common</code></a>. In that directory structure, we have the top-level subdirectories <code>av</code>, <code>events</code>, and <code>graphics</code>, each referring to a different component with a different set of dependencies.</p>\n<p>In the top-level <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-common/src/f62beda459395d9b96efface80a6f5060da74086/CMakeLists.txt?at=Components&amp;fileviewer=file-view-default\" rel=\"nofollow\">CMakeLists.txt</a> the macro <code>ign_configure_build(QUIT_IF_BUILD_ERRORS COMPONENTS av graphics events)</code> will skip over any component subdirectories whose dependencies were not satisfied (or if a user has specified <code>SKIP_&lt;component&gt;</code>). Inside each of the component subdirectories, the build scripts can safely assume that everything inside of it is meant to be built and installed. This lets us write scripts for components that are almost identical to the scripts we write for the main libraries (with a few exceptions, like using <code>ign_add_component(~)</code> instead of <code>ign_create_main_library(~)</code>).</p>\n<p>We're not planning on using the <code>Components</code> branch of <code>ign-cmake</code> for this project (yet), but I think we'd benefit from this directory structure if we decide to have logging as a separate library. If logging isn't a separate library, then the source files should just go in <code>ign-transport/src</code>.</p>", "type": "rendered"}, "created_on": "2017-12-13T22:05:39.329370+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-12-13T22:05:39.331989+00:00", "type": "pullrequest_comment", "id": 51882860}