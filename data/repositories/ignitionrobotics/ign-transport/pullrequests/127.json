{"rendered": {"description": {"raw": "If [ignition-tools](#!/ignitionrobotics/ign-tools) is installed, the test `tools/UNIT_IGN_TEST` is executed. This test verifies the transport command line utilities (e.g. `ign topic -l`).\r\n\r\n`ign` parses a set of yaml files to find the list of subcommands that are available. As an example, ignition transport makes available the subcommands `topic` and `service`. The yaml configuration file also contains the path to a ruby script that parses and executes the subcommand specified. Here's an example of the `transport1.yaml` that is installed in my machine with ignition transport:\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /home/caguero/local/lib/ruby/ignition/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n```\r\n\r\nBefore this pull request, running `tools/UNIT_IGN_TEST` without doing `make install` was not working properly, as the value of `library_path` inside `transport1.rb` was pointing to the installed `cmdtransport1.rb` instead of pointing to the recently compiled version available only under the `build` directory. This pull request solves this problem.\r\n\r\nWe now create two versions of `transport1.yaml`, one for internal testing and the other for installation. The internal testing version has a `library_path` pointing to the `cmdtransport1.rb` version under `build`:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /data/ign-transport/build/src/cmd/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n---\r\n```\r\n\r\nIt also fixes a problem in Mac OS X running some test:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nlibc++abi.dylib: terminating with uncaught exception of type std::__1::system_error: recursive_mutex lock failed: Invalid argument\r\n```\r\n\r\nI believe this was caused by the destruction of some NodeShared member variables before destructing the `Discovery` object. If Discovery triggers a NodeShared callback during the destruction phase, some member (mutex) might be already destroyed.\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/96/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/90/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/183/) :large_blue_circle:", "markup": "markdown", "html": "<p>If <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-tools\" rel=\"nofollow\">ignition-tools</a> is installed, the test <code>tools/UNIT_IGN_TEST</code> is executed. This test verifies the transport command line utilities (e.g. <code>ign topic -l</code>).</p>\n<p><code>ign</code> parses a set of yaml files to find the list of subcommands that are available. As an example, ignition transport makes available the subcommands <code>topic</code> and <code>service</code>. The yaml configuration file also contains the path to a ruby script that parses and executes the subcommand specified. Here's an example of the <code>transport1.yaml</code> that is installed in my machine with ignition transport:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">---</span> <span class=\"err\">#</span> <span class=\"n\">Subcommands</span> <span class=\"n\">available</span> <span class=\"n\">inside</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"p\">.</span>\n<span class=\"nl\">format</span><span class=\"p\">:</span> <span class=\"mf\">1.0.0</span>\n<span class=\"nl\">library_name</span><span class=\"p\">:</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span>\n<span class=\"nl\">library_version</span><span class=\"p\">:</span> <span class=\"mf\">1.1.0</span>\n<span class=\"nl\">library_path</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">caguero</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">cmdtransport1</span>\n<span class=\"nl\">commands</span><span class=\"p\">:</span>\n    <span class=\"o\">-</span> <span class=\"nl\">topic</span>   <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">topics</span><span class=\"p\">.</span>\n    <span class=\"o\">-</span> <span class=\"nl\">service</span> <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">services</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>Before this pull request, running <code>tools/UNIT_IGN_TEST</code> without doing <code>make install</code> was not working properly, as the value of <code>library_path</code> inside <code>transport1.rb</code> was pointing to the installed <code>cmdtransport1.rb</code> instead of pointing to the recently compiled version available only under the <code>build</code> directory. This pull request solves this problem.</p>\n<p>We now create two versions of <code>transport1.yaml</code>, one for internal testing and the other for installation. The internal testing version has a <code>library_path</code> pointing to the <code>cmdtransport1.rb</code> version under <code>build</code>:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">---</span> <span class=\"err\">#</span> <span class=\"n\">Subcommands</span> <span class=\"n\">available</span> <span class=\"n\">inside</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"p\">.</span>\n<span class=\"nl\">format</span><span class=\"p\">:</span> <span class=\"mf\">1.0.0</span>\n<span class=\"nl\">library_name</span><span class=\"p\">:</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span>\n<span class=\"nl\">library_version</span><span class=\"p\">:</span> <span class=\"mf\">1.1.0</span>\n<span class=\"nl\">library_path</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">cmd</span><span class=\"o\">/</span><span class=\"n\">cmdtransport1</span>\n<span class=\"nl\">commands</span><span class=\"p\">:</span>\n    <span class=\"o\">-</span> <span class=\"nl\">topic</span>   <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">topics</span><span class=\"p\">.</span>\n    <span class=\"o\">-</span> <span class=\"nl\">service</span> <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">services</span><span class=\"p\">.</span>\n<span class=\"o\">---</span>\n</pre></div>\n\n\n<p>It also fixes a problem in Mac OS X running some test:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">libc</span><span class=\"o\">++</span><span class=\"n\">abi</span><span class=\"p\">.</span><span class=\"nl\">dylib</span><span class=\"p\">:</span> <span class=\"n\">terminating</span> <span class=\"n\">with</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"nl\">system_error</span><span class=\"p\">:</span> <span class=\"n\">recursive_mutex</span> <span class=\"n\">lock</span> <span class=\"nl\">failed</span><span class=\"p\">:</span> <span class=\"n\">Invalid</span> <span class=\"n\">argument</span>\n</pre></div>\n\n\n<p>I believe this was caused by the destruction of some NodeShared member variables before destructing the <code>Discovery</code> object. If Discovery triggers a NodeShared callback during the destruction phase, some member (mutex) might be already destroyed.</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/96/\" rel=\"nofollow\">Trusty</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/90/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/183/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "title": {"raw": "ign_TEST without make install", "markup": "markdown", "html": "<p>ign_TEST without make install</p>", "type": "rendered"}}, "type": "pullrequest", "description": "If [ignition-tools](#!/ignitionrobotics/ign-tools) is installed, the test `tools/UNIT_IGN_TEST` is executed. This test verifies the transport command line utilities (e.g. `ign topic -l`).\r\n\r\n`ign` parses a set of yaml files to find the list of subcommands that are available. As an example, ignition transport makes available the subcommands `topic` and `service`. The yaml configuration file also contains the path to a ruby script that parses and executes the subcommand specified. Here's an example of the `transport1.yaml` that is installed in my machine with ignition transport:\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /home/caguero/local/lib/ruby/ignition/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n```\r\n\r\nBefore this pull request, running `tools/UNIT_IGN_TEST` without doing `make install` was not working properly, as the value of `library_path` inside `transport1.rb` was pointing to the installed `cmdtransport1.rb` instead of pointing to the recently compiled version available only under the `build` directory. This pull request solves this problem.\r\n\r\nWe now create two versions of `transport1.yaml`, one for internal testing and the other for installation. The internal testing version has a `library_path` pointing to the `cmdtransport1.rb` version under `build`:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /data/ign-transport/build/src/cmd/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n---\r\n```\r\n\r\nIt also fixes a problem in Mac OS X running some test:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nlibc++abi.dylib: terminating with uncaught exception of type std::__1::system_error: recursive_mutex lock failed: Invalid argument\r\n```\r\n\r\nI believe this was caused by the destruction of some NodeShared member variables before destructing the `Discovery` object. If Discovery triggers a NodeShared callback during the destruction phase, some member (mutex) might be already destroyed.\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/96/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/90/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/183/) :large_blue_circle:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/127/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:79b6f93df9e6%0D226d4b7cb29a?from_pullrequest_id=127"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/127/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/127.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/127/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/127/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/127"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/127/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:79b6f93df9e6%0D226d4b7cb29a?from_pullrequest_id=127"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/127/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/127/statuses_page=1.json"}}, "title": "ign_TEST without make install", "close_source_branch": true, "reviewers": [], "id": 127, "destination": {"commit": {"hash": "226d4b7cb29a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/226d4b7cb29a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/226d4b7cb29a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "created_on": "2016-04-21T22:54:26.534584+00:00", "summary": {"raw": "If [ignition-tools](#!/ignitionrobotics/ign-tools) is installed, the test `tools/UNIT_IGN_TEST` is executed. This test verifies the transport command line utilities (e.g. `ign topic -l`).\r\n\r\n`ign` parses a set of yaml files to find the list of subcommands that are available. As an example, ignition transport makes available the subcommands `topic` and `service`. The yaml configuration file also contains the path to a ruby script that parses and executes the subcommand specified. Here's an example of the `transport1.yaml` that is installed in my machine with ignition transport:\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /home/caguero/local/lib/ruby/ignition/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n```\r\n\r\nBefore this pull request, running `tools/UNIT_IGN_TEST` without doing `make install` was not working properly, as the value of `library_path` inside `transport1.rb` was pointing to the installed `cmdtransport1.rb` instead of pointing to the recently compiled version available only under the `build` directory. This pull request solves this problem.\r\n\r\nWe now create two versions of `transport1.yaml`, one for internal testing and the other for installation. The internal testing version has a `library_path` pointing to the `cmdtransport1.rb` version under `build`:\r\n\r\n\r\n```\r\n#!c++\r\n\r\n--- # Subcommands available inside ignition-transport.\r\nformat: 1.0.0\r\nlibrary_name: ignition-transport\r\nlibrary_version: 1.1.0\r\nlibrary_path: /data/ign-transport/build/src/cmd/cmdtransport1\r\ncommands:\r\n    - topic   : Print information about topics.\r\n    - service : Print information about services.\r\n---\r\n```\r\n\r\nIt also fixes a problem in Mac OS X running some test:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nlibc++abi.dylib: terminating with uncaught exception of type std::__1::system_error: recursive_mutex lock failed: Invalid argument\r\n```\r\n\r\nI believe this was caused by the destruction of some NodeShared member variables before destructing the `Discovery` object. If Discovery triggers a NodeShared callback during the destruction phase, some member (mutex) might be already destroyed.\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/96/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/90/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/183/) :large_blue_circle:", "markup": "markdown", "html": "<p>If <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-tools\" rel=\"nofollow\">ignition-tools</a> is installed, the test <code>tools/UNIT_IGN_TEST</code> is executed. This test verifies the transport command line utilities (e.g. <code>ign topic -l</code>).</p>\n<p><code>ign</code> parses a set of yaml files to find the list of subcommands that are available. As an example, ignition transport makes available the subcommands <code>topic</code> and <code>service</code>. The yaml configuration file also contains the path to a ruby script that parses and executes the subcommand specified. Here's an example of the <code>transport1.yaml</code> that is installed in my machine with ignition transport:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">---</span> <span class=\"err\">#</span> <span class=\"n\">Subcommands</span> <span class=\"n\">available</span> <span class=\"n\">inside</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"p\">.</span>\n<span class=\"nl\">format</span><span class=\"p\">:</span> <span class=\"mf\">1.0.0</span>\n<span class=\"nl\">library_name</span><span class=\"p\">:</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span>\n<span class=\"nl\">library_version</span><span class=\"p\">:</span> <span class=\"mf\">1.1.0</span>\n<span class=\"nl\">library_path</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">caguero</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">cmdtransport1</span>\n<span class=\"nl\">commands</span><span class=\"p\">:</span>\n    <span class=\"o\">-</span> <span class=\"nl\">topic</span>   <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">topics</span><span class=\"p\">.</span>\n    <span class=\"o\">-</span> <span class=\"nl\">service</span> <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">services</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>Before this pull request, running <code>tools/UNIT_IGN_TEST</code> without doing <code>make install</code> was not working properly, as the value of <code>library_path</code> inside <code>transport1.rb</code> was pointing to the installed <code>cmdtransport1.rb</code> instead of pointing to the recently compiled version available only under the <code>build</code> directory. This pull request solves this problem.</p>\n<p>We now create two versions of <code>transport1.yaml</code>, one for internal testing and the other for installation. The internal testing version has a <code>library_path</code> pointing to the <code>cmdtransport1.rb</code> version under <code>build</code>:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"o\">---</span> <span class=\"err\">#</span> <span class=\"n\">Subcommands</span> <span class=\"n\">available</span> <span class=\"n\">inside</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"p\">.</span>\n<span class=\"nl\">format</span><span class=\"p\">:</span> <span class=\"mf\">1.0.0</span>\n<span class=\"nl\">library_name</span><span class=\"p\">:</span> <span class=\"n\">ignition</span><span class=\"o\">-</span><span class=\"n\">transport</span>\n<span class=\"nl\">library_version</span><span class=\"p\">:</span> <span class=\"mf\">1.1.0</span>\n<span class=\"nl\">library_path</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"o\">-</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">cmd</span><span class=\"o\">/</span><span class=\"n\">cmdtransport1</span>\n<span class=\"nl\">commands</span><span class=\"p\">:</span>\n    <span class=\"o\">-</span> <span class=\"nl\">topic</span>   <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">topics</span><span class=\"p\">.</span>\n    <span class=\"o\">-</span> <span class=\"nl\">service</span> <span class=\"p\">:</span> <span class=\"n\">Print</span> <span class=\"n\">information</span> <span class=\"n\">about</span> <span class=\"n\">services</span><span class=\"p\">.</span>\n<span class=\"o\">---</span>\n</pre></div>\n\n\n<p>It also fixes a problem in Mac OS X running some test:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">libc</span><span class=\"o\">++</span><span class=\"n\">abi</span><span class=\"p\">.</span><span class=\"nl\">dylib</span><span class=\"p\">:</span> <span class=\"n\">terminating</span> <span class=\"n\">with</span> <span class=\"n\">uncaught</span> <span class=\"n\">exception</span> <span class=\"n\">of</span> <span class=\"n\">type</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">__1</span><span class=\"o\">::</span><span class=\"nl\">system_error</span><span class=\"p\">:</span> <span class=\"n\">recursive_mutex</span> <span class=\"n\">lock</span> <span class=\"nl\">failed</span><span class=\"p\">:</span> <span class=\"n\">Invalid</span> <span class=\"n\">argument</span>\n</pre></div>\n\n\n<p>I believe this was caused by the destruction of some NodeShared member variables before destructing the <code>Discovery</code> object. If Discovery triggers a NodeShared callback during the destruction phase, some member (mutex) might be already destroyed.</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/96/\" rel=\"nofollow\">Trusty</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/90/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/183/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "0a6760255baa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/0a6760255baa.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/0a6760255baa"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "fix_ign_test"}}, "comment_count": 10, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-04-27T18:27:50.167118+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-04-27T18:18:11.055452+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2016-04-27T18:59:59.927058+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2016-04-27T19:05:52.662989+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "79b6f93df9e6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/79b6f93df9e6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/79b6f93df9e6"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}