{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/80/comments/9641282.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/80/_/diff#comment-9641282"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 80, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/80.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/80"}}, "title": "Don't use -fno-default-inline -fno-implicit-inline-templates flags with clang for coverage build"}, "content": {"raw": "Do you think something like that would be more generic? It seems it's possible to test if the the flags work for the current compiler.\n\n```\n#!c++\nCHECK_CXX_COMPILER_FLAG(\"-fno-default-inline\" HAS_FLAG)\nif (HAS_FLAG)\n    set (CMAKE_CXX_FLAGS_COVERAGE \"${CMAKE_CXX_FLAGS_COVERAGE} -fno-default-inline\")\nendif()\n\nCHECK_CXX_COMPILER_FLAG(\"-fno-implicit-inline-templates\" HAS_FLAG)\nif (HAS_FLAG)\n    set (CMAKE_CXX_FLAGS_COVERAGE \"${CMAKE_CXX_FLAGS_COVERAGE} -fno-implicit-inline-templates\")\nendif()\n```", "markup": "markdown", "html": "<p>Do you think something like that would be more generic? It seems it's possible to test if the the flags work for the current compiler.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">CHECK_CXX_COMPILER_FLAG</span><span class=\"p\">(</span><span class=\"s\">&quot;-fno-default-inline&quot;</span> <span class=\"n\">HAS_FLAG</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">HAS_FLAG</span><span class=\"p\">)</span>\n    <span class=\"n\">set</span> <span class=\"p\">(</span><span class=\"n\">CMAKE_CXX_FLAGS_COVERAGE</span> <span class=\"s\">&quot;${CMAKE_CXX_FLAGS_COVERAGE} -fno-default-inline&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">endif</span><span class=\"p\">()</span>\n\n<span class=\"n\">CHECK_CXX_COMPILER_FLAG</span><span class=\"p\">(</span><span class=\"s\">&quot;-fno-implicit-inline-templates&quot;</span> <span class=\"n\">HAS_FLAG</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">HAS_FLAG</span><span class=\"p\">)</span>\n    <span class=\"n\">set</span> <span class=\"p\">(</span><span class=\"n\">CMAKE_CXX_FLAGS_COVERAGE</span> <span class=\"s\">&quot;${CMAKE_CXX_FLAGS_COVERAGE} -fno-implicit-inline-templates&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">endif</span><span class=\"p\">()</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-09-03T22:51:27.271756+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-09-03T22:51:27.281097+00:00", "type": "pullrequest_comment", "id": 9641282}