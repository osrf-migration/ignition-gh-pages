{"pagelen": 50, "values": [{"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "e1f18126c67e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/e1f18126c67e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/e1f18126c67e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2494c62ec18a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/2494c62ec18a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/2494c62ec18a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-19T16:31:55.973527+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "9fcbe08ab574", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9fcbe08ab574.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9fcbe08ab574"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ba468253198a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/ba468253198a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/ba468253198a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-18T18:41:57.159536+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "674c1eb8e1fa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/674c1eb8e1fa.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/674c1eb8e1fa"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T20:48:06.595358+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1f8aeacca0fb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/1f8aeacca0fb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/1f8aeacca0fb"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T18:51:40.022357+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3b08260067b2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/3b08260067b2.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/3b08260067b2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T18:43:41.191194+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a77ac3a06ffe", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a77ac3a06ffe.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a77ac3a06ffe"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T18:21:51.795926+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/53382285.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-53382285"}}, "parent": {"id": 52722747, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52722747.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52722747"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Typedef for `Batch::iterator` added in 17eb4794476a, bringing the code a tiny bit closer to a renamed `MsgIter`.", "markup": "markdown", "html": "<p>Typedef for <code>Batch::iterator</code> added in <a href=\"#!/ignitionrobotics/ign-transport/commits/17eb4794476a\" rel=\"nofollow\" class=\"ap-connect-link\">17eb4794476a</a>, bringing the code a tiny bit closer to a renamed <code>MsgIter</code>.</p>", "type": "rendered"}, "created_on": "2018-01-10T17:17:14.711337+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2018-01-10T17:18:07.379053+00:00", "type": "pullrequest_comment", "id": 53382285}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "17eb4794476a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/17eb4794476a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/17eb4794476a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T17:16:17.104509+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/53379775.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-53379775"}}, "parent": {"id": 52722747, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52722747.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52722747"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "fd5959fffed0 makes `Log` return a `Batch` that supports range-based for loops and internally does the SQL statement construction. That commit doesn't change `MsgIter` to `Batch::iterator`, but I'm not opposed to doing so.", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-transport/commits/fd5959fffed0\" rel=\"nofollow\" class=\"ap-connect-link\">fd5959fffed0</a> makes <code>Log</code> return a <code>Batch</code> that supports range-based for loops and internally does the SQL statement construction. That commit doesn't change <code>MsgIter</code> to <code>Batch::iterator</code>, but I'm not opposed to doing so.</p>", "type": "rendered"}, "created_on": "2018-01-10T16:52:58.819386+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2018-01-10T16:52:58.825394+00:00", "type": "pullrequest_comment", "id": 53379775}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "fd5959fffed0", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/fd5959fffed0.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/fd5959fffed0"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-10T16:47:51.066124+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9f19f1b7dbb9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9f19f1b7dbb9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9f19f1b7dbb9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-05T23:04:04.676146+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "316685752518", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/316685752518.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/316685752518"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-05T22:32:11.455019+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "630059d3f140", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/630059d3f140.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/630059d3f140"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-04T19:58:57.555926+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "aafbda482bf6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/aafbda482bf6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/aafbda482bf6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7c6090b1ae12", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/7c6090b1ae12.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/7c6090b1ae12"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-04T19:54:45.336298+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "987527756a9c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/987527756a9c.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/987527756a9c"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-03T00:20:35.479840+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "749ee482dafa", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/749ee482dafa.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/749ee482dafa"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-01-02T21:25:30.995465+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52731109.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52731109"}}, "parent": {"id": 52729243, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52729243.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52729243"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "I'm trying to quickly implement the empty topic name proposal, but it seems like there may be some complications with respect to the partition and namespace of the fully qualified topic name.\n\nThe `HandlerStorage` class maintains a map of subscription handlers whose key is a fully qualified topic name. When a publisher advertises itself, it advertises its \"topic\" as a fully qualified topic name, and we compare that string against the map in `HandlerStorage`.\n\nThe trouble I'm having at the moment is it seems the `HandlerStorage` class would need some way to understand the fully qualified topic strings in order to recognize when an \"empty\" topic is provided to it, either by a node that's adding a subscription handler or by an incoming message from a remote publisher. It seems like we can reliably expect fully qualified topic names to follow a pattern of either `@/<partition_name>@/<namespace>/<topic>` or `@/<partition_name>@/<topic>`, but I'm under the impression that `<namespace>` and `<topic>` may contain arbitrary slashes within themselves, so it's not clear to me that we can always correctly identify the basic topic name from within a fully qualified topic name. The fully qualified topic name seems to lose information about where the namespace ends and the topic name begins.\n\nAs it currently stands, it doesn't seem possible for a node to latch onto arbitrary new publishers as they advertise themselves; at least not without some kind of small redesign of the `HandlerStorage` class.", "markup": "markdown", "html": "<p>I'm trying to quickly implement the empty topic name proposal, but it seems like there may be some complications with respect to the partition and namespace of the fully qualified topic name.</p>\n<p>The <code>HandlerStorage</code> class maintains a map of subscription handlers whose key is a fully qualified topic name. When a publisher advertises itself, it advertises its \"topic\" as a fully qualified topic name, and we compare that string against the map in <code>HandlerStorage</code>.</p>\n<p>The trouble I'm having at the moment is it seems the <code>HandlerStorage</code> class would need some way to understand the fully qualified topic strings in order to recognize when an \"empty\" topic is provided to it, either by a node that's adding a subscription handler or by an incoming message from a remote publisher. It seems like we can reliably expect fully qualified topic names to follow a pattern of either <code>@/&lt;partition_name&gt;@/&lt;namespace&gt;/&lt;topic&gt;</code> or <code>@/&lt;partition_name&gt;@/&lt;topic&gt;</code>, but I'm under the impression that <code>&lt;namespace&gt;</code> and <code>&lt;topic&gt;</code> may contain arbitrary slashes within themselves, so it's not clear to me that we can always correctly identify the basic topic name from within a fully qualified topic name. The fully qualified topic name seems to lose information about where the namespace ends and the topic name begins.</p>\n<p>As it currently stands, it doesn't seem possible for a node to latch onto arbitrary new publishers as they advertise themselves; at least not without some kind of small redesign of the <code>HandlerStorage</code> class.</p>", "type": "rendered"}, "created_on": "2017-12-29T01:25:42.900550+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-12-29T01:25:42.903221+00:00", "type": "pullrequest_comment", "id": 52731109}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52729243.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52729243"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "> How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\n\nAs a stopgap measure, how would we feel about a special case where passing an empty topic string to `Node::Subscribe(~)` implies that the user wants to subscribe to all topics?\n\nA cleaner long-term solution might be to add something like a filter field to `SubscribeOptions` such as a `std::function<bool(const Advertisement&)>` where `Advertisement` would be meta-data provided by the advertiser (e.g. topic name, time stamp, uuid of the advertising node, maybe other things?). Each time a new topic is advertised, we could run the filter of each qualified subscriber. \"Qualified subscriber\" refers to any subscribers who either (1) subscribed to the advertised topic name, or (2) left the topic name blank while subscribing. If the filter `std::function<bool(const Advertisement&)>` returns true, then we add the subscription; if it returns false, then we ignore the advertisement. By default, `SubscribeOptions` would not filter anything.", "markup": "markdown", "html": "<blockquote>\n<p>How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.</p>\n</blockquote>\n<p>As a stopgap measure, how would we feel about a special case where passing an empty topic string to <code>Node::Subscribe(~)</code> implies that the user wants to subscribe to all topics?</p>\n<p>A cleaner long-term solution might be to add something like a filter field to <code>SubscribeOptions</code> such as a <code>std::function&lt;bool(const Advertisement&amp;)&gt;</code> where <code>Advertisement</code> would be meta-data provided by the advertiser (e.g. topic name, time stamp, uuid of the advertising node, maybe other things?). Each time a new topic is advertised, we could run the filter of each qualified subscriber. \"Qualified subscriber\" refers to any subscribers who either (1) subscribed to the advertised topic name, or (2) left the topic name blank while subscribing. If the filter <code>std::function&lt;bool(const Advertisement&amp;)&gt;</code> returns true, then we add the subscription; if it returns false, then we ignore the advertisement. By default, <code>SubscribeOptions</code> would not filter anything.</p>", "type": "rendered"}, "created_on": "2017-12-28T23:30:57.046679+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "updated_on": "2017-12-28T23:33:49.880114+00:00", "type": "pullrequest_comment", "id": 52729243}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52722747.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52722747"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "I think for right now `MsgIter() != iter` is a reasonable approach for determining when we've exceeded the final message, but in the long-term we should consider having a message container object (e.g. the `Batch` class in the design document) and have the `MsgIter` (or maybe a `Batch::iterator`) class tied to the container object. Then we can compare the iterator object to `container.end()` so that our iterator class is more consistent with the standard way that iterators get used in C++. That way, we'd even be compatible with range-for loops.\n\nIt may be the case that the \"container\" object would actually be something more like a `raii_sqlite3::Statement` factory rather than a traditional container object, but that wouldn't be an issue as long as the semantics match up.", "markup": "markdown", "html": "<p>I think for right now <code>MsgIter() != iter</code> is a reasonable approach for determining when we've exceeded the final message, but in the long-term we should consider having a message container object (e.g. the <code>Batch</code> class in the design document) and have the <code>MsgIter</code> (or maybe a <code>Batch::iterator</code>) class tied to the container object. Then we can compare the iterator object to <code>container.end()</code> so that our iterator class is more consistent with the standard way that iterators get used in C++. That way, we'd even be compatible with range-for loops.</p>\n<p>It may be the case that the \"container\" object would actually be something more like a <code>raii_sqlite3::Statement</code> factory rather than a traditional container object, but that wouldn't be an issue as long as the semantics match up.</p>", "type": "rendered"}, "created_on": "2017-12-28T19:56:08.850276+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-28T19:56:08.852834+00:00", "type": "pullrequest_comment", "id": 52722747}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52410120.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52410120"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Playback of all topics from a logged file now works from the command line in  016b4cd , but it's awful code. It doesn't yet use the raw publishers in pull request #251 so it can't publish custom messages.\n\n```\n# publish some topics, modifying the ignition transport examples is a good way to get a publisher\nign log record -v 4 --file test.tlog\n```\n\nThen \n\n```\n# Playback the recorded log\nign log playback -v 4 --file test.tlog\n```\n\nStuff to do\n\n* Log needs to check the schema version (see [how to do that here](#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT88))\n* Log needs an api to get topics (see [how to do that here](#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT113))\n* Playback needs to create all publishers at the start (see [how to do that here](#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT178))\n* `MsgIter` has a lot of todo's to make it implement `input iterator`\n* Playback class needs tests\n* Plus all the stuff in the pull request description\n\n@mxgrey FYI", "markup": "markdown", "html": "<p>Playback of all topics from a logged file now works from the command line in  <a href=\"#!/ignitionrobotics/ign-transport/commits/016b4cd\" rel=\"nofollow\" class=\"ap-connect-link\">016b4cd</a> , but it's awful code. It doesn't yet use the raw publishers in <a href=\"#!/ignitionrobotics/ign-transport/pull-requests/251/subscribe-and-publish-raw-serialized-data\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #251</a> so it can't publish custom messages.</p>\n<div class=\"codehilite\"><pre><span></span># publish some topics, modifying the ignition transport examples is a good way to get a publisher\nign log record -v 4 --file test.tlog\n</pre></div>\n\n\n<p>Then </p>\n<div class=\"codehilite\"><pre><span></span># Playback the recorded log\nign log playback -v 4 --file test.tlog\n</pre></div>\n\n\n<p>Stuff to do</p>\n<ul>\n<li>Log needs to check the schema version (see <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT88\" rel=\"nofollow\">how to do that here</a>)</li>\n<li>Log needs an api to get topics (see <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT113\" rel=\"nofollow\">how to do that here</a>)</li>\n<li>Playback needs to create all publishers at the start (see <a data-is-external-link=\"true\" href=\"#!/ignitionrobotics/ign-transport/pull-requests/246/record-proof-of-concept-do-not-merge/diff#Ltools/record/src/playback.cppT178\" rel=\"nofollow\">how to do that here</a>)</li>\n<li><code>MsgIter</code> has a lot of todo's to make it implement <code>input iterator</code></li>\n<li>Playback class needs tests</li>\n<li>Plus all the stuff in the pull request description</li>\n</ul>\n<p>@mxgrey FYI</p>", "type": "rendered"}, "created_on": "2017-12-21T00:46:38.827041+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-12-21T00:46:38.834827+00:00", "type": "pullrequest_comment", "id": 52410120}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "016b4cdbd772", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/016b4cdbd772.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/016b4cdbd772"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-21T00:37:40.236852+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e23794d4ef7e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/e23794d4ef7e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/e23794d4ef7e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-20T21:27:12.575278+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bb7dbecfe537", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/bb7dbecfe537.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/bb7dbecfe537"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-20T21:23:52.376794+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d96ae63ebfa8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/d96ae63ebfa8.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/d96ae63ebfa8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-20T21:08:15.427173+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308549.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308549"}}, "parent": {"id": 52175888, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52175888.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52175888"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Time as const reference 4c55467e44e2", "markup": "markdown", "html": "<p>Time as const reference <a href=\"#!/ignitionrobotics/ign-transport/commits/4c55467e44e2\" rel=\"nofollow\" class=\"ap-connect-link\">4c55467e44e2</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:31:37.142563+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:31:37.145242+00:00", "type": "pullrequest_comment", "id": 52308549}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4c55467e44e2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4c55467e44e2.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4c55467e44e2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-20T00:31:11.475763+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308461.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308461"}}, "parent": {"id": 52179192, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52179192.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52179192"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "2f488ca", "markup": "markdown", "html": "<p><a href=\"#!/ignitionrobotics/ign-transport/commits/2f488ca\" rel=\"nofollow\" class=\"ap-connect-link\">2f488ca</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:29:11.945460+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:29:11.948955+00:00", "type": "pullrequest_comment", "id": 52308461}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308425.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308425"}}, "parent": {"id": 52180366, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52180366.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52180366"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Documented \n\t\n554e69f ", "markup": "markdown", "html": "<p>Documented </p>\n<p><a href=\"#!/ignitionrobotics/ign-transport/commits/554e69f\" rel=\"nofollow\" class=\"ap-connect-link\">554e69f</a> </p>", "type": "rendered"}, "created_on": "2017-12-20T00:28:39.620823+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:28:39.623289+00:00", "type": "pullrequest_comment", "id": 52308425}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308411.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308411"}}, "parent": {"id": 52182322, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182322.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182322"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "I added the include in af770ff", "markup": "markdown", "html": "<p>I added the include in <a href=\"#!/ignitionrobotics/ign-transport/commits/af770ff\" rel=\"nofollow\" class=\"ap-connect-link\">af770ff</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:28:27.439290+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:28:27.441523+00:00", "type": "pullrequest_comment", "id": 52308411}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308390.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308390"}}, "parent": {"id": 52182265, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182265.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182265"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Returns false in 6511158. If it fails then something unrecoverable has probably happened (database was deleted, etc)", "markup": "markdown", "html": "<p>Returns false in <a href=\"#!/ignitionrobotics/ign-transport/commits/6511158\" rel=\"nofollow\" class=\"ap-connect-link\">6511158</a>. If it fails then something unrecoverable has probably happened (database was deleted, etc)</p>", "type": "rendered"}, "created_on": "2017-12-20T00:28:01.334785+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:28:01.336937+00:00", "type": "pullrequest_comment", "id": 52308390}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308301.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308301"}}, "parent": {"id": 52180704, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52180704.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52180704"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Done in 6511158", "markup": "markdown", "html": "<p>Done in <a href=\"#!/ignitionrobotics/ign-transport/commits/6511158\" rel=\"nofollow\" class=\"ap-connect-link\">6511158</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:26:05.947998+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:26:05.951051+00:00", "type": "pullrequest_comment", "id": 52308301}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308287.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308287"}}, "parent": {"id": 52180664, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52180664.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52180664"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Made begin and end manage themselve instead of doing it in `Log::InsertMessage` 6511158", "markup": "markdown", "html": "<p>Made begin and end manage themselve instead of doing it in <code>Log::InsertMessage</code> <a href=\"#!/ignitionrobotics/ign-transport/commits/6511158\" rel=\"nofollow\" class=\"ap-connect-link\">6511158</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:25:49.579318+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:25:49.581460+00:00", "type": "pullrequest_comment", "id": 52308287}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308265.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308265"}}, "parent": {"id": 52175811, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52175811.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52175811"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Return doxygen in 6511158", "markup": "markdown", "html": "<p>Return doxygen in <a href=\"#!/ignitionrobotics/ign-transport/commits/6511158\" rel=\"nofollow\" class=\"ap-connect-link\">6511158</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:25:22.859443+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:25:22.862487+00:00", "type": "pullrequest_comment", "id": 52308265}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308250.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308250"}}, "parent": {"id": 52175803, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52175803.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52175803"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Return doxygen in 6511158", "markup": "markdown", "html": "<p>Return doxygen in <a href=\"#!/ignitionrobotics/ign-transport/commits/6511158\" rel=\"nofollow\" class=\"ap-connect-link\">6511158</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:25:07.181760+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:25:16.150758+00:00", "type": "pullrequest_comment", "id": 52308250}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308221.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308221"}}, "parent": {"id": 52173467, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52173467.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52173467"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Strongly typed enum 8c3da04", "markup": "markdown", "html": "<p>Strongly typed enum <a href=\"#!/ignitionrobotics/ign-transport/commits/8c3da04\" rel=\"nofollow\" class=\"ap-connect-link\">8c3da04</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:24:24.326974+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:24:24.329370+00:00", "type": "pullrequest_comment", "id": 52308221}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52308204.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52308204"}}, "parent": {"id": 52172392, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52172392.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52172392"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Using ios_base::openmode in 3069b34", "markup": "markdown", "html": "<p>Using ios_base::openmode in <a href=\"#!/ignitionrobotics/ign-transport/commits/3069b34\" rel=\"nofollow\" class=\"ap-connect-link\">3069b34</a></p>", "type": "rendered"}, "created_on": "2017-12-20T00:24:00.100500+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-20T00:24:00.103450+00:00", "type": "pullrequest_comment", "id": 52308204}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "af770ff7cc20", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/af770ff7cc20.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/af770ff7cc20"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-20T00:23:10.030005+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52075392.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52075392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "~~~I'm having trouble with pipelines. `libignition-msgs-dev` requires `libignition-math2-dev`, while `libignition-common-dev` requires `libinition-math3-dev`. Any alternatives to making pipelines build them from source?~~~ Fixed by making pipelines build on xenial", "markup": "markdown", "html": "<p><del>~I'm having trouble with pipelines. <code>libignition-msgs-dev</code> requires <code>libignition-math2-dev</code>, while <code>libignition-common-dev</code> requires <code>libinition-math3-dev</code>. Any alternatives to making pipelines build them from source?</del>~ Fixed by making pipelines build on xenial</p>", "type": "rendered"}, "created_on": "2017-12-15T20:09:12.676168+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2017-12-19T23:43:33.323124+00:00", "type": "pullrequest_comment", "id": 52075392}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52306119.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52306119"}}, "parent": {"id": 52300685, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52300685.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52300685"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Made the change in 27ef6a3f9950. After writing a few queries before an after I can say the change made them a lot easier to understand.", "markup": "markdown", "html": "<p>Made the change in <a href=\"#!/ignitionrobotics/ign-transport/commits/27ef6a3f9950\" rel=\"nofollow\" class=\"ap-connect-link\">27ef6a3f9950</a>. After writing a few queries before an after I can say the change made them a lot easier to understand.</p>", "type": "rendered"}, "created_on": "2017-12-19T23:34:32.761252+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-19T23:34:32.764306+00:00", "type": "pullrequest_comment", "id": 52306119}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"update": {"description": "WIP. This pull request is intended to add record/playback capability using ignition-tools.\r\n\r\nDone:\r\n\r\n* Record topics using `ign log record`\r\n* `Log` class handles inserting topics/messages into a log file\r\n* `Record` class handles subscribing to ignition transport\r\n* Simple unit tests for `Log` class\r\n* Simple unit tests for `Record` class\r\n\r\nTODO:\r\n\r\n* Add `Playback` class to compliment `Record`\r\n* Playback command line implementation using `Playback` class\r\n* Implement `Log` API to query messages (see [this confluence page](https://osrfoundation.atlassian.net/wiki/spaces/GAZ/pages/99778575/Ignition+Log))\r\n    * `Message` class\r\n    * `TimeOptions` class\r\n    * `TopicOptions` class\r\n    * `MessageIterator` class (in wiki discussion)\r\n* Tests for `Log` that use playback API to verify record AP\r\n* Record needs to use raw-bytes subscriber (pull request #251)\r\n* Integration tests for record and playback\r\n\r\nQuestions for @caguero :\r\n\r\n* How can record get notified of new topics? For example, record may be launched before the thing it is supposed to record starts recording. Record would only be subscribed to the ones it saw at launch.\r\n\r\nNew dependencies\r\n\r\n * ignition-common0\r\n * SQLite3\r\n * ruby-ffi", "title": "[WIP] ignition tools record/playback", "destination": {"commit": {"hash": "efad1de04a1a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/efad1de04a1a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/efad1de04a1a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "27ef6a3f9950", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/27ef6a3f9950.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/27ef6a3f9950"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "command_line_log"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2017-12-19T23:33:23.765806+00:00"}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52302028.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52302028"}}, "parent": {"id": 52301964, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52301964.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52301964"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Yep, that'll do it.", "markup": "markdown", "html": "<p>Yep, that'll do it.</p>", "type": "rendered"}, "created_on": "2017-12-19T22:14:11.715057+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-19T22:14:11.718383+00:00", "type": "pullrequest_comment", "id": 52302028}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52301964.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52301964"}}, "parent": {"id": 52301816, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52301816.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52301816"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "nanoseconds_per_second = 1e9 instead of 10e9 (also utc epoch is 1970)", "markup": "markdown", "html": "<p>nanoseconds_per_second = 1e9 instead of 10e9 (also utc epoch is 1970)</p>", "type": "rendered"}, "created_on": "2017-12-19T22:13:13.816499+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-19T22:13:56.262430+00:00", "type": "pullrequest_comment", "id": 52301964}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52301816.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52301816"}}, "parent": {"id": 52300685, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52300685.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52300685"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "I'm probably doing some arithmetic incorrectly, but I'm getting that an 8-byte signed integer representation of nanoseconds only lasts for a little under 30 years. If measured from UTC, it would cut off just before the year 1990.\n\nHere's the expression I'm using to compute the maximum representable year. If I have an error, please let me know:\n\n```\n2^(8*8-1)/10e9/60/60/24/365 + 1960\n```\n\nA breakdown using words:\n\n```\n2^(num_bytes * bits_per_byte - sign_bit)/nanosecs_per_second/seconds_per_minute/minutes_per_hour/hours_per_day/days_per_year + first_year_of_UTC\n```", "markup": "markdown", "html": "<p>I'm probably doing some arithmetic incorrectly, but I'm getting that an 8-byte signed integer representation of nanoseconds only lasts for a little under 30 years. If measured from UTC, it would cut off just before the year 1990.</p>\n<p>Here's the expression I'm using to compute the maximum representable year. If I have an error, please let me know:</p>\n<div class=\"codehilite\"><pre><span></span>2^(8*8-1)/10e9/60/60/24/365 + 1960\n</pre></div>\n\n\n<p>A breakdown using words:</p>\n<div class=\"codehilite\"><pre><span></span>2^(num_bytes * bits_per_byte - sign_bit)/nanosecs_per_second/seconds_per_minute/minutes_per_hour/hours_per_day/days_per_year + first_year_of_UTC\n</pre></div>", "type": "rendered"}, "created_on": "2017-12-19T22:10:50.382973+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-19T22:10:50.386053+00:00", "type": "pullrequest_comment", "id": 52301816}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52300685.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52300685"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "If there's no objections, I plan on replacing `time_recv_sec` and `time_recv_nano` with one column `time_recv` which is in nanoseconds since UTC. SQLite3 can store 8 byte signed integers, which means the nanoseconds time column should be fine for about 240 years from now.\n\nSelecting all messages after a time goes from \n\n```SQL\nSELECT * FROM messages WHERE (time_recv_sec > 1513379720 OR (time_recv_sec == 1513379720 AND time_recv_nano > 352233612)) ORDER BY time_recv_sec, time_recv_nano;\n```\n\nto\n\n```SQL\nSELECT * FROM messages WHERE time_recv > 1513379720352233612 ORDER BY time_recv;\n```", "markup": "markdown", "html": "<p>If there's no objections, I plan on replacing <code>time_recv_sec</code> and <code>time_recv_nano</code> with one column <code>time_recv</code> which is in nanoseconds since UTC. SQLite3 can store 8 byte signed integers, which means the nanoseconds time column should be fine for about 240 years from now.</p>\n<p>Selecting all messages after a time goes from </p>\n<div class=\"codehilite language-SQL\"><pre><span></span><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"n\">messages</span> <span class=\"k\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">time_recv_sec</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1513379720</span> <span class=\"k\">OR</span> <span class=\"p\">(</span><span class=\"n\">time_recv_sec</span> <span class=\"o\">==</span> <span class=\"mi\">1513379720</span> <span class=\"k\">AND</span> <span class=\"n\">time_recv_nano</span> <span class=\"o\">&gt;</span> <span class=\"mi\">352233612</span><span class=\"p\">))</span> <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">time_recv_sec</span><span class=\"p\">,</span> <span class=\"n\">time_recv_nano</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>to</p>\n<div class=\"codehilite language-SQL\"><pre><span></span><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"n\">messages</span> <span class=\"k\">WHERE</span> <span class=\"n\">time_recv</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1513379720352233612</span> <span class=\"k\">ORDER</span> <span class=\"k\">BY</span> <span class=\"n\">time_recv</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-12-19T21:51:13.362151+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-19T21:51:27.577923+00:00", "type": "pullrequest_comment", "id": 52300685}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52292751.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52292751"}}, "parent": {"id": 52170356, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52170356.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52170356"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Interestingly, the `const` on an lvalue parameter in a function declaration signature does not need to match the `const` on an lvalue in the function definition signature. In other words, the following is completely valid C++:\n\n```\n// in foo.hh\nvoid foo(int a);\n```\n\n```\n// in foo.cc\nvoid foo(const int a)\n{\n  /* definition of foo */\n}\n```\n\nSome experts recommend that you leave the `const` off of lvalue parameters in the function declaration because\n\n1. The user doesn't need to know that the parameter is const within the function definition\n2. It could easily be misinterpreted by the user as a const-reference\n3. It makes for a longer function declaration\n\nI think the one disadvantage to leaving off the `const` is that it can be confusing for developers when the declaration and definition signatures don't immediately appear to match each other.", "markup": "markdown", "html": "<p>Interestingly, the <code>const</code> on an lvalue parameter in a function declaration signature does not need to match the <code>const</code> on an lvalue in the function definition signature. In other words, the following is completely valid C++:</p>\n<div class=\"codehilite\"><pre><span></span>// in foo.hh\nvoid foo(int a);\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>// in foo.cc\nvoid foo(const int a)\n{\n  /* definition of foo */\n}\n</pre></div>\n\n\n<p>Some experts recommend that you leave the <code>const</code> off of lvalue parameters in the function declaration because</p>\n<ol>\n<li>The user doesn't need to know that the parameter is const within the function definition</li>\n<li>It could easily be misinterpreted by the user as a const-reference</li>\n<li>It makes for a longer function declaration</li>\n</ol>\n<p>I think the one disadvantage to leaving off the <code>const</code> is that it can be confusing for developers when the declaration and definition signatures don't immediately appear to match each other.</p>", "type": "rendered"}, "created_on": "2017-12-19T19:47:25.511755+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {}, "updated_on": "2017-12-19T19:47:37.441127+00:00", "type": "pullrequest_comment", "id": 52292751}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182322.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182322"}}, "parent": {"id": 52182118, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182118.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182118"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Not a big deal, but we usually follow the \"include what we use\" rule.", "markup": "markdown", "html": "<p>Not a big deal, but we usually follow the \"include what we use\" rule.</p>", "type": "rendered"}, "created_on": "2017-12-18T18:56:01.921875+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-12-18T18:56:01.924523+00:00", "type": "pullrequest_comment", "id": 52182322}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182265.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182265"}}, "parent": {"id": 52182038, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182038.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182038"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Why not return false?", "markup": "markdown", "html": "<p>Why not return false?</p>", "type": "rendered"}, "created_on": "2017-12-18T18:55:18.567567+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-12-18T18:55:18.570213+00:00", "type": "pullrequest_comment", "id": 52182265}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182140.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182140"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "Missing doxygen.", "markup": "markdown", "html": "<p>Missing doxygen.</p>", "type": "rendered"}, "created_on": "2017-12-18T18:53:38.779610+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-12-18T18:53:38.783027+00:00", "type": "pullrequest_comment", "id": 52182140}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182118.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182118"}}, "parent": {"id": 52182026, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182026.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182026"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "It's included by `Record.hh`", "markup": "markdown", "html": "<p>It's included by <code>Record.hh</code></p>", "type": "rendered"}, "created_on": "2017-12-18T18:53:21.750501+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "inline": {}, "updated_on": "2017-12-18T18:53:21.753680+00:00", "type": "pullrequest_comment", "id": 52182118}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/comments/52182026.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252/_/diff#comment-52182026"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}, "content": {"raw": "`#include <memory>`, `protobuf::Message` and `MessageInfo`?", "markup": "markdown", "html": "<p><code>#include &lt;memory&gt;</code>, <code>protobuf::Message</code> and <code>MessageInfo</code>?</p>", "type": "rendered"}, "created_on": "2017-12-18T18:52:19.540933+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2017-12-18T18:53:01.732701+00:00", "type": "pullrequest_comment", "id": 52182026}, "pull_request": {"type": "pullrequest", "id": 252, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/252"}}, "title": "ignition tools record/playback"}}], "next": "data/repositories/ignitionrobotics/ign-transport/pullrequests/252/activity_ctx=arRUjzs8UE.json"}