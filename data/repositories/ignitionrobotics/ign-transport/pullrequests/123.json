{"rendered": {"description": {"raw": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "markup": "markdown", "html": "<p>New <code>waitForShutdown()</code> function that can be used to block the current thread and wait for events. The examples <code>requester_async</code>, <code>responser</code> and <code>subscriber</code> use this function instead of <code>getchar()</code>. </p>\n<p><code>waitForShutdown</code> installs a signal handler that captures <code>SIGINT</code> and <code>SIGTERM</code> and exits after any of these signals are received. This change makes the examples robust to <code>CTRL-C</code>, whereas before it could segfault on Windows, as the program was not tearing down properly. </p>\n<p>Note that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits <code>CTRL-C</code>. The <code>publisher</code> example still shows an alternative use case, where the user captures <code>SIGINT</code>/<code>SIGTERM</code> and triggers the termination of the program.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/\" rel=\"nofollow\">Trusty</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Add a waitForShutdown() function", "markup": "markdown", "html": "<p>Add a waitForShutdown() function</p>", "type": "rendered"}}, "type": "pullrequest", "description": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/123/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:358bac05278c%0D97c1d63c9b59?from_pullrequest_id=123"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/123/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/123"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:358bac05278c%0D97c1d63c9b59?from_pullrequest_id=123"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/123/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/123/statuses_page=1.json"}}, "title": "Add a waitForShutdown() function", "close_source_branch": true, "reviewers": [], "id": 123, "destination": {"commit": {"hash": "97c1d63c9b59", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/97c1d63c9b59.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/97c1d63c9b59"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "created_on": "2016-04-13T21:13:39.479207+00:00", "summary": {"raw": "New `waitForShutdown()` function that can be used to block the current thread and wait for events. The examples `requester_async`, `responser` and `subscriber` use this function instead of `getchar()`. \r\n\r\n`waitForShutdown` installs a signal handler that captures `SIGINT` and `SIGTERM` and exits after any of these signals are received. This change makes the examples robust to `CTRL-C`, whereas before it could segfault on Windows, as the program was not tearing down properly. \r\n\r\nNote that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits `CTRL-C`. The `publisher` example still shows an alternative use case, where the user captures `SIGINT`/`SIGTERM` and triggers the termination of the program.\r\n\r\nCI results:\r\n\r\n* [Trusty](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/) :large_blue_circle:\r\n* [Homebrew](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/) :large_blue_circle:\r\n* [Windows](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/) :large_blue_circle:", "markup": "markdown", "html": "<p>New <code>waitForShutdown()</code> function that can be used to block the current thread and wait for events. The examples <code>requester_async</code>, <code>responser</code> and <code>subscriber</code> use this function instead of <code>getchar()</code>. </p>\n<p><code>waitForShutdown</code> installs a signal handler that captures <code>SIGINT</code> and <code>SIGTERM</code> and exits after any of these signals are received. This change makes the examples robust to <code>CTRL-C</code>, whereas before it could segfault on Windows, as the program was not tearing down properly. </p>\n<p>Note that it's not mandatory to use this function. It's just an option when you want to block the main thread and wait until the user hits <code>CTRL-C</code>. The <code>publisher</code> example still shows an alternative use case, where the user captures <code>SIGINT</code>/<code>SIGTERM</code> and triggers the termination of the program.</p>\n<p>CI results:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/84/\" rel=\"nofollow\">Trusty</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/84/\" rel=\"nofollow\">Homebrew</a> :large_blue_circle:</li>\n<li><a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/173/\" rel=\"nofollow\">Windows</a> :large_blue_circle:</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f2ad49273530", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/f2ad49273530.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/f2ad49273530"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "shutdown1"}}, "comment_count": 6, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2016-04-13T23:29:27.116986+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2016-04-21T20:34:37.390299+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2016-04-21T20:33:42.148168+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2016-04-21T20:34:57.604848+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "358bac05278c", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/358bac05278c.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/358bac05278c"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}