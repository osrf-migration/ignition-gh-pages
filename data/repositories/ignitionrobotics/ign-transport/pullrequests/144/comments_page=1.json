{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19644438.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19644438"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 144, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144"}}, "title": "Issue 42: questions"}, "content": {"raw": "I do not understand how to create request and response messages correctly. I tried to do the same as in topic publisher:\n\n```\n#!c++\n\n  // Create the message, and populate the field with _msgData\n  auto msg = ignition::msgs::Factory::New(_msgType, _msgData);\n  if (msg)\n  {\n    // Create the node and advertise the topic\n    ignition::transport::Node node;\n    auto pubId = node.Advertise(_topic, msg->GetTypeName());\n```\nMy code:\n\n```\n#!c++\n\nauto req = ignition::msgs::Factory::New(_reqType, _reqData);\nauto rep = ignition::msgs::Factory::New(_repType);\nignition::transport::Node node;\nbool result;\nbool executed = node.Request(_service, *req, _timeout, *rep, result);\n```\n\n\nBut I have an error.\n\n```\n#!c++\n\n   bool executed = node.Request(_service, *req, _timeout, *rep, result);\n        ^\nIn file included from /home/user/code/issue_42/include/ignition/transport/NodeShared.hh:41:0,\n                 from /home/user/code/issue_42/include/ignition/transport/Node.hh:40,\n                 from /home/user/code/issue_42/src/ign.cc:26:\n/home/user/code/issue_42/include/ignition/transport/ReqHandler.hh: In instantiation of \u2018class ignition::transport::ReqHandler<google::protobuf::Message, google::protobuf::Message>\u2019:\n/home/user/code/issue_42/include/ignition/transport/Node.hh:586:51:   required from \u2018bool ignition::transport::Node::Request(const string&, const T1&, const unsigned int&, T2&, bool&) [with T1 = google::protobuf::Message; T2 = google::protobuf::Message; std::string = std::basic_string<char>]\u2019\n/home/user/code/issue_42/src/ign.cc:231:70:   required from here\n/home/user/code/issue_42/include/ignition/transport/ReqHandler.hh:268:20: error: cannot declare field \u2018ignition::transport::ReqHandler<google::protobuf::Message, google::protobuf::Message>::reqMsg\u2019 to be of abstract type \u2018google::protobuf::Message\u2019\n       private: Req reqMsg;\n```\n", "markup": "markdown", "html": "<p>I do not understand how to create request and response messages correctly. I tried to do the same as in topic publisher:</p>\n<div class=\"codehilite language-c++\"><pre><span></span>  <span class=\"c1\">// Create the message, and populate the field with _msgData</span>\n  <span class=\"k\">auto</span> <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Factory</span><span class=\"o\">::</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">_msgType</span><span class=\"p\">,</span> <span class=\"n\">_msgData</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Create the node and advertise the topic</span>\n    <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n    <span class=\"k\">auto</span> <span class=\"n\">pubId</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Advertise</span><span class=\"p\">(</span><span class=\"n\">_topic</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">-&gt;</span><span class=\"n\">GetTypeName</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>My code:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">auto</span> <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Factory</span><span class=\"o\">::</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">_reqType</span><span class=\"p\">,</span> <span class=\"n\">_reqData</span><span class=\"p\">);</span>\n<span class=\"k\">auto</span> <span class=\"n\">rep</span> <span class=\"o\">=</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Factory</span><span class=\"o\">::</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">_repType</span><span class=\"p\">);</span>\n<span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"kt\">bool</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n<span class=\"kt\">bool</span> <span class=\"n\">executed</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">_service</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">_timeout</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">rep</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>But I have an error.</p>\n<div class=\"codehilite language-c++\"><pre><span></span>   <span class=\"kt\">bool</span> <span class=\"n\">executed</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">_service</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">_timeout</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">rep</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">);</span>\n        <span class=\"o\">^</span>\n<span class=\"n\">In</span> <span class=\"n\">file</span> <span class=\"n\">included</span> <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">NodeShared</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">41</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n                 <span class=\"n\">from</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">ReqHandler</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span> <span class=\"n\">In</span> <span class=\"n\">instantiation</span> <span class=\"n\">of</span> <span class=\"err\">\u2018</span><span class=\"k\">class</span> <span class=\"nc\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">ReqHandler</span><span class=\"o\">&lt;</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"p\">,</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"o\">&gt;</span><span class=\"err\">\u2019</span><span class=\"o\">:</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">Node</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">586</span><span class=\"o\">:</span><span class=\"mi\">51</span><span class=\"o\">:</span>   <span class=\"n\">required</span> <span class=\"n\">from</span> <span class=\"err\">\u2018</span><span class=\"kt\">bool</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">T1</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">int</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"n\">T2</span><span class=\"o\">&amp;</span><span class=\"p\">,</span> <span class=\"kt\">bool</span><span class=\"o\">&amp;</span><span class=\"p\">)</span> <span class=\"p\">[</span><span class=\"n\">with</span> <span class=\"n\">T1</span> <span class=\"o\">=</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"p\">;</span> <span class=\"n\">T2</span> <span class=\"o\">=</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"p\">;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">basic_string</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"err\">\u2019</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ign</span><span class=\"p\">.</span><span class=\"nl\">cc</span><span class=\"p\">:</span><span class=\"mi\">231</span><span class=\"o\">:</span><span class=\"mi\">70</span><span class=\"o\">:</span>   <span class=\"n\">required</span> <span class=\"n\">from</span> <span class=\"n\">here</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">issue_42</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">ignition</span><span class=\"o\">/</span><span class=\"n\">transport</span><span class=\"o\">/</span><span class=\"n\">ReqHandler</span><span class=\"p\">.</span><span class=\"nl\">hh</span><span class=\"p\">:</span><span class=\"mi\">268</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span> <span class=\"nl\">error</span><span class=\"p\">:</span> <span class=\"n\">cannot</span> <span class=\"n\">declare</span> <span class=\"n\">field</span> <span class=\"err\">\u2018</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">ReqHandler</span><span class=\"o\">&lt;</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"p\">,</span> <span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"o\">&gt;::</span><span class=\"n\">reqMsg</span><span class=\"err\">\u2019</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">of</span> <span class=\"n\">abstract</span> <span class=\"n\">type</span> <span class=\"err\">\u2018</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">protobuf</span><span class=\"o\">::</span><span class=\"n\">Message</span><span class=\"err\">\u2019</span>\n       <span class=\"k\">private</span><span class=\"o\">:</span> <span class=\"n\">Req</span> <span class=\"n\">reqMsg</span><span class=\"p\">;</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-06-12T23:30:52.771688+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": "2016-06-12T23:30:52.773836+00:00", "type": "pullrequest_comment", "id": 19644438}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19644453.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19644453"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 144, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144"}}, "title": "Issue 42: questions"}, "content": {"raw": "Should I add a short key for \"--timeout\"? If I add \"-t\" then I should update ```parse(args)``` function. Because in this case I should analyze the commands \"ign topic\" -> \"-t\" = \"topic name\", \"ign service\" -> \"-t\" = \"timeout\"? ", "markup": "markdown", "html": "<p>Should I add a short key for \"--timeout\"? If I add \"-t\" then I should update <code>parse(args)</code> function. Because in this case I should analyze the commands \"ign topic\" -&gt; \"-t\" = \"topic name\", \"ign service\" -&gt; \"-t\" = \"timeout\"? </p>", "type": "rendered"}, "created_on": "2016-06-12T23:34:43.922334+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": "2016-06-12T23:35:09.760919+00:00", "type": "pullrequest_comment", "id": 19644453}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19644456.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19644456"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 144, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144"}}, "title": "Issue 42: questions"}, "content": {"raw": "What short keys should I add for \"--reqtype\" and \"--reptype\"?", "markup": "markdown", "html": "<p>What short keys should I add for \"--reqtype\" and \"--reptype\"?</p>", "type": "rendered"}, "created_on": "2016-06-12T23:35:39.116975+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": "2016-06-12T23:35:39.119438+00:00", "type": "pullrequest_comment", "id": 19644456}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19683826.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19683826"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 144, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144"}}, "title": "Issue 42: questions"}, "content": {"raw": "@nampi , could you move this discussion to issue #42 and decline the pull request? The issue tracker is the best place for this type of discussions.", "markup": "markdown", "html": "<p>@nampi , could you move this discussion to issue <a href=\"#!/ignitionrobotics/ign-transport/issues/42/implement-a-service-request-from-the\" rel=\"nofollow\" title=\"Implement a service request from the command line using &quot;ign&quot;\" class=\"ap-connect-link\"><s>#42</s></a> and decline the pull request? The issue tracker is the best place for this type of discussions.</p>", "type": "rendered"}, "created_on": "2016-06-13T17:38:30.764833+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-06-13T17:38:30.776938+00:00", "type": "pullrequest_comment", "id": 19683826}, {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19684198.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19684198"}}, "parent": {"id": 19683826, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144/comments/19683826.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144/_/diff#comment-19683826"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 144, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/144.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/144"}}, "title": "Issue 42: questions"}, "content": {"raw": "Of course.", "markup": "markdown", "html": "<p>Of course.</p>", "type": "rendered"}, "created_on": "2016-06-13T17:46:18.224956+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "updated_on": "2016-06-13T17:46:18.228134+00:00", "type": "pullrequest_comment", "id": 19684198}], "page": 1, "size": 5}