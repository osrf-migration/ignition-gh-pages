{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/71/comments/7784979.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/71/_/diff#comment-7784979"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 71, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/71.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/71"}}, "title": "Protobuf implementation of discovery"}, "content": {"raw": "Now, that the memory allocation happens inside `Pack()`, there's probably no need to return `size_t`. We could return a `bool` that tells if everything went OK. If you need the size you can use `.size()` on the std::vector that you passed in as a parameter to `Pack()`. The `size_t` in `Unpack` is probably irrelevant too. I believe that a `bool` would be cleaner.", "markup": "markdown", "html": "<p>Now, that the memory allocation happens inside <code>Pack()</code>, there's probably no need to return <code>size_t</code>. We could return a <code>bool</code> that tells if everything went OK. If you need the size you can use <code>.size()</code> on the std::vector that you passed in as a parameter to <code>Pack()</code>. The <code>size_t</code> in <code>Unpack</code> is probably irrelevant too. I believe that a <code>bool</code> would be cleaner.</p>", "type": "rendered"}, "created_on": "2015-06-24T23:42:33.285498+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-06-24T23:42:33.295502+00:00", "type": "pullrequest_comment", "id": 7784979}