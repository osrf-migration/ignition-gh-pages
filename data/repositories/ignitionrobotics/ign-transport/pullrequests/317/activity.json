{"pagelen": 50, "values": [{"update": {"description": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "title": "Check callback is valid before calling it", "destination": {"commit": {"hash": "c0ff5dd5e2d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c0ff5dd5e2d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c0ff5dd5e2d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport2"}}, "reason": "", "source": {"commit": {"hash": "a42a964cc062", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a42a964cc062.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a42a964cc062"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "bad_function_call_log_record_2"}}, "state": "MERGED", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-06-13T20:37:22.286527+00:00"}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"approval": {"date": "2018-06-13T18:47:31.738634+00:00", "pullrequest": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/comments/66943236.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317/_/diff#comment-66943236"}}, "parent": {"id": 66942945, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/comments/66942945.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317/_/diff#comment-66942945"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}, "content": {"raw": "Re-ran CI on this branch and on  `ign-transport2` for comparison now that CI is running on omnidroid instead of t1000.\n\nign-transport2: [https://build.osrfoundation.org/job/ignition\\_transport-ci-pr\\_any-homebrew-amd64/425/](https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/425/)\n\nThis branch: [https://build.osrfoundation.org/job/ignition\\_transport-ci-pr\\_any-homebrew-amd64/426/](https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/426/)\n\n3/5 test failures in common. Given that the change is obviously safe I\u2019m assuming the other 2 tests are just flaky", "markup": "markdown", "html": "<p>Re-ran CI on this branch and on  <code>ign-transport2</code> for comparison now that CI is running on omnidroid instead of t1000.</p>\n<p>ign-transport2: <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/425/\" rel=\"nofollow\">https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/425/</a></p>\n<p>This branch: <a data-is-external-link=\"true\" href=\"https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/426/\" rel=\"nofollow\">https://build.osrfoundation.org/job/ignition_transport-ci-pr_any-homebrew-amd64/426/</a></p>\n<p>3/5 test failures in common. Given that the change is obviously safe I\u2019m assuming the other 2 tests are just flaky</p>", "type": "rendered"}, "created_on": "2018-06-13T00:03:06.040355+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-06-13T16:57:08.424035+00:00", "type": "pullrequest_comment", "id": 66943236}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/comments/66942945.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317/_/diff#comment-66942945"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}, "content": {"raw": "Looks like a build failure on windows and a test failure on OSX.\n\nI think windows CI can be ignored since it failed to compile ignition msgs \n\n    C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\xstring(1055) : fatal error C1001: An internal error has occurred in the compiler.\n    (compiler file 'msc1.cpp', line 1325)\n\n\u200c\n\nOSX failures seem all over the place. I intend to run  CI on ign-transport2 branch to check if any failing tests are pre-existing, though running into some build farm issues at the moment.", "markup": "markdown", "html": "<p>Looks like a build failure on windows and a test failure on OSX.</p>\n<p>I think windows CI can be ignored since it failed to compile ignition msgs </p>\n<div class=\"codehilite\"><pre><span></span>C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\xstring(1055) : fatal error C1001: An internal error has occurred in the compiler.\n(compiler file &#39;msc1.cpp&#39;, line 1325)\n</pre></div>\n\n\n<p>\u200c</p>\n<p>OSX failures seem all over the place. I intend to run  CI on ign-transport2 branch to check if any failing tests are pre-existing, though running into some build farm issues at the moment.</p>", "type": "rendered"}, "created_on": "2018-06-12T23:55:46.351852+00:00", "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "updated_on": "2018-06-12T23:55:46.358334+00:00", "type": "pullrequest_comment", "id": 66942945}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"approval": {"date": "2018-06-12T23:46:12.728896+00:00", "pullrequest": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"update": {"description": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "title": "Check callback is valid before calling it", "destination": {"commit": {"hash": "c0ff5dd5e2d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c0ff5dd5e2d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c0ff5dd5e2d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport2"}}, "reason": "", "source": {"commit": {"hash": "a42a964cc062", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a42a964cc062.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a42a964cc062"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "bad_function_call_log_record_2"}}, "state": "OPEN", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2018-06-12T23:09:08.750292+00:00"}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"update": {"description": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "title": "Check callback is valid before calling it", "destination": {"commit": {"hash": "c0ff5dd5e2d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c0ff5dd5e2d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c0ff5dd5e2d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport2"}}, "reason": "", "source": {"commit": {"hash": "a42a964cc062", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a42a964cc062.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a42a964cc062"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "bad_function_call_log_record_2"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-06-12T23:02:51.407966+00:00"}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}, {"update": {"description": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "title": "Check callback is valid before calling it", "destination": {"commit": {"hash": "c0ff5dd5e2d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c0ff5dd5e2d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c0ff5dd5e2d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport2"}}, "reason": "", "source": {"commit": {"hash": "a42a964cc062", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a42a964cc062.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a42a964cc062"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "bad_function_call_log_record_2"}}, "state": "OPEN", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "date": "2018-06-12T23:02:51.376899+00:00"}, "pull_request": {"type": "pullrequest", "id": 317, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}}, "title": "Check callback is valid before calling it"}}]}