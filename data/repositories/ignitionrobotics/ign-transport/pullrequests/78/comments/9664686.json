{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/78/comments/9664686.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/78/_/diff#comment-9664686"}}, "parent": {"id": 9298612, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/78/comments/9298612.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/78/_/diff#comment-9298612"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 78, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/78.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/78"}}, "title": "Generic Refactoring of Discovery/Node class"}, "content": {"raw": "Some comments on removing isReal and allowing only 2 constructors in Publisher (i.e. not allowing fake Publishers) after a small investigation:\n\n* It needs extra work in order to pass all tests and the functionality/behavior will change. If we remove isReal, then there's a problem with the following condition in Publisher pack:\n```\n#!c++\nif (this->ctrl.empty() || this->msgTypeName.empty() ||\n      (this->isService && this->repTypeName.empty()))\n  {\n    std::cerr << \"Publisher::Pack() error: You're trying to pack an \"\n              << \"incomplete Publisher:\" << std::endl << *this;\n    return 0;\n  }\n```\n    Because if we leave it in there, the abstract Publisher's behavior changes. However, once we remove it, the message/service Publisher's behavior changes.\n\n* I coded the bare-bones of this restructuring. I don't like it at all.\n* Having a private member variable is a lot cleaner and less error-prone.\n\nWhat do you say?", "markup": "markdown", "html": "<p>Some comments on removing isReal and allowing only 2 constructors in Publisher (i.e. not allowing fake Publishers) after a small investigation:</p>\n<ul>\n<li>It needs extra work in order to pass all tests and the functionality/behavior will change. If we remove isReal, then there's a problem with the following condition in Publisher pack:</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">ctrl</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">()</span> <span class=\"o\">||</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">msgTypeName</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">()</span> <span class=\"o\">||</span>\n      <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">isService</span> <span class=\"o\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">repTypeName</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">()))</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Publisher::Pack() error: You&#39;re trying to pack an &quot;</span>\n              <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;incomplete Publisher:&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span> <span class=\"o\">&lt;&lt;</span> <span class=\"o\">*</span><span class=\"k\">this</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>Because if we leave it in there, the abstract Publisher&#39;s behavior changes. However, once we remove it, the message/service Publisher&#39;s behavior changes.\n</pre></div>\n\n\n<ul>\n<li>I coded the bare-bones of this restructuring. I don't like it at all.</li>\n<li>Having a private member variable is a lot cleaner and less error-prone.</li>\n</ul>\n<p>What do you say?</p>", "type": "rendered"}, "created_on": "2015-09-04T15:49:38.415541+00:00", "user": {"display_name": "Konstantinos Chatzilygeroudis", "uuid": "{4243c891-d80f-40d6-87cd-2cd89e0aa897}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4243c891-d80f-40d6-87cd-2cd89e0aa897%7D"}, "html": {"href": "https://bitbucket.org/%7B4243c891-d80f-40d6-87cd-2cd89e0aa897%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:ae5009f3-2908-4477-beef-4ca061e61478/6f7ccf76-cbb5-403b-803b-ae7208960a77/128"}}, "nickname": "costashatz", "type": "user", "account_id": "557058:ae5009f3-2908-4477-beef-4ca061e61478"}, "updated_on": "2015-09-04T15:49:38.427494+00:00", "type": "pullrequest_comment", "id": 9664686}