{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/78/comments/9706632.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/78/_/diff#comment-9706632"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 78, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/78.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/78"}}, "title": "Generic Refactoring of Discovery/Node class"}, "content": {"raw": "I like the Discovery but I'm not convinced about the Publisher class. It works but it's not 100% clean. We're sharing member variables for two different purposes:\n\n  * `ctrl` is the control address if the publisher is for messages or it's the socket id if the publisher is for services.\n  * `msgTypeName` is also shared and can mean the type of a message or the type of the request.\n\nWe also have two different flags, `isService` to differentiate between messages and services and `isReal` to distinguish between different type of publishers.\n\nWe still have to work out the Publisher. It'll be hard to maintain if we try to force a single class for two or more different purposes.\n\nCan we combine the old `Publisher` with the new `Discovery` API? Maybe instead of having a templated TopicStorage class we can accept parameters of type Publisher. Publisher would be just the base class that all types of Publishers have.", "markup": "markdown", "html": "<p>I like the Discovery but I'm not convinced about the Publisher class. It works but it's not 100% clean. We're sharing member variables for two different purposes:</p>\n<ul>\n<li><code>ctrl</code> is the control address if the publisher is for messages or it's the socket id if the publisher is for services.</li>\n<li><code>msgTypeName</code> is also shared and can mean the type of a message or the type of the request.</li>\n</ul>\n<p>We also have two different flags, <code>isService</code> to differentiate between messages and services and <code>isReal</code> to distinguish between different type of publishers.</p>\n<p>We still have to work out the Publisher. It'll be hard to maintain if we try to force a single class for two or more different purposes.</p>\n<p>Can we combine the old <code>Publisher</code> with the new <code>Discovery</code> API? Maybe instead of having a templated TopicStorage class we can accept parameters of type Publisher. Publisher would be just the base class that all types of Publishers have.</p>", "type": "rendered"}, "created_on": "2015-09-08T01:17:25.133608+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-09-08T01:22:57.628811+00:00", "type": "pullrequest_comment", "id": 9706632}