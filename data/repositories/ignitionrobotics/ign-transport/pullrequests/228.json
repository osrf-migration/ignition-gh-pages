{"rendered": {"description": {"raw": "This pull request changes the callback signature when advertising a service call. This is the previous signature:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep, bool &_result) { ... }\r\n```\r\n\r\n\r\nAnd this is the new one:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nbool srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep) {...}\r\n```\r\n\r\nThe boolean `_result` parameter was used to flag if the service call succeed or not. To avoid situations in which you forget to set `_result`, I think is more convenient to use the return value instead. The compiler might help if you forget to return `true` or `false`.", "markup": "markdown", "html": "<p>This pull request changes the callback signature when advertising a service call. This is the previous signature:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">srvEcho</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">,</span> <span class=\"kt\">bool</span> <span class=\"o\">&amp;</span><span class=\"n\">_result</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"p\">...</span> <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And this is the new one:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"nf\">srvEcho</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">)</span> <span class=\"p\">{...}</span>\n</pre></div>\n\n\n<p>The boolean <code>_result</code> parameter was used to flag if the service call succeed or not. To avoid situations in which you forget to set <code>_result</code>, I think is more convenient to use the return value instead. The compiler might help if you forget to return <code>true</code> or <code>false</code>.</p>", "type": "rendered"}, "title": {"raw": "Update the signature of the responser callbacks", "markup": "markdown", "html": "<p>Update the signature of the responser callbacks</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This pull request changes the callback signature when advertising a service call. This is the previous signature:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep, bool &_result) { ... }\r\n```\r\n\r\n\r\nAnd this is the new one:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nbool srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep) {...}\r\n```\r\n\r\nThe boolean `_result` parameter was used to flag if the service call succeed or not. To avoid situations in which you forget to set `_result`, I think is more convenient to use the return value instead. The compiler might help if you forget to return `true` or `false`.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/228/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:1173c15a40bb%0D63a65837af55?from_pullrequest_id=228"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/228/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/228.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/228/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/228/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/228"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/228/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:1173c15a40bb%0D63a65837af55?from_pullrequest_id=228"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/228/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/228/statuses_page=1.json"}}, "title": "Update the signature of the responser callbacks", "close_source_branch": true, "reviewers": [], "id": 228, "destination": {"commit": {"hash": "63a65837af55", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/63a65837af55.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/63a65837af55"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport4"}}, "created_on": "2017-10-19T17:48:58.199207+00:00", "summary": {"raw": "This pull request changes the callback signature when advertising a service call. This is the previous signature:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nvoid srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep, bool &_result) { ... }\r\n```\r\n\r\n\r\nAnd this is the new one:\r\n\r\n\r\n```\r\n#!c++\r\n\r\nbool srvEcho(const ignition::msgs::StringMsg &_req, ignition::msgs::StringMsg &_rep) {...}\r\n```\r\n\r\nThe boolean `_result` parameter was used to flag if the service call succeed or not. To avoid situations in which you forget to set `_result`, I think is more convenient to use the return value instead. The compiler might help if you forget to return `true` or `false`.", "markup": "markdown", "html": "<p>This pull request changes the callback signature when advertising a service call. This is the previous signature:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">srvEcho</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">,</span> <span class=\"kt\">bool</span> <span class=\"o\">&amp;</span><span class=\"n\">_result</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"p\">...</span> <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And this is the new one:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"nf\">srvEcho</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">,</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">StringMsg</span> <span class=\"o\">&amp;</span><span class=\"n\">_rep</span><span class=\"p\">)</span> <span class=\"p\">{...}</span>\n</pre></div>\n\n\n<p>The boolean <code>_result</code> parameter was used to flag if the service call succeed or not. To avoid situations in which you forget to set <code>_result</code>, I think is more convenient to use the return value instead. The compiler might help if you forget to return <code>true</code> or <code>false</code>.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9d8af80fe2d2", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/9d8af80fe2d2.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/9d8af80fe2d2"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "updated_service_cb_4"}}, "comment_count": 26, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2017-12-13T21:04:06.713309+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-18T16:26:07.527993+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-18T20:33:38.272551+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2018-01-05T20:58:34.017224+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2017-12-28T06:16:18.920500+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}, {"role": "PARTICIPANT", "participated_on": "2018-01-11T19:18:25.288130+00:00", "type": "participant", "approved": true, "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}}], "reason": "", "updated_on": "2018-01-11T20:10:48.990204+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "1173c15a40bb", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/1173c15a40bb.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/1173c15a40bb"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}