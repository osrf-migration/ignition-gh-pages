{"rendered": {"reason": {"raw": "This pull request is almost there except a few details. We'll work on it offline and will create the pull request again when ready.", "markup": "markdown", "html": "<p>This pull request is almost there except a few details. We'll work on it offline and will create the pull request again when ready.</p>", "type": "rendered"}, "description": {"raw": "The new method ```bool Node::WaitForSubscribers(const std::string &_topic, const int _timeout = -1);``` is added. New classes ```TopicWatcher```, ```TopicWatcherPrivate```, ```TopicWatcherStorage``` were added to provide the opportunity to use this function.\r\n\r\nIn the ```NodeShared``` class there is  ```TopicWatcherStorage```. The data is a map where the keys are topics, the values are another map, where the key is nuuid, the value is shared_ptr<TopicWatcher>.\r\n\r\nWe could check ```NodeShared::localSubscriptions``` and ```NodeShared::remoteSubscribers``` first. Then if there is no subscriptions we create a topic watcher and call ```wait```. ", "markup": "markdown", "html": "<p>The new method <code>bool Node::WaitForSubscribers(const std::string &amp;_topic, const int _timeout = -1);</code> is added. New classes <code>TopicWatcher</code>, <code>TopicWatcherPrivate</code>, <code>TopicWatcherStorage</code> were added to provide the opportunity to use this function.</p>\n<p>In the <code>NodeShared</code> class there is  <code>TopicWatcherStorage</code>. The data is a map where the keys are topics, the values are another map, where the key is nuuid, the value is shared_ptr&lt;TopicWatcher&gt;.</p>\n<p>We could check <code>NodeShared::localSubscriptions</code> and <code>NodeShared::remoteSubscribers</code> first. Then if there is no subscriptions we create a topic watcher and call <code>wait</code>. </p>", "type": "rendered"}, "title": {"raw": "Issue_47: Wait for subscribers", "markup": "markdown", "html": "<p>Issue_47: Wait for subscribers</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The new method ```bool Node::WaitForSubscribers(const std::string &_topic, const int _timeout = -1);``` is added. New classes ```TopicWatcher```, ```TopicWatcherPrivate```, ```TopicWatcherStorage``` were added to provide the opportunity to use this function.\r\n\r\nIn the ```NodeShared``` class there is  ```TopicWatcherStorage```. The data is a map where the keys are topics, the values are another map, where the key is nuuid, the value is shared_ptr<TopicWatcher>.\r\n\r\nWe could check ```NodeShared::localSubscriptions``` and ```NodeShared::remoteSubscribers``` first. Then if there is no subscriptions we create a topic watcher and call ```wait```. ", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/158/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/nampi/ign-transport:3373fe1e0958%0D2a041435ea45?from_pullrequest_id=158"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/158/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:3373fe1e0958%0D2a041435ea45?from_pullrequest_id=158"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/158/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/statuses_page=1.json"}}, "title": "Issue_47: Wait for subscribers", "close_source_branch": false, "reviewers": [{"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}], "id": 158, "destination": {"commit": {"hash": "2a041435ea45", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/2a041435ea45.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/2a041435ea45"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2016-07-13T02:25:12.838081+00:00", "summary": {"raw": "The new method ```bool Node::WaitForSubscribers(const std::string &_topic, const int _timeout = -1);``` is added. New classes ```TopicWatcher```, ```TopicWatcherPrivate```, ```TopicWatcherStorage``` were added to provide the opportunity to use this function.\r\n\r\nIn the ```NodeShared``` class there is  ```TopicWatcherStorage```. The data is a map where the keys are topics, the values are another map, where the key is nuuid, the value is shared_ptr<TopicWatcher>.\r\n\r\nWe could check ```NodeShared::localSubscriptions``` and ```NodeShared::remoteSubscribers``` first. Then if there is no subscriptions we create a topic watcher and call ```wait```. ", "markup": "markdown", "html": "<p>The new method <code>bool Node::WaitForSubscribers(const std::string &amp;_topic, const int _timeout = -1);</code> is added. New classes <code>TopicWatcher</code>, <code>TopicWatcherPrivate</code>, <code>TopicWatcherStorage</code> were added to provide the opportunity to use this function.</p>\n<p>In the <code>NodeShared</code> class there is  <code>TopicWatcherStorage</code>. The data is a map where the keys are topics, the values are another map, where the key is nuuid, the value is shared_ptr&lt;TopicWatcher&gt;.</p>\n<p>We could check <code>NodeShared::localSubscriptions</code> and <code>NodeShared::remoteSubscribers</code> first. Then if there is no subscriptions we create a topic watcher and call <code>wait</code>. </p>", "type": "rendered"}, "source": {"commit": {"hash": "3373fe1e0958", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/nampi/ign-transport/commit/3373fe1e0958"}, "html": {"href": "https://bitbucket.org/nampi/ign-transport/commits/3373fe1e0958"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/nampi/ign-transport"}, "html": {"href": "https://bitbucket.org/nampi/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{a078025c-a14f-47ce-90a1-781a93700a2c}ts=c_plus_plus"}}, "type": "repository", "name": "ign-transport", "full_name": "nampi/ign-transport", "uuid": "{a078025c-a14f-47ce-90a1-781a93700a2c}"}, "branch": {"name": "issue_47"}}, "comment_count": 191, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2016-08-31T23:57:26.874871+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2016-09-15T19:15:58.498558+00:00", "type": "participant", "approved": false, "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}}, {"role": "REVIEWER", "participated_on": "2016-09-23T20:51:48.138353+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}], "reason": "This pull request is almost there except a few details. We'll work on it offline and will create the pull request again when ready.", "updated_on": "2016-11-07T22:06:36.710899+00:00", "author": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "merge_commit": null, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}