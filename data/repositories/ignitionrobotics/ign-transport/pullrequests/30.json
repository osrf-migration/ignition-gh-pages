{"rendered": {"description": {"raw": "The changes:\r\n\r\n* Make the discovery (de)serialization code safe for 32-bit systems, which we encountered because on Windows we're building 32-bit (the same problem would arise on 32-bit Linux).  Previously, we were using `sizeof(size_t)` during (de)serialization, implicitly assuming that it's 8 bytes.  Note that, along the way we have changed the wire protocol in at least one place (by sending the topic scope as a single byte, instead of the size of its `enum` representation, which could vary).\r\n* Explicitly join the multicast group when setting up discovery.  This is needed on Windows to receive any multicast packets.  And it's the right thing to do, anyway.\r\n* Avoid a crash on shutdown by adding a sleep where we can't join threads because of a Windows bug.\r\n* Add the ability to configure for Release or Debug, including selection of the appropriate underlying protobuf library.  This is important on Windows, where you need to have either all Release or all Debug libraries, all the way down.\r\n* Add CMake infrastructure for compiling the code in `example`.  As we've been doing elsewhere, we're copying around a lot of common CMake code, and also propagating dependencies further than we should (e.g., a program using ign-transport should not have to contain any logic for finding or linking against zmq), but that can be cleaned up later.", "markup": "markdown", "html": "<p>The changes:</p>\n<ul>\n<li>Make the discovery (de)serialization code safe for 32-bit systems, which we encountered because on Windows we're building 32-bit (the same problem would arise on 32-bit Linux).  Previously, we were using <code>sizeof(size_t)</code> during (de)serialization, implicitly assuming that it's 8 bytes.  Note that, along the way we have changed the wire protocol in at least one place (by sending the topic scope as a single byte, instead of the size of its <code>enum</code> representation, which could vary).</li>\n<li>Explicitly join the multicast group when setting up discovery.  This is needed on Windows to receive any multicast packets.  And it's the right thing to do, anyway.</li>\n<li>Avoid a crash on shutdown by adding a sleep where we can't join threads because of a Windows bug.</li>\n<li>Add the ability to configure for Release or Debug, including selection of the appropriate underlying protobuf library.  This is important on Windows, where you need to have either all Release or all Debug libraries, all the way down.</li>\n<li>Add CMake infrastructure for compiling the code in <code>example</code>.  As we've been doing elsewhere, we're copying around a lot of common CMake code, and also propagating dependencies further than we should (e.g., a program using ign-transport should not have to contain any logic for finding or linking against zmq), but that can be cleaned up later.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "More fixes from Windows development", "markup": "markdown", "html": "<p>More fixes from Windows development</p>", "type": "rendered"}}, "type": "pullrequest", "description": "The changes:\r\n\r\n* Make the discovery (de)serialization code safe for 32-bit systems, which we encountered because on Windows we're building 32-bit (the same problem would arise on 32-bit Linux).  Previously, we were using `sizeof(size_t)` during (de)serialization, implicitly assuming that it's 8 bytes.  Note that, along the way we have changed the wire protocol in at least one place (by sending the topic scope as a single byte, instead of the size of its `enum` representation, which could vary).\r\n* Explicitly join the multicast group when setting up discovery.  This is needed on Windows to receive any multicast packets.  And it's the right thing to do, anyway.\r\n* Avoid a crash on shutdown by adding a sleep where we can't join threads because of a Windows bug.\r\n* Add the ability to configure for Release or Debug, including selection of the appropriate underlying protobuf library.  This is important on Windows, where you need to have either all Release or all Debug libraries, all the way down.\r\n* Add CMake infrastructure for compiling the code in `example`.  As we've been doing elsewhere, we're copying around a lot of common CMake code, and also propagating dependencies further than we should (e.g., a program using ign-transport should not have to contain any logic for finding or linking against zmq), but that can be cleaned up later.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:2750d202a863%0Ddc119d2d936a?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/30.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/30/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/30"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:2750d202a863%0Ddc119d2d936a?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/30/statuses_page=1.json"}}, "title": "More fixes from Windows development", "close_source_branch": true, "reviewers": [{"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}], "id": 30, "destination": {"commit": {"hash": "dc119d2d936a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/dc119d2d936a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/dc119d2d936a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "default"}}, "created_on": "2014-10-25T17:37:22.079880+00:00", "summary": {"raw": "The changes:\r\n\r\n* Make the discovery (de)serialization code safe for 32-bit systems, which we encountered because on Windows we're building 32-bit (the same problem would arise on 32-bit Linux).  Previously, we were using `sizeof(size_t)` during (de)serialization, implicitly assuming that it's 8 bytes.  Note that, along the way we have changed the wire protocol in at least one place (by sending the topic scope as a single byte, instead of the size of its `enum` representation, which could vary).\r\n* Explicitly join the multicast group when setting up discovery.  This is needed on Windows to receive any multicast packets.  And it's the right thing to do, anyway.\r\n* Avoid a crash on shutdown by adding a sleep where we can't join threads because of a Windows bug.\r\n* Add the ability to configure for Release or Debug, including selection of the appropriate underlying protobuf library.  This is important on Windows, where you need to have either all Release or all Debug libraries, all the way down.\r\n* Add CMake infrastructure for compiling the code in `example`.  As we've been doing elsewhere, we're copying around a lot of common CMake code, and also propagating dependencies further than we should (e.g., a program using ign-transport should not have to contain any logic for finding or linking against zmq), but that can be cleaned up later.", "markup": "markdown", "html": "<p>The changes:</p>\n<ul>\n<li>Make the discovery (de)serialization code safe for 32-bit systems, which we encountered because on Windows we're building 32-bit (the same problem would arise on 32-bit Linux).  Previously, we were using <code>sizeof(size_t)</code> during (de)serialization, implicitly assuming that it's 8 bytes.  Note that, along the way we have changed the wire protocol in at least one place (by sending the topic scope as a single byte, instead of the size of its <code>enum</code> representation, which could vary).</li>\n<li>Explicitly join the multicast group when setting up discovery.  This is needed on Windows to receive any multicast packets.  And it's the right thing to do, anyway.</li>\n<li>Avoid a crash on shutdown by adding a sleep where we can't join threads because of a Windows bug.</li>\n<li>Add the ability to configure for Release or Debug, including selection of the appropriate underlying protobuf library.  This is important on Windows, where you need to have either all Release or all Debug libraries, all the way down.</li>\n<li>Add CMake infrastructure for compiling the code in <code>example</code>.  As we've been doing elsewhere, we're copying around a lot of common CMake code, and also propagating dependencies further than we should (e.g., a program using ign-transport should not have to contain any logic for finding or linking against zmq), but that can be cleaned up later.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "eb55e8f59fda", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/eb55e8f59fda.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/eb55e8f59fda"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "windows_linux_fixes"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-28T16:41:30.017033+00:00", "type": "participant", "approved": true, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "REVIEWER", "participated_on": "2014-10-28T06:41:31.420351+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-28T01:51:29.203640+00:00", "type": "participant", "approved": false, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}], "reason": "", "updated_on": "2014-10-28T22:01:43.680773+00:00", "author": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "merge_commit": {"hash": "2750d202a863", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/2750d202a863.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/2750d202a863"}}}, "closed_by": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}}