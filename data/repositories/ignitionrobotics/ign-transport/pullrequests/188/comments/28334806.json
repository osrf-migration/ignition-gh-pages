{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188/comments/28334806.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/188/_/diff#comment-28334806"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 188, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/188.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/188"}}, "title": "Generic callback"}, "content": {"raw": "Carlos, can you add the ability to get meta information about a generic message, such as topic name? I have a use case that needs to get both a generic protobuf message, and the name of the topic on which the message was published. \n\nWe might want to make a container class/struct for the topic name, so that we can add additional items in the future (like time stamps). \n\nHere is an example callback function:\n\n```\nvoid OnMessage(const ignition::msgs::ProtoMsg &_msg, const ignition::transport::MessageInfo &_info)\n{\n    std::cout << \"Received message from topic[\" << _info.Topic() << \"]\\n\";\n    std::cout << \"Message has type[\" << _msg.GetTypeName() << \"]\\n\";\n}\n``` ", "markup": "markdown", "html": "<p>Carlos, can you add the ability to get meta information about a generic message, such as topic name? I have a use case that needs to get both a generic protobuf message, and the name of the topic on which the message was published. </p>\n<p>We might want to make a container class/struct for the topic name, so that we can add additional items in the future (like time stamps). </p>\n<p>Here is an example callback function:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">void</span> <span class=\"nt\">OnMessage</span><span class=\"o\">(</span><span class=\"nt\">const</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">msgs</span><span class=\"p\">::</span><span class=\"nd\">ProtoMsg</span> <span class=\"o\">&amp;</span><span class=\"nt\">_msg</span><span class=\"o\">,</span> <span class=\"nt\">const</span> <span class=\"nt\">ignition</span><span class=\"p\">::</span><span class=\"nd\">transport</span><span class=\"p\">::</span><span class=\"nd\">MessageInfo</span> <span class=\"o\">&amp;</span><span class=\"nt\">_info</span><span class=\"o\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Received message from topic</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; _info.Topic() &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"p\">;</span>\n    <span class=\"n\">std</span><span class=\"p\">:</span><span class=\"o\">:</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;Message has type</span><span class=\"cp\">[</span><span class=\"s2\">&quot; &lt;&lt; _msg.GetTypeName() &lt;&lt; &quot;</span><span class=\"cp\">]</span><span class=\"s2\">\\n&quot;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-12-14T17:30:18.548691+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2016-12-14T17:30:18.551658+00:00", "type": "pullrequest_comment", "id": 28334806}