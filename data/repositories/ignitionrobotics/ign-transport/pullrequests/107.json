{"rendered": {"reason": {"raw": "Not needed. See pull request #111 instead.", "markup": "markdown", "html": "<p>Not needed. See <a href=\"#!/ignitionrobotics/ign-transport/pull-requests/111/lock-refactor\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #111</a> instead.</p>", "type": "rendered"}, "description": {"raw": "There's a potential deadlock in the following scenario (numbers show the order of execution):\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex (2)\r\n   Discovery::DiscoveryMsgInfo() (6)\r\n     acquire Discovery mutex (7 - Wait)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5)\r\n       NodeShared::OnNewSrvConnection() (8)\r\n         acquire NodeShared mutex (9 - Deadlock!)\r\n```\r\n\r\nThis pull request modifies `Publish()` for acquiring NodeShared and Discovery mutexes at the same time:\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex and Discovery (2)\r\n   Discovery::DiscoveryMsgInfo() (6-Release mutexes)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5 - Wait)\r\n       NodeShared::OnNewSrvConnection() (7)\r\n         acquire NodeShared mutex (8)\r\n```\r\n\r\nCI results:\r\n\r\n* Trusty is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/47/).\r\n* Windows is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "markup": "markdown", "html": "<p>There's a potential deadlock in the following scenario (numbers show the order of execution):</p>\n<ul>\n<li>Thread1 (userland):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Publish</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n   <span class=\"n\">Discovery</span><span class=\"o\">::</span><span class=\"n\">DiscoveryMsgInfo</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">7</span> <span class=\"o\">-</span> <span class=\"n\">Wait</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<ul>\n<li>Thread2 (Discovery):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">RecvDiscoveryUpdate</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n   <span class=\"n\">DispatchDiscoveryMsg</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n       <span class=\"n\">NodeShared</span><span class=\"o\">::</span><span class=\"n\">OnNewSrvConnection</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n         <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">9</span> <span class=\"o\">-</span> <span class=\"n\">Deadlock</span><span class=\"o\">!</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This pull request modifies <code>Publish()</code> for acquiring NodeShared and Discovery mutexes at the same time:</p>\n<ul>\n<li>Thread1 (userland):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Publish</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"n\">and</span> <span class=\"n\">Discovery</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n   <span class=\"n\">Discovery</span><span class=\"o\">::</span><span class=\"n\">DiscoveryMsgInfo</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"o\">-</span><span class=\"n\">Release</span> <span class=\"n\">mutexes</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<ul>\n<li>Thread2 (Discovery):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">RecvDiscoveryUpdate</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n   <span class=\"n\">DispatchDiscoveryMsg</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"n\">Wait</span><span class=\"p\">)</span>\n       <span class=\"n\">NodeShared</span><span class=\"o\">::</span><span class=\"n\">OnNewSrvConnection</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n         <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>CI results:</p>\n<ul>\n<li>Trusty is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/\" rel=\"nofollow\">happy</a>.</li>\n<li>Homebrew is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/47/\" rel=\"nofollow\">pending</a>.</li>\n<li>Windows is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/\" rel=\"nofollow\">happy</a>.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Fix potential deadlock during Publish()", "markup": "markdown", "html": "<p>Fix potential deadlock during Publish()</p>", "type": "rendered"}}, "type": "pullrequest", "description": "There's a potential deadlock in the following scenario (numbers show the order of execution):\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex (2)\r\n   Discovery::DiscoveryMsgInfo() (6)\r\n     acquire Discovery mutex (7 - Wait)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5)\r\n       NodeShared::OnNewSrvConnection() (8)\r\n         acquire NodeShared mutex (9 - Deadlock!)\r\n```\r\n\r\nThis pull request modifies `Publish()` for acquiring NodeShared and Discovery mutexes at the same time:\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex and Discovery (2)\r\n   Discovery::DiscoveryMsgInfo() (6-Release mutexes)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5 - Wait)\r\n       NodeShared::OnNewSrvConnection() (7)\r\n         acquire NodeShared mutex (8)\r\n```\r\n\r\nCI results:\r\n\r\n* Trusty is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/47/).\r\n* Windows is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/107/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:bb350da12654%0Dfad589bef008?from_pullrequest_id=107"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/107/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/107.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/107/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/107/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/107"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/107/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:bb350da12654%0Dfad589bef008?from_pullrequest_id=107"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/107/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/107/statuses_page=1.json"}}, "title": "Fix potential deadlock during Publish()", "close_source_branch": false, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}], "id": 107, "destination": {"commit": {"hash": "fad589bef008", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/fad589bef008.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/fad589bef008"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "created_on": "2016-02-10T19:42:00.837878+00:00", "summary": {"raw": "There's a potential deadlock in the following scenario (numbers show the order of execution):\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex (2)\r\n   Discovery::DiscoveryMsgInfo() (6)\r\n     acquire Discovery mutex (7 - Wait)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5)\r\n       NodeShared::OnNewSrvConnection() (8)\r\n         acquire NodeShared mutex (9 - Deadlock!)\r\n```\r\n\r\nThis pull request modifies `Publish()` for acquiring NodeShared and Discovery mutexes at the same time:\r\n\r\n* Thread1 (userland):\r\n  \r\n```\r\n#!c++\r\n\r\n Node::Publish() (1)\r\n   acquire NodeShared mutex and Discovery (2)\r\n   Discovery::DiscoveryMsgInfo() (6-Release mutexes)\r\n```\r\n\r\n* Thread2 (Discovery):\r\n\r\n```\r\n#!c++\r\n\r\n RecvDiscoveryUpdate() (3)\r\n   DispatchDiscoveryMsg() (4)\r\n     acquire Discovery mutex (5 - Wait)\r\n       NodeShared::OnNewSrvConnection() (7)\r\n         acquire NodeShared mutex (8)\r\n```\r\n\r\nCI results:\r\n\r\n* Trusty is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/47/).\r\n* Windows is [happy](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "markup": "markdown", "html": "<p>There's a potential deadlock in the following scenario (numbers show the order of execution):</p>\n<ul>\n<li>Thread1 (userland):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Publish</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n   <span class=\"n\">Discovery</span><span class=\"o\">::</span><span class=\"n\">DiscoveryMsgInfo</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">7</span> <span class=\"o\">-</span> <span class=\"n\">Wait</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<ul>\n<li>Thread2 (Discovery):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">RecvDiscoveryUpdate</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n   <span class=\"n\">DispatchDiscoveryMsg</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n       <span class=\"n\">NodeShared</span><span class=\"o\">::</span><span class=\"n\">OnNewSrvConnection</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n         <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">9</span> <span class=\"o\">-</span> <span class=\"n\">Deadlock</span><span class=\"o\">!</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>This pull request modifies <code>Publish()</code> for acquiring NodeShared and Discovery mutexes at the same time:</p>\n<ul>\n<li>Thread1 (userland):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">Node</span><span class=\"o\">::</span><span class=\"n\">Publish</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"n\">and</span> <span class=\"n\">Discovery</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n   <span class=\"n\">Discovery</span><span class=\"o\">::</span><span class=\"n\">DiscoveryMsgInfo</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"o\">-</span><span class=\"n\">Release</span> <span class=\"n\">mutexes</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<ul>\n<li>Thread2 (Discovery):</li>\n</ul>\n<div class=\"codehilite language-c++\"><pre><span></span> <span class=\"n\">RecvDiscoveryUpdate</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n   <span class=\"n\">DispatchDiscoveryMsg</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n     <span class=\"n\">acquire</span> <span class=\"n\">Discovery</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"n\">Wait</span><span class=\"p\">)</span>\n       <span class=\"n\">NodeShared</span><span class=\"o\">::</span><span class=\"n\">OnNewSrvConnection</span><span class=\"p\">()</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n         <span class=\"n\">acquire</span> <span class=\"n\">NodeShared</span> <span class=\"n\">mutex</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>CI results:</p>\n<ul>\n<li>Trusty is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/\" rel=\"nofollow\">happy</a>.</li>\n<li>Homebrew is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/47/\" rel=\"nofollow\">pending</a>.</li>\n<li>Windows is <a data-is-external-link=\"true\" href=\"http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/\" rel=\"nofollow\">happy</a>.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "bb350da12654", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/bb350da12654.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/bb350da12654"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "fix_deadlock"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2016-02-11T18:34:19.719917+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "Not needed. See pull request #111 instead.", "updated_on": "2016-03-03T20:35:12.464692+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": null, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}