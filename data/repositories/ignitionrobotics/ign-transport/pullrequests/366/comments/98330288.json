{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/366/comments/98330288.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/366/_/diff#comment-98330288"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 366, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/366.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/366"}}, "title": "Start of C interface to transport"}, "content": {"raw": "Based on testing with golang , I have a couple of small requests :slight_smile:   . Can we update the subscribe function to support another void\\* argument and to remove the const from arguments ?\n\nReality is that we will need that to share function pointers with Go. \n\nIn order to make it  work I updated it this way \\(actually I 've created a sibling function\\) :\n\n```\n\nint ignTransportSubscribeGo(IgnTransportNode _node, const char *_topic,\n    void (*_callback)(void *, char *, size_t, char *), void *_user_data)\n{\n  if (_node >= 0 && _node < static_cast<int>(nodes.size()))\n  {\n    return nodes[_node]->SubscribeRaw(_topic,\n        [_callback, _user_data](const char *_msg,\n          const size_t _size,\n          const ignition::transport::MessageInfo &_info) -> void {\n        _callback(_user_data, const_cast<char *>(_msg), _size, const_cast<char *>(_info.Type().c_str()));\n        }) ? 0 : 1;\n  }\n\n  return 1;\n}\n```\n\nChanges:\n\n* Note the extra void \\*user\\_data argument in the subscribe function and in the callback. The idea is that the subscribing client can pass some \u201ccontext\u201d that later will be passed in back when the callback is invoked. \n\n    \\( in my implementation , I\u2019ve captured the \\_user\\_data argument to make this happen\\)\n\n\n* Also note the callback doesn't have \"const\" arguments \\(eg. \\`const char\\*\\` was replaced by \\`char\\*\\`\\). That's needed because in Go we cannot map the `const` in the func signature. \n\n", "markup": "markdown", "html": "<p>Based on testing with golang , I have a couple of small requests <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" />   . Can we update the subscribe function to support another void* argument and to remove the const from arguments ?</p>\n<p>Reality is that we will need that to share function pointers with Go. </p>\n<p>In order to make it  work I updated it this way (actually I 've created a sibling function) :</p>\n<div class=\"codehilite\"><pre><span></span>int ignTransportSubscribeGo(IgnTransportNode _node, const char *_topic,\n    void (*_callback)(void *, char *, size_t, char *), void *_user_data)\n{\n  if (_node &gt;= 0 &amp;&amp; _node &lt; static_cast&lt;int&gt;(nodes.size()))\n  {\n    return nodes[_node]-&gt;SubscribeRaw(_topic,\n        [_callback, _user_data](const char *_msg,\n          const size_t _size,\n          const ignition::transport::MessageInfo &amp;_info) -&gt; void {\n        _callback(_user_data, const_cast&lt;char *&gt;(_msg), _size, const_cast&lt;char *&gt;(_info.Type().c_str()));\n        }) ? 0 : 1;\n  }\n\n  return 1;\n}\n</pre></div>\n\n\n<p>Changes:</p>\n<ul>\n<li>\n<p>Note the extra void *user_data argument in the subscribe function and in the callback. The idea is that the subscribing client can pass some \u201ccontext\u201d that later will be passed in back when the callback is invoked. </p>\n<p>( in my implementation , I\u2019ve captured the _user_data argument to make this happen)</p>\n</li>\n<li>\n<p>Also note the callback doesn't have \"const\" arguments (eg. `const char*` was replaced by `char*`). That's needed because in Go we cannot map the <code>const</code> in the func signature. </p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2019-04-10T16:07:29.913419+00:00", "user": {"display_name": "Patricio Reyna Almandos", "uuid": "{8d07164d-cee3-4eb0-8816-97f42c297bc3}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D"}, "html": {"href": "https://bitbucket.org/%7B8d07164d-cee3-4eb0-8816-97f42c297bc3%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2f4f0911-c46a-4f3c-92af-650544415846/235d39e4-77b1-46b7-ac0f-900424378fef/128"}}, "nickname": "Patricio Reyna Almandos", "type": "user", "account_id": "557058:2f4f0911-c46a-4f3c-92af-650544415846"}, "updated_on": "2019-04-10T16:07:29.940110+00:00", "type": "pullrequest_comment", "id": 98330288}