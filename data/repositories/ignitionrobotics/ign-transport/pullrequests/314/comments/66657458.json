{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/314/comments/66657458.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/314/_/diff#comment-66657458"}}, "parent": {"id": 66650597, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/314/comments/66650597.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/314/_/diff#comment-66650597"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 314, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/314.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/314"}}, "title": "Fix issue #89"}, "content": {"raw": "It\u2019s a bit tricky:\n\n* We would need to get access to the current network interfaces. Something like:\n\n`ls /sys/class/net/`\n\n`docker0 eno1 lo`\n\n* Then, we should choose one these network interfaces \\(except `lo`\\) and create a virtual one:\n\n`sudo ifconfig eno1:0 192.168.9.99`\n\n* Then, we should check `determineInterfaces()` and make sure that we don\u2019t have `192.168.9.99`.\n* Finally, remove the virtual network interface:\n\n`sudo ifconfig eno1:0 down`\n\nThe main problems are:\n\n1. We need to run system commands.\n2. We need to run commands with root privileges.\n\n\\(1\\) is not the end of the world but \\(2\\) seems a real problem. Alternatively, we could create this subinterface with a given IP only in Pipelines, as we have root access . Then, we can create a test that will check that this IP is not returned from `determineInterfaces()`. The test will only do something useful in Pipelines and it might be a bit flacky if there are future changes in the network interfaces where Pipelines is running.\n\nAny other ideas or opinions about doing it or not?", "markup": "markdown", "html": "<p>It\u2019s a bit tricky:</p>\n<ul>\n<li>We would need to get access to the current network interfaces. Something like:</li>\n</ul>\n<p><code>ls /sys/class/net/</code></p>\n<p><code>docker0 eno1 lo</code></p>\n<ul>\n<li>Then, we should choose one these network interfaces (except <code>lo</code>) and create a virtual one:</li>\n</ul>\n<p><code>sudo ifconfig eno1:0 192.168.9.99</code></p>\n<ul>\n<li>Then, we should check <code>determineInterfaces()</code> and make sure that we don\u2019t have <code>192.168.9.99</code>.</li>\n<li>Finally, remove the virtual network interface:</li>\n</ul>\n<p><code>sudo ifconfig eno1:0 down</code></p>\n<p>The main problems are:</p>\n<ol>\n<li>We need to run system commands.</li>\n<li>We need to run commands with root privileges.</li>\n</ol>\n<p>(1) is not the end of the world but (2) seems a real problem. Alternatively, we could create this subinterface with a given IP only in Pipelines, as we have root access . Then, we can create a test that will check that this IP is not returned from <code>determineInterfaces()</code>. The test will only do something useful in Pipelines and it might be a bit flacky if there are future changes in the network interfaces where Pipelines is running.</p>\n<p>Any other ideas or opinions about doing it or not?</p>", "type": "rendered"}, "created_on": "2018-06-08T23:17:59.441795+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2018-06-09T00:56:50.265093+00:00", "type": "pullrequest_comment", "id": 66657458}