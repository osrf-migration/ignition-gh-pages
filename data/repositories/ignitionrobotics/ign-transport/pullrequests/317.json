{"rendered": {"description": {"raw": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "markup": "markdown", "html": "<p>This fixes a possible cause of <a href=\"#!/ignitionrobotics/ign-transport/issues/90/spurious-crashes-from-the-ign-log-record\" rel=\"nofollow\" title=\"Spurious crashes from the ign log record tool\" class=\"ap-connect-link\"><s>#90</s></a>. This is the only place I could find where an <code>std::function</code>is used without checking if it is valid. In ignition transport 4 the <code>Record</code> class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then <code>std::bad_function_call</code> would be thrown.</p>\n<p>I didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: </p>\n<ol>\n<li>Something needs to instantiate the Discovery class and not set a disconnection callback on it</li>\n<li>Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds</li>\n<li>Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "title": {"raw": "Check callback is valid before calling it", "markup": "markdown", "html": "<p>Check callback is valid before calling it</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/317/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diffstat/ignitionrobotics/ign-transport:249370f80b95%0Dc0ff5dd5e2d9?from_pullrequest_id=317"}, "commits": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/commits.json"}, "self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317.json"}, "comments": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/317/merge"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/317"}, "activity": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:249370f80b95%0Dc0ff5dd5e2d9?from_pullrequest_id=317"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/pullrequests/317/approve"}, "statuses": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/317/statuses_page=1.json"}}, "title": "Check callback is valid before calling it", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}], "id": 317, "destination": {"commit": {"hash": "c0ff5dd5e2d9", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/c0ff5dd5e2d9.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/c0ff5dd5e2d9"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport2"}}, "created_on": "2018-06-12T23:02:51.362929+00:00", "summary": {"raw": "This fixes a possible cause of #90. This is the only place I could find where an `std::function`is used without checking if it is valid. In ignition transport 4 the `Record` class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then `std::bad_function_call` would be thrown.\r\n\r\nI didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: \r\n\r\n1. Something needs to instantiate the Discovery class and not set a disconnection callback on it\r\n2. Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds\r\n3. Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback\r\n\r\n\u200c", "markup": "markdown", "html": "<p>This fixes a possible cause of <a href=\"#!/ignitionrobotics/ign-transport/issues/90/spurious-crashes-from-the-ign-log-record\" rel=\"nofollow\" title=\"Spurious crashes from the ign log record tool\" class=\"ap-connect-link\"><s>#90</s></a>. This is the only place I could find where an <code>std::function</code>is used without checking if it is valid. In ignition transport 4 the <code>Record</code> class doesn't set the disconnection callback on the discovery class. If this particular call to the callback happens then <code>std::bad_function_call</code> would be thrown.</p>\n<p>I didn't write a unit test. I\u2019m happy to write one, but the conditions this could happen are very specific: </p>\n<ol>\n<li>Something needs to instantiate the Discovery class and not set a disconnection callback on it</li>\n<li>Next the Discovery instance must get a discovery message from a publisher which doesn\u2019t send another message for more than 3 seconds</li>\n<li>Finally the discovery instance must receive a message from a different publisher, which triggers this particular call to the disconnection callback</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "source": {"commit": {"hash": "a42a964cc062", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/a42a964cc062.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/a42a964cc062"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "bad_function_call_log_record_2"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-06-13T16:57:08.424035+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "REVIEWER", "participated_on": "2018-06-12T23:46:12.728896+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "REVIEWER", "participated_on": "2018-06-13T18:47:31.738634+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2018-06-13T20:37:22.274125+00:00", "author": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}, "merge_commit": {"hash": "249370f80b95", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/249370f80b95.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/249370f80b95"}}}, "closed_by": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}