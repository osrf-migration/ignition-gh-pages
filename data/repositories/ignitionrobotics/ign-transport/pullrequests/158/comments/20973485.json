{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/20973485.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:0c04f6c4353c..97b218ffe6dc?path=src%2FTopicWatcher.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-20973485"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}}, "title": "Issue_47: Wait for subscribers"}, "content": {"raw": "I know we're using this PIMPL approach in the code already but for small private classes I prefer a slightly different approach. It should be faster to compile:\n\nInstead of creating a new file `TopicWatcherPrivate`, move the class inside the `TopicWatcher.cc`:\n\n```\n#!c++\n\n#include \"ignition/transport/TopicUtils.hh\"\n#include \"ignition/transport/TopicWatcher.hh\"\n//#include \"ignition/transport/TopicWatcherPrivate.hh\"\n\nnamespace ignition\n{\n  namespace transport\n  {\n    /// \\class TopicWatcherPrivate TopicWatcherPrivate.hh\n    ///     ignition/transport/TopicWatcherPrivate.hh\n    /// \\brief Private data for TopicWatcher class.\n    class TopicWatcherPrivate\n    {\n      /// \\brief Condition variable used to wait until a subsriber exists.\n      public: std::condition_variable_any condition;\n\n      /// \\brief Mutex to guarantee exclusive access to the 'blocked' variable.\n      public: std::mutex mutex;\n\n      /// \\brief When true, the publisher is waiting for subscribers.\n      public: bool blocked = false;\n    };\n  }\n}\n\nusing namespace ignition;\nusing namespace transport;\n\n//////////////////////////////////////////////////\nTopicWatcher::TopicWatcher()\n  : dataPtr(new TopicWatcherPrivate())\n{\n}\n```\n\nNote that you can remove the `#include TopicWatcherPrivate.hh` but you need to add `#include <condition_variable>`. ", "markup": "markdown", "html": "<p>I know we're using this PIMPL approach in the code already but for small private classes I prefer a slightly different approach. It should be faster to compile:</p>\n<p>Instead of creating a new file <code>TopicWatcherPrivate</code>, move the class inside the <code>TopicWatcher.cc</code>:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&quot;ignition/transport/TopicUtils.hh&quot;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&quot;ignition/transport/TopicWatcher.hh&quot;</span><span class=\"cp\"></span>\n<span class=\"c1\">//#include &quot;ignition/transport/TopicWatcherPrivate.hh&quot;</span>\n\n<span class=\"k\">namespace</span> <span class=\"n\">ignition</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">namespace</span> <span class=\"n\">transport</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">/// \\class TopicWatcherPrivate TopicWatcherPrivate.hh</span>\n    <span class=\"c1\">///     ignition/transport/TopicWatcherPrivate.hh</span>\n    <span class=\"c1\">/// \\brief Private data for TopicWatcher class.</span>\n    <span class=\"k\">class</span> <span class=\"nc\">TopicWatcherPrivate</span>\n    <span class=\"p\">{</span>\n      <span class=\"c1\">/// \\brief Condition variable used to wait until a subsriber exists.</span>\n      <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">condition_variable_any</span> <span class=\"n\">condition</span><span class=\"p\">;</span>\n\n      <span class=\"c1\">/// \\brief Mutex to guarantee exclusive access to the &#39;blocked&#39; variable.</span>\n      <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">mutex</span> <span class=\"n\">mutex</span><span class=\"p\">;</span>\n\n      <span class=\"c1\">/// \\brief When true, the publisher is waiting for subscribers.</span>\n      <span class=\"k\">public</span><span class=\"o\">:</span> <span class=\"kt\">bool</span> <span class=\"n\">blocked</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">ignition</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">transport</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//////////////////////////////////////////////////</span>\n<span class=\"n\">TopicWatcher</span><span class=\"o\">::</span><span class=\"n\">TopicWatcher</span><span class=\"p\">()</span>\n  <span class=\"o\">:</span> <span class=\"n\">dataPtr</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">TopicWatcherPrivate</span><span class=\"p\">())</span>\n<span class=\"p\">{</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Note that you can remove the <code>#include TopicWatcherPrivate.hh</code> but you need to add <code>#include &lt;condition_variable&gt;</code>. </p>", "type": "rendered"}, "created_on": "2016-07-13T17:41:25.803308+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 22, "from": null, "outdated": true, "path": "src/TopicWatcher.cc"}, "updated_on": "2016-07-13T17:43:03.665152+00:00", "type": "pullrequest_comment", "id": 20973485}