{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/21034243.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:None..None?path=include%2Fignition%2Ftransport%2FNode.hh"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-21034243"}}, "parent": {"id": 21011016, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/21011016.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-21011016"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}}, "title": "Issue_47: Wait for subscribers"}, "content": {"raw": "I only mean that with this signature, the second parameter `_timeout` is optional because it has a value assigned. If you don't provide a timeout, the value of `_timeout` will be -1 inside `WaitForSubscribers()`. We should document what is the expected behavior in this case. E.g.:\n\n`WaitForSubscribers(topic);` should be a valid call with this signature. What is the expected behavior in this case in terms of timeout? We should document it.\n\nI originally assigned a `-1` because I thought that we could use a negative value when we want to wait forever. This requires to modify slightly the implementation to take into account this case. What we can do is to use a really big value, instead of `-1`. Then, the expected behavior should be:\n\nIf you omit the second parameter `_timeout`, the function will block for the maximum allowed time (xxx) or until you call `Release()`. Does it make sense?", "markup": "markdown", "html": "<p>I only mean that with this signature, the second parameter <code>_timeout</code> is optional because it has a value assigned. If you don't provide a timeout, the value of <code>_timeout</code> will be -1 inside <code>WaitForSubscribers()</code>. We should document what is the expected behavior in this case. E.g.:</p>\n<p><code>WaitForSubscribers(topic);</code> should be a valid call with this signature. What is the expected behavior in this case in terms of timeout? We should document it.</p>\n<p>I originally assigned a <code>-1</code> because I thought that we could use a negative value when we want to wait forever. This requires to modify slightly the implementation to take into account this case. What we can do is to use a really big value, instead of <code>-1</code>. Then, the expected behavior should be:</p>\n<p>If you omit the second parameter <code>_timeout</code>, the function will block for the maximum allowed time (xxx) or until you call <code>Release()</code>. Does it make sense?</p>", "type": "rendered"}, "created_on": "2016-07-14T17:47:59.530224+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "outdated": false, "path": "include/ignition/transport/Node.hh"}, "updated_on": "2016-07-14T17:54:52.450598+00:00", "type": "pullrequest_comment", "id": 21034243}