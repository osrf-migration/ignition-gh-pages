{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/23688627.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:3373fe1e0958..2a041435ea45?path=include%2Fignition%2Ftransport%2FNode.hh"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-23688627"}}, "parent": {"id": 23619459, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/23619459.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-23619459"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}}, "title": "Issue_47: Wait for subscribers"}, "content": {"raw": "`msg->GetTypeName()` returns a `std::string` value and the template parameter needs to be a protobuf type, not a string (e.g.: `ignition::msgs::Int32`). This is why you see the error.\n\nI believe you can get a type from a variable at compilation time doing `decltype(my_var)`. However, in this case it's not as easy because the return value of `ignition::msgs::Factory::New()` is a pointer to a generic `google::protobuf::Message`, not the derived type.\n\n~~Leave it as it's because this is kind of hard to solve and out of the scope of this pull request.~~\n\nWell, per issue #54, we now know that we shouldn't have more than one type per topic advertised within the same node. So, I believe there's no need to use a template anymore (in fact, the message type shouldn't be a parameter anymore, we can internally get the type). If we remove it, we'll solve this issue, right? Sorry for all these changes.", "markup": "markdown", "html": "<p><code>msg-&gt;GetTypeName()</code> returns a <code>std::string</code> value and the template parameter needs to be a protobuf type, not a string (e.g.: <code>ignition::msgs::Int32</code>). This is why you see the error.</p>\n<p>I believe you can get a type from a variable at compilation time doing <code>decltype(my_var)</code>. However, in this case it's not as easy because the return value of <code>ignition::msgs::Factory::New()</code> is a pointer to a generic <code>google::protobuf::Message</code>, not the derived type.</p>\n<p><del>Leave it as it's because this is kind of hard to solve and out of the scope of this pull request.</del></p>\n<p>Well, per issue <a href=\"#!/ignitionrobotics/ign-transport/issues/54/publish-on-the-topics-with-the-same-names\" rel=\"nofollow\" title=\"Publish on the topics with the same names but different topic types\" class=\"ap-connect-link\">#54</a>, we now know that we shouldn't have more than one type per topic advertised within the same node. So, I believe there's no need to use a template anymore (in fact, the message type shouldn't be a parameter anymore, we can internally get the type). If we remove it, we'll solve this issue, right? Sorry for all these changes.</p>", "type": "rendered"}, "created_on": "2016-09-13T22:43:04.024457+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "outdated": false, "path": "include/ignition/transport/Node.hh"}, "updated_on": "2016-09-13T23:12:44.316782+00:00", "type": "pullrequest_comment", "id": 23688627}