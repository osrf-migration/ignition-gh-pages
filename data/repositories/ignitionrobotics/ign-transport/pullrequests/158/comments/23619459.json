{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/23619459.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:78fff8d7b202..f63548f31172?path=include%2Fignition%2Ftransport%2FNode.hh"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-23619459"}}, "parent": {"id": 23114927, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/23114927.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-23114927"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}}, "title": "Issue_47: Wait for subscribers"}, "content": {"raw": "I have a problem with `cmdTopicPub()` function in `ign.cc`. I can call WaitForSubscribers:\n\n```\n#!c++\n\nnode.WaitForSubscribers(_topic, msg->GetTypeName(), 800);\n```\n\nIn this case\n\n```\n#!c++\n\nnode.WaitForSubscribers<msg->GetTypeName()>(_topic, 800);\n```\nthere is an error:\n\n```\n#!bash\n\n/usr/include/c++/4.9/bits/basic_string.h:112:11: note: \u2018std::basic_string<char>\u2019 is not literal because:\n     class basic_string\n           ^\n/usr/include/c++/4.9/bits/basic_string.h:112:11: note:   \u2018std::basic_string<char>\u2019 has a non-trivial destructor\n/home/user/code/issue_47_wait/src/ign.cc:170:62: error: no matching function for call to \u2018ignition::transport::Node::WaitForSubscribers(const char*&, int)\u2019\n       node.WaitForSubscribers<msg->GetTypeName()>(_topic, 800);\n                                                              ^\n/home/user/code/issue_47_wait/src/ign.cc:170:62: note: candidate is:\nIn file included from /home/user/code/issue_47_wait/src/ign.cc:33:0:\n/home/user/code/issue_47_wait/include/ignition/transport/Node.hh:960:41: note: template<class T> bool ignition::transport::Node::WaitForSubscribers(const string&, int)\n       public: template<typename T> bool WaitForSubscribers(\n\n\n\n\n```\n\nI created two API functions like `Advertise()`. How can I call `WaitForSubscribers` correctly?\n", "markup": "markdown", "html": "<p>I have a problem with <code>cmdTopicPub()</code> function in <code>ign.cc</code>. I can call WaitForSubscribers:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">WaitForSubscribers</span><span class=\"p\">(</span><span class=\"n\">_topic</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">-&gt;</span><span class=\"n\">GetTypeName</span><span class=\"p\">(),</span> <span class=\"mi\">800</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>In this case</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">WaitForSubscribers</span><span class=\"o\">&lt;</span><span class=\"n\">msg</span><span class=\"o\">-&gt;</span><span class=\"n\">GetTypeName</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_topic</span><span class=\"p\">,</span> <span class=\"mi\">800</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>there is an error:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>/usr/include/c++/4.9/bits/basic_string.h:112:11: note: \u2018std::basic_string&lt;char&gt;\u2019 is not literal because:\n     class basic_string\n           ^\n/usr/include/c++/4.9/bits/basic_string.h:112:11: note:   \u2018std::basic_string&lt;char&gt;\u2019 has a non-trivial destructor\n/home/user/code/issue_47_wait/src/ign.cc:170:62: error: no matching <span class=\"k\">function</span> <span class=\"k\">for</span> call to \u2018ignition::transport::Node::WaitForSubscribers<span class=\"o\">(</span>const char*<span class=\"p\">&amp;</span>, int<span class=\"o\">)</span>\u2019\n       node.WaitForSubscribers&lt;msg-&gt;GetTypeName<span class=\"o\">()</span>&gt;<span class=\"o\">(</span>_topic, <span class=\"m\">800</span><span class=\"o\">)</span><span class=\"p\">;</span>\n                                                              ^\n/home/user/code/issue_47_wait/src/ign.cc:170:62: note: candidate is:\nIn file included from /home/user/code/issue_47_wait/src/ign.cc:33:0:\n/home/user/code/issue_47_wait/include/ignition/transport/Node.hh:960:41: note: template&lt;class T&gt; bool ignition::transport::Node::WaitForSubscribers<span class=\"o\">(</span>const string<span class=\"p\">&amp;</span>, int<span class=\"o\">)</span>\n       public: template&lt;typename T&gt; bool WaitForSubscribers<span class=\"o\">(</span>\n</pre></div>\n\n\n<p>I created two API functions like <code>Advertise()</code>. How can I call <code>WaitForSubscribers</code> correctly?</p>", "type": "rendered"}, "created_on": "2016-09-12T21:33:19.144776+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "inline": {"to": null, "from": null, "outdated": true, "path": "include/ignition/transport/Node.hh"}, "updated_on": "2016-09-12T21:33:19.146742+00:00", "type": "pullrequest_comment", "id": 23619459}