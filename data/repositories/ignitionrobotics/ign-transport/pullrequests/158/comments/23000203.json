{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/23000203.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/nampi/ign-transport:78fff8d7b202..f63548f31172?path=src%2FNodeShared.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-23000203"}}, "parent": {"id": 22745230, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158/comments/22745230.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158/_/diff#comment-22745230"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/158.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/158"}}, "title": "Issue_47: Wait for subscribers"}, "content": {"raw": "1. I retrieved this line in commit [[dd3e7b2](https://bitbucket.org/nampi/ign-transport/commits/dd3e7b24636d14b8d38fbfdfd854e29f7b61df81?at=default)]. I agree with you it is better to check the type here. Could you write a test case (maybe in issue tracker) to cover this behaviour (it is important to have this type check on subscriber side), please?\n2. There are also tests with the same types. In the test ``twoProcPubSub.WaitForSubscribersSameTypeNamesRemoteSubscribers`` the program checks the remote subscriber. The remote subscriber exists and it checks in ``Node::WaitForSubscribers``. The test ``twoProcPubSub.WaitForSubscribersDifferentTypeNamesRemoteSubscribers`` has different types. With this line ``if (handler.second->TypeName() != _pub.MsgTypeName())`` the check in ```Node::WaitForSUbscribers```:\n\n```\n#!c++\n\n        // Remote subscribers. Check message type names.\n        if (hasRemoteSubscribers)\n        {\n          for (const auto &proc : subscribers)\n          {\n            const auto &v = proc.second;\n            for (const auto &subscriber : v)\n            {\n              if (subscriber.MsgTypeName() == _typeName)\n                return true;\n            }\n          }\n        }\n```\nis redundant. Is it better to remove this check?", "markup": "markdown", "html": "<ol>\n<li>I retrieved this line in commit [<a data-is-external-link=\"true\" href=\"https://bitbucket.org/nampi/ign-transport/commits/dd3e7b24636d14b8d38fbfdfd854e29f7b61df81?at=default\" rel=\"nofollow\">dd3e7b2</a>]. I agree with you it is better to check the type here. Could you write a test case (maybe in issue tracker) to cover this behaviour (it is important to have this type check on subscriber side), please?</li>\n<li>There are also tests with the same types. In the test <code>twoProcPubSub.WaitForSubscribersSameTypeNamesRemoteSubscribers</code> the program checks the remote subscriber. The remote subscriber exists and it checks in <code>Node::WaitForSubscribers</code>. The test <code>twoProcPubSub.WaitForSubscribersDifferentTypeNamesRemoteSubscribers</code> has different types. With this line <code>if (handler.second-&gt;TypeName() != _pub.MsgTypeName())</code> the check in <code>Node::WaitForSUbscribers</code>:</li>\n</ol>\n<div class=\"codehilite language-c++\"><pre><span></span>        <span class=\"c1\">// Remote subscribers. Check message type names.</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">hasRemoteSubscribers</span><span class=\"p\">)</span>\n        <span class=\"p\">{</span>\n          <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"k\">auto</span> <span class=\"o\">&amp;</span><span class=\"nl\">proc</span> <span class=\"p\">:</span> <span class=\"n\">subscribers</span><span class=\"p\">)</span>\n          <span class=\"p\">{</span>\n            <span class=\"k\">const</span> <span class=\"k\">auto</span> <span class=\"o\">&amp;</span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">proc</span><span class=\"p\">.</span><span class=\"n\">second</span><span class=\"p\">;</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"k\">auto</span> <span class=\"o\">&amp;</span><span class=\"nl\">subscriber</span> <span class=\"p\">:</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n              <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">subscriber</span><span class=\"p\">.</span><span class=\"n\">MsgTypeName</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">_typeName</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>is redundant. Is it better to remove this check?</p>", "type": "rendered"}, "created_on": "2016-08-29T23:39:36.291495+00:00", "user": {"display_name": "nampi", "uuid": "{89a67bdd-09e6-4c17-8014-48d97fa5c4c8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D"}, "html": {"href": "https://bitbucket.org/%7B89a67bdd-09e6-4c17-8014-48d97fa5c4c8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8/38230840-603b-4875-93fb-c2e81928dd69/128"}}, "nickname": "nampi", "type": "user", "account_id": "557058:6509b6f8-6263-4504-9cee-d12b08b0b4e8"}, "inline": {"to": null, "from": null, "outdated": true, "path": "src/NodeShared.cc"}, "updated_on": "2016-08-29T23:39:36.298346+00:00", "type": "pullrequest_comment", "id": 23000203}