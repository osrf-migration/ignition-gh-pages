{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/271/comments/56605978.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/ignitionrobotics/ign-transport:69c4ed7749d6..75dfd082bafe?path=log%2Finclude%2Fignition%2Ftransport%2Flog%2FSqlStatement.hh"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/271/_/diff#comment-56605978"}}, "parent": {"id": 56602880, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/271/comments/56602880.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/271/_/diff#comment-56602880"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 271, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/271.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/271"}}, "title": "Logging Part 3: Getting all messages from a log file"}, "content": {"raw": "This class is like a spoof of `std::variant` (which isn't available until C++17). It will only contain one of these value types. So if the object is actually containing a `Real` or a `Text` value, then it will not be containing an `Integer` value, so we should not allow the class to return a value or reference to an integer. Instead, it will return a `nullptr`, which the consumer should take as an indication that the object is storing a different type of parameter.\n\nIdeally, the consumer should check the `Type()` function before asking for any of the values, but we cannot guarantee that they will do so.", "markup": "markdown", "html": "<p>This class is like a spoof of <code>std::variant</code> (which isn't available until C++17). It will only contain one of these value types. So if the object is actually containing a <code>Real</code> or a <code>Text</code> value, then it will not be containing an <code>Integer</code> value, so we should not allow the class to return a value or reference to an integer. Instead, it will return a <code>nullptr</code>, which the consumer should take as an indication that the object is storing a different type of parameter.</p>\n<p>Ideally, the consumer should check the <code>Type()</code> function before asking for any of the values, but we cannot guarantee that they will do so.</p>", "type": "rendered"}, "created_on": "2018-02-18T20:40:34.279312+00:00", "user": {"display_name": "Michael Grey", "uuid": "{c1cdfe52-2887-474c-ae99-72fdc53a59c9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D"}, "html": {"href": "https://bitbucket.org/%7Bc1cdfe52-2887-474c-ae99-72fdc53a59c9%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:67759e29-d1df-465f-868d-047738e36fc9/d42d74cf-c1bd-4431-8288-07f543bbe325/128"}}, "nickname": "mxgrey", "type": "user", "account_id": "557058:67759e29-d1df-465f-868d-047738e36fc9"}, "inline": {"to": null, "from": null, "outdated": true, "path": "log/include/ignition/transport/log/SqlStatement.hh"}, "updated_on": "2018-02-18T20:40:34.282077+00:00", "type": "pullrequest_comment", "id": 56605978}