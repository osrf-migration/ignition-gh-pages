{"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/154/comments/20800224.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/ignitionrobotics/ign-transport/diff/amtj/ign-transport:None..None?path=src%2FNode_TEST.cc"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/154/_/diff#comment-20800224"}}, "parent": {"id": 20798328, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/154/comments/20798328.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/154/_/diff#comment-20798328"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 154, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/154.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/154"}}, "title": "Service requests without response"}, "content": {"raw": "See my previous comment. This should fix it. I'd also check that the callback was executed:\n\n\n```\n#!c++\n\nbool executed = false;\n\nstd::function<void(const ignition::msgs::Int32 &)> advCb =\n    [&executed](const ignition::msgs::Int32 &_req)\n{\n  EXPECT_EQ(_req.data(), data);\n  executed = true;\n};\n\ntransport::Node node;\nEXPECT_TRUE((node.Advertise<ignition::msgs::Int32>(g_topic, advCb)));\n\nignition::msgs::Int32 req;\nreq.set_data(data);\n\nEXPECT_TRUE(node.Request(g_topic, req));\nEXPECT_TRUE(executed);\n```\n", "markup": "markdown", "html": "<p>See my previous comment. This should fix it. I'd also check that the callback was executed:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"n\">executed</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">function</span><span class=\"o\">&lt;</span><span class=\"kt\">void</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span> <span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span> <span class=\"n\">advCb</span> <span class=\"o\">=</span>\n    <span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">executed</span><span class=\"p\">](</span><span class=\"k\">const</span> <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span> <span class=\"o\">&amp;</span><span class=\"n\">_req</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">EXPECT_EQ</span><span class=\"p\">(</span><span class=\"n\">_req</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">(),</span> <span class=\"n\">data</span><span class=\"p\">);</span>\n  <span class=\"n\">executed</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">transport</span><span class=\"o\">::</span><span class=\"n\">Node</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"n\">EXPECT_TRUE</span><span class=\"p\">((</span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Advertise</span><span class=\"o\">&lt;</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">g_topic</span><span class=\"p\">,</span> <span class=\"n\">advCb</span><span class=\"p\">)));</span>\n\n<span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">msgs</span><span class=\"o\">::</span><span class=\"n\">Int32</span> <span class=\"n\">req</span><span class=\"p\">;</span>\n<span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">);</span>\n\n<span class=\"n\">EXPECT_TRUE</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">g_topic</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">));</span>\n<span class=\"n\">EXPECT_TRUE</span><span class=\"p\">(</span><span class=\"n\">executed</span><span class=\"p\">);</span>\n</pre></div>", "type": "rendered"}, "created_on": "2016-07-08T21:37:06.814021+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "outdated": false, "path": "src/Node_TEST.cc"}, "updated_on": "2016-07-08T21:39:59.801009+00:00", "type": "pullrequest_comment", "id": 20800224}