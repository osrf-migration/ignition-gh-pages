{"pagelen": 50, "values": [{"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/50/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/44/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/92/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "33ee8fd7484a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/33ee8fd7484a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/33ee8fd7484a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "MERGED", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-03-01T22:17:33.492254+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"approval": {"date": "2016-02-24T22:32:52.040841+00:00", "pullrequest": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110/comments/14980363.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110/_/diff#comment-14980363"}}, "parent": {"id": 14935827, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110/comments/14935827.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110/_/diff#comment-14935827"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}, "content": {"raw": "The OS X example was failing because it was missing `aThread.join();` in the main function.", "markup": "markdown", "html": "<p>The OS X example was failing because it was missing <code>aThread.join();</code> in the main function.</p>", "type": "rendered"}, "created_on": "2016-02-24T22:32:27.183814+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-02-24T22:32:27.189222+00:00", "type": "pullrequest_comment", "id": 14980363}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"comment": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110/comments/14935827.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110/_/diff#comment-14935827"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}, "content": {"raw": "I'm having trouble running that example on OS X. It seems to crash no matter which branch of ignition-transport I'm using:\n\n~~~\nlldb ./client \n(lldb) target create \"./client\"\nCurrent executable set to './client' (x86_64).\n(lldb) r\nProcess 49610 launched: './client' (x86_64)\n\nlibc++abi.dylib: terminating\nProcess 49610 stopped\n* thread #1: tid = 0x545bc0, 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT\n    frame #0: 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10\nlibsystem_kernel.dylib`__pthread_kill:\n->  0x7fff86245286 <+10>: jae    0x7fff86245290            ; <+20>\n    0x7fff86245288 <+12>: movq   %rax, %rdi\n    0x7fff8624528b <+15>: jmp    0x7fff86240c53            ; cerror_nocancel\n    0x7fff86245290 <+20>: retq   \n(lldb) bt\n* thread #1: tid = 0x545bc0, 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10, queue = 'com.apple.main-thread', stop reason = signal SIGABRT\n  * frame #0: 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10\n    frame #1: 0x00007fff82e329f9 libsystem_pthread.dylib`pthread_kill + 90\n    frame #2: 0x00007fff8775a9ab libsystem_c.dylib`abort + 129\n    frame #3: 0x00007fff876d1a21 libc++abi.dylib`abort_message + 257\n    frame #4: 0x00007fff876f98f4 libc++abi.dylib`default_terminate_handler() + 46\n    frame #5: 0x00007fff876f70a1 libc++abi.dylib`std::__terminate(void (*)()) + 8\n    frame #6: 0x00007fff876f712e libc++abi.dylib`std::terminate() + 78\n    frame #7: 0x00007fff89c7fb8b libc++.1.dylib`std::__1::thread::~thread() + 17\n    frame #8: 0x000000010000b7cb client`main + 235\n    frame #9: 0x00007fff8940d5c9 libdyld.dylib`start + 1\n    frame #10: 0x00007fff8940d5c9 libdyld.dylib`start + 1\n(lldb) \n~~~", "markup": "markdown", "html": "<p>I'm having trouble running that example on OS X. It seems to crash no matter which branch of ignition-transport I'm using:</p>\n<div class=\"codehilite\"><pre><span></span>lldb ./client \n(lldb) target create &quot;./client&quot;\nCurrent executable set to &#39;./client&#39; (x86_64).\n(lldb) r\nProcess 49610 launched: &#39;./client&#39; (x86_64)\n\nlibc++abi.dylib: terminating\nProcess 49610 stopped\n* thread #1: tid = 0x545bc0, 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10, queue = &#39;com.apple.main-thread&#39;, stop reason = signal SIGABRT\n    frame #0: 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10\nlibsystem_kernel.dylib`__pthread_kill:\n-&gt;  0x7fff86245286 &lt;+10&gt;: jae    0x7fff86245290            ; &lt;+20&gt;\n    0x7fff86245288 &lt;+12&gt;: movq   %rax, %rdi\n    0x7fff8624528b &lt;+15&gt;: jmp    0x7fff86240c53            ; cerror_nocancel\n    0x7fff86245290 &lt;+20&gt;: retq   \n(lldb) bt\n* thread #1: tid = 0x545bc0, 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10, queue = &#39;com.apple.main-thread&#39;, stop reason = signal SIGABRT\n  * frame #0: 0x00007fff86245286 libsystem_kernel.dylib`__pthread_kill + 10\n    frame #1: 0x00007fff82e329f9 libsystem_pthread.dylib`pthread_kill + 90\n    frame #2: 0x00007fff8775a9ab libsystem_c.dylib`abort + 129\n    frame #3: 0x00007fff876d1a21 libc++abi.dylib`abort_message + 257\n    frame #4: 0x00007fff876f98f4 libc++abi.dylib`default_terminate_handler() + 46\n    frame #5: 0x00007fff876f70a1 libc++abi.dylib`std::__terminate(void (*)()) + 8\n    frame #6: 0x00007fff876f712e libc++abi.dylib`std::terminate() + 78\n    frame #7: 0x00007fff89c7fb8b libc++.1.dylib`std::__1::thread::~thread() + 17\n    frame #8: 0x000000010000b7cb client`main + 235\n    frame #9: 0x00007fff8940d5c9 libdyld.dylib`start + 1\n    frame #10: 0x00007fff8940d5c9 libdyld.dylib`start + 1\n(lldb) \n</pre></div>", "type": "rendered"}, "created_on": "2016-02-24T05:56:30.912155+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-02-24T05:56:30.914421+00:00", "type": "pullrequest_comment", "id": 14935827}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"approval": {"date": "2016-02-24T00:49:17.605151+00:00", "pullrequest": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}, "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/50/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/44/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/92/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "33ee8fd7484a", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/33ee8fd7484a.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/33ee8fd7484a"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-02-24T00:42:30.450043+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/50/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/44/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/92/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "123bf0e2bbe8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/123bf0e2bbe8.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/123bf0e2bbe8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-02-24T00:33:52.617728+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/41/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "123bf0e2bbe8", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/123bf0e2bbe8.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/123bf0e2bbe8"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-02-24T00:32:15.260487+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/41/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "bf4be18a471e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/bf4be18a471e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/bf4be18a471e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-02-24T00:30:00.501946+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}, {"update": {"description": "We were not checking the return value of `zmq::poll()`. This might cause an uncaught exception in the following scenario:\r\n\r\nWe are waiting in a blocking function such as `poll()`. When a signal is received, some operating systems return from `poll()` and set `errno` to `EINTR`. In the case of the zmq c++ wrapper that we use, an exception is triggered. \r\n\r\nWe discovered this while running a QT example. You can compile this code and try it without/with this pull request.\r\n\r\nhttps://bitbucket.org/snippets/ignitionrobotics/gK6gd\r\n\r\nCI results:\r\n\r\n* Trusty is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-trusty-amd64/47/).\r\n* Homebrew is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-homebrew-amd64/41/).\r\n* Windows is [pending](http://build.osrfoundation.org/view/main/view/ignition/job/ignition_transport-ci-pr_any-windows7-amd64/89/).", "title": "Catch exception in zmq::poll", "destination": {"commit": {"hash": "4be55254b5d6", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/4be55254b5d6.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/4be55254b5d6"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "ign-transport1"}}, "reason": "", "source": {"commit": {"hash": "bf4be18a471e", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/commit/bf4be18a471e.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/commits/bf4be18a471e"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport"}, "avatar": {"href": "data/bytebucket.org/ravatar/{4249390a-7f55-404b-990d-817ba94cc7ac}ts=1533306"}}, "type": "repository", "name": "ign-transport", "full_name": "ignitionrobotics/ign-transport", "uuid": "{4249390a-7f55-404b-990d-817ba94cc7ac}"}, "branch": {"name": "qt_issue"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2016-02-24T00:30:00.474975+00:00"}, "pull_request": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-transport/pullrequests/110.json"}, "html": {"href": "#!/ignitionrobotics/ign-transport/pull-requests/110"}}, "title": "Catch exception in zmq::poll"}}]}